/*! For license information please see 631-c2809f6018cbc9c6d0ff.js.LICENSE.txt */
(self.webpackChunk = self.webpackChunk || []).push([[631], {
    77422: function(e, t, n) {
        "use strict";
        n.r(t),
        n.d(t, {
            Composite: function() {
                return Rt
            },
            CompositeItem: function() {
                return Lt
            },
            FloatingArrow: function() {
                return $t
            },
            FloatingDelayGroup: function() {
                return cn
            },
            FloatingFocusManager: function() {
                return Ln
            },
            FloatingList: function() {
                return It
            },
            FloatingNode: function() {
                return tn
            },
            FloatingOverlay: function() {
                return qn
            },
            FloatingPortal: function() {
                return On
            },
            FloatingTree: function() {
                return nn
            },
            arrow: function() {
                return Re
            },
            autoPlacement: function() {
                return Ee
            },
            autoUpdate: function() {
                return Te
            },
            computePosition: function() {
                return _e
            },
            detectOverflow: function() {
                return le
            },
            flip: function() {
                return ze
            },
            getOverflowAncestors: function() {
                return M
            },
            hide: function() {
                return Oe
            },
            inline: function() {
                return Ae
            },
            inner: function() {
                return ya
            },
            limitShift: function() {
                return Ye
            },
            offset: function() {
                return fe
            },
            platform: function() {
                return Ce
            },
            safePolygon: function() {
                return Pa
            },
            shift: function() {
                return Ne
            },
            size: function() {
                return Ie
            },
            useClick: function() {
                return Vn
            },
            useClientPoint: function() {
                return Bn
            },
            useDelayGroup: function() {
                return mn
            },
            useDelayGroupContext: function() {
                return ln
            },
            useDismiss: function() {
                return Zn
            },
            useFloating: function() {
                return ea
            },
            useFloatingNodeId: function() {
                return en
            },
            useFloatingParentNodeId: function() {
                return Ut
            },
            useFloatingPortalNode: function() {
                return In
            },
            useFloatingTree: function() {
                return Zt
            },
            useFocus: function() {
                return ta
            },
            useHover: function() {
                return un
            },
            useId: function() {
                return Vt
            },
            useInnerOffset: function() {
                return ka
            },
            useInteractions: function() {
                return ia
            },
            useListItem: function() {
                return Ot
            },
            useListNavigation: function() {
                return ca
            },
            useMergeRefs: function() {
                return ht
            },
            useRole: function() {
                return ha
            },
            useTransitionStatus: function() {
                return ga
            },
            useTransitionStyles: function() {
                return va
            },
            useTypeahead: function() {
                return wa
            }
        });
        var a = n(96540)
          , r = n.t(a, 2);
        function i(e) {
            return u(e) ? (e.nodeName || "").toLowerCase() : "#document"
        }
        function o(e) {
            var t;
            return (null == e || null == (t = e.ownerDocument) ? void 0 : t.defaultView) || window
        }
        function s(e) {
            var t;
            return null == (t = (u(e) ? e.ownerDocument : e.document) || window.document) ? void 0 : t.documentElement
        }
        function u(e) {
            return e instanceof Node || e instanceof o(e).Node
        }
        function d(e) {
            return e instanceof Element || e instanceof o(e).Element
        }
        function l(e) {
            return e instanceof HTMLElement || e instanceof o(e).HTMLElement
        }
        function c(e) {
            return "undefined" !== typeof ShadowRoot && (e instanceof ShadowRoot || e instanceof o(e).ShadowRoot)
        }
        function m(e) {
            const {overflow: t, overflowX: n, overflowY: a, display: r} = w(e);
            return /auto|scroll|overlay|hidden|clip/.test(t + a + n) && !["inline", "contents"].includes(r)
        }
        function h(e) {
            return ["table", "td", "th"].includes(i(e))
        }
        function f(e) {
            const t = g()
              , n = w(e);
            return "none" !== n.transform || "none" !== n.perspective || !!n.containerType && "normal" !== n.containerType || !t && !!n.backdropFilter && "none" !== n.backdropFilter || !t && !!n.filter && "none" !== n.filter || ["transform", "perspective", "filter"].some((e=>(n.willChange || "").includes(e))) || ["paint", "layout", "strict", "content"].some((e=>(n.contain || "").includes(e)))
        }
        function p(e) {
            let t = y(e);
            for (; l(t) && !v(t); ) {
                if (f(t))
                    return t;
                t = y(t)
            }
            return null
        }
        function g() {
            return !("undefined" === typeof CSS || !CSS.supports) && CSS.supports("-webkit-backdrop-filter", "none")
        }
        function v(e) {
            return ["html", "body", "#document"].includes(i(e))
        }
        function w(e) {
            return o(e).getComputedStyle(e)
        }
        function b(e) {
            return d(e) ? {
                scrollLeft: e.scrollLeft,
                scrollTop: e.scrollTop
            } : {
                scrollLeft: e.pageXOffset,
                scrollTop: e.pageYOffset
            }
        }
        function y(e) {
            if ("html" === i(e))
                return e;
            const t = e.assignedSlot || e.parentNode || c(e) && e.host || s(e);
            return c(t) ? t.host : t
        }
        function k(e) {
            const t = y(e);
            return v(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : l(t) && m(t) ? t : k(t)
        }
        function M(e, t, n) {
            var a;
            void 0 === t && (t = []),
            void 0 === n && (n = !0);
            const r = k(e)
              , i = r === (null == (a = e.ownerDocument) ? void 0 : a.body)
              , s = o(r);
            return i ? t.concat(s, s.visualViewport || [], m(r) ? r : [], s.frameElement && n ? M(s.frameElement) : []) : t.concat(r, M(r, [], n))
        }
        function P(e) {
            let t = e.activeElement;
            for (; null != (null == (n = t) || null == (n = n.shadowRoot) ? void 0 : n.activeElement); ) {
                var n;
                t = t.shadowRoot.activeElement
            }
            return t
        }
        function W(e, t) {
            if (!e || !t)
                return !1;
            const n = null == t.getRootNode ? void 0 : t.getRootNode();
            if (e.contains(t))
                return !0;
            if (n && c(n)) {
                let n = t;
                for (; n; ) {
                    if (e === n)
                        return !0;
                    n = n.parentNode || n.host
                }
            }
            return !1
        }
        function x() {
            const e = navigator.userAgentData;
            return null != e && e.platform ? e.platform : navigator.platform
        }
        function S() {
            const e = navigator.userAgentData;
            return e && Array.isArray(e.brands) ? e.brands.map((e=>{
                let {brand: t, version: n} = e;
                return t + "/" + n
            }
            )).join(" ") : navigator.userAgent
        }
        function D(e) {
            return !(0 !== e.mozInputSource || !e.isTrusted) || (T() && e.pointerType ? "click" === e.type && 1 === e.buttons : 0 === e.detail && !e.pointerType)
        }
        function j(e) {
            return !S().includes("jsdom/") && (!T() && 0 === e.width && 0 === e.height || T() && 1 === e.width && 1 === e.height && 0 === e.pressure && 0 === e.detail && "mouse" === e.pointerType || e.width < 1 && e.height < 1 && 0 === e.pressure && 0 === e.detail && "touch" === e.pointerType)
        }
        function C() {
            return /apple/i.test(navigator.vendor)
        }
        function T() {
            const e = /android/i;
            return e.test(x()) || e.test(S())
        }
        function E() {
            return x().toLowerCase().startsWith("mac") && !navigator.maxTouchPoints
        }
        function N(e, t) {
            const n = ["mouse", "pen"];
            return t || n.push("", void 0),
            n.includes(e)
        }
        function z(e) {
            return (null == e ? void 0 : e.ownerDocument) || document
        }
        function I(e, t) {
            if (null == t)
                return !1;
            if ("composedPath"in e)
                return e.composedPath().includes(t);
            const n = e;
            return null != n.target && t.contains(n.target)
        }
        function O(e) {
            return "composedPath"in e ? e.composedPath()[0] : e.target
        }
        const H = "input:not([type='hidden']):not([disabled]),[contenteditable]:not([contenteditable='false']),textarea:not([disabled])";
        function A(e) {
            return l(e) && e.matches(H)
        }
        function Y(e) {
            e.preventDefault(),
            e.stopPropagation()
        }
        function _(e) {
            return !!e && ("combobox" === e.getAttribute("role") && A(e))
        }
        const X = ["top", "right", "bottom", "left"]
          , R = ["start", "end"]
          , L = X.reduce(((e,t)=>e.concat(t, t + "-" + R[0], t + "-" + R[1])), [])
          , F = Math.min
          , q = Math.max
          , G = Math.round
          , K = Math.floor
          , V = e=>({
            x: e,
            y: e
        })
          , $ = {
            left: "right",
            right: "left",
            bottom: "top",
            top: "bottom"
        }
          , B = {
            start: "end",
            end: "start"
        };
        function J(e, t, n) {
            return q(e, F(t, n))
        }
        function Q(e, t) {
            return "function" === typeof e ? e(t) : e
        }
        function U(e) {
            return e.split("-")[0]
        }
        function Z(e) {
            return e.split("-")[1]
        }
        function ee(e) {
            return "x" === e ? "y" : "x"
        }
        function te(e) {
            return "y" === e ? "height" : "width"
        }
        function ne(e) {
            return ["top", "bottom"].includes(U(e)) ? "y" : "x"
        }
        function ae(e) {
            return ee(ne(e))
        }
        function re(e, t, n) {
            void 0 === n && (n = !1);
            const a = Z(e)
              , r = ae(e)
              , i = te(r);
            let o = "x" === r ? a === (n ? "end" : "start") ? "right" : "left" : "start" === a ? "bottom" : "top";
            return t.reference[i] > t.floating[i] && (o = oe(o)),
            [o, oe(o)]
        }
        function ie(e) {
            return e.replace(/start|end/g, (e=>B[e]))
        }
        function oe(e) {
            return e.replace(/left|right|bottom|top/g, (e=>$[e]))
        }
        function se(e) {
            return "number" !== typeof e ? function(e) {
                return {
                    top: 0,
                    right: 0,
                    bottom: 0,
                    left: 0,
                    ...e
                }
            }(e) : {
                top: e,
                right: e,
                bottom: e,
                left: e
            }
        }
        function ue(e) {
            return {
                ...e,
                top: e.y,
                left: e.x,
                right: e.x + e.width,
                bottom: e.y + e.height
            }
        }
        function de(e, t, n) {
            let {reference: a, floating: r} = e;
            const i = ne(t)
              , o = ae(t)
              , s = te(o)
              , u = U(t)
              , d = "y" === i
              , l = a.x + a.width / 2 - r.width / 2
              , c = a.y + a.height / 2 - r.height / 2
              , m = a[s] / 2 - r[s] / 2;
            let h;
            switch (u) {
            case "top":
                h = {
                    x: l,
                    y: a.y - r.height
                };
                break;
            case "bottom":
                h = {
                    x: l,
                    y: a.y + a.height
                };
                break;
            case "right":
                h = {
                    x: a.x + a.width,
                    y: c
                };
                break;
            case "left":
                h = {
                    x: a.x - r.width,
                    y: c
                };
                break;
            default:
                h = {
                    x: a.x,
                    y: a.y
                }
            }
            switch (Z(t)) {
            case "start":
                h[o] -= m * (n && d ? -1 : 1);
                break;
            case "end":
                h[o] += m * (n && d ? -1 : 1)
            }
            return h
        }
        async function le(e, t) {
            var n;
            void 0 === t && (t = {});
            const {x: a, y: r, platform: i, rects: o, elements: s, strategy: u} = e
              , {boundary: d="clippingAncestors", rootBoundary: l="viewport", elementContext: c="floating", altBoundary: m=!1, padding: h=0} = Q(t, e)
              , f = se(h)
              , p = s[m ? "floating" === c ? "reference" : "floating" : c]
              , g = ue(await i.getClippingRect({
                element: null == (n = await (null == i.isElement ? void 0 : i.isElement(p))) || n ? p : p.contextElement || await (null == i.getDocumentElement ? void 0 : i.getDocumentElement(s.floating)),
                boundary: d,
                rootBoundary: l,
                strategy: u
            }))
              , v = "floating" === c ? {
                ...o.floating,
                x: a,
                y: r
            } : o.reference
              , w = await (null == i.getOffsetParent ? void 0 : i.getOffsetParent(s.floating))
              , b = await (null == i.isElement ? void 0 : i.isElement(w)) && await (null == i.getScale ? void 0 : i.getScale(w)) || {
                x: 1,
                y: 1
            }
              , y = ue(i.convertOffsetParentRelativeRectToViewportRelativeRect ? await i.convertOffsetParentRelativeRectToViewportRelativeRect({
                elements: s,
                rect: v,
                offsetParent: w,
                strategy: u
            }) : v);
            return {
                top: (g.top - y.top + f.top) / b.y,
                bottom: (y.bottom - g.bottom + f.bottom) / b.y,
                left: (g.left - y.left + f.left) / b.x,
                right: (y.right - g.right + f.right) / b.x
            }
        }
        function ce(e, t) {
            return {
                top: e.top - t.height,
                right: e.right - t.width,
                bottom: e.bottom - t.height,
                left: e.left - t.width
            }
        }
        function me(e) {
            return X.some((t=>e[t] >= 0))
        }
        function he(e) {
            const t = F(...e.map((e=>e.left)))
              , n = F(...e.map((e=>e.top)));
            return {
                x: t,
                y: n,
                width: q(...e.map((e=>e.right))) - t,
                height: q(...e.map((e=>e.bottom))) - n
            }
        }
        const fe = function(e) {
            return void 0 === e && (e = 0),
            {
                name: "offset",
                options: e,
                async fn(t) {
                    var n, a;
                    const {x: r, y: i, placement: o, middlewareData: s} = t
                      , u = await async function(e, t) {
                        const {placement: n, platform: a, elements: r} = e
                          , i = await (null == a.isRTL ? void 0 : a.isRTL(r.floating))
                          , o = U(n)
                          , s = Z(n)
                          , u = "y" === ne(n)
                          , d = ["left", "top"].includes(o) ? -1 : 1
                          , l = i && u ? -1 : 1
                          , c = Q(t, e);
                        let {mainAxis: m, crossAxis: h, alignmentAxis: f} = "number" === typeof c ? {
                            mainAxis: c,
                            crossAxis: 0,
                            alignmentAxis: null
                        } : {
                            mainAxis: 0,
                            crossAxis: 0,
                            alignmentAxis: null,
                            ...c
                        };
                        return s && "number" === typeof f && (h = "end" === s ? -1 * f : f),
                        u ? {
                            x: h * l,
                            y: m * d
                        } : {
                            x: m * d,
                            y: h * l
                        }
                    }(t, e);
                    return o === (null == (n = s.offset) ? void 0 : n.placement) && null != (a = s.arrow) && a.alignmentOffset ? {} : {
                        x: r + u.x,
                        y: i + u.y,
                        data: {
                            ...u,
                            placement: o
                        }
                    }
                }
            }
        };
        function pe(e) {
            const t = w(e);
            let n = parseFloat(t.width) || 0
              , a = parseFloat(t.height) || 0;
            const r = l(e)
              , i = r ? e.offsetWidth : n
              , o = r ? e.offsetHeight : a
              , s = G(n) !== i || G(a) !== o;
            return s && (n = i,
            a = o),
            {
                width: n,
                height: a,
                $: s
            }
        }
        function ge(e) {
            return d(e) ? e : e.contextElement
        }
        function ve(e) {
            const t = ge(e);
            if (!l(t))
                return V(1);
            const n = t.getBoundingClientRect()
              , {width: a, height: r, $: i} = pe(t);
            let o = (i ? G(n.width) : n.width) / a
              , s = (i ? G(n.height) : n.height) / r;
            return o && Number.isFinite(o) || (o = 1),
            s && Number.isFinite(s) || (s = 1),
            {
                x: o,
                y: s
            }
        }
        const we = V(0);
        function be(e) {
            const t = o(e);
            return g() && t.visualViewport ? {
                x: t.visualViewport.offsetLeft,
                y: t.visualViewport.offsetTop
            } : we
        }
        function ye(e, t, n, a) {
            void 0 === t && (t = !1),
            void 0 === n && (n = !1);
            const r = e.getBoundingClientRect()
              , i = ge(e);
            let s = V(1);
            t && (a ? d(a) && (s = ve(a)) : s = ve(e));
            const u = function(e, t, n) {
                return void 0 === t && (t = !1),
                !(!n || t && n !== o(e)) && t
            }(i, n, a) ? be(i) : V(0);
            let l = (r.left + u.x) / s.x
              , c = (r.top + u.y) / s.y
              , m = r.width / s.x
              , h = r.height / s.y;
            if (i) {
                const e = o(i)
                  , t = a && d(a) ? o(a) : a;
                let n = e.frameElement;
                for (; n && a && t !== e; ) {
                    const e = ve(n)
                      , t = n.getBoundingClientRect()
                      , a = w(n)
                      , r = t.left + (n.clientLeft + parseFloat(a.paddingLeft)) * e.x
                      , i = t.top + (n.clientTop + parseFloat(a.paddingTop)) * e.y;
                    l *= e.x,
                    c *= e.y,
                    m *= e.x,
                    h *= e.y,
                    l += r,
                    c += i,
                    n = o(n).frameElement
                }
            }
            return ue({
                width: m,
                height: h,
                x: l,
                y: c
            })
        }
        const ke = [":popover-open", ":modal"];
        function Me(e) {
            let t = !1
              , n = 0
              , a = 0;
            if (ke.forEach((n=>{
                !function(n) {
                    try {
                        t = t || e.matches(n)
                    } catch (a) {}
                }(n)
            }
            )),
            t) {
                const t = p(e);
                if (t) {
                    const e = t.getBoundingClientRect();
                    n = e.x,
                    a = e.y
                }
            }
            return [t, n, a]
        }
        function Pe(e) {
            return ye(s(e)).left + b(e).scrollLeft
        }
        function We(e, t, n) {
            let a;
            if ("viewport" === t)
                a = function(e, t) {
                    const n = o(e)
                      , a = s(e)
                      , r = n.visualViewport;
                    let i = a.clientWidth
                      , u = a.clientHeight
                      , d = 0
                      , l = 0;
                    if (r) {
                        i = r.width,
                        u = r.height;
                        const e = g();
                        (!e || e && "fixed" === t) && (d = r.offsetLeft,
                        l = r.offsetTop)
                    }
                    return {
                        width: i,
                        height: u,
                        x: d,
                        y: l
                    }
                }(e, n);
            else if ("document" === t)
                a = function(e) {
                    const t = s(e)
                      , n = b(e)
                      , a = e.ownerDocument.body
                      , r = q(t.scrollWidth, t.clientWidth, a.scrollWidth, a.clientWidth)
                      , i = q(t.scrollHeight, t.clientHeight, a.scrollHeight, a.clientHeight);
                    let o = -n.scrollLeft + Pe(e);
                    const u = -n.scrollTop;
                    return "rtl" === w(a).direction && (o += q(t.clientWidth, a.clientWidth) - r),
                    {
                        width: r,
                        height: i,
                        x: o,
                        y: u
                    }
                }(s(e));
            else if (d(t))
                a = function(e, t) {
                    const n = ye(e, !0, "fixed" === t)
                      , a = n.top + e.clientTop
                      , r = n.left + e.clientLeft
                      , i = l(e) ? ve(e) : V(1);
                    return {
                        width: e.clientWidth * i.x,
                        height: e.clientHeight * i.y,
                        x: r * i.x,
                        y: a * i.y
                    }
                }(t, n);
            else {
                const n = be(e);
                a = {
                    ...t,
                    x: t.x - n.x,
                    y: t.y - n.y
                }
            }
            return ue(a)
        }
        function xe(e, t) {
            const n = y(e);
            return !(n === t || !d(n) || v(n)) && ("fixed" === w(n).position || xe(n, t))
        }
        function Se(e, t, n, a) {
            const r = l(t)
              , o = s(t)
              , u = "fixed" === n
              , d = ye(e, !0, u, t);
            let c = {
                scrollLeft: 0,
                scrollTop: 0
            };
            const h = V(0);
            if (r || !r && !u)
                if (("body" !== i(t) || m(o)) && (c = b(t)),
                r) {
                    const e = ye(t, !0, u, t);
                    h.x = e.x + t.clientLeft,
                    h.y = e.y + t.clientTop
                } else
                    o && (h.x = Pe(o));
            let f = d.left + c.scrollLeft - h.x
              , p = d.top + c.scrollTop - h.y;
            const [g,v,w] = Me(a);
            return g && (f += v,
            p += w,
            r && (f += t.clientLeft,
            p += t.clientTop)),
            {
                x: f,
                y: p,
                width: d.width,
                height: d.height
            }
        }
        function De(e, t) {
            return l(e) && "fixed" !== w(e).position ? t ? t(e) : e.offsetParent : null
        }
        function je(e, t) {
            const n = o(e);
            if (!l(e))
                return n;
            let a = De(e, t);
            for (; a && h(a) && "static" === w(a).position; )
                a = De(a, t);
            return a && ("html" === i(a) || "body" === i(a) && "static" === w(a).position && !f(a)) ? n : a || p(e) || n
        }
        const Ce = {
            convertOffsetParentRelativeRectToViewportRelativeRect: function(e) {
                let {elements: t, rect: n, offsetParent: a, strategy: r} = e;
                const o = s(a)
                  , [u] = t ? Me(t.floating) : [!1];
                if (a === o || u)
                    return n;
                let d = {
                    scrollLeft: 0,
                    scrollTop: 0
                }
                  , c = V(1);
                const h = V(0)
                  , f = l(a);
                if ((f || !f && "fixed" !== r) && (("body" !== i(a) || m(o)) && (d = b(a)),
                l(a))) {
                    const e = ye(a);
                    c = ve(a),
                    h.x = e.x + a.clientLeft,
                    h.y = e.y + a.clientTop
                }
                return {
                    width: n.width * c.x,
                    height: n.height * c.y,
                    x: n.x * c.x - d.scrollLeft * c.x + h.x,
                    y: n.y * c.y - d.scrollTop * c.y + h.y
                }
            },
            getDocumentElement: s,
            getClippingRect: function(e) {
                let {element: t, boundary: n, rootBoundary: a, strategy: r} = e;
                const o = [..."clippingAncestors" === n ? function(e, t) {
                    const n = t.get(e);
                    if (n)
                        return n;
                    let a = M(e, [], !1).filter((e=>d(e) && "body" !== i(e)))
                      , r = null;
                    const o = "fixed" === w(e).position;
                    let s = o ? y(e) : e;
                    for (; d(s) && !v(s); ) {
                        const t = w(s)
                          , n = f(s);
                        n || "fixed" !== t.position || (r = null),
                        (o ? !n && !r : !n && "static" === t.position && r && ["absolute", "fixed"].includes(r.position) || m(s) && !n && xe(e, s)) ? a = a.filter((e=>e !== s)) : r = t,
                        s = y(s)
                    }
                    return t.set(e, a),
                    a
                }(t, this._c) : [].concat(n), a]
                  , s = o[0]
                  , u = o.reduce(((e,n)=>{
                    const a = We(t, n, r);
                    return e.top = q(a.top, e.top),
                    e.right = F(a.right, e.right),
                    e.bottom = F(a.bottom, e.bottom),
                    e.left = q(a.left, e.left),
                    e
                }
                ), We(t, s, r));
                return {
                    width: u.right - u.left,
                    height: u.bottom - u.top,
                    x: u.left,
                    y: u.top
                }
            },
            getOffsetParent: je,
            getElementRects: async function(e) {
                const t = this.getOffsetParent || je
                  , n = this.getDimensions;
                return {
                    reference: Se(e.reference, await t(e.floating), e.strategy, e.floating),
                    floating: {
                        x: 0,
                        y: 0,
                        ...await n(e.floating)
                    }
                }
            },
            getClientRects: function(e) {
                return Array.from(e.getClientRects())
            },
            getDimensions: function(e) {
                const {width: t, height: n} = pe(e);
                return {
                    width: t,
                    height: n
                }
            },
            getScale: ve,
            isElement: d,
            isRTL: function(e) {
                return "rtl" === w(e).direction
            }
        };
        function Te(e, t, n, a) {
            void 0 === a && (a = {});
            const {ancestorScroll: r=!0, ancestorResize: i=!0, elementResize: o="function" === typeof ResizeObserver, layoutShift: u="function" === typeof IntersectionObserver, animationFrame: d=!1} = a
              , l = ge(e)
              , c = r || i ? [...l ? M(l) : [], ...M(t)] : [];
            c.forEach((e=>{
                r && e.addEventListener("scroll", n, {
                    passive: !0
                }),
                i && e.addEventListener("resize", n)
            }
            ));
            const m = l && u ? function(e, t) {
                let n, a = null;
                const r = s(e);
                function i() {
                    var e;
                    clearTimeout(n),
                    null == (e = a) || e.disconnect(),
                    a = null
                }
                return function o(s, u) {
                    void 0 === s && (s = !1),
                    void 0 === u && (u = 1),
                    i();
                    const {left: d, top: l, width: c, height: m} = e.getBoundingClientRect();
                    if (s || t(),
                    !c || !m)
                        return;
                    const h = {
                        rootMargin: -K(l) + "px " + -K(r.clientWidth - (d + c)) + "px " + -K(r.clientHeight - (l + m)) + "px " + -K(d) + "px",
                        threshold: q(0, F(1, u)) || 1
                    };
                    let f = !0;
                    function p(e) {
                        const t = e[0].intersectionRatio;
                        if (t !== u) {
                            if (!f)
                                return o();
                            t ? o(!1, t) : n = setTimeout((()=>{
                                o(!1, 1e-7)
                            }
                            ), 100)
                        }
                        f = !1
                    }
                    try {
                        a = new IntersectionObserver(p,{
                            ...h,
                            root: r.ownerDocument
                        })
                    } catch (g) {
                        a = new IntersectionObserver(p,h)
                    }
                    a.observe(e)
                }(!0),
                i
            }(l, n) : null;
            let h, f = -1, p = null;
            o && (p = new ResizeObserver((e=>{
                let[a] = e;
                a && a.target === l && p && (p.unobserve(t),
                cancelAnimationFrame(f),
                f = requestAnimationFrame((()=>{
                    var e;
                    null == (e = p) || e.observe(t)
                }
                ))),
                n()
            }
            )),
            l && !d && p.observe(l),
            p.observe(t));
            let g = d ? ye(e) : null;
            return d && function t() {
                const a = ye(e);
                !g || a.x === g.x && a.y === g.y && a.width === g.width && a.height === g.height || n();
                g = a,
                h = requestAnimationFrame(t)
            }(),
            n(),
            ()=>{
                var e;
                c.forEach((e=>{
                    r && e.removeEventListener("scroll", n),
                    i && e.removeEventListener("resize", n)
                }
                )),
                null == m || m(),
                null == (e = p) || e.disconnect(),
                p = null,
                d && cancelAnimationFrame(h)
            }
        }
        const Ee = function(e) {
            return void 0 === e && (e = {}),
            {
                name: "autoPlacement",
                options: e,
                async fn(t) {
                    var n, a, r;
                    const {rects: i, middlewareData: o, placement: s, platform: u, elements: d} = t
                      , {crossAxis: l=!1, alignment: c, allowedPlacements: m=L, autoAlignment: h=!0, ...f} = Q(e, t)
                      , p = void 0 !== c || m === L ? function(e, t, n) {
                        return (e ? [...n.filter((t=>Z(t) === e)), ...n.filter((t=>Z(t) !== e))] : n.filter((e=>U(e) === e))).filter((n=>!e || Z(n) === e || !!t && ie(n) !== n))
                    }(c || null, h, m) : m
                      , g = await le(t, f)
                      , v = (null == (n = o.autoPlacement) ? void 0 : n.index) || 0
                      , w = p[v];
                    if (null == w)
                        return {};
                    const b = re(w, i, await (null == u.isRTL ? void 0 : u.isRTL(d.floating)));
                    if (s !== w)
                        return {
                            reset: {
                                placement: p[0]
                            }
                        };
                    const y = [g[U(w)], g[b[0]], g[b[1]]]
                      , k = [...(null == (a = o.autoPlacement) ? void 0 : a.overflows) || [], {
                        placement: w,
                        overflows: y
                    }]
                      , M = p[v + 1];
                    if (M)
                        return {
                            data: {
                                index: v + 1,
                                overflows: k
                            },
                            reset: {
                                placement: M
                            }
                        };
                    const P = k.map((e=>{
                        const t = Z(e.placement);
                        return [e.placement, t && l ? e.overflows.slice(0, 2).reduce(((e,t)=>e + t), 0) : e.overflows[0], e.overflows]
                    }
                    )).sort(((e,t)=>e[1] - t[1]))
                      , W = (null == (r = P.filter((e=>e[2].slice(0, Z(e[0]) ? 2 : 3).every((e=>e <= 0))))[0]) ? void 0 : r[0]) || P[0][0];
                    return W !== s ? {
                        data: {
                            index: v + 1,
                            overflows: k
                        },
                        reset: {
                            placement: W
                        }
                    } : {}
                }
            }
        }
          , Ne = function(e) {
            return void 0 === e && (e = {}),
            {
                name: "shift",
                options: e,
                async fn(t) {
                    const {x: n, y: a, placement: r} = t
                      , {mainAxis: i=!0, crossAxis: o=!1, limiter: s={
                        fn: e=>{
                            let {x: t, y: n} = e;
                            return {
                                x: t,
                                y: n
                            }
                        }
                    }, ...u} = Q(e, t)
                      , d = {
                        x: n,
                        y: a
                    }
                      , l = await le(t, u)
                      , c = ne(U(r))
                      , m = ee(c);
                    let h = d[m]
                      , f = d[c];
                    if (i) {
                        const e = "y" === m ? "bottom" : "right";
                        h = J(h + l["y" === m ? "top" : "left"], h, h - l[e])
                    }
                    if (o) {
                        const e = "y" === c ? "bottom" : "right";
                        f = J(f + l["y" === c ? "top" : "left"], f, f - l[e])
                    }
                    const p = s.fn({
                        ...t,
                        [m]: h,
                        [c]: f
                    });
                    return {
                        ...p,
                        data: {
                            x: p.x - n,
                            y: p.y - a
                        }
                    }
                }
            }
        }
          , ze = function(e) {
            return void 0 === e && (e = {}),
            {
                name: "flip",
                options: e,
                async fn(t) {
                    var n, a;
                    const {placement: r, middlewareData: i, rects: o, initialPlacement: s, platform: u, elements: d} = t
                      , {mainAxis: l=!0, crossAxis: c=!0, fallbackPlacements: m, fallbackStrategy: h="bestFit", fallbackAxisSideDirection: f="none", flipAlignment: p=!0, ...g} = Q(e, t);
                    if (null != (n = i.arrow) && n.alignmentOffset)
                        return {};
                    const v = U(r)
                      , w = U(s) === s
                      , b = await (null == u.isRTL ? void 0 : u.isRTL(d.floating))
                      , y = m || (w || !p ? [oe(s)] : function(e) {
                        const t = oe(e);
                        return [ie(e), t, ie(t)]
                    }(s));
                    m || "none" === f || y.push(...function(e, t, n, a) {
                        const r = Z(e);
                        let i = function(e, t, n) {
                            const a = ["left", "right"]
                              , r = ["right", "left"]
                              , i = ["top", "bottom"]
                              , o = ["bottom", "top"];
                            switch (e) {
                            case "top":
                            case "bottom":
                                return n ? t ? r : a : t ? a : r;
                            case "left":
                            case "right":
                                return t ? i : o;
                            default:
                                return []
                            }
                        }(U(e), "start" === n, a);
                        return r && (i = i.map((e=>e + "-" + r)),
                        t && (i = i.concat(i.map(ie)))),
                        i
                    }(s, p, f, b));
                    const k = [s, ...y]
                      , M = await le(t, g)
                      , P = [];
                    let W = (null == (a = i.flip) ? void 0 : a.overflows) || [];
                    if (l && P.push(M[v]),
                    c) {
                        const e = re(r, o, b);
                        P.push(M[e[0]], M[e[1]])
                    }
                    if (W = [...W, {
                        placement: r,
                        overflows: P
                    }],
                    !P.every((e=>e <= 0))) {
                        var x, S;
                        const e = ((null == (x = i.flip) ? void 0 : x.index) || 0) + 1
                          , t = k[e];
                        if (t)
                            return {
                                data: {
                                    index: e,
                                    overflows: W
                                },
                                reset: {
                                    placement: t
                                }
                            };
                        let n = null == (S = W.filter((e=>e.overflows[0] <= 0)).sort(((e,t)=>e.overflows[1] - t.overflows[1]))[0]) ? void 0 : S.placement;
                        if (!n)
                            switch (h) {
                            case "bestFit":
                                {
                                    var D;
                                    const e = null == (D = W.map((e=>[e.placement, e.overflows.filter((e=>e > 0)).reduce(((e,t)=>e + t), 0)])).sort(((e,t)=>e[1] - t[1]))[0]) ? void 0 : D[0];
                                    e && (n = e);
                                    break
                                }
                            case "initialPlacement":
                                n = s
                            }
                        if (r !== n)
                            return {
                                reset: {
                                    placement: n
                                }
                            }
                    }
                    return {}
                }
            }
        }
          , Ie = function(e) {
            return void 0 === e && (e = {}),
            {
                name: "size",
                options: e,
                async fn(t) {
                    const {placement: n, rects: a, platform: r, elements: i} = t
                      , {apply: o=(()=>{}
                    ), ...s} = Q(e, t)
                      , u = await le(t, s)
                      , d = U(n)
                      , l = Z(n)
                      , c = "y" === ne(n)
                      , {width: m, height: h} = a.floating;
                    let f, p;
                    "top" === d || "bottom" === d ? (f = d,
                    p = l === (await (null == r.isRTL ? void 0 : r.isRTL(i.floating)) ? "start" : "end") ? "left" : "right") : (p = d,
                    f = "end" === l ? "top" : "bottom");
                    const g = h - u[f]
                      , v = m - u[p]
                      , w = !t.middlewareData.shift;
                    let b = g
                      , y = v;
                    if (c) {
                        const e = m - u.left - u.right;
                        y = l || w ? F(v, e) : e
                    } else {
                        const e = h - u.top - u.bottom;
                        b = l || w ? F(g, e) : e
                    }
                    if (w && !l) {
                        const e = q(u.left, 0)
                          , t = q(u.right, 0)
                          , n = q(u.top, 0)
                          , a = q(u.bottom, 0);
                        c ? y = m - 2 * (0 !== e || 0 !== t ? e + t : q(u.left, u.right)) : b = h - 2 * (0 !== n || 0 !== a ? n + a : q(u.top, u.bottom))
                    }
                    await o({
                        ...t,
                        availableWidth: y,
                        availableHeight: b
                    });
                    const k = await r.getDimensions(i.floating);
                    return m !== k.width || h !== k.height ? {
                        reset: {
                            rects: !0
                        }
                    } : {}
                }
            }
        }
          , Oe = function(e) {
            return void 0 === e && (e = {}),
            {
                name: "hide",
                options: e,
                async fn(t) {
                    const {rects: n} = t
                      , {strategy: a="referenceHidden", ...r} = Q(e, t);
                    switch (a) {
                    case "referenceHidden":
                        {
                            const e = ce(await le(t, {
                                ...r,
                                elementContext: "reference"
                            }), n.reference);
                            return {
                                data: {
                                    referenceHiddenOffsets: e,
                                    referenceHidden: me(e)
                                }
                            }
                        }
                    case "escaped":
                        {
                            const e = ce(await le(t, {
                                ...r,
                                altBoundary: !0
                            }), n.floating);
                            return {
                                data: {
                                    escapedOffsets: e,
                                    escaped: me(e)
                                }
                            }
                        }
                    default:
                        return {}
                    }
                }
            }
        }
          , He = e=>({
            name: "arrow",
            options: e,
            async fn(t) {
                const {x: n, y: a, placement: r, rects: i, platform: o, elements: s, middlewareData: u} = t
                  , {element: d, padding: l=0} = Q(e, t) || {};
                if (null == d)
                    return {};
                const c = se(l)
                  , m = {
                    x: n,
                    y: a
                }
                  , h = ae(r)
                  , f = te(h)
                  , p = await o.getDimensions(d)
                  , g = "y" === h
                  , v = g ? "top" : "left"
                  , w = g ? "bottom" : "right"
                  , b = g ? "clientHeight" : "clientWidth"
                  , y = i.reference[f] + i.reference[h] - m[h] - i.floating[f]
                  , k = m[h] - i.reference[h]
                  , M = await (null == o.getOffsetParent ? void 0 : o.getOffsetParent(d));
                let P = M ? M[b] : 0;
                P && await (null == o.isElement ? void 0 : o.isElement(M)) || (P = s.floating[b] || i.floating[f]);
                const W = y / 2 - k / 2
                  , x = P / 2 - p[f] / 2 - 1
                  , S = F(c[v], x)
                  , D = F(c[w], x)
                  , j = S
                  , C = P - p[f] - D
                  , T = P / 2 - p[f] / 2 + W
                  , E = J(j, T, C)
                  , N = !u.arrow && null != Z(r) && T !== E && i.reference[f] / 2 - (T < j ? S : D) - p[f] / 2 < 0
                  , z = N ? T < j ? T - j : T - C : 0;
                return {
                    [h]: m[h] + z,
                    data: {
                        [h]: E,
                        centerOffset: T - E - z,
                        ...N && {
                            alignmentOffset: z
                        }
                    },
                    reset: N
                }
            }
        })
          , Ae = function(e) {
            return void 0 === e && (e = {}),
            {
                name: "inline",
                options: e,
                async fn(t) {
                    const {placement: n, elements: a, rects: r, platform: i, strategy: o} = t
                      , {padding: s=2, x: u, y: d} = Q(e, t)
                      , l = Array.from(await (null == i.getClientRects ? void 0 : i.getClientRects(a.reference)) || [])
                      , c = function(e) {
                        const t = e.slice().sort(((e,t)=>e.y - t.y))
                          , n = [];
                        let a = null;
                        for (let r = 0; r < t.length; r++) {
                            const e = t[r];
                            !a || e.y - a.y > a.height / 2 ? n.push([e]) : n[n.length - 1].push(e),
                            a = e
                        }
                        return n.map((e=>ue(he(e))))
                    }(l)
                      , m = ue(he(l))
                      , h = se(s);
                    const f = await i.getElementRects({
                        reference: {
                            getBoundingClientRect: function() {
                                if (2 === c.length && c[0].left > c[1].right && null != u && null != d)
                                    return c.find((e=>u > e.left - h.left && u < e.right + h.right && d > e.top - h.top && d < e.bottom + h.bottom)) || m;
                                if (c.length >= 2) {
                                    if ("y" === ne(n)) {
                                        const e = c[0]
                                          , t = c[c.length - 1]
                                          , a = "top" === U(n)
                                          , r = e.top
                                          , i = t.bottom
                                          , o = a ? e.left : t.left
                                          , s = a ? e.right : t.right;
                                        return {
                                            top: r,
                                            bottom: i,
                                            left: o,
                                            right: s,
                                            width: s - o,
                                            height: i - r,
                                            x: o,
                                            y: r
                                        }
                                    }
                                    const e = "left" === U(n)
                                      , t = q(...c.map((e=>e.right)))
                                      , a = F(...c.map((e=>e.left)))
                                      , r = c.filter((n=>e ? n.left === a : n.right === t))
                                      , i = r[0].top
                                      , o = r[r.length - 1].bottom;
                                    return {
                                        top: i,
                                        bottom: o,
                                        left: a,
                                        right: t,
                                        width: t - a,
                                        height: o - i,
                                        x: a,
                                        y: i
                                    }
                                }
                                return m
                            }
                        },
                        floating: a.floating,
                        strategy: o
                    });
                    return r.reference.x !== f.reference.x || r.reference.y !== f.reference.y || r.reference.width !== f.reference.width || r.reference.height !== f.reference.height ? {
                        reset: {
                            rects: f
                        }
                    } : {}
                }
            }
        }
          , Ye = function(e) {
            return void 0 === e && (e = {}),
            {
                options: e,
                fn(t) {
                    const {x: n, y: a, placement: r, rects: i, middlewareData: o} = t
                      , {offset: s=0, mainAxis: u=!0, crossAxis: d=!0} = Q(e, t)
                      , l = {
                        x: n,
                        y: a
                    }
                      , c = ne(r)
                      , m = ee(c);
                    let h = l[m]
                      , f = l[c];
                    const p = Q(s, t)
                      , g = "number" === typeof p ? {
                        mainAxis: p,
                        crossAxis: 0
                    } : {
                        mainAxis: 0,
                        crossAxis: 0,
                        ...p
                    };
                    if (u) {
                        const e = "y" === m ? "height" : "width"
                          , t = i.reference[m] - i.floating[e] + g.mainAxis
                          , n = i.reference[m] + i.reference[e] - g.mainAxis;
                        h < t ? h = t : h > n && (h = n)
                    }
                    if (d) {
                        var v, w;
                        const e = "y" === m ? "width" : "height"
                          , t = ["top", "left"].includes(U(r))
                          , n = i.reference[c] - i.floating[e] + (t && (null == (v = o.offset) ? void 0 : v[c]) || 0) + (t ? 0 : g.crossAxis)
                          , a = i.reference[c] + i.reference[e] + (t ? 0 : (null == (w = o.offset) ? void 0 : w[c]) || 0) - (t ? g.crossAxis : 0);
                        f < n ? f = n : f > a && (f = a)
                    }
                    return {
                        [m]: h,
                        [c]: f
                    }
                }
            }
        }
          , _e = (e,t,n)=>{
            const a = new Map
              , r = {
                platform: Ce,
                ...n
            }
              , i = {
                ...r.platform,
                _c: a
            };
            return (async(e,t,n)=>{
                const {placement: a="bottom", strategy: r="absolute", middleware: i=[], platform: o} = n
                  , s = i.filter(Boolean)
                  , u = await (null == o.isRTL ? void 0 : o.isRTL(t));
                let d = await o.getElementRects({
                    reference: e,
                    floating: t,
                    strategy: r
                })
                  , {x: l, y: c} = de(d, a, u)
                  , m = a
                  , h = {}
                  , f = 0;
                for (let p = 0; p < s.length; p++) {
                    const {name: n, fn: i} = s[p]
                      , {x: g, y: v, data: w, reset: b} = await i({
                        x: l,
                        y: c,
                        initialPlacement: a,
                        placement: m,
                        strategy: r,
                        middlewareData: h,
                        rects: d,
                        platform: o,
                        elements: {
                            reference: e,
                            floating: t
                        }
                    });
                    l = null != g ? g : l,
                    c = null != v ? v : c,
                    h = {
                        ...h,
                        [n]: {
                            ...h[n],
                            ...w
                        }
                    },
                    b && f <= 50 && (f++,
                    "object" === typeof b && (b.placement && (m = b.placement),
                    b.rects && (d = !0 === b.rects ? await o.getElementRects({
                        reference: e,
                        floating: t,
                        strategy: r
                    }) : b.rects),
                    ({x: l, y: c} = de(d, m, u))),
                    p = -1)
                }
                return {
                    x: l,
                    y: c,
                    placement: m,
                    strategy: r,
                    middlewareData: h
                }
            }
            )(e, t, {
                ...r,
                platform: i
            })
        }
        ;
        var Xe = n(40961);
        const Re = e=>({
            name: "arrow",
            options: e,
            fn(t) {
                const {element: n, padding: a} = "function" === typeof e ? e(t) : e;
                return n && (r = n,
                {}.hasOwnProperty.call(r, "current")) ? null != n.current ? He({
                    element: n.current,
                    padding: a
                }).fn(t) : {} : n ? He({
                    element: n,
                    padding: a
                }).fn(t) : {};
                var r
            }
        });
        var Le = "undefined" !== typeof document ? a.useLayoutEffect : a.useEffect;
        function Fe(e, t) {
            if (e === t)
                return !0;
            if (typeof e !== typeof t)
                return !1;
            if ("function" === typeof e && e.toString() === t.toString())
                return !0;
            let n, a, r;
            if (e && t && "object" === typeof e) {
                if (Array.isArray(e)) {
                    if (n = e.length,
                    n !== t.length)
                        return !1;
                    for (a = n; 0 !== a--; )
                        if (!Fe(e[a], t[a]))
                            return !1;
                    return !0
                }
                if (r = Object.keys(e),
                n = r.length,
                n !== Object.keys(t).length)
                    return !1;
                for (a = n; 0 !== a--; )
                    if (!{}.hasOwnProperty.call(t, r[a]))
                        return !1;
                for (a = n; 0 !== a--; ) {
                    const n = r[a];
                    if (("_owner" !== n || !e.$$typeof) && !Fe(e[n], t[n]))
                        return !1
                }
                return !0
            }
            return e !== e && t !== t
        }
        function qe(e) {
            if ("undefined" === typeof window)
                return 1;
            return (e.ownerDocument.defaultView || window).devicePixelRatio || 1
        }
        function Ge(e, t) {
            const n = qe(e);
            return Math.round(t * n) / n
        }
        function Ke(e) {
            const t = a.useRef(e);
            return Le((()=>{
                t.current = e
            }
            )),
            t
        }
        var Ve = ["input:not([inert])", "select:not([inert])", "textarea:not([inert])", "a[href]:not([inert])", "button:not([inert])", "[tabindex]:not(slot):not([inert])", "audio[controls]:not([inert])", "video[controls]:not([inert])", '[contenteditable]:not([contenteditable="false"]):not([inert])', "details>summary:first-of-type:not([inert])", "details:not([inert])"]
          , $e = Ve.join(",")
          , Be = "undefined" === typeof Element
          , Je = Be ? function() {}
        : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector
          , Qe = !Be && Element.prototype.getRootNode ? function(e) {
            var t;
            return null === e || void 0 === e || null === (t = e.getRootNode) || void 0 === t ? void 0 : t.call(e)
        }
        : function(e) {
            return null === e || void 0 === e ? void 0 : e.ownerDocument
        }
          , Ue = function e(t, n) {
            var a;
            void 0 === n && (n = !0);
            var r = null === t || void 0 === t || null === (a = t.getAttribute) || void 0 === a ? void 0 : a.call(t, "inert");
            return "" === r || "true" === r || n && t && e(t.parentNode)
        }
          , Ze = function(e, t, n) {
            if (Ue(e))
                return [];
            var a = Array.prototype.slice.apply(e.querySelectorAll($e));
            return t && Je.call(e, $e) && a.unshift(e),
            a = a.filter(n)
        }
          , et = function e(t, n, a) {
            for (var r = [], i = Array.from(t); i.length; ) {
                var o = i.shift();
                if (!Ue(o, !1))
                    if ("SLOT" === o.tagName) {
                        var s = o.assignedElements()
                          , u = e(s.length ? s : o.children, !0, a);
                        a.flatten ? r.push.apply(r, u) : r.push({
                            scopeParent: o,
                            candidates: u
                        })
                    } else {
                        Je.call(o, $e) && a.filter(o) && (n || !t.includes(o)) && r.push(o);
                        var d = o.shadowRoot || "function" === typeof a.getShadowRoot && a.getShadowRoot(o)
                          , l = !Ue(d, !1) && (!a.shadowRootFilter || a.shadowRootFilter(o));
                        if (d && l) {
                            var c = e(!0 === d ? o.children : d.children, !0, a);
                            a.flatten ? r.push.apply(r, c) : r.push({
                                scopeParent: o,
                                candidates: c
                            })
                        } else
                            i.unshift.apply(i, o.children)
                    }
            }
            return r
        }
          , tt = function(e) {
            return !isNaN(parseInt(e.getAttribute("tabindex"), 10))
        }
          , nt = function(e) {
            if (!e)
                throw new Error("No node provided");
            return e.tabIndex < 0 && (/^(AUDIO|VIDEO|DETAILS)$/.test(e.tagName) || function(e) {
                var t, n = null === e || void 0 === e || null === (t = e.getAttribute) || void 0 === t ? void 0 : t.call(e, "contenteditable");
                return "" === n || "true" === n
            }(e)) && !tt(e) ? 0 : e.tabIndex
        }
          , at = function(e, t) {
            return e.tabIndex === t.tabIndex ? e.documentOrder - t.documentOrder : e.tabIndex - t.tabIndex
        }
          , rt = function(e) {
            return "INPUT" === e.tagName
        }
          , it = function(e) {
            return function(e) {
                return rt(e) && "radio" === e.type
            }(e) && !function(e) {
                if (!e.name)
                    return !0;
                var t, n = e.form || Qe(e), a = function(e) {
                    return n.querySelectorAll('input[type="radio"][name="' + e + '"]')
                };
                if ("undefined" !== typeof window && "undefined" !== typeof window.CSS && "function" === typeof window.CSS.escape)
                    t = a(window.CSS.escape(e.name));
                else
                    try {
                        t = a(e.name)
                    } catch (i) {
                        return console.error("Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s", i.message),
                        !1
                    }
                var r = function(e, t) {
                    for (var n = 0; n < e.length; n++)
                        if (e[n].checked && e[n].form === t)
                            return e[n]
                }(t, e.form);
                return !r || r === e
            }(e)
        }
          , ot = function(e) {
            var t = e.getBoundingClientRect()
              , n = t.width
              , a = t.height;
            return 0 === n && 0 === a
        }
          , st = function(e, t) {
            var n = t.displayCheck
              , a = t.getShadowRoot;
            if ("hidden" === getComputedStyle(e).visibility)
                return !0;
            var r = Je.call(e, "details>summary:first-of-type") ? e.parentElement : e;
            if (Je.call(r, "details:not([open]) *"))
                return !0;
            if (n && "full" !== n && "legacy-full" !== n) {
                if ("non-zero-area" === n)
                    return ot(e)
            } else {
                if ("function" === typeof a) {
                    for (var i = e; e; ) {
                        var o = e.parentElement
                          , s = Qe(e);
                        if (o && !o.shadowRoot && !0 === a(o))
                            return ot(e);
                        e = e.assignedSlot ? e.assignedSlot : o || s === e.ownerDocument ? o : s.host
                    }
                    e = i
                }
                if (function(e) {
                    var t, n, a, r, i = e && Qe(e), o = null === (t = i) || void 0 === t ? void 0 : t.host, s = !1;
                    if (i && i !== e)
                        for (s = !!(null !== (n = o) && void 0 !== n && null !== (a = n.ownerDocument) && void 0 !== a && a.contains(o) || null !== e && void 0 !== e && null !== (r = e.ownerDocument) && void 0 !== r && r.contains(e)); !s && o; ) {
                            var u, d, l;
                            s = !(null === (d = o = null === (u = i = Qe(o)) || void 0 === u ? void 0 : u.host) || void 0 === d || null === (l = d.ownerDocument) || void 0 === l || !l.contains(o))
                        }
                    return s
                }(e))
                    return !e.getClientRects().length;
                if ("legacy-full" !== n)
                    return !0
            }
            return !1
        }
          , ut = function(e, t) {
            return !(t.disabled || Ue(t) || function(e) {
                return rt(e) && "hidden" === e.type
            }(t) || st(t, e) || function(e) {
                return "DETAILS" === e.tagName && Array.prototype.slice.apply(e.children).some((function(e) {
                    return "SUMMARY" === e.tagName
                }
                ))
            }(t) || function(e) {
                if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(e.tagName))
                    for (var t = e.parentElement; t; ) {
                        if ("FIELDSET" === t.tagName && t.disabled) {
                            for (var n = 0; n < t.children.length; n++) {
                                var a = t.children.item(n);
                                if ("LEGEND" === a.tagName)
                                    return !!Je.call(t, "fieldset[disabled] *") || !a.contains(e)
                            }
                            return !0
                        }
                        t = t.parentElement
                    }
                return !1
            }(t))
        }
          , dt = function(e, t) {
            return !(it(t) || nt(t) < 0 || !ut(e, t))
        }
          , lt = function(e) {
            var t = parseInt(e.getAttribute("tabindex"), 10);
            return !!(isNaN(t) || t >= 0)
        }
          , ct = function e(t) {
            var n = []
              , a = [];
            return t.forEach((function(t, r) {
                var i = !!t.scopeParent
                  , o = i ? t.scopeParent : t
                  , s = function(e, t) {
                    var n = nt(e);
                    return n < 0 && t && !tt(e) ? 0 : n
                }(o, i)
                  , u = i ? e(t.candidates) : o;
                0 === s ? i ? n.push.apply(n, u) : n.push(o) : a.push({
                    documentOrder: r,
                    tabIndex: s,
                    item: t,
                    isScope: i,
                    content: u
                })
            }
            )),
            a.sort(at).reduce((function(e, t) {
                return t.isScope ? e.push.apply(e, t.content) : e.push(t.content),
                e
            }
            ), []).concat(n)
        }
          , mt = function(e, t) {
            var n;
            return n = (t = t || {}).getShadowRoot ? et([e], t.includeContainer, {
                filter: dt.bind(null, t),
                flatten: !1,
                getShadowRoot: t.getShadowRoot,
                shadowRootFilter: lt
            }) : Ze(e, t.includeContainer, dt.bind(null, t)),
            ct(n)
        };
        function ht(e) {
            return a.useMemo((()=>e.every((e=>null == e)) ? null : t=>{
                e.forEach((e=>{
                    "function" === typeof e ? e(t) : null != e && (e.current = t)
                }
                ))
            }
            ), e)
        }
        const ft = r["useInsertionEffect".toString()] || (e=>e());
        function pt(e) {
            const t = a.useRef((()=>{
                0
            }
            ));
            return ft((()=>{
                t.current = e
            }
            )),
            a.useCallback((function() {
                for (var e = arguments.length, n = new Array(e), a = 0; a < e; a++)
                    n[a] = arguments[a];
                return null == t.current ? void 0 : t.current(...n)
            }
            ), [])
        }
        const gt = "ArrowUp"
          , vt = "ArrowDown"
          , wt = "ArrowLeft"
          , bt = "ArrowRight";
        function yt(e, t, n) {
            return Math.floor(e / t) !== n
        }
        function kt(e, t) {
            return t < 0 || t >= e.current.length
        }
        function Mt(e, t) {
            return Wt(e, {
                disabledIndices: t
            })
        }
        function Pt(e, t) {
            return Wt(e, {
                decrement: !0,
                startingIndex: e.current.length,
                disabledIndices: t
            })
        }
        function Wt(e, t) {
            let {startingIndex: n=-1, decrement: a=!1, disabledIndices: r, amount: i=1} = void 0 === t ? {} : t;
            const o = e.current
              , s = r ? e=>r.includes(e) : e=>{
                const t = o[e];
                return null == t || t.hasAttribute("disabled") || "true" === t.getAttribute("aria-disabled")
            }
            ;
            let u = n;
            do {
                u += a ? -i : i
            } while (u >= 0 && u <= o.length - 1 && s(u));
            return u
        }
        function xt(e, t) {
            let {event: n, orientation: a, loop: r, cols: i, disabledIndices: o, minIndex: s, maxIndex: u, prevIndex: d, stopEvent: l=!1} = t
              , c = d;
            if (n.key === gt) {
                if (l && Y(n),
                -1 === d)
                    c = u;
                else if (c = Wt(e, {
                    startingIndex: c,
                    amount: i,
                    decrement: !0,
                    disabledIndices: o
                }),
                r && (d - i < s || c < 0)) {
                    const e = d % i
                      , t = u % i
                      , n = u - (t - e);
                    c = t === e ? u : t > e ? n : n - i
                }
                kt(e, c) && (c = d)
            }
            if (n.key === vt && (l && Y(n),
            -1 === d ? c = s : (c = Wt(e, {
                startingIndex: d,
                amount: i,
                disabledIndices: o
            }),
            r && d + i > u && (c = Wt(e, {
                startingIndex: d % i - i,
                amount: i,
                disabledIndices: o
            }))),
            kt(e, c) && (c = d)),
            "both" === a) {
                const t = K(d / i);
                n.key === bt && (l && Y(n),
                d % i !== i - 1 ? (c = Wt(e, {
                    startingIndex: d,
                    disabledIndices: o
                }),
                r && yt(c, i, t) && (c = Wt(e, {
                    startingIndex: d - d % i - 1,
                    disabledIndices: o
                }))) : r && (c = Wt(e, {
                    startingIndex: d - d % i - 1,
                    disabledIndices: o
                })),
                yt(c, i, t) && (c = d)),
                n.key === wt && (l && Y(n),
                d % i !== 0 ? (c = Wt(e, {
                    startingIndex: d,
                    disabledIndices: o,
                    decrement: !0
                }),
                r && yt(c, i, t) && (c = Wt(e, {
                    startingIndex: d + (i - d % i),
                    decrement: !0,
                    disabledIndices: o
                }))) : r && (c = Wt(e, {
                    startingIndex: d + (i - d % i),
                    decrement: !0,
                    disabledIndices: o
                })),
                yt(c, i, t) && (c = d));
                const a = K(u / i) === t;
                kt(e, c) && (c = r && a ? n.key === wt ? u : Wt(e, {
                    startingIndex: d - d % i - 1,
                    disabledIndices: o
                }) : d)
            }
            return c
        }
        function St(e, t, n) {
            const a = [];
            let r = 0;
            return e.forEach(((e,i)=>{
                let {width: o, height: s} = e
                  , u = !1;
                for (n && (r = 0); !u; ) {
                    const e = [];
                    for (let n = 0; n < o; n++)
                        for (let a = 0; a < s; a++)
                            e.push(r + n + a * t);
                    r % t + o <= t && e.every((e=>null == a[e])) ? (e.forEach((e=>{
                        a[e] = i
                    }
                    )),
                    u = !0) : r++
                }
            }
            )),
            [...a]
        }
        function Dt(e, t, n, a, r) {
            if (-1 === e)
                return -1;
            const i = n.indexOf(e);
            switch (r) {
            case "tl":
                return i;
            case "tr":
                return i + t[e].width - 1;
            case "bl":
                return i + (t[e].height - 1) * a;
            case "br":
                return n.lastIndexOf(e)
            }
        }
        function jt(e, t) {
            return t.flatMap(((t,n)=>e.includes(t) ? [n] : []))
        }
        let Ct = 0;
        function Tt(e, t) {
            void 0 === t && (t = {});
            const {preventScroll: n=!1, cancelPrevious: a=!0, sync: r=!1} = t;
            a && cancelAnimationFrame(Ct);
            const i = ()=>null == e ? void 0 : e.focus({
                preventScroll: n
            });
            r ? i() : Ct = requestAnimationFrame(i)
        }
        var Et = "undefined" !== typeof document ? a.useLayoutEffect : a.useEffect;
        function Nt(e, t) {
            const n = e.compareDocumentPosition(t);
            return n & Node.DOCUMENT_POSITION_FOLLOWING || n & Node.DOCUMENT_POSITION_CONTAINED_BY ? -1 : n & Node.DOCUMENT_POSITION_PRECEDING || n & Node.DOCUMENT_POSITION_CONTAINS ? 1 : 0
        }
        const zt = a.createContext({
            register: ()=>{}
            ,
            unregister: ()=>{}
            ,
            map: new Map,
            elementsRef: {
                current: []
            }
        });
        function It(e) {
            let {children: t, elementsRef: n, labelsRef: r} = e;
            const [i,o] = a.useState((()=>new Map))
              , s = a.useCallback((e=>{
                o((t=>new Map(t).set(e, null)))
            }
            ), [])
              , u = a.useCallback((e=>{
                o((t=>{
                    const n = new Map(t);
                    return n.delete(e),
                    n
                }
                ))
            }
            ), []);
            return Et((()=>{
                const e = new Map(i);
                Array.from(e.keys()).sort(Nt).forEach(((t,n)=>{
                    e.set(t, n)
                }
                )),
                function(e, t) {
                    if (e.size !== t.size)
                        return !1;
                    for (const [n,a] of e.entries())
                        if (a !== t.get(n))
                            return !1;
                    return !0
                }(i, e) || o(e)
            }
            ), [i]),
            a.createElement(zt.Provider, {
                value: a.useMemo((()=>({
                    register: s,
                    unregister: u,
                    map: i,
                    elementsRef: n,
                    labelsRef: r
                })), [s, u, i, n, r])
            }, t)
        }
        function Ot(e) {
            let {label: t} = void 0 === e ? {} : e;
            const [n,r] = a.useState(null)
              , i = a.useRef(null)
              , {register: o, unregister: s, map: u, elementsRef: d, labelsRef: l} = a.useContext(zt)
              , c = a.useCallback((e=>{
                if (i.current = e,
                null !== n && (d.current[n] = e,
                l)) {
                    var a;
                    const r = void 0 !== t;
                    l.current[n] = r ? t : null != (a = null == e ? void 0 : e.textContent) ? a : null
                }
            }
            ), [n, d, l, t]);
            return Et((()=>{
                const e = i.current;
                if (e)
                    return o(e),
                    ()=>{
                        s(e)
                    }
            }
            ), [o, s]),
            Et((()=>{
                const e = i.current ? u.get(i.current) : null;
                null != e && r(e)
            }
            ), [u]),
            a.useMemo((()=>({
                ref: c,
                index: null == n ? -1 : n
            })), [n, c])
        }
        function Ht(e, t) {
            return "function" === typeof e ? e(t) : e ? a.cloneElement(e, t) : a.createElement("div", t)
        }
        const At = a.createContext({
            activeIndex: 0,
            onNavigate: ()=>{}
        })
          , Yt = [wt, bt]
          , _t = [gt, vt]
          , Xt = [...Yt, ..._t]
          , Rt = a.forwardRef((function(e, t) {
            let {render: n, orientation: r="both", loop: i=!0, cols: o=1, disabledIndices: s=[], activeIndex: u, onNavigate: d, itemSizes: l, dense: c=!1, ...m} = e;
            const [h,f] = a.useState(0)
              , p = null != u ? u : h
              , g = pt(null != d ? d : f)
              , v = a.useRef([])
              , w = n && "function" !== typeof n ? n.props : {}
              , b = a.useMemo((()=>({
                activeIndex: p,
                onNavigate: g
            })), [p, g])
              , y = o > 1;
            const k = {
                ...m,
                ...w,
                ref: t,
                "aria-orientation": "both" === r ? void 0 : r,
                onKeyDown(e) {
                    null == m.onKeyDown || m.onKeyDown(e),
                    null == w.onKeyDown || w.onKeyDown(e),
                    function(e) {
                        if (!Xt.includes(e.key))
                            return;
                        let t = p;
                        if (y) {
                            const n = l || Array.from({
                                length: v.current.length
                            }, (()=>({
                                width: 1,
                                height: 1
                            })))
                              , a = St(n, o, c)
                              , u = a.findIndex((e=>null != e && !s.includes(e)))
                              , d = a.reduce(((e,t,n)=>null == t || null != s && s.includes(t) ? e : n), -1);
                            t = a[xt({
                                current: a.map((e=>e ? v.current[e] : null))
                            }, {
                                event: e,
                                orientation: r,
                                loop: i,
                                cols: o,
                                disabledIndices: jt([...s, void 0], a),
                                minIndex: u,
                                maxIndex: d,
                                prevIndex: Dt(p, n, a, o, e.key === vt ? "bl" : e.key === bt ? "tr" : "tl")
                            })]
                        }
                        const n = Mt(v, s)
                          , a = Pt(v, s)
                          , u = {
                            horizontal: [bt],
                            vertical: [vt],
                            both: [bt, vt]
                        }[r]
                          , d = {
                            horizontal: [wt],
                            vertical: [gt],
                            both: [wt, gt]
                        }[r]
                          , m = y ? Xt : {
                            horizontal: Yt,
                            vertical: _t,
                            both: Xt
                        }[r];
                        t === p && [...u, ...d].includes(e.key) && (t = i && t === a && u.includes(e.key) ? n : i && t === n && d.includes(e.key) ? a : Wt(v, {
                            startingIndex: t,
                            decrement: d.includes(e.key),
                            disabledIndices: s
                        })),
                        t === p || kt(v, t) || (e.stopPropagation(),
                        m.includes(e.key) && e.preventDefault(),
                        g(t),
                        queueMicrotask((()=>{
                            Tt(v.current[t])
                        }
                        )))
                    }(e)
                }
            };
            return a.createElement(At.Provider, {
                value: b
            }, a.createElement(It, {
                elementsRef: v
            }, Ht(n, k)))
        }
        ))
          , Lt = a.forwardRef((function(e, t) {
            let {render: n, ...r} = e;
            const i = n && "function" !== typeof n ? n.props : {}
              , {activeIndex: o, onNavigate: s} = a.useContext(At)
              , {ref: u, index: d} = Ot()
              , l = ht([u, t, i.ref])
              , c = o === d;
            return Ht(n, {
                ...r,
                ...i,
                ref: l,
                tabIndex: c ? 0 : -1,
                "data-active": c ? "" : void 0,
                onFocus(e) {
                    null == r.onFocus || r.onFocus(e),
                    null == i.onFocus || i.onFocus(e),
                    s(d)
                }
            })
        }
        ));
        function Ft() {
            return Ft = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var a in n)
                        Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a])
                }
                return e
            }
            ,
            Ft.apply(this, arguments)
        }
        let qt = !1
          , Gt = 0;
        const Kt = ()=>"floating-ui-" + Gt++;
        const Vt = r["useId".toString()] || function() {
            const [e,t] = a.useState((()=>qt ? Kt() : void 0));
            return Et((()=>{
                null == e && t(Kt())
            }
            ), []),
            a.useEffect((()=>{
                qt || (qt = !0)
            }
            ), []),
            e
        }
          , $t = a.forwardRef((function(e, t) {
            let {context: {placement: n, elements: {floating: r}, middlewareData: {arrow: i}}, width: o=14, height: s=7, tipRadius: u=0, strokeWidth: d=0, staticOffset: l, stroke: c, d: m, style: {transform: h, ...f}={}, ...p} = e;
            const g = Vt();
            if (!r)
                return null;
            d *= 2;
            const v = d / 2
              , w = o / 2 * (u / -8 + 1)
              , b = s / 2 * u / 4
              , [y,k] = n.split("-")
              , M = Ce.isRTL(r)
              , P = !!m
              , W = "top" === y || "bottom" === y
              , x = l && "end" === k ? "bottom" : "top";
            let S = l && "end" === k ? "right" : "left";
            l && M && (S = "end" === k ? "left" : "right");
            const D = null != (null == i ? void 0 : i.x) ? l || i.x : ""
              , j = null != (null == i ? void 0 : i.y) ? l || i.y : ""
              , C = m || "M0,0 H" + o + " L" + (o - w) + "," + (s - b) + " Q" + o / 2 + "," + s + " " + w + "," + (s - b) + " Z"
              , T = {
                top: P ? "rotate(180deg)" : "",
                left: P ? "rotate(90deg)" : "rotate(-90deg)",
                bottom: P ? "" : "rotate(180deg)",
                right: P ? "rotate(-90deg)" : "rotate(90deg)"
            }[y];
            return a.createElement("svg", Ft({}, p, {
                "aria-hidden": !0,
                ref: t,
                width: P ? o : o + d,
                height: o,
                viewBox: "0 0 " + o + " " + (s > o ? s : o),
                style: {
                    position: "absolute",
                    pointerEvents: "none",
                    [S]: D,
                    [x]: j,
                    [y]: W || P ? "100%" : "calc(100% - " + d / 2 + "px)",
                    transform: "" + T + (null != h ? h : ""),
                    ...f
                }
            }), d > 0 && a.createElement("path", {
                clipPath: "url(#" + g + ")",
                fill: "none",
                stroke: c,
                strokeWidth: d + (m ? 0 : 1),
                d: C
            }), a.createElement("path", {
                stroke: d && !m ? p.fill : "none",
                d: C
            }), a.createElement("clipPath", {
                id: g
            }, a.createElement("rect", {
                x: -v,
                y: v * (P ? -1 : 1),
                width: o + d,
                height: o
            })))
        }
        ));
        function Bt() {
            const e = new Map;
            return {
                emit(t, n) {
                    var a;
                    null == (a = e.get(t)) || a.forEach((e=>e(n)))
                },
                on(t, n) {
                    e.set(t, [...e.get(t) || [], n])
                },
                off(t, n) {
                    var a;
                    e.set(t, (null == (a = e.get(t)) ? void 0 : a.filter((e=>e !== n))) || [])
                }
            }
        }
        const Jt = a.createContext(null)
          , Qt = a.createContext(null)
          , Ut = ()=>{
            var e;
            return (null == (e = a.useContext(Jt)) ? void 0 : e.id) || null
        }
          , Zt = ()=>a.useContext(Qt);
        function en(e) {
            const t = Vt()
              , n = Zt()
              , a = Ut()
              , r = e || a;
            return Et((()=>{
                const e = {
                    id: t,
                    parentId: r
                };
                return null == n || n.addNode(e),
                ()=>{
                    null == n || n.removeNode(e)
                }
            }
            ), [n, t, r]),
            t
        }
        function tn(e) {
            let {children: t, id: n} = e;
            const r = Ut();
            return a.createElement(Jt.Provider, {
                value: a.useMemo((()=>({
                    id: n,
                    parentId: r
                })), [n, r])
            }, t)
        }
        function nn(e) {
            let {children: t} = e;
            const n = a.useRef([])
              , r = a.useCallback((e=>{
                n.current = [...n.current, e]
            }
            ), [])
              , i = a.useCallback((e=>{
                n.current = n.current.filter((t=>t !== e))
            }
            ), [])
              , o = a.useState((()=>Bt()))[0];
            return a.createElement(Qt.Provider, {
                value: a.useMemo((()=>({
                    nodesRef: n,
                    addNode: r,
                    removeNode: i,
                    events: o
                })), [r, i, o])
            }, t)
        }
        function an(e) {
            return "data-floating-ui-" + e
        }
        function rn(e) {
            const t = (0,
            a.useRef)(e);
            return Et((()=>{
                t.current = e
            }
            )),
            t
        }
        const on = an("safe-polygon");
        function sn(e, t, n) {
            return n && !N(n) ? 0 : "number" === typeof e ? e : null == e ? void 0 : e[t]
        }
        function un(e, t) {
            void 0 === t && (t = {});
            const {open: n, onOpenChange: r, dataRef: i, events: o, elements: {domReference: s, floating: u}, refs: l} = e
              , {enabled: c=!0, delay: m=0, handleClose: h=null, mouseOnly: f=!1, restMs: p=0, move: g=!0} = t
              , v = Zt()
              , w = Ut()
              , b = rn(h)
              , y = rn(m)
              , k = a.useRef()
              , M = a.useRef()
              , P = a.useRef()
              , x = a.useRef()
              , S = a.useRef(!0)
              , D = a.useRef(!1)
              , j = a.useRef((()=>{}
            ))
              , C = a.useCallback((()=>{
                var e;
                const t = null == (e = i.current.openEvent) ? void 0 : e.type;
                return (null == t ? void 0 : t.includes("mouse")) && "mousedown" !== t
            }
            ), [i]);
            a.useEffect((()=>{
                if (c)
                    return o.on("openchange", e),
                    ()=>{
                        o.off("openchange", e)
                    }
                    ;
                function e(e) {
                    let {open: t} = e;
                    t || (clearTimeout(M.current),
                    clearTimeout(x.current),
                    S.current = !0)
                }
            }
            ), [c, o]),
            a.useEffect((()=>{
                if (!c || !b.current || !n)
                    return;
                function e(e) {
                    C() && r(!1, e, "hover")
                }
                const t = z(u).documentElement;
                return t.addEventListener("mouseleave", e),
                ()=>{
                    t.removeEventListener("mouseleave", e)
                }
            }
            ), [u, n, r, c, b, C]);
            const T = a.useCallback((function(e, t, n) {
                void 0 === t && (t = !0),
                void 0 === n && (n = "hover");
                const a = sn(y.current, "close", k.current);
                a && !P.current ? (clearTimeout(M.current),
                M.current = setTimeout((()=>r(!1, e, n)), a)) : t && (clearTimeout(M.current),
                r(!1, e, n))
            }
            ), [y, r])
              , E = a.useCallback((()=>{
                j.current(),
                P.current = void 0
            }
            ), [])
              , I = a.useCallback((()=>{
                if (D.current) {
                    const e = z(l.floating.current).body;
                    e.style.pointerEvents = "",
                    e.removeAttribute(on),
                    D.current = !1
                }
            }
            ), [l]);
            return a.useEffect((()=>{
                if (c && d(s)) {
                    const e = s;
                    return n && e.addEventListener("mouseleave", l),
                    null == u || u.addEventListener("mouseleave", l),
                    g && e.addEventListener("mousemove", a, {
                        once: !0
                    }),
                    e.addEventListener("mouseenter", a),
                    e.addEventListener("mouseleave", o),
                    ()=>{
                        n && e.removeEventListener("mouseleave", l),
                        null == u || u.removeEventListener("mouseleave", l),
                        g && e.removeEventListener("mousemove", a),
                        e.removeEventListener("mouseenter", a),
                        e.removeEventListener("mouseleave", o)
                    }
                }
                function t() {
                    return !!i.current.openEvent && ["click", "mousedown"].includes(i.current.openEvent.type)
                }
                function a(e) {
                    if (clearTimeout(M.current),
                    S.current = !1,
                    f && !N(k.current) || p > 0 && 0 === sn(y.current, "open"))
                        return;
                    const t = sn(y.current, "open", k.current);
                    t ? M.current = setTimeout((()=>{
                        r(!0, e, "hover")
                    }
                    ), t) : r(!0, e, "hover")
                }
                function o(a) {
                    if (t())
                        return;
                    j.current();
                    const r = z(u);
                    if (clearTimeout(x.current),
                    b.current) {
                        n || clearTimeout(M.current),
                        P.current = b.current({
                            ...e,
                            tree: v,
                            x: a.clientX,
                            y: a.clientY,
                            onClose() {
                                I(),
                                E(),
                                T(a, !0, "safe-polygon")
                            }
                        });
                        const t = P.current;
                        return r.addEventListener("mousemove", t),
                        void (j.current = ()=>{
                            r.removeEventListener("mousemove", t)
                        }
                        )
                    }
                    ("touch" !== k.current || !W(u, a.relatedTarget)) && T(a)
                }
                function l(n) {
                    t() || null == b.current || b.current({
                        ...e,
                        tree: v,
                        x: n.clientX,
                        y: n.clientY,
                        onClose() {
                            I(),
                            E(),
                            T(n)
                        }
                    })(n)
                }
            }
            ), [s, u, c, e, f, p, g, T, E, I, r, n, v, y, b, i]),
            Et((()=>{
                var e;
                if (c && n && null != (e = b.current) && e.__options.blockPointerEvents && C()) {
                    const e = z(u).body;
                    if (e.setAttribute(on, ""),
                    e.style.pointerEvents = "none",
                    D.current = !0,
                    d(s) && u) {
                        var t;
                        const e = s
                          , n = null == v || null == (t = v.nodesRef.current.find((e=>e.id === w))) || null == (t = t.context) ? void 0 : t.elements.floating;
                        return n && (n.style.pointerEvents = ""),
                        e.style.pointerEvents = "auto",
                        u.style.pointerEvents = "auto",
                        ()=>{
                            e.style.pointerEvents = "",
                            u.style.pointerEvents = ""
                        }
                    }
                }
            }
            ), [c, n, w, u, s, v, b, C]),
            Et((()=>{
                n || (k.current = void 0,
                E(),
                I())
            }
            ), [n, E, I]),
            a.useEffect((()=>()=>{
                E(),
                clearTimeout(M.current),
                clearTimeout(x.current),
                I()
            }
            ), [c, s, E, I]),
            a.useMemo((()=>{
                if (!c)
                    return {};
                function e(e) {
                    k.current = e.pointerType
                }
                return {
                    reference: {
                        onPointerDown: e,
                        onPointerEnter: e,
                        onMouseMove(e) {
                            n || 0 === p || (clearTimeout(x.current),
                            x.current = setTimeout((()=>{
                                S.current || r(!0, e.nativeEvent, "hover")
                            }
                            ), p))
                        }
                    },
                    floating: {
                        onMouseEnter() {
                            clearTimeout(M.current)
                        },
                        onMouseLeave(e) {
                            T(e.nativeEvent, !1)
                        }
                    }
                }
            }
            ), [c, p, n, r, T])
        }
        const dn = a.createContext({
            delay: 0,
            initialDelay: 0,
            timeoutMs: 0,
            currentId: null,
            setCurrentId: ()=>{}
            ,
            setState: ()=>{}
            ,
            isInstantPhase: !1
        })
          , ln = ()=>a.useContext(dn)
          , cn = e=>{
            let {children: t, delay: n, timeoutMs: r=0} = e;
            const [i,o] = a.useReducer(((e,t)=>({
                ...e,
                ...t
            })), {
                delay: n,
                timeoutMs: r,
                initialDelay: n,
                currentId: null,
                isInstantPhase: !1
            })
              , s = a.useRef(null)
              , u = a.useCallback((e=>{
                o({
                    currentId: e
                })
            }
            ), []);
            return Et((()=>{
                i.currentId ? null === s.current ? s.current = i.currentId : o({
                    isInstantPhase: !0
                }) : (o({
                    isInstantPhase: !1
                }),
                s.current = null)
            }
            ), [i.currentId]),
            a.createElement(dn.Provider, {
                value: a.useMemo((()=>({
                    ...i,
                    setState: o,
                    setCurrentId: u
                })), [i, u])
            }, t)
        }
          , mn = (e,t)=>{
            let {open: n, onOpenChange: a} = e
              , {id: r} = t;
            const {currentId: i, setCurrentId: o, initialDelay: s, setState: u, timeoutMs: d} = ln();
            Et((()=>{
                i && (u({
                    delay: {
                        open: 1,
                        close: sn(s, "close")
                    }
                }),
                i !== r && a(!1))
            }
            ), [r, a, u, i, s]),
            Et((()=>{
                function e() {
                    a(!1),
                    u({
                        delay: s,
                        currentId: null
                    })
                }
                if (!n && i === r) {
                    if (d) {
                        const t = window.setTimeout(e, d);
                        return ()=>{
                            clearTimeout(t)
                        }
                    }
                    e()
                }
            }
            ), [n, u, i, r, a, s, d]),
            Et((()=>{
                n && o(r)
            }
            ), [n, o, r])
        }
        ;
        function hn(e, t) {
            let n = e.filter((e=>{
                var n;
                return e.parentId === t && (null == (n = e.context) ? void 0 : n.open)
            }
            ))
              , a = n;
            for (; a.length; )
                a = e.filter((e=>{
                    var t;
                    return null == (t = a) ? void 0 : t.some((t=>{
                        var n;
                        return e.parentId === t.id && (null == (n = e.context) ? void 0 : n.open)
                    }
                    ))
                }
                )),
                n = n.concat(a);
            return n
        }
        let fn = new WeakMap
          , pn = new WeakSet
          , gn = {}
          , vn = 0;
        const wn = ()=>"undefined" !== typeof HTMLElement && "inert"in HTMLElement.prototype
          , bn = e=>e && (e.host || bn(e.parentNode))
          , yn = (e,t)=>t.map((t=>{
            if (e.contains(t))
                return t;
            const n = bn(t);
            return e.contains(n) ? n : null
        }
        )).filter((e=>null != e));
        function kn(e, t, n) {
            void 0 === t && (t = !1),
            void 0 === n && (n = !1);
            const a = z(e[0]).body;
            return function(e, t, n, a) {
                const r = "data-floating-ui-inert"
                  , i = a ? "inert" : n ? "aria-hidden" : null
                  , o = yn(t, e)
                  , s = new Set
                  , u = new Set(o)
                  , d = [];
                gn[r] || (gn[r] = new WeakMap);
                const l = gn[r];
                return o.forEach((function e(t) {
                    t && !s.has(t) && (s.add(t),
                    t.parentNode && e(t.parentNode))
                }
                )),
                function e(t) {
                    t && !u.has(t) && Array.prototype.forEach.call(t.children, (t=>{
                        if (s.has(t))
                            e(t);
                        else {
                            const e = i ? t.getAttribute(i) : null
                              , n = null !== e && "false" !== e
                              , a = (fn.get(t) || 0) + 1
                              , o = (l.get(t) || 0) + 1;
                            fn.set(t, a),
                            l.set(t, o),
                            d.push(t),
                            1 === a && n && pn.add(t),
                            1 === o && t.setAttribute(r, ""),
                            !n && i && t.setAttribute(i, "true")
                        }
                    }
                    ))
                }(t),
                s.clear(),
                vn++,
                ()=>{
                    d.forEach((e=>{
                        const t = (fn.get(e) || 0) - 1
                          , n = (l.get(e) || 0) - 1;
                        fn.set(e, t),
                        l.set(e, n),
                        t || (!pn.has(e) && i && e.removeAttribute(i),
                        pn.delete(e)),
                        n || e.removeAttribute(r)
                    }
                    )),
                    vn--,
                    vn || (fn = new WeakMap,
                    fn = new WeakMap,
                    pn = new WeakSet,
                    gn = {})
                }
            }(e.concat(Array.from(a.querySelectorAll("[aria-live]"))), a, t, n)
        }
        const Mn = ()=>({
            getShadowRoot: !0,
            displayCheck: "function" === typeof ResizeObserver && ResizeObserver.toString().includes("[native code]") ? "full" : "none"
        });
        function Pn(e, t) {
            const n = mt(e, Mn());
            "prev" === t && n.reverse();
            const a = n.indexOf(P(z(e)));
            return n.slice(a + 1)[0]
        }
        function Wn() {
            return Pn(document.body, "next")
        }
        function xn() {
            return Pn(document.body, "prev")
        }
        function Sn(e, t) {
            const n = t || e.currentTarget
              , a = e.relatedTarget;
            return !a || !W(n, a)
        }
        function Dn(e) {
            mt(e, Mn()).forEach((e=>{
                e.dataset.tabindex = e.getAttribute("tabindex") || "",
                e.setAttribute("tabindex", "-1")
            }
            ))
        }
        function jn(e) {
            e.querySelectorAll("[data-tabindex]").forEach((e=>{
                const t = e.dataset.tabindex;
                delete e.dataset.tabindex,
                t ? e.setAttribute("tabindex", t) : e.removeAttribute("tabindex")
            }
            ))
        }
        const Cn = {
            border: 0,
            clip: "rect(0 0 0 0)",
            height: "1px",
            margin: "-1px",
            overflow: "hidden",
            padding: 0,
            position: "fixed",
            whiteSpace: "nowrap",
            width: "1px",
            top: 0,
            left: 0
        };
        function Tn(e) {
            "Tab" === e.key && (e.target,
            clearTimeout(undefined))
        }
        const En = a.forwardRef((function(e, t) {
            const [n,r] = a.useState();
            Et((()=>(C() && r("button"),
            document.addEventListener("keydown", Tn),
            ()=>{
                document.removeEventListener("keydown", Tn)
            }
            )), []);
            const i = {
                ref: t,
                tabIndex: 0,
                role: n,
                "aria-hidden": !n || void 0,
                [an("focus-guard")]: "",
                style: Cn
            };
            return a.createElement("span", Ft({}, e, i))
        }
        ))
          , Nn = a.createContext(null)
          , zn = an("portal");
        function In(e) {
            let {id: t, root: n} = void 0 === e ? {} : e;
            const [r,i] = a.useState(null)
              , o = Vt()
              , s = Hn()
              , u = a.useRef(null);
            return Et((()=>()=>{
                null == r || r.remove(),
                queueMicrotask((()=>{
                    u.current = null
                }
                ))
            }
            ), [r]),
            Et((()=>{
                if (u.current)
                    return;
                const e = t ? document.getElementById(t) : null;
                if (!e)
                    return;
                const n = document.createElement("div");
                n.id = o,
                n.setAttribute(zn, ""),
                e.appendChild(n),
                u.current = n,
                i(n)
            }
            ), [t, o]),
            Et((()=>{
                if (u.current)
                    return;
                let e = n || (null == s ? void 0 : s.portalNode);
                e && !d(e) && (e = e.current),
                e = e || document.body;
                let a = null;
                t && (a = document.createElement("div"),
                a.id = t,
                e.appendChild(a));
                const r = document.createElement("div");
                r.id = o,
                r.setAttribute(zn, ""),
                e = a || e,
                e.appendChild(r),
                u.current = r,
                i(r)
            }
            ), [t, n, o, s]),
            r
        }
        function On(e) {
            let {children: t, id: n, root: r=null, preserveTabOrder: i=!0} = e;
            const o = In({
                id: n,
                root: r
            })
              , [s,u] = a.useState(null)
              , d = a.useRef(null)
              , l = a.useRef(null)
              , c = a.useRef(null)
              , m = a.useRef(null)
              , h = !!s && !s.modal && s.open && i && !(!r && !o);
            return a.useEffect((()=>{
                if (o && i && (null == s || !s.modal))
                    return o.addEventListener("focusin", e, !0),
                    o.addEventListener("focusout", e, !0),
                    ()=>{
                        o.removeEventListener("focusin", e, !0),
                        o.removeEventListener("focusout", e, !0)
                    }
                    ;
                function e(e) {
                    if (o && Sn(e)) {
                        ("focusin" === e.type ? jn : Dn)(o)
                    }
                }
            }
            ), [o, i, null == s ? void 0 : s.modal]),
            a.createElement(Nn.Provider, {
                value: a.useMemo((()=>({
                    preserveTabOrder: i,
                    beforeOutsideRef: d,
                    afterOutsideRef: l,
                    beforeInsideRef: c,
                    afterInsideRef: m,
                    portalNode: o,
                    setFocusManagerState: u
                })), [i, o])
            }, h && o && a.createElement(En, {
                "data-type": "outside",
                ref: d,
                onFocus: e=>{
                    if (Sn(e, o)) {
                        var t;
                        null == (t = c.current) || t.focus()
                    } else {
                        const e = xn() || (null == s ? void 0 : s.refs.domReference.current);
                        null == e || e.focus()
                    }
                }
            }), h && o && a.createElement("span", {
                "aria-owns": o.id,
                style: Cn
            }), o && (0,
            Xe.createPortal)(t, o), h && o && a.createElement(En, {
                "data-type": "outside",
                ref: l,
                onFocus: e=>{
                    if (Sn(e, o)) {
                        var t;
                        null == (t = m.current) || t.focus()
                    } else {
                        const t = Wn() || (null == s ? void 0 : s.refs.domReference.current);
                        null == t || t.focus(),
                        (null == s ? void 0 : s.closeOnFocusOut) && (null == s || s.onOpenChange(!1, e.nativeEvent))
                    }
                }
            }))
        }
        const Hn = ()=>a.useContext(Nn)
          , An = 20;
        let Yn = [];
        function _n(e) {
            Yn = Yn.filter((e=>e.isConnected)),
            e && "body" !== i(e) && (Yn.push(e),
            Yn.length > An && (Yn = Yn.slice(-An)))
        }
        function Xn() {
            return Yn.slice().reverse().find((e=>e.isConnected))
        }
        const Rn = a.forwardRef((function(e, t) {
            return a.createElement("button", Ft({}, e, {
                type: "button",
                ref: t,
                tabIndex: -1,
                style: Cn
            }))
        }
        ));
        function Ln(e) {
            const {context: t, children: n, disabled: r=!1, order: i=["content"], guards: o=!0, initialFocus: s=0, returnFocus: u=!0, modal: d=!0, visuallyHiddenDismiss: c=!1, closeOnFocusOut: m=!0} = e
              , {open: h, refs: f, nodeId: p, onOpenChange: g, events: v, dataRef: w, elements: {domReference: b, floating: y}} = t
              , k = "number" === typeof s && s < 0
              , M = _(b) && k
              , x = !wn() || o
              , S = rn(i)
              , C = rn(s)
              , T = rn(u)
              , E = Zt()
              , N = Hn()
              , I = a.useRef(null)
              , H = a.useRef(null)
              , A = a.useRef(!1)
              , X = a.useRef(!1)
              , R = null != N
              , L = a.useCallback((function(e) {
                return void 0 === e && (e = y),
                e ? mt(e, Mn()) : []
            }
            ), [y])
              , F = a.useCallback((e=>{
                const t = L(e);
                return S.current.map((e=>b && "reference" === e ? b : y && "floating" === e ? y : t)).filter(Boolean).flat()
            }
            ), [b, y, S, L]);
            function q(e) {
                return !r && c && d ? a.createElement(Rn, {
                    ref: "start" === e ? I : H,
                    onClick: e=>g(!1, e.nativeEvent)
                }, "string" === typeof c ? c : "Dismiss") : null
            }
            a.useEffect((()=>{
                if (r || !d)
                    return;
                function e(e) {
                    if ("Tab" === e.key) {
                        W(y, P(z(y))) && 0 === L().length && !M && Y(e);
                        const t = F()
                          , n = O(e);
                        "reference" === S.current[0] && n === b && (Y(e),
                        e.shiftKey ? Tt(t[t.length - 1]) : Tt(t[1])),
                        "floating" === S.current[1] && n === y && e.shiftKey && (Y(e),
                        Tt(t[0]))
                    }
                }
                const t = z(y);
                return t.addEventListener("keydown", e),
                ()=>{
                    t.removeEventListener("keydown", e)
                }
            }
            ), [r, b, y, d, S, M, L, F]),
            a.useEffect((()=>{
                if (!r && m)
                    return y && l(b) ? (b.addEventListener("focusout", t),
                    b.addEventListener("pointerdown", e),
                    !d && y.addEventListener("focusout", t),
                    ()=>{
                        b.removeEventListener("focusout", t),
                        b.removeEventListener("pointerdown", e),
                        !d && y.removeEventListener("focusout", t)
                    }
                    ) : void 0;
                function e() {
                    X.current = !0,
                    setTimeout((()=>{
                        X.current = !1
                    }
                    ))
                }
                function t(e) {
                    const t = e.relatedTarget;
                    queueMicrotask((()=>{
                        const n = !(W(b, t) || W(y, t) || W(t, y) || W(null == N ? void 0 : N.portalNode, t) || null != t && t.hasAttribute(an("focus-guard")) || E && (hn(E.nodesRef.current, p).find((e=>{
                            var n, a;
                            return W(null == (n = e.context) ? void 0 : n.elements.floating, t) || W(null == (a = e.context) ? void 0 : a.elements.domReference, t)
                        }
                        )) || function(e, t) {
                            var n;
                            let a = []
                              , r = null == (n = e.find((e=>e.id === t))) ? void 0 : n.parentId;
                            for (; r; ) {
                                const t = e.find((e=>e.id === r));
                                r = null == t ? void 0 : t.parentId,
                                t && (a = a.concat(t))
                            }
                            return a
                        }(E.nodesRef.current, p).find((e=>{
                            var n, a;
                            return (null == (n = e.context) ? void 0 : n.elements.floating) === t || (null == (a = e.context) ? void 0 : a.elements.domReference) === t
                        }
                        ))));
                        t && n && !X.current && t !== Xn() && (A.current = !0,
                        g(!1, e))
                    }
                    ))
                }
            }
            ), [r, b, y, d, p, E, N, g, m]),
            a.useEffect((()=>{
                var e;
                if (r)
                    return;
                const t = Array.from((null == N || null == (e = N.portalNode) ? void 0 : e.querySelectorAll("[" + an("portal") + "]")) || []);
                if (y) {
                    const e = [y, ...t, I.current, H.current, S.current.includes("reference") || M ? b : null].filter((e=>null != e))
                      , n = d || M ? kn(e, x, !x) : kn(e);
                    return ()=>{
                        n()
                    }
                }
            }
            ), [r, b, y, d, S, N, M, x]),
            Et((()=>{
                if (r || !y)
                    return;
                const e = P(z(y));
                queueMicrotask((()=>{
                    const t = F(y)
                      , n = C.current
                      , a = ("number" === typeof n ? t[n] : n.current) || y
                      , r = W(y, e);
                    k || r || !h || Tt(a, {
                        preventScroll: a === y
                    })
                }
                ))
            }
            ), [r, h, y, k, F, C]),
            Et((()=>{
                if (r || !y)
                    return;
                let e = !1;
                const t = z(y)
                  , n = P(t)
                  , a = w.current;
                function i(t) {
                    let {reason: n, event: a, nested: r} = t;
                    "escape-key" === n && f.domReference.current && _n(f.domReference.current),
                    "hover" === n && "mouseleave" === a.type && (A.current = !0),
                    "outside-press" === n && (r ? (A.current = !1,
                    e = !0) : A.current = !(D(a) || j(a)))
                }
                return _n(n),
                v.on("openchange", i),
                ()=>{
                    v.off("openchange", i);
                    const n = P(t)
                      , r = W(y, n) || E && hn(E.nodesRef.current, p).some((e=>{
                        var t;
                        return W(null == (t = e.context) ? void 0 : t.elements.floating, n)
                    }
                    ));
                    (r || a.openEvent && ["click", "mousedown"].includes(a.openEvent.type)) && f.domReference.current && _n(f.domReference.current);
                    const o = Xn();
                    T.current && !A.current && l(o) && (o === n || n === t.body || r) && Tt(o, {
                        cancelPrevious: !1,
                        preventScroll: e
                    })
                }
            }
            ), [r, y, T, w, f, v, E, p]),
            Et((()=>{
                if (!r && N)
                    return N.setFocusManagerState({
                        modal: d,
                        closeOnFocusOut: m,
                        open: h,
                        onOpenChange: g,
                        refs: f
                    }),
                    ()=>{
                        N.setFocusManagerState(null)
                    }
            }
            ), [r, N, d, h, g, f, m]),
            Et((()=>{
                if (r || !y || "function" !== typeof MutationObserver || k)
                    return;
                const e = ()=>{
                    const e = y.getAttribute("tabindex");
                    S.current.includes("floating") || P(z(y)) !== f.domReference.current && 0 === L().length ? "0" !== e && y.setAttribute("tabindex", "0") : "-1" !== e && y.setAttribute("tabindex", "-1")
                }
                ;
                e();
                const t = new MutationObserver(e);
                return t.observe(y, {
                    childList: !0,
                    subtree: !0,
                    attributes: !0
                }),
                ()=>{
                    t.disconnect()
                }
            }
            ), [r, y, f, S, L, k]);
            const G = !r && x && (R || d);
            return a.createElement(a.Fragment, null, G && a.createElement(En, {
                "data-type": "inside",
                ref: null == N ? void 0 : N.beforeInsideRef,
                onFocus: e=>{
                    if (d) {
                        const e = F();
                        Tt("reference" === i[0] ? e[0] : e[e.length - 1])
                    } else if (null != N && N.preserveTabOrder && N.portalNode)
                        if (A.current = !1,
                        Sn(e, N.portalNode)) {
                            const e = Wn() || b;
                            null == e || e.focus()
                        } else {
                            var t;
                            null == (t = N.beforeOutsideRef.current) || t.focus()
                        }
                }
            }), !M && q("start"), n, q("end"), G && a.createElement(En, {
                "data-type": "inside",
                ref: null == N ? void 0 : N.afterInsideRef,
                onFocus: e=>{
                    if (d)
                        Tt(F()[0]);
                    else if (null != N && N.preserveTabOrder && N.portalNode)
                        if (m && (A.current = !0),
                        Sn(e, N.portalNode)) {
                            const e = xn() || b;
                            null == e || e.focus()
                        } else {
                            var t;
                            null == (t = N.afterOutsideRef.current) || t.focus()
                        }
                }
            }))
        }
        const Fn = new Set
          , qn = a.forwardRef((function(e, t) {
            let {lockScroll: n=!1, ...r} = e;
            const i = Vt();
            return Et((()=>{
                if (!n)
                    return;
                Fn.add(i);
                const e = /iP(hone|ad|od)|iOS/.test(x())
                  , t = document.body.style
                  , a = Math.round(document.documentElement.getBoundingClientRect().left) + document.documentElement.scrollLeft ? "paddingLeft" : "paddingRight"
                  , r = window.innerWidth - document.documentElement.clientWidth
                  , o = t.left ? parseFloat(t.left) : window.pageXOffset
                  , s = t.top ? parseFloat(t.top) : window.pageYOffset;
                if (t.overflow = "hidden",
                r && (t[a] = r + "px"),
                e) {
                    var u, d;
                    const e = (null == (u = window.visualViewport) ? void 0 : u.offsetLeft) || 0
                      , n = (null == (d = window.visualViewport) ? void 0 : d.offsetTop) || 0;
                    Object.assign(t, {
                        position: "fixed",
                        top: -(s - Math.floor(n)) + "px",
                        left: -(o - Math.floor(e)) + "px",
                        right: "0"
                    })
                }
                return ()=>{
                    Fn.delete(i),
                    0 === Fn.size && (Object.assign(t, {
                        overflow: "",
                        [a]: ""
                    }),
                    e && (Object.assign(t, {
                        position: "",
                        top: "",
                        left: "",
                        right: ""
                    }),
                    window.scrollTo(o, s)))
                }
            }
            ), [i, n]),
            a.createElement("div", Ft({
                ref: t
            }, r, {
                style: {
                    position: "fixed",
                    overflow: "auto",
                    top: 0,
                    right: 0,
                    bottom: 0,
                    left: 0,
                    ...r.style
                }
            }))
        }
        ));
        function Gn(e) {
            return l(e.target) && "BUTTON" === e.target.tagName
        }
        function Kn(e) {
            return A(e)
        }
        function Vn(e, t) {
            void 0 === t && (t = {});
            const {open: n, onOpenChange: r, dataRef: i, elements: {domReference: o}} = e
              , {enabled: s=!0, event: u="click", toggle: d=!0, ignoreMouse: l=!1, keyboardHandlers: c=!0} = t
              , m = a.useRef()
              , h = a.useRef(!1);
            return a.useMemo((()=>s ? {
                reference: {
                    onPointerDown(e) {
                        m.current = e.pointerType
                    },
                    onMouseDown(e) {
                        0 === e.button && (N(m.current, !0) && l || "click" !== u && (!n || !d || i.current.openEvent && "mousedown" !== i.current.openEvent.type ? (e.preventDefault(),
                        r(!0, e.nativeEvent, "click")) : r(!1, e.nativeEvent, "click")))
                    },
                    onClick(e) {
                        "mousedown" === u && m.current ? m.current = void 0 : N(m.current, !0) && l || (!n || !d || i.current.openEvent && "click" !== i.current.openEvent.type ? r(!0, e.nativeEvent, "click") : r(!1, e.nativeEvent, "click"))
                    },
                    onKeyDown(e) {
                        m.current = void 0,
                        e.defaultPrevented || !c || Gn(e) || (" " !== e.key || Kn(o) || (e.preventDefault(),
                        h.current = !0),
                        "Enter" === e.key && r(!n || !d, e.nativeEvent, "click"))
                    },
                    onKeyUp(e) {
                        e.defaultPrevented || !c || Gn(e) || Kn(o) || " " === e.key && h.current && (h.current = !1,
                        r(!n || !d, e.nativeEvent, "click"))
                    }
                }
            } : {}), [s, i, u, l, c, o, d, n, r])
        }
        function $n(e) {
            return null != e && null != e.clientX
        }
        function Bn(e, t) {
            void 0 === t && (t = {});
            const {open: n, refs: r, dataRef: i, elements: {floating: s}} = e
              , {enabled: u=!0, axis: d="both", x: l=null, y: c=null} = t
              , m = a.useRef(!1)
              , h = a.useRef(null)
              , [f,p] = a.useState()
              , [g,v] = a.useState([])
              , w = pt(((e,t)=>{
                m.current || i.current.openEvent && !$n(i.current.openEvent) || r.setPositionReference(function(e, t) {
                    let n = null
                      , a = null
                      , r = !1;
                    return {
                        contextElement: e.current || void 0,
                        getBoundingClientRect() {
                            var i, o;
                            const s = (null == (i = e.current) ? void 0 : i.getBoundingClientRect()) || {
                                width: 0,
                                height: 0,
                                x: 0,
                                y: 0
                            }
                              , u = "x" === t.axis || "both" === t.axis
                              , d = "y" === t.axis || "both" === t.axis
                              , l = ["mouseenter", "mousemove"].includes((null == (o = t.dataRef.current.openEvent) ? void 0 : o.type) || "") && "touch" !== t.pointerType;
                            let c = s.width
                              , m = s.height
                              , h = s.x
                              , f = s.y;
                            return null == n && t.x && u && (n = s.x - t.x),
                            null == a && t.y && d && (a = s.y - t.y),
                            h -= n || 0,
                            f -= a || 0,
                            c = 0,
                            m = 0,
                            !r || l ? (c = "y" === t.axis ? s.width : 0,
                            m = "x" === t.axis ? s.height : 0,
                            h = u && null != t.x ? t.x : h,
                            f = d && null != t.y ? t.y : f) : r && !l && (m = "x" === t.axis ? s.height : m,
                            c = "y" === t.axis ? s.width : c),
                            r = !0,
                            {
                                width: c,
                                height: m,
                                x: h,
                                y: f,
                                top: f,
                                right: h + c,
                                bottom: f + m,
                                left: h
                            }
                        }
                    }
                }(r.domReference, {
                    x: e,
                    y: t,
                    axis: d,
                    dataRef: i,
                    pointerType: f
                }))
            }
            ))
              , b = pt((e=>{
                null == l && null == c && (n ? h.current || v([]) : w(e.clientX, e.clientY))
            }
            ))
              , y = N(f) ? s : n
              , k = a.useCallback((()=>{
                if (!y || !u || null != l || null != c)
                    return;
                const e = o(r.floating.current);
                function t(n) {
                    const a = O(n);
                    W(r.floating.current, a) ? (e.removeEventListener("mousemove", t),
                    h.current = null) : w(n.clientX, n.clientY)
                }
                if (!i.current.openEvent || $n(i.current.openEvent)) {
                    e.addEventListener("mousemove", t);
                    const n = ()=>{
                        e.removeEventListener("mousemove", t),
                        h.current = null
                    }
                    ;
                    return h.current = n,
                    n
                }
                r.setPositionReference(r.domReference.current)
            }
            ), [i, u, y, r, w, l, c]);
            return a.useEffect((()=>k()), [k, g]),
            a.useEffect((()=>{
                u && !s && (m.current = !1)
            }
            ), [u, s]),
            a.useEffect((()=>{
                !u && n && (m.current = !0)
            }
            ), [u, n]),
            Et((()=>{
                !u || null == l && null == c || (m.current = !1,
                w(l, c))
            }
            ), [u, l, c, w]),
            a.useMemo((()=>{
                if (!u)
                    return {};
                function e(e) {
                    let {pointerType: t} = e;
                    p(t)
                }
                return {
                    reference: {
                        onPointerDown: e,
                        onPointerEnter: e,
                        onMouseMove: b,
                        onMouseEnter: b
                    }
                }
            }
            ), [u, b])
        }
        const Jn = {
            pointerdown: "onPointerDown",
            mousedown: "onMouseDown",
            click: "onClick"
        }
          , Qn = {
            pointerdown: "onPointerDownCapture",
            mousedown: "onMouseDownCapture",
            click: "onClickCapture"
        }
          , Un = e=>{
            var t, n;
            return {
                escapeKey: "boolean" === typeof e ? e : null != (t = null == e ? void 0 : e.escapeKey) && t,
                outsidePress: "boolean" === typeof e ? e : null == (n = null == e ? void 0 : e.outsidePress) || n
            }
        }
        ;
        function Zn(e, t) {
            void 0 === t && (t = {});
            const {open: n, onOpenChange: r, nodeId: i, elements: {reference: o, domReference: s, floating: u}, dataRef: c} = e
              , {enabled: m=!0, escapeKey: h=!0, outsidePress: f=!0, outsidePressEvent: p="pointerdown", referencePress: g=!1, referencePressEvent: b="pointerdown", ancestorScroll: k=!1, bubbles: P, capture: x} = t
              , S = Zt()
              , D = pt("function" === typeof f ? f : ()=>!1)
              , j = "function" === typeof f ? D : f
              , C = a.useRef(!1)
              , T = a.useRef(!1)
              , {escapeKey: E, outsidePress: N} = Un(P)
              , {escapeKey: H, outsidePress: A} = Un(x)
              , Y = pt((e=>{
                if (!n || !m || !h || "Escape" !== e.key)
                    return;
                const t = S ? hn(S.nodesRef.current, i) : [];
                if (!E && (e.stopPropagation(),
                t.length > 0)) {
                    let e = !0;
                    if (t.forEach((t=>{
                        var n;
                        null == (n = t.context) || !n.open || t.context.dataRef.current.__escapeKeyBubbles || (e = !1)
                    }
                    )),
                    !e)
                        return
                }
                r(!1, function(e) {
                    return "nativeEvent"in e
                }(e) ? e.nativeEvent : e, "escape-key")
            }
            ))
              , _ = pt((e=>{
                var t;
                const n = ()=>{
                    var t;
                    Y(e),
                    null == (t = O(e)) || t.removeEventListener("keydown", n)
                }
                ;
                null == (t = O(e)) || t.addEventListener("keydown", n)
            }
            ))
              , X = pt((e=>{
                const t = C.current;
                C.current = !1;
                const n = T.current;
                if (T.current = !1,
                "click" === p && n)
                    return;
                if (t)
                    return;
                if ("function" === typeof j && !j(e))
                    return;
                const a = O(e)
                  , o = "[" + an("inert") + "]"
                  , c = z(u).querySelectorAll(o);
                let m = d(a) ? a : null;
                for (; m && !v(m); ) {
                    const e = y(m);
                    if (v(e) || !d(e))
                        break;
                    m = e
                }
                if (c.length && d(a) && !a.matches("html,body") && !W(a, u) && Array.from(c).every((e=>!W(m, e))))
                    return;
                if (l(a) && u) {
                    const t = a.clientWidth > 0 && a.scrollWidth > a.clientWidth
                      , n = a.clientHeight > 0 && a.scrollHeight > a.clientHeight;
                    let r = n && e.offsetX > a.clientWidth;
                    if (n) {
                        "rtl" === w(a).direction && (r = e.offsetX <= a.offsetWidth - a.clientWidth)
                    }
                    if (r || t && e.offsetY > a.clientHeight)
                        return
                }
                const h = S && hn(S.nodesRef.current, i).some((t=>{
                    var n;
                    return I(e, null == (n = t.context) ? void 0 : n.elements.floating)
                }
                ));
                if (I(e, u) || I(e, s) || h)
                    return;
                const f = S ? hn(S.nodesRef.current, i) : [];
                if (f.length > 0) {
                    let e = !0;
                    if (f.forEach((t=>{
                        var n;
                        null == (n = t.context) || !n.open || t.context.dataRef.current.__outsidePressBubbles || (e = !1)
                    }
                    )),
                    !e)
                        return
                }
                r(!1, e, "outside-press")
            }
            ))
              , R = pt((e=>{
                var t;
                const n = ()=>{
                    var t;
                    X(e),
                    null == (t = O(e)) || t.removeEventListener(p, n)
                }
                ;
                null == (t = O(e)) || t.addEventListener(p, n)
            }
            ));
            return a.useEffect((()=>{
                if (!n || !m)
                    return;
                function e(e) {
                    r(!1, e, "ancestor-scroll")
                }
                c.current.__escapeKeyBubbles = E,
                c.current.__outsidePressBubbles = N;
                const t = z(u);
                h && t.addEventListener("keydown", H ? _ : Y, H),
                j && t.addEventListener(p, A ? R : X, A);
                let a = [];
                return k && (d(s) && (a = M(s)),
                d(u) && (a = a.concat(M(u))),
                !d(o) && o && o.contextElement && (a = a.concat(M(o.contextElement)))),
                a = a.filter((e=>{
                    var n;
                    return e !== (null == (n = t.defaultView) ? void 0 : n.visualViewport)
                }
                )),
                a.forEach((t=>{
                    t.addEventListener("scroll", e, {
                        passive: !0
                    })
                }
                )),
                ()=>{
                    h && t.removeEventListener("keydown", H ? _ : Y, H),
                    j && t.removeEventListener(p, A ? R : X, A),
                    a.forEach((t=>{
                        t.removeEventListener("scroll", e)
                    }
                    ))
                }
            }
            ), [c, u, s, o, h, j, p, n, r, k, m, E, N, Y, H, _, X, A, R]),
            a.useEffect((()=>{
                C.current = !1
            }
            ), [j, p]),
            a.useMemo((()=>m ? {
                reference: {
                    onKeyDown: Y,
                    [Jn[b]]: e=>{
                        g && r(!1, e.nativeEvent, "reference-press")
                    }
                },
                floating: {
                    onKeyDown: Y,
                    onMouseDown() {
                        T.current = !0
                    },
                    onMouseUp() {
                        T.current = !0
                    },
                    [Qn[p]]: ()=>{
                        C.current = !0
                    }
                }
            } : {}), [m, g, p, b, r, Y])
        }
        function ea(e) {
            var t;
            void 0 === e && (e = {});
            const {open: n=!1, onOpenChange: r, nodeId: i} = e;
            const [o,s] = a.useState(null)
              , u = (null == (t = e.elements) ? void 0 : t.reference) || o
              , l = function(e) {
                void 0 === e && (e = {});
                const {placement: t="bottom", strategy: n="absolute", middleware: r=[], platform: i, elements: {reference: o, floating: s}={}, transform: u=!0, whileElementsMounted: d, open: l} = e
                  , [c,m] = a.useState({
                    x: 0,
                    y: 0,
                    strategy: n,
                    placement: t,
                    middlewareData: {},
                    isPositioned: !1
                })
                  , [h,f] = a.useState(r);
                Fe(h, r) || f(r);
                const [p,g] = a.useState(null)
                  , [v,w] = a.useState(null)
                  , b = a.useCallback((e=>{
                    e !== P.current && (P.current = e,
                    g(e))
                }
                ), [])
                  , y = a.useCallback((e=>{
                    e !== W.current && (W.current = e,
                    w(e))
                }
                ), [])
                  , k = o || p
                  , M = s || v
                  , P = a.useRef(null)
                  , W = a.useRef(null)
                  , x = a.useRef(c)
                  , S = null != d
                  , D = Ke(d)
                  , j = Ke(i)
                  , C = a.useCallback((()=>{
                    if (!P.current || !W.current)
                        return;
                    const e = {
                        placement: t,
                        strategy: n,
                        middleware: h
                    };
                    j.current && (e.platform = j.current),
                    _e(P.current, W.current, e).then((e=>{
                        const t = {
                            ...e,
                            isPositioned: !0
                        };
                        T.current && !Fe(x.current, t) && (x.current = t,
                        Xe.flushSync((()=>{
                            m(t)
                        }
                        )))
                    }
                    ))
                }
                ), [h, t, n, j]);
                Le((()=>{
                    !1 === l && x.current.isPositioned && (x.current.isPositioned = !1,
                    m((e=>({
                        ...e,
                        isPositioned: !1
                    }))))
                }
                ), [l]);
                const T = a.useRef(!1);
                Le((()=>(T.current = !0,
                ()=>{
                    T.current = !1
                }
                )), []),
                Le((()=>{
                    if (k && (P.current = k),
                    M && (W.current = M),
                    k && M) {
                        if (D.current)
                            return D.current(k, M, C);
                        C()
                    }
                }
                ), [k, M, C, D, S]);
                const E = a.useMemo((()=>({
                    reference: P,
                    floating: W,
                    setReference: b,
                    setFloating: y
                })), [b, y])
                  , N = a.useMemo((()=>({
                    reference: k,
                    floating: M
                })), [k, M])
                  , z = a.useMemo((()=>{
                    const e = {
                        position: n,
                        left: 0,
                        top: 0
                    };
                    if (!N.floating)
                        return e;
                    const t = Ge(N.floating, c.x)
                      , a = Ge(N.floating, c.y);
                    return u ? {
                        ...e,
                        transform: "translate(" + t + "px, " + a + "px)",
                        ...qe(N.floating) >= 1.5 && {
                            willChange: "transform"
                        }
                    } : {
                        position: n,
                        left: t,
                        top: a
                    }
                }
                ), [n, u, N.floating, c.x, c.y]);
                return a.useMemo((()=>({
                    ...c,
                    update: C,
                    refs: E,
                    elements: N,
                    floatingStyles: z
                })), [c, C, E, N, z])
            }(e)
              , c = Zt()
              , m = null != Ut()
              , h = pt(((e,t,n)=>{
                e && (p.current.openEvent = t),
                g.emit("openchange", {
                    open: e,
                    event: t,
                    reason: n,
                    nested: m
                }),
                null == r || r(e, t, n)
            }
            ))
              , f = a.useRef(null)
              , p = a.useRef({})
              , g = a.useState((()=>Bt()))[0]
              , v = Vt()
              , w = a.useCallback((e=>{
                const t = d(e) ? {
                    getBoundingClientRect: ()=>e.getBoundingClientRect(),
                    contextElement: e
                } : e;
                l.refs.setReference(t)
            }
            ), [l.refs])
              , b = a.useCallback((e=>{
                (d(e) || null === e) && (f.current = e,
                s(e)),
                (d(l.refs.reference.current) || null === l.refs.reference.current || null !== e && !d(e)) && l.refs.setReference(e)
            }
            ), [l.refs])
              , y = a.useMemo((()=>({
                ...l.refs,
                setReference: b,
                setPositionReference: w,
                domReference: f
            })), [l.refs, b, w])
              , k = a.useMemo((()=>({
                ...l.elements,
                domReference: u
            })), [l.elements, u])
              , M = a.useMemo((()=>({
                ...l,
                refs: y,
                elements: k,
                dataRef: p,
                nodeId: i,
                floatingId: v,
                events: g,
                open: n,
                onOpenChange: h
            })), [l, i, v, g, n, h, y, k]);
            return Et((()=>{
                const e = null == c ? void 0 : c.nodesRef.current.find((e=>e.id === i));
                e && (e.context = M)
            }
            )),
            a.useMemo((()=>({
                ...l,
                context: M,
                refs: y,
                elements: k
            })), [l, y, k, M])
        }
        function ta(e, t) {
            void 0 === t && (t = {});
            const {open: n, onOpenChange: r, events: i, refs: s, elements: {domReference: u}} = e
              , {enabled: c=!0, visibleOnly: m=!0} = t
              , h = a.useRef(!1)
              , f = a.useRef()
              , p = a.useRef(!0);
            return a.useEffect((()=>{
                if (!c)
                    return;
                const e = o(u);
                function t() {
                    !n && l(u) && u === P(z(u)) && (h.current = !0)
                }
                function a() {
                    p.current = !0
                }
                return e.addEventListener("blur", t),
                e.addEventListener("keydown", a, !0),
                ()=>{
                    e.removeEventListener("blur", t),
                    e.removeEventListener("keydown", a, !0)
                }
            }
            ), [u, n, c]),
            a.useEffect((()=>{
                if (c)
                    return i.on("openchange", e),
                    ()=>{
                        i.off("openchange", e)
                    }
                    ;
                function e(e) {
                    let {reason: t} = e;
                    "reference-press" !== t && "escape-key" !== t || (h.current = !0)
                }
            }
            ), [i, c]),
            a.useEffect((()=>()=>{
                clearTimeout(f.current)
            }
            ), []),
            a.useMemo((()=>c ? {
                reference: {
                    onPointerDown(e) {
                        j(e.nativeEvent) || (p.current = !1)
                    },
                    onMouseLeave() {
                        h.current = !1
                    },
                    onFocus(e) {
                        if (h.current)
                            return;
                        const t = O(e.nativeEvent);
                        if (m && d(t))
                            try {
                                if (C() && E())
                                    throw Error();
                                if (!t.matches(":focus-visible"))
                                    return
                            } catch (n) {
                                if (!p.current && !A(t))
                                    return
                            }
                        r(!0, e.nativeEvent, "focus")
                    },
                    onBlur(e) {
                        h.current = !1;
                        const t = e.relatedTarget
                          , n = d(t) && t.hasAttribute(an("focus-guard")) && "outside" === t.getAttribute("data-type");
                        f.current = window.setTimeout((()=>{
                            const a = P(u ? u.ownerDocument : document);
                            (t || a !== u) && (W(s.floating.current, t) || W(u, t) || n || r(!1, e.nativeEvent, "focus"))
                        }
                        ))
                    }
                }
            } : {}), [c, m, u, s, r])
        }
        const na = "active"
          , aa = "selected";
        function ra(e, t, n) {
            const a = new Map
              , r = "item" === n;
            let i = e;
            if (r && e) {
                const {[na]: t, [aa]: n, ...a} = e;
                i = a
            }
            return {
                ..."floating" === n && {
                    tabIndex: -1
                },
                ...i,
                ...t.map((t=>{
                    const a = t ? t[n] : null;
                    return "function" === typeof a ? e ? a(e) : null : a
                }
                )).concat(e).reduce(((e,t)=>t ? (Object.entries(t).forEach((t=>{
                    let[n,i] = t;
                    var o;
                    r && [na, aa].includes(n) || (0 === n.indexOf("on") ? (a.has(n) || a.set(n, []),
                    "function" === typeof i && (null == (o = a.get(n)) || o.push(i),
                    e[n] = function() {
                        for (var e, t = arguments.length, r = new Array(t), i = 0; i < t; i++)
                            r[i] = arguments[i];
                        return null == (e = a.get(n)) ? void 0 : e.map((e=>e(...r))).find((e=>void 0 !== e))
                    }
                    )) : e[n] = i)
                }
                )),
                e) : e), {})
            }
        }
        function ia(e) {
            void 0 === e && (e = []);
            const t = e
              , n = a.useCallback((t=>ra(t, e, "reference")), t)
              , r = a.useCallback((t=>ra(t, e, "floating")), t)
              , i = a.useCallback((t=>ra(t, e, "item")), e.map((e=>null == e ? void 0 : e.item)));
            return a.useMemo((()=>({
                getReferenceProps: n,
                getFloatingProps: r,
                getItemProps: i
            })), [n, r, i])
        }
        let oa = !1;
        function sa(e, t, n) {
            switch (e) {
            case "vertical":
                return t;
            case "horizontal":
                return n;
            default:
                return t || n
            }
        }
        function ua(e, t) {
            return sa(t, e === gt || e === vt, e === wt || e === bt)
        }
        function da(e, t, n) {
            return sa(t, e === vt, n ? e === wt : e === bt) || "Enter" === e || " " === e || "" === e
        }
        function la(e, t, n) {
            return sa(t, n ? e === bt : e === wt, e === gt)
        }
        function ca(e, t) {
            const {open: n, onOpenChange: r, refs: i, elements: {domReference: o, floating: s}} = e
              , {listRef: u, activeIndex: d, onNavigate: c=(()=>{}
            ), enabled: m=!0, selectedIndex: h=null, allowEscape: f=!1, loop: p=!1, nested: g=!1, rtl: v=!1, virtual: w=!1, focusItemOnOpen: b="auto", focusItemOnHover: y=!0, openOnArrowKeyDown: k=!0, disabledIndices: M, orientation: x="vertical", cols: S=1, scrollItemIntoView: T=!0, virtualItemRef: N, itemSizes: I, dense: O=!1} = t;
            const H = Ut()
              , A = Zt()
              , X = pt(c)
              , R = a.useRef(b)
              , L = a.useRef(null != h ? h : -1)
              , F = a.useRef(null)
              , q = a.useRef(!0)
              , G = a.useRef(X)
              , K = a.useRef(!!s)
              , V = a.useRef(!1)
              , $ = a.useRef(!1)
              , B = rn(M)
              , J = rn(n)
              , Q = rn(T)
              , [U,Z] = a.useState()
              , [ee,te] = a.useState()
              , ne = pt((function(e, t, n) {
                void 0 === n && (n = !1);
                const a = e.current[t.current];
                a && (w ? (Z(a.id),
                null == A || A.events.emit("virtualfocus", a),
                N && (N.current = a)) : Tt(a, {
                    preventScroll: !0,
                    sync: !(!E() || !C()) && (oa || V.current)
                }),
                requestAnimationFrame((()=>{
                    const e = Q.current;
                    e && a && (n || !q.current) && (null == a.scrollIntoView || a.scrollIntoView("boolean" === typeof e ? {
                        block: "nearest",
                        inline: "nearest"
                    } : e))
                }
                )))
            }
            ));
            Et((()=>{
                document.createElement("div").focus({
                    get preventScroll() {
                        return oa = !0,
                        !1
                    }
                })
            }
            ), []),
            Et((()=>{
                m && (n && s ? R.current && null != h && ($.current = !0,
                L.current = h,
                X(h)) : K.current && (L.current = -1,
                G.current(null)))
            }
            ), [m, n, s, h, X]),
            Et((()=>{
                if (m && n && s)
                    if (null == d) {
                        if (V.current = !1,
                        null != h)
                            return;
                        if (K.current && (L.current = -1,
                        ne(u, L)),
                        !K.current && R.current && (null != F.current || !0 === R.current && null == F.current)) {
                            let e = 0;
                            const t = ()=>{
                                if (null == u.current[0]) {
                                    if (e < 2) {
                                        (e ? requestAnimationFrame : queueMicrotask)(t)
                                    }
                                    e++
                                } else
                                    L.current = null == F.current || da(F.current, x, v) || g ? Mt(u, B.current) : Pt(u, B.current),
                                    F.current = null,
                                    X(L.current)
                            }
                            ;
                            t()
                        }
                    } else
                        kt(u, d) || (L.current = d,
                        ne(u, L, $.current),
                        $.current = !1)
            }
            ), [m, n, s, d, h, g, u, x, v, X, ne, B]),
            Et((()=>{
                var e;
                if (!m || s || !A || w || !K.current)
                    return;
                const t = A.nodesRef.current
                  , n = null == (e = t.find((e=>e.id === H))) || null == (e = e.context) ? void 0 : e.elements.floating
                  , a = P(z(s))
                  , r = t.some((e=>e.context && W(e.context.elements.floating, a)));
                n && !r && q.current && n.focus({
                    preventScroll: !0
                })
            }
            ), [m, s, A, H, w]),
            Et((()=>{
                if (m && A && w && !H)
                    return A.events.on("virtualfocus", e),
                    ()=>{
                        A.events.off("virtualfocus", e)
                    }
                    ;
                function e(e) {
                    te(e.id),
                    N && (N.current = e)
                }
            }
            ), [m, A, w, H, N]),
            Et((()=>{
                G.current = X,
                K.current = !!s
            }
            )),
            Et((()=>{
                n || (F.current = null)
            }
            ), [n]);
            const ae = null != d
              , re = a.useMemo((()=>{
                function e(e) {
                    if (!n)
                        return;
                    const t = u.current.indexOf(e);
                    -1 !== t && X(t)
                }
                return {
                    onFocus(t) {
                        let {currentTarget: n} = t;
                        e(n)
                    },
                    onClick: e=>{
                        let {currentTarget: t} = e;
                        return t.focus({
                            preventScroll: !0
                        })
                    }
                    ,
                    ...y && {
                        onMouseMove(t) {
                            let {currentTarget: n} = t;
                            e(n)
                        },
                        onPointerLeave(e) {
                            let {pointerType: t} = e;
                            q.current && "touch" !== t && (L.current = -1,
                            ne(u, L),
                            X(null),
                            w || Tt(i.floating.current, {
                                preventScroll: !0
                            }))
                        }
                    }
                }
            }
            ), [n, i, ne, y, u, X, w]);
            return a.useMemo((()=>{
                if (!m)
                    return {};
                const e = B.current;
                function t(t) {
                    if (q.current = !1,
                    V.current = !0,
                    !J.current && t.currentTarget === i.floating.current)
                        return;
                    if (g && la(t.key, x, v))
                        return Y(t),
                        r(!1, t.nativeEvent, "list-navigation"),
                        void (l(o) && !w && o.focus());
                    const a = L.current
                      , s = Mt(u, e)
                      , d = Pt(u, e);
                    if ("Home" === t.key && (Y(t),
                    L.current = s,
                    X(L.current)),
                    "End" === t.key && (Y(t),
                    L.current = d,
                    X(L.current)),
                    S > 1) {
                        const n = I || Array.from({
                            length: u.current.length
                        }, (()=>({
                            width: 1,
                            height: 1
                        })))
                          , a = St(n, S, O)
                          , r = a.findIndex((t=>null != t && !(null != e && e.includes(t))))
                          , i = a.reduce(((t,n,a)=>null == n || null != e && e.includes(n) ? t : a), -1);
                        if (L.current = a[xt({
                            current: a.map((e=>null != e ? u.current[e] : null))
                        }, {
                            event: t,
                            orientation: x,
                            loop: p,
                            cols: S,
                            disabledIndices: jt([...e || [], void 0], a),
                            minIndex: r,
                            maxIndex: i,
                            prevIndex: Dt(L.current, n, a, S, t.key === vt ? "bl" : t.key === bt ? "tr" : "tl"),
                            stopEvent: !0
                        })],
                        X(L.current),
                        "both" === x)
                            return
                    }
                    if (ua(t.key, x)) {
                        if (Y(t),
                        n && !w && P(t.currentTarget.ownerDocument) === t.currentTarget)
                            return L.current = da(t.key, x, v) ? s : d,
                            void X(L.current);
                        da(t.key, x, v) ? L.current = p ? a >= d ? f && a !== u.current.length ? -1 : s : Wt(u, {
                            startingIndex: a,
                            disabledIndices: e
                        }) : Math.min(d, Wt(u, {
                            startingIndex: a,
                            disabledIndices: e
                        })) : L.current = p ? a <= s ? f && -1 !== a ? u.current.length : d : Wt(u, {
                            startingIndex: a,
                            decrement: !0,
                            disabledIndices: e
                        }) : Math.max(s, Wt(u, {
                            startingIndex: a,
                            decrement: !0,
                            disabledIndices: e
                        })),
                        kt(u, L.current) ? X(null) : X(L.current)
                    }
                }
                function a(e) {
                    "auto" === b && D(e.nativeEvent) && (R.current = !0)
                }
                const s = w && n && ae && {
                    "aria-activedescendant": ee || U
                }
                  , d = u.current.find((e=>(null == e ? void 0 : e.id) === U));
                return {
                    reference: {
                        ...s,
                        onKeyDown(a) {
                            q.current = !1;
                            const i = 0 === a.key.indexOf("Arrow")
                              , o = function(e, t, n) {
                                return sa(t, n ? e === wt : e === bt, e === vt)
                            }(a.key, x, v)
                              , s = la(a.key, x, v)
                              , l = ua(a.key, x)
                              , c = (g ? o : l) || "Enter" === a.key || "" === a.key.trim();
                            if (w && n) {
                                const e = null == A ? void 0 : A.nodesRef.current.find((e=>null == e.parentId))
                                  , n = A && e ? function(e, t) {
                                    let n, a = -1;
                                    return function t(r, i) {
                                        i > a && (n = r,
                                        a = i),
                                        hn(e, r).forEach((e=>{
                                            t(e.id, i + 1)
                                        }
                                        ))
                                    }(t, 0),
                                    e.find((e=>e.id === n))
                                }(A.nodesRef.current, e.id) : null;
                                if (i && n && N) {
                                    const e = new KeyboardEvent("keydown",{
                                        key: a.key,
                                        bubbles: !0
                                    });
                                    if (o || s) {
                                        var m, f;
                                        const t = (null == (m = n.context) ? void 0 : m.elements.domReference) === a.currentTarget
                                          , r = s && !t ? null == (f = n.context) ? void 0 : f.elements.domReference : o ? d : null;
                                        r && (Y(a),
                                        r.dispatchEvent(e),
                                        te(void 0))
                                    }
                                    var p;
                                    if (l && n.context)
                                        if (n.context.open && n.parentId && a.currentTarget !== n.context.elements.domReference)
                                            return Y(a),
                                            void (null == (p = n.context.elements.domReference) || p.dispatchEvent(e))
                                }
                                return t(a)
                            }
                            (n || k || !i) && (c && (F.current = g && l ? null : a.key),
                            g ? o && (Y(a),
                            n ? (L.current = Mt(u, e),
                            X(L.current)) : r(!0, a.nativeEvent, "list-navigation")) : l && (null != h && (L.current = h),
                            Y(a),
                            !n && k ? r(!0, a.nativeEvent, "list-navigation") : t(a),
                            n && X(L.current)))
                        },
                        onFocus() {
                            n && X(null)
                        },
                        onPointerDown: function(e) {
                            R.current = b,
                            "auto" === b && j(e.nativeEvent) && (R.current = !0)
                        },
                        onMouseDown: a,
                        onClick: a
                    },
                    floating: {
                        "aria-orientation": "both" === x ? void 0 : x,
                        ...!_(o) && s,
                        onKeyDown: t,
                        onPointerMove() {
                            q.current = !0
                        }
                    },
                    item: re
                }
            }
            ), [o, i, U, ee, B, J, u, m, x, v, w, n, ae, g, h, k, f, S, p, b, X, r, re, A, N, I, O])
        }
        const ma = new Map([["select", "listbox"], ["combobox", "listbox"], ["label", !1]]);
        function ha(e, t) {
            var n;
            void 0 === t && (t = {});
            const {open: r, floatingId: i} = e
              , {enabled: o=!0, role: s="dialog"} = t
              , u = null != (n = ma.get(s)) ? n : s
              , d = Vt()
              , l = null != Ut();
            return a.useMemo((()=>{
                if (!o)
                    return {};
                const e = {
                    id: i,
                    ...u && {
                        role: u
                    }
                };
                return "tooltip" === u || "label" === s ? {
                    reference: {
                        ["aria-" + ("label" === s ? "labelledby" : "describedby")]: r ? i : void 0
                    },
                    floating: e
                } : {
                    reference: {
                        "aria-expanded": r ? "true" : "false",
                        "aria-haspopup": "alertdialog" === u ? "dialog" : u,
                        "aria-controls": r ? i : void 0,
                        ..."listbox" === u && {
                            role: "combobox"
                        },
                        ..."menu" === u && {
                            id: d
                        },
                        ..."menu" === u && l && {
                            role: "menuitem"
                        },
                        ..."select" === s && {
                            "aria-autocomplete": "none"
                        },
                        ..."combobox" === s && {
                            "aria-autocomplete": "list"
                        }
                    },
                    floating: {
                        ...e,
                        ..."menu" === u && {
                            "aria-labelledby": d
                        }
                    },
                    item(e) {
                        let {active: t, selected: n} = e;
                        const a = {
                            role: "option",
                            ...t && {
                                id: i + "-option"
                            }
                        };
                        switch (s) {
                        case "select":
                            return {
                                ...a,
                                "aria-selected": t && n
                            };
                        case "combobox":
                            return {
                                ...a,
                                ...t && {
                                    "aria-selected": !0
                                }
                            }
                        }
                        return {}
                    }
                }
            }
            ), [o, s, u, r, i, d, l])
        }
        const fa = e=>e.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ((e,t)=>(t ? "-" : "") + e.toLowerCase()));
        function pa(e, t) {
            return "function" === typeof e ? e(t) : e
        }
        function ga(e, t) {
            void 0 === t && (t = {});
            const {open: n, elements: {floating: r}} = e
              , {duration: i=250} = t
              , o = ("number" === typeof i ? i : i.close) || 0
              , [s,u] = a.useState(!1)
              , [d,l] = a.useState("unmounted")
              , c = function(e, t) {
                const [n,r] = a.useState(e);
                return e && !n && r(!0),
                a.useEffect((()=>{
                    if (!e) {
                        const e = setTimeout((()=>r(!1)), t);
                        return ()=>clearTimeout(e)
                    }
                }
                ), [e, t]),
                n
            }(n, o);
            return Et((()=>{
                s && !c && l("unmounted")
            }
            ), [s, c]),
            Et((()=>{
                if (r) {
                    if (n) {
                        l("initial");
                        const e = requestAnimationFrame((()=>{
                            l("open")
                        }
                        ));
                        return ()=>{
                            cancelAnimationFrame(e)
                        }
                    }
                    u(!0),
                    l("close")
                }
            }
            ), [n, r]),
            {
                isMounted: c,
                status: d
            }
        }
        function va(e, t) {
            void 0 === t && (t = {});
            const {initial: n={
                opacity: 0
            }, open: r, close: i, common: o, duration: s=250} = t
              , u = e.placement
              , d = u.split("-")[0]
              , l = a.useMemo((()=>({
                side: d,
                placement: u
            })), [d, u])
              , c = "number" === typeof s
              , m = (c ? s : s.open) || 0
              , h = (c ? s : s.close) || 0
              , [f,p] = a.useState((()=>({
                ...pa(o, l),
                ...pa(n, l)
            })))
              , {isMounted: g, status: v} = ga(e, {
                duration: s
            })
              , w = rn(n)
              , b = rn(r)
              , y = rn(i)
              , k = rn(o);
            return Et((()=>{
                const e = pa(w.current, l)
                  , t = pa(y.current, l)
                  , n = pa(k.current, l)
                  , a = pa(b.current, l) || Object.keys(e).reduce(((e,t)=>(e[t] = "",
                e)), {});
                if ("initial" === v && p((t=>({
                    transitionProperty: t.transitionProperty,
                    ...n,
                    ...e
                }))),
                "open" === v && p({
                    transitionProperty: Object.keys(a).map(fa).join(","),
                    transitionDuration: m + "ms",
                    ...n,
                    ...a
                }),
                "close" === v) {
                    const a = t || e;
                    p({
                        transitionProperty: Object.keys(a).map(fa).join(","),
                        transitionDuration: h + "ms",
                        ...n,
                        ...a
                    })
                }
            }
            ), [h, y, w, b, k, m, v, l]),
            {
                isMounted: g,
                styles: f
            }
        }
        function wa(e, t) {
            var n;
            const {open: r, dataRef: i} = e
              , {listRef: o, activeIndex: s, onMatch: u, onTypingChange: d, enabled: l=!0, findMatch: c=null, resetMs: m=750, ignoreKeys: h=[], selectedIndex: f=null} = t
              , p = a.useRef()
              , g = a.useRef("")
              , v = a.useRef(null != (n = null != f ? f : s) ? n : -1)
              , w = a.useRef(null)
              , b = pt(u)
              , y = pt(d)
              , k = rn(c)
              , M = rn(h);
            return Et((()=>{
                r && (clearTimeout(p.current),
                w.current = null,
                g.current = "")
            }
            ), [r]),
            Et((()=>{
                var e;
                r && "" === g.current && (v.current = null != (e = null != f ? f : s) ? e : -1)
            }
            ), [r, f, s]),
            a.useMemo((()=>{
                if (!l)
                    return {};
                function e(e) {
                    e ? i.current.typing || (i.current.typing = e,
                    y(e)) : i.current.typing && (i.current.typing = e,
                    y(e))
                }
                function t(e, t, n) {
                    const a = k.current ? k.current(t, n) : t.find((e=>0 === (null == e ? void 0 : e.toLocaleLowerCase().indexOf(n.toLocaleLowerCase()))));
                    return a ? e.indexOf(a) : -1
                }
                function n(n) {
                    const a = o.current;
                    if (g.current.length > 0 && " " !== g.current[0] && (-1 === t(a, a, g.current) ? e(!1) : " " === n.key && Y(n)),
                    null == a || M.current.includes(n.key) || 1 !== n.key.length || n.ctrlKey || n.metaKey || n.altKey)
                        return;
                    r && " " !== n.key && (Y(n),
                    e(!0));
                    a.every((e=>{
                        var t, n;
                        return !e || (null == (t = e[0]) ? void 0 : t.toLocaleLowerCase()) !== (null == (n = e[1]) ? void 0 : n.toLocaleLowerCase())
                    }
                    )) && g.current === n.key && (g.current = "",
                    v.current = w.current),
                    g.current += n.key,
                    clearTimeout(p.current),
                    p.current = setTimeout((()=>{
                        g.current = "",
                        v.current = w.current,
                        e(!1)
                    }
                    ), m);
                    const i = v.current
                      , s = t(a, [...a.slice((i || 0) + 1), ...a.slice(0, (i || 0) + 1)], g.current);
                    -1 !== s ? (b(s),
                    w.current = s) : " " !== n.key && (g.current = "",
                    e(!1))
                }
                return {
                    reference: {
                        onKeyDown: n
                    },
                    floating: {
                        onKeyDown: n,
                        onKeyUp(t) {
                            " " === t.key && e(!1)
                        }
                    }
                }
            }
            ), [l, r, i, o, m, M, k, b, y])
        }
        function ba(e, t) {
            return {
                ...e,
                rects: {
                    ...e.rects,
                    floating: {
                        ...e.rects.floating,
                        height: t
                    }
                }
            }
        }
        const ya = e=>({
            name: "inner",
            options: e,
            async fn(t) {
                const {listRef: n, overflowRef: a, onFallbackChange: r, offset: i=0, index: o=0, minItemsVisible: s=4, referenceOverflowThreshold: u=0, scrollRef: d, ...l} = e
                  , {rects: c, elements: {floating: m}} = t
                  , h = n.current[o];
                if (!h)
                    return {};
                const f = {
                    ...t,
                    ...await fe(-h.offsetTop - m.clientTop - c.reference.height / 2 - h.offsetHeight / 2 - i).fn(t)
                }
                  , p = (null == d ? void 0 : d.current) || m
                  , g = await le(ba(f, p.scrollHeight), l)
                  , v = await le(f, {
                    ...l,
                    elementContext: "reference"
                })
                  , w = Math.max(0, g.top)
                  , b = f.y + w
                  , y = Math.max(0, p.scrollHeight - w - Math.max(0, g.bottom));
                return p.style.maxHeight = y + "px",
                p.scrollTop = w,
                r && (p.offsetHeight < h.offsetHeight * Math.min(s, n.current.length - 1) - 1 || v.top >= -u || v.bottom >= -u ? (0,
                Xe.flushSync)((()=>r(!0))) : (0,
                Xe.flushSync)((()=>r(!1)))),
                a && (a.current = await le(ba({
                    ...f,
                    y: b
                }, p.offsetHeight), l)),
                {
                    y: b
                }
            }
        });
        function ka(e, t) {
            const {open: n, elements: r} = e
              , {enabled: i=!0, overflowRef: o, scrollRef: s, onChange: u} = t
              , d = pt(u)
              , l = a.useRef(!1)
              , c = a.useRef(null)
              , m = a.useRef(null);
            return a.useEffect((()=>{
                if (!i)
                    return;
                function e(e) {
                    if (e.ctrlKey || !t || null == o.current)
                        return;
                    const n = e.deltaY
                      , a = o.current.top >= -.5
                      , r = o.current.bottom >= -.5
                      , i = t.scrollHeight - t.clientHeight
                      , s = n < 0 ? -1 : 1
                      , u = n < 0 ? "max" : "min";
                    t.scrollHeight <= t.clientHeight || (!a && n > 0 || !r && n < 0 ? (e.preventDefault(),
                    (0,
                    Xe.flushSync)((()=>{
                        d((e=>e + Math[u](n, i * s)))
                    }
                    ))) : /firefox/i.test(S()) && (t.scrollTop += n))
                }
                const t = (null == s ? void 0 : s.current) || r.floating;
                return n && t ? (t.addEventListener("wheel", e),
                requestAnimationFrame((()=>{
                    c.current = t.scrollTop,
                    null != o.current && (m.current = {
                        ...o.current
                    })
                }
                )),
                ()=>{
                    c.current = null,
                    m.current = null,
                    t.removeEventListener("wheel", e)
                }
                ) : void 0
            }
            ), [i, n, r.floating, o, s, d]),
            a.useMemo((()=>i ? {
                floating: {
                    onKeyDown() {
                        l.current = !0
                    },
                    onWheel() {
                        l.current = !1
                    },
                    onPointerMove() {
                        l.current = !1
                    },
                    onScroll() {
                        const e = (null == s ? void 0 : s.current) || r.floating;
                        if (o.current && e && l.current) {
                            if (null !== c.current) {
                                const t = e.scrollTop - c.current;
                                (o.current.bottom < -.5 && t < -1 || o.current.top < -.5 && t > 1) && (0,
                                Xe.flushSync)((()=>d((e=>e + t))))
                            }
                            requestAnimationFrame((()=>{
                                c.current = e.scrollTop
                            }
                            ))
                        }
                    }
                }
            } : {}), [i, o, r.floating, s, d])
        }
        function Ma(e, t) {
            const [n,a] = e;
            let r = !1;
            const i = t.length;
            for (let o = 0, s = i - 1; o < i; s = o++) {
                const [e,i] = t[o] || [0, 0]
                  , [u,d] = t[s] || [0, 0];
                i >= a !== d >= a && n <= (u - e) * (a - i) / (d - i) + e && (r = !r)
            }
            return r
        }
        function Pa(e) {
            void 0 === e && (e = {});
            const {buffer: t=.5, blockPointerEvents: n=!1, requireIntent: a=!0} = e;
            let r, i = !1, o = null, s = null, u = performance.now();
            const l = e=>{
                let {x: n, y: l, placement: c, elements: m, onClose: h, nodeId: f, tree: p} = e;
                return function(e) {
                    function g() {
                        clearTimeout(r),
                        h()
                    }
                    if (clearTimeout(r),
                    !m.domReference || !m.floating || null == c || null == n || null == l)
                        return;
                    const {clientX: v, clientY: w} = e
                      , b = [v, w]
                      , y = O(e)
                      , k = "mouseleave" === e.type
                      , M = W(m.floating, y)
                      , P = W(m.domReference, y)
                      , x = m.domReference.getBoundingClientRect()
                      , S = m.floating.getBoundingClientRect()
                      , D = c.split("-")[0]
                      , j = n > S.right - S.width / 2
                      , C = l > S.bottom - S.height / 2
                      , T = function(e, t) {
                        return e[0] >= t.x && e[0] <= t.x + t.width && e[1] >= t.y && e[1] <= t.y + t.height
                    }(b, x)
                      , E = S.width > x.width
                      , N = S.height > x.height
                      , z = (E ? x : S).left
                      , I = (E ? x : S).right
                      , H = (N ? x : S).top
                      , A = (N ? x : S).bottom;
                    if (M && (i = !0,
                    !k))
                        return;
                    if (P && (i = !1),
                    P && !k)
                        return void (i = !0);
                    if (k && d(e.relatedTarget) && W(m.floating, e.relatedTarget))
                        return;
                    if (p && hn(p.nodesRef.current, f).some((e=>{
                        let {context: t} = e;
                        return null == t ? void 0 : t.open
                    }
                    )))
                        return;
                    if ("top" === D && l >= x.bottom - 1 || "bottom" === D && l <= x.top + 1 || "left" === D && n >= x.right - 1 || "right" === D && n <= x.left + 1)
                        return g();
                    let Y = [];
                    switch (D) {
                    case "top":
                        Y = [[z, x.top + 1], [z, S.bottom - 1], [I, S.bottom - 1], [I, x.top + 1]];
                        break;
                    case "bottom":
                        Y = [[z, S.top + 1], [z, x.bottom - 1], [I, x.bottom - 1], [I, S.top + 1]];
                        break;
                    case "left":
                        Y = [[S.right - 1, A], [S.right - 1, H], [x.left + 1, H], [x.left + 1, A]];
                        break;
                    case "right":
                        Y = [[x.right - 1, A], [x.right - 1, H], [S.left + 1, H], [S.left + 1, A]]
                    }
                    if (!Ma([v, w], Y)) {
                        if (i && !T)
                            return g();
                        if (!k && a) {
                            const t = function(e, t) {
                                const n = performance.now()
                                  , a = n - u;
                                if (null === o || null === s || 0 === a)
                                    return o = e,
                                    s = t,
                                    u = n,
                                    null;
                                const r = e - o
                                  , i = t - s
                                  , d = Math.sqrt(r * r + i * i);
                                return o = e,
                                s = t,
                                u = n,
                                d / a
                            }(e.clientX, e.clientY);
                            if (null !== t && t < .1)
                                return g()
                        }
                        Ma([v, w], function(e) {
                            let[n,a] = e;
                            switch (D) {
                            case "top":
                                return [[E ? n + t / 2 : j ? n + 4 * t : n - 4 * t, a + t + 1], [E ? n - t / 2 : j ? n + 4 * t : n - 4 * t, a + t + 1], ...[[S.left, j || E ? S.bottom - t : S.top], [S.right, j ? E ? S.bottom - t : S.top : S.bottom - t]]];
                            case "bottom":
                                return [[E ? n + t / 2 : j ? n + 4 * t : n - 4 * t, a - t], [E ? n - t / 2 : j ? n + 4 * t : n - 4 * t, a - t], ...[[S.left, j || E ? S.top + t : S.bottom], [S.right, j ? E ? S.top + t : S.bottom : S.top + t]]];
                            case "left":
                                {
                                    const e = [n + t + 1, N ? a + t / 2 : C ? a + 4 * t : a - 4 * t]
                                      , r = [n + t + 1, N ? a - t / 2 : C ? a + 4 * t : a - 4 * t];
                                    return [...[[C || N ? S.right - t : S.left, S.top], [C ? N ? S.right - t : S.left : S.right - t, S.bottom]], e, r]
                                }
                            case "right":
                                return [[n - t, N ? a + t / 2 : C ? a + 4 * t : a - 4 * t], [n - t, N ? a - t / 2 : C ? a + 4 * t : a - 4 * t], ...[[C || N ? S.left + t : S.right, S.top], [C ? N ? S.left + t : S.right : S.left + t, S.bottom]]]
                            }
                        }([n, l])) ? !i && a && (r = window.setTimeout(g, 40)) : g()
                    }
                }
            }
            ;
            return l.__options = {
                blockPointerEvents: n
            },
            l
        }
    },
    61594: function(e, t, n) {
        var a;
        !function(r) {
            "use strict";
            var i, o = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, s = Math.ceil, u = Math.floor, d = "[BigNumber Error] ", l = d + "Number primitive has more than 15 significant digits: ", c = 1e14, m = 14, h = 9007199254740991, f = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13], p = 1e7, g = 1e9;
            function v(e) {
                var t = 0 | e;
                return e > 0 || e === t ? t : t - 1
            }
            function w(e) {
                for (var t, n, a = 1, r = e.length, i = e[0] + ""; a < r; ) {
                    for (t = e[a++] + "",
                    n = m - t.length; n--; t = "0" + t)
                        ;
                    i += t
                }
                for (r = i.length; 48 === i.charCodeAt(--r); )
                    ;
                return i.slice(0, r + 1 || 1)
            }
            function b(e, t) {
                var n, a, r = e.c, i = t.c, o = e.s, s = t.s, u = e.e, d = t.e;
                if (!o || !s)
                    return null;
                if (n = r && !r[0],
                a = i && !i[0],
                n || a)
                    return n ? a ? 0 : -s : o;
                if (o != s)
                    return o;
                if (n = o < 0,
                a = u == d,
                !r || !i)
                    return a ? 0 : !r ^ n ? 1 : -1;
                if (!a)
                    return u > d ^ n ? 1 : -1;
                for (s = (u = r.length) < (d = i.length) ? u : d,
                o = 0; o < s; o++)
                    if (r[o] != i[o])
                        return r[o] > i[o] ^ n ? 1 : -1;
                return u == d ? 0 : u > d ^ n ? 1 : -1
            }
            function y(e, t, n, a) {
                if (e < t || e > n || e !== u(e))
                    throw Error(d + (a || "Argument") + ("number" == typeof e ? e < t || e > n ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(e))
            }
            function k(e) {
                var t = e.c.length - 1;
                return v(e.e / m) == t && e.c[t] % 2 != 0
            }
            function M(e, t) {
                return (e.length > 1 ? e.charAt(0) + "." + e.slice(1) : e) + (t < 0 ? "e" : "e+") + t
            }
            function P(e, t, n) {
                var a, r;
                if (t < 0) {
                    for (r = n + "."; ++t; r += n)
                        ;
                    e = r + e
                } else if (++t > (a = e.length)) {
                    for (r = n,
                    t -= a; --t; r += n)
                        ;
                    e += r
                } else
                    t < a && (e = e.slice(0, t) + "." + e.slice(t));
                return e
            }
            i = function e(t) {
                var n, a, r, i, W, x, S, D, j, C, T = q.prototype = {
                    constructor: q,
                    toString: null,
                    valueOf: null
                }, E = new q(1), N = 20, z = 4, I = -7, O = 21, H = -1e7, A = 1e7, Y = !1, _ = 1, X = 0, R = {
                    prefix: "",
                    groupSize: 3,
                    secondaryGroupSize: 0,
                    groupSeparator: ",",
                    decimalSeparator: ".",
                    fractionGroupSize: 0,
                    fractionGroupSeparator: "\xa0",
                    suffix: ""
                }, L = "0123456789abcdefghijklmnopqrstuvwxyz", F = !0;
                function q(e, t) {
                    var n, i, s, d, c, f, p, g, v = this;
                    if (!(v instanceof q))
                        return new q(e,t);
                    if (null == t) {
                        if (e && !0 === e._isBigNumber)
                            return v.s = e.s,
                            void (!e.c || e.e > A ? v.c = v.e = null : e.e < H ? v.c = [v.e = 0] : (v.e = e.e,
                            v.c = e.c.slice()));
                        if ((f = "number" == typeof e) && 0 * e == 0) {
                            if (v.s = 1 / e < 0 ? (e = -e,
                            -1) : 1,
                            e === ~~e) {
                                for (d = 0,
                                c = e; c >= 10; c /= 10,
                                d++)
                                    ;
                                return void (d > A ? v.c = v.e = null : (v.e = d,
                                v.c = [e]))
                            }
                            g = String(e)
                        } else {
                            if (!o.test(g = String(e)))
                                return r(v, g, f);
                            v.s = 45 == g.charCodeAt(0) ? (g = g.slice(1),
                            -1) : 1
                        }
                        (d = g.indexOf(".")) > -1 && (g = g.replace(".", "")),
                        (c = g.search(/e/i)) > 0 ? (d < 0 && (d = c),
                        d += +g.slice(c + 1),
                        g = g.substring(0, c)) : d < 0 && (d = g.length)
                    } else {
                        if (y(t, 2, L.length, "Base"),
                        10 == t && F)
                            return $(v = new q(e), N + v.e + 1, z);
                        if (g = String(e),
                        f = "number" == typeof e) {
                            if (0 * e != 0)
                                return r(v, g, f, t);
                            if (v.s = 1 / e < 0 ? (g = g.slice(1),
                            -1) : 1,
                            q.DEBUG && g.replace(/^0\.0*|\./, "").length > 15)
                                throw Error(l + e)
                        } else
                            v.s = 45 === g.charCodeAt(0) ? (g = g.slice(1),
                            -1) : 1;
                        for (n = L.slice(0, t),
                        d = c = 0,
                        p = g.length; c < p; c++)
                            if (n.indexOf(i = g.charAt(c)) < 0) {
                                if ("." == i) {
                                    if (c > d) {
                                        d = p;
                                        continue
                                    }
                                } else if (!s && (g == g.toUpperCase() && (g = g.toLowerCase()) || g == g.toLowerCase() && (g = g.toUpperCase()))) {
                                    s = !0,
                                    c = -1,
                                    d = 0;
                                    continue
                                }
                                return r(v, String(e), f, t)
                            }
                        f = !1,
                        (d = (g = a(g, t, 10, v.s)).indexOf(".")) > -1 ? g = g.replace(".", "") : d = g.length
                    }
                    for (c = 0; 48 === g.charCodeAt(c); c++)
                        ;
                    for (p = g.length; 48 === g.charCodeAt(--p); )
                        ;
                    if (g = g.slice(c, ++p)) {
                        if (p -= c,
                        f && q.DEBUG && p > 15 && (e > h || e !== u(e)))
                            throw Error(l + v.s * e);
                        if ((d = d - c - 1) > A)
                            v.c = v.e = null;
                        else if (d < H)
                            v.c = [v.e = 0];
                        else {
                            if (v.e = d,
                            v.c = [],
                            c = (d + 1) % m,
                            d < 0 && (c += m),
                            c < p) {
                                for (c && v.c.push(+g.slice(0, c)),
                                p -= m; c < p; )
                                    v.c.push(+g.slice(c, c += m));
                                c = m - (g = g.slice(c)).length
                            } else
                                c -= p;
                            for (; c--; g += "0")
                                ;
                            v.c.push(+g)
                        }
                    } else
                        v.c = [v.e = 0]
                }
                function G(e, t, n, a) {
                    var r, i, o, s, u;
                    if (null == n ? n = z : y(n, 0, 8),
                    !e.c)
                        return e.toString();
                    if (r = e.c[0],
                    o = e.e,
                    null == t)
                        u = w(e.c),
                        u = 1 == a || 2 == a && (o <= I || o >= O) ? M(u, o) : P(u, o, "0");
                    else if (i = (e = $(new q(e), t, n)).e,
                    s = (u = w(e.c)).length,
                    1 == a || 2 == a && (t <= i || i <= I)) {
                        for (; s < t; u += "0",
                        s++)
                            ;
                        u = M(u, i)
                    } else if (t -= o,
                    u = P(u, i, "0"),
                    i + 1 > s) {
                        if (--t > 0)
                            for (u += "."; t--; u += "0")
                                ;
                    } else if ((t += i - s) > 0)
                        for (i + 1 == s && (u += "."); t--; u += "0")
                            ;
                    return e.s < 0 && r ? "-" + u : u
                }
                function K(e, t) {
                    for (var n, a = 1, r = new q(e[0]); a < e.length; a++) {
                        if (!(n = new q(e[a])).s) {
                            r = n;
                            break
                        }
                        t.call(r, n) && (r = n)
                    }
                    return r
                }
                function V(e, t, n) {
                    for (var a = 1, r = t.length; !t[--r]; t.pop())
                        ;
                    for (r = t[0]; r >= 10; r /= 10,
                    a++)
                        ;
                    return (n = a + n * m - 1) > A ? e.c = e.e = null : n < H ? e.c = [e.e = 0] : (e.e = n,
                    e.c = t),
                    e
                }
                function $(e, t, n, a) {
                    var r, i, o, d, l, h, p, g = e.c, v = f;
                    if (g) {
                        e: {
                            for (r = 1,
                            d = g[0]; d >= 10; d /= 10,
                            r++)
                                ;
                            if ((i = t - r) < 0)
                                i += m,
                                o = t,
                                p = (l = g[h = 0]) / v[r - o - 1] % 10 | 0;
                            else if ((h = s((i + 1) / m)) >= g.length) {
                                if (!a)
                                    break e;
                                for (; g.length <= h; g.push(0))
                                    ;
                                l = p = 0,
                                r = 1,
                                o = (i %= m) - m + 1
                            } else {
                                for (l = d = g[h],
                                r = 1; d >= 10; d /= 10,
                                r++)
                                    ;
                                p = (o = (i %= m) - m + r) < 0 ? 0 : l / v[r - o - 1] % 10 | 0
                            }
                            if (a = a || t < 0 || null != g[h + 1] || (o < 0 ? l : l % v[r - o - 1]),
                            a = n < 4 ? (p || a) && (0 == n || n == (e.s < 0 ? 3 : 2)) : p > 5 || 5 == p && (4 == n || a || 6 == n && (i > 0 ? o > 0 ? l / v[r - o] : 0 : g[h - 1]) % 10 & 1 || n == (e.s < 0 ? 8 : 7)),
                            t < 1 || !g[0])
                                return g.length = 0,
                                a ? (t -= e.e + 1,
                                g[0] = v[(m - t % m) % m],
                                e.e = -t || 0) : g[0] = e.e = 0,
                                e;
                            if (0 == i ? (g.length = h,
                            d = 1,
                            h--) : (g.length = h + 1,
                            d = v[m - i],
                            g[h] = o > 0 ? u(l / v[r - o] % v[o]) * d : 0),
                            a)
                                for (; ; ) {
                                    if (0 == h) {
                                        for (i = 1,
                                        o = g[0]; o >= 10; o /= 10,
                                        i++)
                                            ;
                                        for (o = g[0] += d,
                                        d = 1; o >= 10; o /= 10,
                                        d++)
                                            ;
                                        i != d && (e.e++,
                                        g[0] == c && (g[0] = 1));
                                        break
                                    }
                                    if (g[h] += d,
                                    g[h] != c)
                                        break;
                                    g[h--] = 0,
                                    d = 1
                                }
                            for (i = g.length; 0 === g[--i]; g.pop())
                                ;
                        }
                        e.e > A ? e.c = e.e = null : e.e < H && (e.c = [e.e = 0])
                    }
                    return e
                }
                function B(e) {
                    var t, n = e.e;
                    return null === n ? e.toString() : (t = w(e.c),
                    t = n <= I || n >= O ? M(t, n) : P(t, n, "0"),
                    e.s < 0 ? "-" + t : t)
                }
                return q.clone = e,
                q.ROUND_UP = 0,
                q.ROUND_DOWN = 1,
                q.ROUND_CEIL = 2,
                q.ROUND_FLOOR = 3,
                q.ROUND_HALF_UP = 4,
                q.ROUND_HALF_DOWN = 5,
                q.ROUND_HALF_EVEN = 6,
                q.ROUND_HALF_CEIL = 7,
                q.ROUND_HALF_FLOOR = 8,
                q.EUCLID = 9,
                q.config = q.set = function(e) {
                    var t, n;
                    if (null != e) {
                        if ("object" != typeof e)
                            throw Error(d + "Object expected: " + e);
                        if (e.hasOwnProperty(t = "DECIMAL_PLACES") && (y(n = e[t], 0, g, t),
                        N = n),
                        e.hasOwnProperty(t = "ROUNDING_MODE") && (y(n = e[t], 0, 8, t),
                        z = n),
                        e.hasOwnProperty(t = "EXPONENTIAL_AT") && ((n = e[t]) && n.pop ? (y(n[0], -g, 0, t),
                        y(n[1], 0, g, t),
                        I = n[0],
                        O = n[1]) : (y(n, -g, g, t),
                        I = -(O = n < 0 ? -n : n))),
                        e.hasOwnProperty(t = "RANGE"))
                            if ((n = e[t]) && n.pop)
                                y(n[0], -g, -1, t),
                                y(n[1], 1, g, t),
                                H = n[0],
                                A = n[1];
                            else {
                                if (y(n, -g, g, t),
                                !n)
                                    throw Error(d + t + " cannot be zero: " + n);
                                H = -(A = n < 0 ? -n : n)
                            }
                        if (e.hasOwnProperty(t = "CRYPTO")) {
                            if ((n = e[t]) !== !!n)
                                throw Error(d + t + " not true or false: " + n);
                            if (n) {
                                if ("undefined" == typeof crypto || !crypto || !crypto.getRandomValues && !crypto.randomBytes)
                                    throw Y = !n,
                                    Error(d + "crypto unavailable");
                                Y = n
                            } else
                                Y = n
                        }
                        if (e.hasOwnProperty(t = "MODULO_MODE") && (y(n = e[t], 0, 9, t),
                        _ = n),
                        e.hasOwnProperty(t = "POW_PRECISION") && (y(n = e[t], 0, g, t),
                        X = n),
                        e.hasOwnProperty(t = "FORMAT")) {
                            if ("object" != typeof (n = e[t]))
                                throw Error(d + t + " not an object: " + n);
                            R = n
                        }
                        if (e.hasOwnProperty(t = "ALPHABET")) {
                            if ("string" != typeof (n = e[t]) || /^.?$|[+\-.\s]|(.).*\1/.test(n))
                                throw Error(d + t + " invalid: " + n);
                            F = "0123456789" == n.slice(0, 10),
                            L = n
                        }
                    }
                    return {
                        DECIMAL_PLACES: N,
                        ROUNDING_MODE: z,
                        EXPONENTIAL_AT: [I, O],
                        RANGE: [H, A],
                        CRYPTO: Y,
                        MODULO_MODE: _,
                        POW_PRECISION: X,
                        FORMAT: R,
                        ALPHABET: L
                    }
                }
                ,
                q.isBigNumber = function(e) {
                    if (!e || !0 !== e._isBigNumber)
                        return !1;
                    if (!q.DEBUG)
                        return !0;
                    var t, n, a = e.c, r = e.e, i = e.s;
                    e: if ("[object Array]" == {}.toString.call(a)) {
                        if ((1 === i || -1 === i) && r >= -g && r <= g && r === u(r)) {
                            if (0 === a[0]) {
                                if (0 === r && 1 === a.length)
                                    return !0;
                                break e
                            }
                            if ((t = (r + 1) % m) < 1 && (t += m),
                            String(a[0]).length == t) {
                                for (t = 0; t < a.length; t++)
                                    if ((n = a[t]) < 0 || n >= c || n !== u(n))
                                        break e;
                                if (0 !== n)
                                    return !0
                            }
                        }
                    } else if (null === a && null === r && (null === i || 1 === i || -1 === i))
                        return !0;
                    throw Error(d + "Invalid BigNumber: " + e)
                }
                ,
                q.maximum = q.max = function() {
                    return K(arguments, T.lt)
                }
                ,
                q.minimum = q.min = function() {
                    return K(arguments, T.gt)
                }
                ,
                q.random = (i = 9007199254740992,
                W = Math.random() * i & 2097151 ? function() {
                    return u(Math.random() * i)
                }
                : function() {
                    return 8388608 * (1073741824 * Math.random() | 0) + (8388608 * Math.random() | 0)
                }
                ,
                function(e) {
                    var t, n, a, r, i, o = 0, l = [], c = new q(E);
                    if (null == e ? e = N : y(e, 0, g),
                    r = s(e / m),
                    Y)
                        if (crypto.getRandomValues) {
                            for (t = crypto.getRandomValues(new Uint32Array(r *= 2)); o < r; )
                                (i = 131072 * t[o] + (t[o + 1] >>> 11)) >= 9e15 ? (n = crypto.getRandomValues(new Uint32Array(2)),
                                t[o] = n[0],
                                t[o + 1] = n[1]) : (l.push(i % 1e14),
                                o += 2);
                            o = r / 2
                        } else {
                            if (!crypto.randomBytes)
                                throw Y = !1,
                                Error(d + "crypto unavailable");
                            for (t = crypto.randomBytes(r *= 7); o < r; )
                                (i = 281474976710656 * (31 & t[o]) + 1099511627776 * t[o + 1] + 4294967296 * t[o + 2] + 16777216 * t[o + 3] + (t[o + 4] << 16) + (t[o + 5] << 8) + t[o + 6]) >= 9e15 ? crypto.randomBytes(7).copy(t, o) : (l.push(i % 1e14),
                                o += 7);
                            o = r / 7
                        }
                    if (!Y)
                        for (; o < r; )
                            (i = W()) < 9e15 && (l[o++] = i % 1e14);
                    for (r = l[--o],
                    e %= m,
                    r && e && (i = f[m - e],
                    l[o] = u(r / i) * i); 0 === l[o]; l.pop(),
                    o--)
                        ;
                    if (o < 0)
                        l = [a = 0];
                    else {
                        for (a = -1; 0 === l[0]; l.splice(0, 1),
                        a -= m)
                            ;
                        for (o = 1,
                        i = l[0]; i >= 10; i /= 10,
                        o++)
                            ;
                        o < m && (a -= m - o)
                    }
                    return c.e = a,
                    c.c = l,
                    c
                }
                ),
                q.sum = function() {
                    for (var e = 1, t = arguments, n = new q(t[0]); e < t.length; )
                        n = n.plus(t[e++]);
                    return n
                }
                ,
                a = function() {
                    var e = "0123456789";
                    function t(e, t, n, a) {
                        for (var r, i, o = [0], s = 0, u = e.length; s < u; ) {
                            for (i = o.length; i--; o[i] *= t)
                                ;
                            for (o[0] += a.indexOf(e.charAt(s++)),
                            r = 0; r < o.length; r++)
                                o[r] > n - 1 && (null == o[r + 1] && (o[r + 1] = 0),
                                o[r + 1] += o[r] / n | 0,
                                o[r] %= n)
                        }
                        return o.reverse()
                    }
                    return function(a, r, i, o, s) {
                        var u, d, l, c, m, h, f, p, g = a.indexOf("."), v = N, b = z;
                        for (g >= 0 && (c = X,
                        X = 0,
                        a = a.replace(".", ""),
                        h = (p = new q(r)).pow(a.length - g),
                        X = c,
                        p.c = t(P(w(h.c), h.e, "0"), 10, i, e),
                        p.e = p.c.length),
                        l = c = (f = t(a, r, i, s ? (u = L,
                        e) : (u = e,
                        L))).length; 0 == f[--c]; f.pop())
                            ;
                        if (!f[0])
                            return u.charAt(0);
                        if (g < 0 ? --l : (h.c = f,
                        h.e = l,
                        h.s = o,
                        f = (h = n(h, p, v, b, i)).c,
                        m = h.r,
                        l = h.e),
                        g = f[d = l + v + 1],
                        c = i / 2,
                        m = m || d < 0 || null != f[d + 1],
                        m = b < 4 ? (null != g || m) && (0 == b || b == (h.s < 0 ? 3 : 2)) : g > c || g == c && (4 == b || m || 6 == b && 1 & f[d - 1] || b == (h.s < 0 ? 8 : 7)),
                        d < 1 || !f[0])
                            a = m ? P(u.charAt(1), -v, u.charAt(0)) : u.charAt(0);
                        else {
                            if (f.length = d,
                            m)
                                for (--i; ++f[--d] > i; )
                                    f[d] = 0,
                                    d || (++l,
                                    f = [1].concat(f));
                            for (c = f.length; !f[--c]; )
                                ;
                            for (g = 0,
                            a = ""; g <= c; a += u.charAt(f[g++]))
                                ;
                            a = P(a, l, u.charAt(0))
                        }
                        return a
                    }
                }(),
                n = function() {
                    function e(e, t, n) {
                        var a, r, i, o, s = 0, u = e.length, d = t % p, l = t / p | 0;
                        for (e = e.slice(); u--; )
                            s = ((r = d * (i = e[u] % p) + (a = l * i + (o = e[u] / p | 0) * d) % p * p + s) / n | 0) + (a / p | 0) + l * o,
                            e[u] = r % n;
                        return s && (e = [s].concat(e)),
                        e
                    }
                    function t(e, t, n, a) {
                        var r, i;
                        if (n != a)
                            i = n > a ? 1 : -1;
                        else
                            for (r = i = 0; r < n; r++)
                                if (e[r] != t[r]) {
                                    i = e[r] > t[r] ? 1 : -1;
                                    break
                                }
                        return i
                    }
                    function n(e, t, n, a) {
                        for (var r = 0; n--; )
                            e[n] -= r,
                            r = e[n] < t[n] ? 1 : 0,
                            e[n] = r * a + e[n] - t[n];
                        for (; !e[0] && e.length > 1; e.splice(0, 1))
                            ;
                    }
                    return function(a, r, i, o, s) {
                        var d, l, h, f, p, g, w, b, y, k, M, P, W, x, S, D, j, C = a.s == r.s ? 1 : -1, T = a.c, E = r.c;
                        if (!T || !T[0] || !E || !E[0])
                            return new q(a.s && r.s && (T ? !E || T[0] != E[0] : E) ? T && 0 == T[0] || !E ? 0 * C : C / 0 : NaN);
                        for (y = (b = new q(C)).c = [],
                        C = i + (l = a.e - r.e) + 1,
                        s || (s = c,
                        l = v(a.e / m) - v(r.e / m),
                        C = C / m | 0),
                        h = 0; E[h] == (T[h] || 0); h++)
                            ;
                        if (E[h] > (T[h] || 0) && l--,
                        C < 0)
                            y.push(1),
                            f = !0;
                        else {
                            for (x = T.length,
                            D = E.length,
                            h = 0,
                            C += 2,
                            (p = u(s / (E[0] + 1))) > 1 && (E = e(E, p, s),
                            T = e(T, p, s),
                            D = E.length,
                            x = T.length),
                            W = D,
                            M = (k = T.slice(0, D)).length; M < D; k[M++] = 0)
                                ;
                            j = E.slice(),
                            j = [0].concat(j),
                            S = E[0],
                            E[1] >= s / 2 && S++;
                            do {
                                if (p = 0,
                                (d = t(E, k, D, M)) < 0) {
                                    if (P = k[0],
                                    D != M && (P = P * s + (k[1] || 0)),
                                    (p = u(P / S)) > 1)
                                        for (p >= s && (p = s - 1),
                                        w = (g = e(E, p, s)).length,
                                        M = k.length; 1 == t(g, k, w, M); )
                                            p--,
                                            n(g, D < w ? j : E, w, s),
                                            w = g.length,
                                            d = 1;
                                    else
                                        0 == p && (d = p = 1),
                                        w = (g = E.slice()).length;
                                    if (w < M && (g = [0].concat(g)),
                                    n(k, g, M, s),
                                    M = k.length,
                                    -1 == d)
                                        for (; t(E, k, D, M) < 1; )
                                            p++,
                                            n(k, D < M ? j : E, M, s),
                                            M = k.length
                                } else
                                    0 === d && (p++,
                                    k = [0]);
                                y[h++] = p,
                                k[0] ? k[M++] = T[W] || 0 : (k = [T[W]],
                                M = 1)
                            } while ((W++ < x || null != k[0]) && C--);
                            f = null != k[0],
                            y[0] || y.splice(0, 1)
                        }
                        if (s == c) {
                            for (h = 1,
                            C = y[0]; C >= 10; C /= 10,
                            h++)
                                ;
                            $(b, i + (b.e = h + l * m - 1) + 1, o, f)
                        } else
                            b.e = l,
                            b.r = +f;
                        return b
                    }
                }(),
                x = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
                S = /^([^.]+)\.$/,
                D = /^\.([^.]+)$/,
                j = /^-?(Infinity|NaN)$/,
                C = /^\s*\+(?=[\w.])|^\s+|\s+$/g,
                r = function(e, t, n, a) {
                    var r, i = n ? t : t.replace(C, "");
                    if (j.test(i))
                        e.s = isNaN(i) ? null : i < 0 ? -1 : 1;
                    else {
                        if (!n && (i = i.replace(x, (function(e, t, n) {
                            return r = "x" == (n = n.toLowerCase()) ? 16 : "b" == n ? 2 : 8,
                            a && a != r ? e : t
                        }
                        )),
                        a && (r = a,
                        i = i.replace(S, "$1").replace(D, "0.$1")),
                        t != i))
                            return new q(i,r);
                        if (q.DEBUG)
                            throw Error(d + "Not a" + (a ? " base " + a : "") + " number: " + t);
                        e.s = null
                    }
                    e.c = e.e = null
                }
                ,
                T.absoluteValue = T.abs = function() {
                    var e = new q(this);
                    return e.s < 0 && (e.s = 1),
                    e
                }
                ,
                T.comparedTo = function(e, t) {
                    return b(this, new q(e,t))
                }
                ,
                T.decimalPlaces = T.dp = function(e, t) {
                    var n, a, r, i = this;
                    if (null != e)
                        return y(e, 0, g),
                        null == t ? t = z : y(t, 0, 8),
                        $(new q(i), e + i.e + 1, t);
                    if (!(n = i.c))
                        return null;
                    if (a = ((r = n.length - 1) - v(this.e / m)) * m,
                    r = n[r])
                        for (; r % 10 == 0; r /= 10,
                        a--)
                            ;
                    return a < 0 && (a = 0),
                    a
                }
                ,
                T.dividedBy = T.div = function(e, t) {
                    return n(this, new q(e,t), N, z)
                }
                ,
                T.dividedToIntegerBy = T.idiv = function(e, t) {
                    return n(this, new q(e,t), 0, 1)
                }
                ,
                T.exponentiatedBy = T.pow = function(e, t) {
                    var n, a, r, i, o, l, c, h, f = this;
                    if ((e = new q(e)).c && !e.isInteger())
                        throw Error(d + "Exponent not an integer: " + B(e));
                    if (null != t && (t = new q(t)),
                    o = e.e > 14,
                    !f.c || !f.c[0] || 1 == f.c[0] && !f.e && 1 == f.c.length || !e.c || !e.c[0])
                        return h = new q(Math.pow(+B(f), o ? 2 - k(e) : +B(e))),
                        t ? h.mod(t) : h;
                    if (l = e.s < 0,
                    t) {
                        if (t.c ? !t.c[0] : !t.s)
                            return new q(NaN);
                        (a = !l && f.isInteger() && t.isInteger()) && (f = f.mod(t))
                    } else {
                        if (e.e > 9 && (f.e > 0 || f.e < -1 || (0 == f.e ? f.c[0] > 1 || o && f.c[1] >= 24e7 : f.c[0] < 8e13 || o && f.c[0] <= 9999975e7)))
                            return i = f.s < 0 && k(e) ? -0 : 0,
                            f.e > -1 && (i = 1 / i),
                            new q(l ? 1 / i : i);
                        X && (i = s(X / m + 2))
                    }
                    for (o ? (n = new q(.5),
                    l && (e.s = 1),
                    c = k(e)) : c = (r = Math.abs(+B(e))) % 2,
                    h = new q(E); ; ) {
                        if (c) {
                            if (!(h = h.times(f)).c)
                                break;
                            i ? h.c.length > i && (h.c.length = i) : a && (h = h.mod(t))
                        }
                        if (r) {
                            if (0 === (r = u(r / 2)))
                                break;
                            c = r % 2
                        } else if ($(e = e.times(n), e.e + 1, 1),
                        e.e > 14)
                            c = k(e);
                        else {
                            if (0 === (r = +B(e)))
                                break;
                            c = r % 2
                        }
                        f = f.times(f),
                        i ? f.c && f.c.length > i && (f.c.length = i) : a && (f = f.mod(t))
                    }
                    return a ? h : (l && (h = E.div(h)),
                    t ? h.mod(t) : i ? $(h, X, z, undefined) : h)
                }
                ,
                T.integerValue = function(e) {
                    var t = new q(this);
                    return null == e ? e = z : y(e, 0, 8),
                    $(t, t.e + 1, e)
                }
                ,
                T.isEqualTo = T.eq = function(e, t) {
                    return 0 === b(this, new q(e,t))
                }
                ,
                T.isFinite = function() {
                    return !!this.c
                }
                ,
                T.isGreaterThan = T.gt = function(e, t) {
                    return b(this, new q(e,t)) > 0
                }
                ,
                T.isGreaterThanOrEqualTo = T.gte = function(e, t) {
                    return 1 === (t = b(this, new q(e,t))) || 0 === t
                }
                ,
                T.isInteger = function() {
                    return !!this.c && v(this.e / m) > this.c.length - 2
                }
                ,
                T.isLessThan = T.lt = function(e, t) {
                    return b(this, new q(e,t)) < 0
                }
                ,
                T.isLessThanOrEqualTo = T.lte = function(e, t) {
                    return -1 === (t = b(this, new q(e,t))) || 0 === t
                }
                ,
                T.isNaN = function() {
                    return !this.s
                }
                ,
                T.isNegative = function() {
                    return this.s < 0
                }
                ,
                T.isPositive = function() {
                    return this.s > 0
                }
                ,
                T.isZero = function() {
                    return !!this.c && 0 == this.c[0]
                }
                ,
                T.minus = function(e, t) {
                    var n, a, r, i, o = this, s = o.s;
                    if (t = (e = new q(e,t)).s,
                    !s || !t)
                        return new q(NaN);
                    if (s != t)
                        return e.s = -t,
                        o.plus(e);
                    var u = o.e / m
                      , d = e.e / m
                      , l = o.c
                      , h = e.c;
                    if (!u || !d) {
                        if (!l || !h)
                            return l ? (e.s = -t,
                            e) : new q(h ? o : NaN);
                        if (!l[0] || !h[0])
                            return h[0] ? (e.s = -t,
                            e) : new q(l[0] ? o : 3 == z ? -0 : 0)
                    }
                    if (u = v(u),
                    d = v(d),
                    l = l.slice(),
                    s = u - d) {
                        for ((i = s < 0) ? (s = -s,
                        r = l) : (d = u,
                        r = h),
                        r.reverse(),
                        t = s; t--; r.push(0))
                            ;
                        r.reverse()
                    } else
                        for (a = (i = (s = l.length) < (t = h.length)) ? s : t,
                        s = t = 0; t < a; t++)
                            if (l[t] != h[t]) {
                                i = l[t] < h[t];
                                break
                            }
                    if (i && (r = l,
                    l = h,
                    h = r,
                    e.s = -e.s),
                    (t = (a = h.length) - (n = l.length)) > 0)
                        for (; t--; l[n++] = 0)
                            ;
                    for (t = c - 1; a > s; ) {
                        if (l[--a] < h[a]) {
                            for (n = a; n && !l[--n]; l[n] = t)
                                ;
                            --l[n],
                            l[a] += c
                        }
                        l[a] -= h[a]
                    }
                    for (; 0 == l[0]; l.splice(0, 1),
                    --d)
                        ;
                    return l[0] ? V(e, l, d) : (e.s = 3 == z ? -1 : 1,
                    e.c = [e.e = 0],
                    e)
                }
                ,
                T.modulo = T.mod = function(e, t) {
                    var a, r, i = this;
                    return e = new q(e,t),
                    !i.c || !e.s || e.c && !e.c[0] ? new q(NaN) : !e.c || i.c && !i.c[0] ? new q(i) : (9 == _ ? (r = e.s,
                    e.s = 1,
                    a = n(i, e, 0, 3),
                    e.s = r,
                    a.s *= r) : a = n(i, e, 0, _),
                    (e = i.minus(a.times(e))).c[0] || 1 != _ || (e.s = i.s),
                    e)
                }
                ,
                T.multipliedBy = T.times = function(e, t) {
                    var n, a, r, i, o, s, u, d, l, h, f, g, w, b, y, k = this, M = k.c, P = (e = new q(e,t)).c;
                    if (!M || !P || !M[0] || !P[0])
                        return !k.s || !e.s || M && !M[0] && !P || P && !P[0] && !M ? e.c = e.e = e.s = null : (e.s *= k.s,
                        M && P ? (e.c = [0],
                        e.e = 0) : e.c = e.e = null),
                        e;
                    for (a = v(k.e / m) + v(e.e / m),
                    e.s *= k.s,
                    (u = M.length) < (h = P.length) && (w = M,
                    M = P,
                    P = w,
                    r = u,
                    u = h,
                    h = r),
                    r = u + h,
                    w = []; r--; w.push(0))
                        ;
                    for (b = c,
                    y = p,
                    r = h; --r >= 0; ) {
                        for (n = 0,
                        f = P[r] % y,
                        g = P[r] / y | 0,
                        i = r + (o = u); i > r; )
                            n = ((d = f * (d = M[--o] % y) + (s = g * d + (l = M[o] / y | 0) * f) % y * y + w[i] + n) / b | 0) + (s / y | 0) + g * l,
                            w[i--] = d % b;
                        w[i] = n
                    }
                    return n ? ++a : w.splice(0, 1),
                    V(e, w, a)
                }
                ,
                T.negated = function() {
                    var e = new q(this);
                    return e.s = -e.s || null,
                    e
                }
                ,
                T.plus = function(e, t) {
                    var n, a = this, r = a.s;
                    if (t = (e = new q(e,t)).s,
                    !r || !t)
                        return new q(NaN);
                    if (r != t)
                        return e.s = -t,
                        a.minus(e);
                    var i = a.e / m
                      , o = e.e / m
                      , s = a.c
                      , u = e.c;
                    if (!i || !o) {
                        if (!s || !u)
                            return new q(r / 0);
                        if (!s[0] || !u[0])
                            return u[0] ? e : new q(s[0] ? a : 0 * r)
                    }
                    if (i = v(i),
                    o = v(o),
                    s = s.slice(),
                    r = i - o) {
                        for (r > 0 ? (o = i,
                        n = u) : (r = -r,
                        n = s),
                        n.reverse(); r--; n.push(0))
                            ;
                        n.reverse()
                    }
                    for ((r = s.length) - (t = u.length) < 0 && (n = u,
                    u = s,
                    s = n,
                    t = r),
                    r = 0; t; )
                        r = (s[--t] = s[t] + u[t] + r) / c | 0,
                        s[t] = c === s[t] ? 0 : s[t] % c;
                    return r && (s = [r].concat(s),
                    ++o),
                    V(e, s, o)
                }
                ,
                T.precision = T.sd = function(e, t) {
                    var n, a, r, i = this;
                    if (null != e && e !== !!e)
                        return y(e, 1, g),
                        null == t ? t = z : y(t, 0, 8),
                        $(new q(i), e, t);
                    if (!(n = i.c))
                        return null;
                    if (a = (r = n.length - 1) * m + 1,
                    r = n[r]) {
                        for (; r % 10 == 0; r /= 10,
                        a--)
                            ;
                        for (r = n[0]; r >= 10; r /= 10,
                        a++)
                            ;
                    }
                    return e && i.e + 1 > a && (a = i.e + 1),
                    a
                }
                ,
                T.shiftedBy = function(e) {
                    return y(e, -9007199254740991, h),
                    this.times("1e" + e)
                }
                ,
                T.squareRoot = T.sqrt = function() {
                    var e, t, a, r, i, o = this, s = o.c, u = o.s, d = o.e, l = N + 4, c = new q("0.5");
                    if (1 !== u || !s || !s[0])
                        return new q(!u || u < 0 && (!s || s[0]) ? NaN : s ? o : 1 / 0);
                    if (0 == (u = Math.sqrt(+B(o))) || u == 1 / 0 ? (((t = w(s)).length + d) % 2 == 0 && (t += "0"),
                    u = Math.sqrt(+t),
                    d = v((d + 1) / 2) - (d < 0 || d % 2),
                    a = new q(t = u == 1 / 0 ? "5e" + d : (t = u.toExponential()).slice(0, t.indexOf("e") + 1) + d)) : a = new q(u + ""),
                    a.c[0])
                        for ((u = (d = a.e) + l) < 3 && (u = 0); ; )
                            if (i = a,
                            a = c.times(i.plus(n(o, i, l, 1))),
                            w(i.c).slice(0, u) === (t = w(a.c)).slice(0, u)) {
                                if (a.e < d && --u,
                                "9999" != (t = t.slice(u - 3, u + 1)) && (r || "4999" != t)) {
                                    +t && (+t.slice(1) || "5" != t.charAt(0)) || ($(a, a.e + N + 2, 1),
                                    e = !a.times(a).eq(o));
                                    break
                                }
                                if (!r && ($(i, i.e + N + 2, 0),
                                i.times(i).eq(o))) {
                                    a = i;
                                    break
                                }
                                l += 4,
                                u += 4,
                                r = 1
                            }
                    return $(a, a.e + N + 1, z, e)
                }
                ,
                T.toExponential = function(e, t) {
                    return null != e && (y(e, 0, g),
                    e++),
                    G(this, e, t, 1)
                }
                ,
                T.toFixed = function(e, t) {
                    return null != e && (y(e, 0, g),
                    e = e + this.e + 1),
                    G(this, e, t)
                }
                ,
                T.toFormat = function(e, t, n) {
                    var a, r = this;
                    if (null == n)
                        null != e && t && "object" == typeof t ? (n = t,
                        t = null) : e && "object" == typeof e ? (n = e,
                        e = t = null) : n = R;
                    else if ("object" != typeof n)
                        throw Error(d + "Argument not an object: " + n);
                    if (a = r.toFixed(e, t),
                    r.c) {
                        var i, o = a.split("."), s = +n.groupSize, u = +n.secondaryGroupSize, l = n.groupSeparator || "", c = o[0], m = o[1], h = r.s < 0, f = h ? c.slice(1) : c, p = f.length;
                        if (u && (i = s,
                        s = u,
                        u = i,
                        p -= i),
                        s > 0 && p > 0) {
                            for (i = p % s || s,
                            c = f.substr(0, i); i < p; i += s)
                                c += l + f.substr(i, s);
                            u > 0 && (c += l + f.slice(i)),
                            h && (c = "-" + c)
                        }
                        a = m ? c + (n.decimalSeparator || "") + ((u = +n.fractionGroupSize) ? m.replace(new RegExp("\\d{" + u + "}\\B","g"), "$&" + (n.fractionGroupSeparator || "")) : m) : c
                    }
                    return (n.prefix || "") + a + (n.suffix || "")
                }
                ,
                T.toFraction = function(e) {
                    var t, a, r, i, o, s, u, l, c, h, p, g, v = this, b = v.c;
                    if (null != e && (!(u = new q(e)).isInteger() && (u.c || 1 !== u.s) || u.lt(E)))
                        throw Error(d + "Argument " + (u.isInteger() ? "out of range: " : "not an integer: ") + B(u));
                    if (!b)
                        return new q(v);
                    for (t = new q(E),
                    c = a = new q(E),
                    r = l = new q(E),
                    g = w(b),
                    o = t.e = g.length - v.e - 1,
                    t.c[0] = f[(s = o % m) < 0 ? m + s : s],
                    e = !e || u.comparedTo(t) > 0 ? o > 0 ? t : c : u,
                    s = A,
                    A = 1 / 0,
                    u = new q(g),
                    l.c[0] = 0; h = n(u, t, 0, 1),
                    1 != (i = a.plus(h.times(r))).comparedTo(e); )
                        a = r,
                        r = i,
                        c = l.plus(h.times(i = c)),
                        l = i,
                        t = u.minus(h.times(i = t)),
                        u = i;
                    return i = n(e.minus(a), r, 0, 1),
                    l = l.plus(i.times(c)),
                    a = a.plus(i.times(r)),
                    l.s = c.s = v.s,
                    p = n(c, r, o *= 2, z).minus(v).abs().comparedTo(n(l, a, o, z).minus(v).abs()) < 1 ? [c, r] : [l, a],
                    A = s,
                    p
                }
                ,
                T.toNumber = function() {
                    return +B(this)
                }
                ,
                T.toPrecision = function(e, t) {
                    return null != e && y(e, 1, g),
                    G(this, e, t, 2)
                }
                ,
                T.toString = function(e) {
                    var t, n = this, r = n.s, i = n.e;
                    return null === i ? r ? (t = "Infinity",
                    r < 0 && (t = "-" + t)) : t = "NaN" : (null == e ? t = i <= I || i >= O ? M(w(n.c), i) : P(w(n.c), i, "0") : 10 === e && F ? t = P(w((n = $(new q(n), N + i + 1, z)).c), n.e, "0") : (y(e, 2, L.length, "Base"),
                    t = a(P(w(n.c), i, "0"), 10, e, r, !0)),
                    r < 0 && n.c[0] && (t = "-" + t)),
                    t
                }
                ,
                T.valueOf = T.toJSON = function() {
                    return B(this)
                }
                ,
                T._isBigNumber = !0,
                null != t && q.set(t),
                q
            }(),
            i.default = i.BigNumber = i,
            void 0 === (a = function() {
                return i
            }
            .call(t, n, t, e)) || (e.exports = a)
        }()
    },
    71508: function(e) {
        function t(e) {
            var n, a, r = "";
            if ("string" == typeof e || "number" == typeof e)
                r += e;
            else if ("object" == typeof e)
                if (Array.isArray(e)) {
                    var i = e.length;
                    for (n = 0; n < i; n++)
                        e[n] && (a = t(e[n])) && (r && (r += " "),
                        r += a)
                } else
                    for (a in e)
                        e[a] && (r && (r += " "),
                        r += a);
            return r
        }
        function n() {
            for (var e, n, a = 0, r = "", i = arguments.length; a < i; a++)
                (e = arguments[a]) && (n = t(e)) && (r && (r += " "),
                r += n);
            return r
        }
        e.exports = n,
        e.exports.clsx = n
    },
    85292: function(e, t, n) {
        "use strict";
        n.d(t, {
            F2: function() {
                return Q
            }
        });
        var a = n(58156)
          , r = n.n(a)
          , i = n(61448)
          , o = n.n(i)
          , s = n(55364)
          , u = n.n(s)
          , d = n(63375)
          , l = n.n(d);
        const c = (e,t)=>{
            const n = []
              , a = [];
            return n.push(t),
            t || n.push(e.locale),
            e.enableFallback && n.push(e.defaultLocale),
            n.filter(Boolean).map((e=>e.toString())).forEach((function(t) {
                if (a.includes(t) || a.push(t),
                !e.enableFallback)
                    return;
                const n = t.split("-");
                3 === n.length && a.push(`${n[0]}-${n[1]}`),
                a.push(n[0])
            }
            )),
            l()(a)
        }
        ;
        class m {
            constructor(e) {
                this.i18n = e,
                this.registry = {},
                this.register("default", c)
            }
            register(e, t) {
                if ("function" !== typeof t) {
                    const e = t;
                    t = ()=>e
                }
                this.registry[e] = t
            }
            get(e) {
                let t = this.registry[e] || this.registry[this.i18n.locale] || this.registry.default;
                return "function" === typeof t && (t = t(this.i18n, e)),
                t instanceof Array || (t = [t]),
                t
            }
        }
        const h = function({pluralizer: e, includeZero: t=!0, ordinal: n=!1}) {
            return function(a, r) {
                return [t && 0 === r ? "zero" : "", e(r, n)].filter(Boolean)
            }
        }({
            pluralizer: (e,t)=>{
                const n = String(e).split(".")
                  , a = !n[1]
                  , r = Number(n[0]) == e
                  , i = r && n[0].slice(-1)
                  , o = r && n[0].slice(-2);
                return t ? 1 == i && 11 != o ? "one" : 2 == i && 12 != o ? "two" : 3 == i && 13 != o ? "few" : "other" : 1 == e && a ? "one" : "other"
            }
            ,
            includeZero: !0
        });
        class f {
            constructor(e) {
                this.i18n = e,
                this.registry = {},
                this.register("default", h)
            }
            register(e, t) {
                this.registry[e] = t
            }
            get(e) {
                return this.registry[e] || this.registry[this.i18n.locale] || this.registry.default
            }
        }
        var p = n(84058)
          , g = n.n(p);
        function v(e) {
            return e ? Object.keys(e).reduce(((t,n)=>(t[g()(n)] = e[n],
            t)), {}) : {}
        }
        function w(e) {
            return void 0 !== e && null !== e
        }
        var b, y = n(61594), k = n.n(y);
        function M(e) {
            var t;
            return null !== (t = b[e]) && void 0 !== t ? t : b.default
        }
        !function(e) {
            e[e.up = k().ROUND_UP] = "up",
            e[e.down = k().ROUND_DOWN] = "down",
            e[e.truncate = k().ROUND_DOWN] = "truncate",
            e[e.halfUp = k().ROUND_HALF_UP] = "halfUp",
            e[e.default = k().ROUND_HALF_UP] = "default",
            e[e.halfDown = k().ROUND_HALF_DOWN] = "halfDown",
            e[e.halfEven = k().ROUND_HALF_EVEN] = "halfEven",
            e[e.banker = k().ROUND_HALF_EVEN] = "banker",
            e[e.ceiling = k().ROUND_CEIL] = "ceiling",
            e[e.ceil = k().ROUND_CEIL] = "ceil",
            e[e.floor = k().ROUND_FLOOR] = "floor"
        }(b || (b = {}));
        var P = n(12493)
          , W = n.n(P);
        function x(e, {precision: t, significant: n}) {
            return n && null !== t && t > 0 ? t - function(e) {
                return e.isZero() ? 1 : Math.floor(Math.log10(e.abs().toNumber()) + 1)
            }(e) : t
        }
        function S(e, t) {
            const n = x(e, t);
            if (null === n)
                return e.toString();
            const a = M(t.roundMode);
            if (n >= 0)
                return e.toFixed(n, a);
            const r = Math.pow(10, Math.abs(n));
            return (e = new (k())(e.div(r).toFixed(0, a)).times(r)).toString()
        }
        function D(e, t) {
            var n, a, r;
            const i = new (k())(e);
            if (t.raise && !i.isFinite())
                throw new Error(`"${e}" is not a valid numeric value`);
            const o = S(i, t)
              , s = new (k())(o)
              , u = s.lt(0)
              , d = s.isZero();
            let[l,c] = o.split(".");
            const m = [];
            let h;
            const f = null !== (n = t.format) && void 0 !== n ? n : "%n"
              , p = null !== (a = t.negativeFormat) && void 0 !== a ? a : `-${f}`
              , g = u && !d ? p : f;
            for (l = l.replace("-", ""); l.length > 0; )
                m.unshift(l.substr(Math.max(0, l.length - 3), 3)),
                l = l.substr(0, l.length - 3);
            return l = m.join(""),
            h = m.join(t.delimiter),
            c = t.significant ? function({significand: e, whole: t, precision: n}) {
                if ("0" === t || null === n)
                    return e;
                const a = Math.max(0, n - t.length);
                return (null !== e && void 0 !== e ? e : "").substr(0, a)
            }({
                whole: l,
                significand: c,
                precision: t.precision
            }) : null !== c && void 0 !== c ? c : W()("0", null !== (r = t.precision) && void 0 !== r ? r : 0),
            t.stripInsignificantZeros && c && (c = c.replace(/0+$/, "")),
            i.isNaN() && (h = e.toString()),
            c && i.isFinite() && (h += (t.separator || ".") + c),
            function(e, {formattedNumber: t, unit: n}) {
                return e.replace("%n", t).replace("%u", n)
            }(g, {
                formattedNumber: h,
                unit: t.unit
            })
        }
        function j(e, t, n) {
            let a = "";
            return (t instanceof String || "string" === typeof t) && (a = t),
            t instanceof Array && (a = t.join(e.defaultSeparator)),
            n.scope && (a = [n.scope, a].join(e.defaultSeparator)),
            a
        }
        function C(e) {
            var t, n;
            if (null === e)
                return "null";
            const a = typeof e;
            return "object" !== a ? a : (null === (n = null === (t = null === e || void 0 === e ? void 0 : e.constructor) || void 0 === t ? void 0 : t.name) || void 0 === n ? void 0 : n.toLowerCase()) || "object"
        }
        function T(e, t, n) {
            n = Object.keys(n).reduce(((t,a)=>(t[e.transformKey(a)] = n[a],
            t)), {});
            const a = t.match(e.placeholder);
            if (!a)
                return t;
            for (; a.length; ) {
                let r;
                const i = a.shift()
                  , o = i.replace(e.placeholder, "$1");
                r = w(n[o]) ? n[o].toString().replace(/\$/gm, "_#$#_") : o in n ? e.nullPlaceholder(e, i, t, n) : e.missingPlaceholder(e, i, t, n);
                const s = new RegExp(i.replace(/\{/gm, "\\{").replace(/\}/gm, "\\}"));
                t = t.replace(s, r)
            }
            return t.replace(/_#\$#_/g, "$")
        }
        function E(e, t, n={}) {
            const a = "locale"in (n = Object.assign({}, n)) ? n.locale : e.locale
              , r = C(a)
              , i = e.locales.get("string" === r ? a : typeof a).slice()
              , o = j(e, t, n).split(e.defaultSeparator).map((t=>e.transformKey(t)))
              , s = i.map((t=>o.reduce(((e,t)=>e && e[t]), e.translations[t])));
            return s.push(n.defaultValue),
            s.find((e=>w(e)))
        }
        var N = n(33031)
          , z = n.n(N)
          , I = n(47248);
        const O = {
            0: "unit",
            1: "ten",
            2: "hundred",
            3: "thousand",
            6: "million",
            9: "billion",
            12: "trillion",
            15: "quadrillion",
            "-1": "deci",
            "-2": "centi",
            "-3": "mili",
            "-6": "micro",
            "-9": "nano",
            "-12": "pico",
            "-15": "femto"
        }
          , H = n.n(I)()(Object.values(O), Object.keys(O).map((e=>parseInt(e, 10))));
        function A(e, t, n) {
            const a = {
                roundMode: n.roundMode,
                precision: n.precision,
                significant: n.significant
            };
            let r;
            if ("string" === C(n.units)) {
                const t = n.units;
                if (r = E(e, t),
                !r)
                    throw new Error(`The scope "${e.locale}${e.defaultSeparator}${j(e, t, {})}" couldn't be found`)
            } else
                r = n.units;
            let i = S(new (k())(t), a);
            const o = ((e,t)=>{
                const n = e.isZero() ? 0 : Math.floor(Math.log10(e.abs().toNumber()));
                return (e=>z()(Object.keys(e).map((e=>H[e])), (e=>-1 * e)))(t).find((e=>n >= e)) || 0
            }
            )(new (k())(i), r)
              , s = ((e,t)=>e[O[t.toString()]] || "")(r, o);
            if (i = S(new (k())(i).div(Math.pow(10, o)), a),
            n.stripInsignificantZeros) {
                let[e,t] = i.split(".");
                t = (t || "").replace(/0+$/, ""),
                i = e,
                t && (i += `${n.separator}${t}`)
            }
            return n.format.replace("%n", i || "0").replace("%u", s).trim()
        }
        const Y = ["byte", "kb", "mb", "gb", "tb", "pb", "eb"];
        function _(e) {
            if (e instanceof Date)
                return e;
            if ("number" === typeof e) {
                const t = new Date;
                return t.setTime(e),
                t
            }
            const t = new String(e).match(/(\d{4})-(\d{2})-(\d{2})(?:[ T](\d{2}):(\d{2}):(\d{2})(?:[.,](\d{1,3}))?)?(Z|\+00:?00)?/);
            if (t) {
                const e = t.slice(1, 8).map((e=>parseInt(e, 10) || 0));
                e[1] -= 1;
                const [n,a,r,i,o,s,u] = e;
                return t[8] ? new Date(Date.UTC(n, a, r, i, o, s, u)) : new Date(n,a,r,i,o,s,u)
            }
            if (e.match(/([A-Z][a-z]{2}) ([A-Z][a-z]{2}) (\d+) (\d+:\d+:\d+) ([+-]\d+) (\d+)/)) {
                (new Date).setTime(Date.parse([RegExp.$1, RegExp.$2, RegExp.$3, RegExp.$6, RegExp.$4, RegExp.$5].join(" ")))
            }
            const n = new Date;
            return n.setTime(Date.parse(e)),
            n
        }
        function X({i18n: e, count: t, scope: n, options: a, baseScope: r}) {
            let i, o;
            if (a = Object.assign({}, a),
            i = "object" === typeof n && n ? n : E(e, n, a),
            !i)
                return e.missingTranslation.get(n, a);
            const s = e.pluralization.get(a.locale)(e, t)
              , u = [];
            for (; s.length; ) {
                const e = s.shift();
                if (w(i[e])) {
                    o = i[e];
                    break
                }
                u.push(e)
            }
            return w(o) ? (a.count = t,
            e.interpolate(e, o, a)) : e.missingTranslation.get(r.split(e.defaultSeparator).concat([u[0]]), a)
        }
        const R = {
            meridian: {
                am: "AM",
                pm: "PM"
            },
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            abbrDayNames: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            monthNames: [null, "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            abbrMonthNames: [null, "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
        };
        var L = n(23181)
          , F = n.n(L);
        const q = (e,t,n)=>n >= e && n <= t;
        const G = function(e, t) {
            t instanceof Array && (t = t.join(e.defaultSeparator));
            const n = t.split(e.defaultSeparator).slice(-1)[0];
            return e.missingTranslationPrefix + n.replace("_", " ").replace(/([a-z])([A-Z])/g, ((e,t,n)=>`${t} ${n.toLowerCase()}`))
        }
          , K = (e,t,n)=>{
            const a = j(e, t, n)
              , r = "locale"in n ? n.locale : e.locale
              , i = C(r);
            return `[missing "${["string" == i ? r : i, a].join(e.defaultSeparator)}" translation]`
        }
          , V = (e,t,n)=>{
            const a = j(e, t, n)
              , r = [e.locale, a].join(e.defaultSeparator);
            throw new Error(`Missing translation: ${r}`)
        }
        ;
        class $ {
            constructor(e) {
                this.i18n = e,
                this.registry = {},
                this.register("guess", G),
                this.register("message", K),
                this.register("error", V)
            }
            register(e, t) {
                this.registry[e] = t
            }
            get(e, t) {
                var n;
                return this.registry[null !== (n = t.missingBehavior) && void 0 !== n ? n : this.i18n.missingBehavior](this.i18n, e, t)
            }
        }
        var B = function(e, t, n, a) {
            return new (n || (n = Promise))((function(r, i) {
                function o(e) {
                    try {
                        u(a.next(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function s(e) {
                    try {
                        u(a.throw(e))
                    } catch (t) {
                        i(t)
                    }
                }
                function u(e) {
                    var t;
                    e.done ? r(e.value) : (t = e.value,
                    t instanceof n ? t : new n((function(e) {
                        e(t)
                    }
                    ))).then(o, s)
                }
                u((a = a.apply(e, t || [])).next())
            }
            ))
        };
        const J = {
            defaultLocale: "en",
            availableLocales: ["en"],
            locale: "en",
            defaultSeparator: ".",
            placeholder: /(?:\{\{|%\{)(.*?)(?:\}\}?)/gm,
            enableFallback: !1,
            missingBehavior: "message",
            missingTranslationPrefix: "",
            missingPlaceholder: (e,t)=>`[missing "${t}" value]`,
            nullPlaceholder: (e,t,n,a)=>e.missingPlaceholder(e, t, n, a),
            transformKey: e=>e
        };
        class Q {
            constructor(e={}, t={}) {
                this._locale = J.locale,
                this._defaultLocale = J.defaultLocale,
                this._version = 0,
                this.onChangeHandlers = [],
                this.translations = {},
                this.availableLocales = [],
                this.t = this.translate,
                this.p = this.pluralize,
                this.l = this.localize,
                this.distanceOfTimeInWords = this.timeAgoInWords;
                const {locale: n, enableFallback: a, missingBehavior: r, missingTranslationPrefix: i, missingPlaceholder: o, nullPlaceholder: s, defaultLocale: u, defaultSeparator: d, placeholder: l, transformKey: c} = Object.assign(Object.assign({}, J), t);
                this.locale = n,
                this.defaultLocale = u,
                this.defaultSeparator = d,
                this.enableFallback = a,
                this.locale = n,
                this.missingBehavior = r,
                this.missingTranslationPrefix = i,
                this.missingPlaceholder = o,
                this.nullPlaceholder = s,
                this.placeholder = l,
                this.pluralization = new f(this),
                this.locales = new m(this),
                this.missingTranslation = new $(this),
                this.transformKey = c,
                this.interpolate = T,
                this.store(e)
            }
            store(e) {
                u()(this.translations, e),
                this.hasChanged()
            }
            get locale() {
                return this._locale || this.defaultLocale || "en"
            }
            set locale(e) {
                if ("string" !== typeof e)
                    throw new Error(`Expected newLocale to be a string; got ${C(e)}`);
                const t = this._locale !== e;
                this._locale = e,
                t && this.hasChanged()
            }
            get defaultLocale() {
                return this._defaultLocale || "en"
            }
            set defaultLocale(e) {
                if ("string" !== typeof e)
                    throw new Error(`Expected newLocale to be a string; got ${C(e)}`);
                const t = this._defaultLocale !== e;
                this._defaultLocale = e,
                t && this.hasChanged()
            }
            translate(e, t) {
                const n = function(e, t, n) {
                    let a = [{
                        scope: t
                    }];
                    if (w(n.defaults) && (a = a.concat(n.defaults)),
                    w(n.defaultValue)) {
                        const r = "function" === typeof n.defaultValue ? n.defaultValue(e, t, n) : n.defaultValue;
                        a.push({
                            message: r
                        }),
                        delete n.defaultValue
                    }
                    return a
                }(this, e, t = Object.assign({}, t));
                let a;
                return n.some((e=>(w(e.scope) ? a = E(this, e.scope, t) : w(e.message) && (a = e.message),
                void 0 !== a && null !== a))) ? ("string" === typeof a ? a = this.interpolate(this, a, t) : "object" === typeof a && a && w(t.count) && (a = X({
                    i18n: this,
                    count: t.count || 0,
                    scope: a,
                    options: t,
                    baseScope: j(this, e, t)
                })),
                t && a instanceof Array && (a = a.map((e=>"string" === typeof e ? T(this, e, t) : e))),
                a) : this.missingTranslation.get(e, t)
            }
            pluralize(e, t, n) {
                return X({
                    i18n: this,
                    count: e,
                    scope: t,
                    options: Object.assign({}, n),
                    baseScope: j(this, t, null !== n && void 0 !== n ? n : {})
                })
            }
            localize(e, t, n) {
                if (n = Object.assign({}, n),
                void 0 === t || null === t)
                    return "";
                switch (e) {
                case "currency":
                    return this.numberToCurrency(t);
                case "number":
                    return D(t, Object.assign({
                        delimiter: ",",
                        precision: 3,
                        separator: ".",
                        significant: !1,
                        stripInsignificantZeros: !1
                    }, E(this, "number.format")));
                case "percentage":
                    return this.numberToPercentage(t);
                default:
                    {
                        let a;
                        return a = e.match(/^(date|time)/) ? this.toTime(e, t) : t.toString(),
                        T(this, a, n)
                    }
                }
            }
            toTime(e, t) {
                const n = _(t)
                  , a = E(this, e);
                return n.toString().match(/invalid/i) ? n.toString() : a ? this.strftime(n, a) : n.toString()
            }
            numberToCurrency(e, t={}) {
                return D(e, Object.assign(Object.assign(Object.assign({
                    delimiter: ",",
                    format: "%u%n",
                    precision: 2,
                    separator: ".",
                    significant: !1,
                    stripInsignificantZeros: !1,
                    unit: "$"
                }, v(this.get("number.format"))), v(this.get("number.currency.format"))), t))
            }
            numberToPercentage(e, t={}) {
                return D(e, Object.assign(Object.assign(Object.assign({
                    delimiter: "",
                    format: "%n%",
                    precision: 3,
                    stripInsignificantZeros: !1,
                    separator: ".",
                    significant: !1
                }, v(this.get("number.format"))), v(this.get("number.percentage.format"))), t))
            }
            numberToHumanSize(e, t={}) {
                return function(e, t, n) {
                    const a = M(n.roundMode)
                      , r = 1024
                      , i = new (k())(t).abs()
                      , o = i.lt(r);
                    let s;
                    const u = ((e,t)=>{
                        const n = t.length - 1
                          , a = new (k())(Math.log(e.toNumber())).div(Math.log(r)).integerValue(k().ROUND_DOWN).toNumber();
                        return Math.min(n, a)
                    }
                    )(i, Y);
                    s = o ? i.integerValue() : new (k())(S(i.div(Math.pow(r, u)), {
                        significant: n.significant,
                        precision: n.precision,
                        roundMode: n.roundMode
                    }));
                    const d = e.translate("number.human.storage_units.format", {
                        defaultValue: "%n %u"
                    })
                      , l = e.translate((c = Y,
                    `number.human.storage_units.units.${o ? "byte" : c[u]}`), {
                        count: i.integerValue().toNumber()
                    });
                    var c;
                    let m = s.toFixed(n.precision, a);
                    return n.stripInsignificantZeros && (m = m.replace(/(\..*?)0+$/, "$1").replace(/\.$/, "")),
                    d.replace("%n", m).replace("%u", l)
                }(this, e, Object.assign(Object.assign(Object.assign({
                    delimiter: "",
                    precision: 3,
                    significant: !0,
                    stripInsignificantZeros: !0,
                    units: {
                        billion: "Billion",
                        million: "Million",
                        quadrillion: "Quadrillion",
                        thousand: "Thousand",
                        trillion: "Trillion",
                        unit: ""
                    }
                }, v(this.get("number.human.format"))), v(this.get("number.human.storage_units"))), t))
            }
            numberToHuman(e, t={}) {
                return A(this, e, Object.assign(Object.assign(Object.assign({
                    delimiter: "",
                    separator: ".",
                    precision: 3,
                    significant: !0,
                    stripInsignificantZeros: !0,
                    format: "%n %u",
                    roundMode: "default",
                    units: {
                        billion: "Billion",
                        million: "Million",
                        quadrillion: "Quadrillion",
                        thousand: "Thousand",
                        trillion: "Trillion",
                        unit: ""
                    }
                }, v(this.get("number.human.format"))), v(this.get("number.human.decimal_units"))), t))
            }
            numberToRounded(e, t) {
                return D(e, Object.assign({
                    unit: "",
                    precision: 3,
                    significant: !1,
                    separator: ".",
                    delimiter: "",
                    stripInsignificantZeros: !1
                }, t))
            }
            numberToDelimited(e, t={}) {
                return function(e, t) {
                    const n = new (k())(e);
                    if (!n.isFinite())
                        return e.toString();
                    if (!t.delimiterPattern.global)
                        throw new Error(`options.delimiterPattern must be a global regular expression; received ${t.delimiterPattern}`);
                    let[a,r] = n.toString().split(".");
                    return a = a.replace(t.delimiterPattern, (e=>`${e}${t.delimiter}`)),
                    [a, r].filter(Boolean).join(t.separator)
                }(e, Object.assign({
                    delimiterPattern: /(\d)(?=(\d\d\d)+(?!\d))/g,
                    delimiter: ",",
                    separator: "."
                }, t))
            }
            withLocale(e, t) {
                return B(this, void 0, void 0, (function*() {
                    const n = this.locale;
                    try {
                        this.locale = e,
                        yield t()
                    } finally {
                        this.locale = n
                    }
                }
                ))
            }
            strftime(e, t, n={}) {
                return function(e, t, n={}) {
                    const {abbrDayNames: a, dayNames: r, abbrMonthNames: i, monthNames: o, meridian: s} = Object.assign(Object.assign({}, R), n);
                    if (isNaN(e.getTime()))
                        throw new Error("strftime() requires a valid date object, but received an invalid date.");
                    const u = e.getDay()
                      , d = e.getDate()
                      , l = e.getFullYear()
                      , c = e.getMonth() + 1
                      , m = e.getHours();
                    let h = m;
                    const f = m > 11 ? "pm" : "am"
                      , p = e.getSeconds()
                      , g = e.getMinutes()
                      , v = e.getTimezoneOffset()
                      , w = Math.floor(Math.abs(v / 60))
                      , b = Math.abs(v) - 60 * w
                      , y = (v > 0 ? "-" : "+") + (w.toString().length < 2 ? "0" + w : w) + (b.toString().length < 2 ? "0" + b : b);
                    return h > 12 ? h -= 12 : 0 === h && (h = 12),
                    (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = (t = t.replace("%a", a[u])).replace("%A", r[u])).replace("%b", i[c])).replace("%B", o[c])).replace("%d", d.toString().padStart(2, "0"))).replace("%e", d.toString())).replace("%-d", d.toString())).replace("%H", m.toString().padStart(2, "0"))).replace("%-H", m.toString())).replace("%k", m.toString())).replace("%I", h.toString().padStart(2, "0"))).replace("%-I", h.toString())).replace("%l", h.toString())).replace("%m", c.toString().padStart(2, "0"))).replace("%-m", c.toString())).replace("%M", g.toString().padStart(2, "0"))).replace("%-M", g.toString())).replace("%p", s[f])).replace("%P", s[f].toLowerCase())).replace("%S", p.toString().padStart(2, "0"))).replace("%-S", p.toString())).replace("%w", u.toString())).replace("%y", l.toString().padStart(2, "0").substr(-2))).replace("%-y", l.toString().padStart(2, "0").substr(-2).replace(/^0+/, ""))).replace("%Y", l.toString())).replace(/%z/i, y)
                }(e, t, Object.assign(Object.assign(Object.assign({}, v(E(this, "date"))), {
                    meridian: {
                        am: E(this, "time.am") || "AM",
                        pm: E(this, "time.pm") || "PM"
                    }
                }), n))
            }
            update(e, t, n={
                strict: !1
            }) {
                if (n.strict && !o()(this.translations, e))
                    throw new Error(`The path "${e}" is not currently defined`);
                const a = r()(this.translations, e)
                  , i = C(a)
                  , s = C(t);
                if (n.strict && i !== s)
                    throw new Error(`The current type for "${e}" is "${i}", but you're trying to override it with "${s}"`);
                let u;
                u = "object" === s ? Object.assign(Object.assign({}, a), t) : t;
                const d = e.split(this.defaultSeparator)
                  , l = d.pop();
                let c = this.translations;
                for (const r of d)
                    c[r] || (c[r] = {}),
                    c = c[r];
                c[l] = u,
                this.hasChanged()
            }
            toSentence(e, t={}) {
                const {wordsConnector: n, twoWordsConnector: a, lastWordConnector: r} = Object.assign(Object.assign({
                    wordsConnector: ", ",
                    twoWordsConnector: " and ",
                    lastWordConnector: ", and "
                }, v(E(this, "support.array"))), t)
                  , i = e.length;
                switch (i) {
                case 0:
                    return "";
                case 1:
                    return `${e[0]}`;
                case 2:
                    return e.join(a);
                default:
                    return [e.slice(0, i - 1).join(n), r, e[i - 1]].join("")
                }
            }
            timeAgoInWords(e, t, n={}) {
                return function(e, t, n, a={}) {
                    const r = a.scope || "datetime.distance_in_words"
                      , i = (t,n=0)=>e.t(t, {
                        count: n,
                        scope: r
                    });
                    t = _(t),
                    n = _(n);
                    let o = t.getTime() / 1e3
                      , s = n.getTime() / 1e3;
                    o > s && ([t,n,o,s] = [n, t, s, o]);
                    const u = Math.round(s - o)
                      , d = Math.round((s - o) / 60)
                      , l = d / 60 / 24
                      , c = Math.round(d / 60)
                      , m = Math.round(l)
                      , h = Math.round(m / 30);
                    if (q(0, 1, d))
                        return a.includeSeconds ? q(0, 4, u) ? i("less_than_x_seconds", 5) : q(5, 9, u) ? i("less_than_x_seconds", 10) : q(10, 19, u) ? i("less_than_x_seconds", 20) : q(20, 39, u) ? i("half_a_minute") : q(40, 59, u) ? i("less_than_x_minutes", 1) : i("x_minutes", 1) : 0 === d ? i("less_than_x_minutes", 1) : i("x_minutes", d);
                    if (q(2, 44, d))
                        return i("x_minutes", d);
                    if (q(45, 89, d))
                        return i("about_x_hours", 1);
                    if (q(90, 1439, d))
                        return i("about_x_hours", c);
                    if (q(1440, 2519, d))
                        return i("x_days", 1);
                    if (q(2520, 43199, d))
                        return i("x_days", m);
                    if (q(43200, 86399, d))
                        return i("about_x_months", Math.round(d / 43200));
                    if (q(86400, 525599, d))
                        return i("x_months", h);
                    let f = t.getFullYear();
                    t.getMonth() + 1 >= 3 && (f += 1);
                    let p = n.getFullYear();
                    n.getMonth() + 1 < 3 && (p -= 1);
                    const g = 525600
                      , v = d - 1440 * (f > p ? 0 : F()(f, p).filter((e=>1 == new Date(e,1,29).getMonth())).length)
                      , w = Math.trunc(v / g)
                      , b = parseFloat((v / g - w).toPrecision(3));
                    return b < .25 ? i("about_x_years", w) : b < .75 ? i("over_x_years", w) : i("almost_x_years", w + 1)
                }(this, e, t, n)
            }
            onChange(e) {
                return this.onChangeHandlers.push(e),
                ()=>{
                    this.onChangeHandlers.splice(this.onChangeHandlers.indexOf(e), 1)
                }
            }
            get version() {
                return this._version
            }
            formatNumber(e, t={}) {
                return D(e, t = Object.assign(Object.assign({
                    delimiter: ",",
                    precision: 3,
                    separator: ".",
                    unit: "",
                    format: "%u%n",
                    significant: !1,
                    stripInsignificantZeros: !1
                }, v(this.get("number.format"))), t))
            }
            get(e) {
                return E(this, e)
            }
            runCallbacks() {
                this.onChangeHandlers.forEach((e=>e(this)))
            }
            hasChanged() {
                this._version += 1,
                this.runCallbacks()
            }
        }
    },
    55580: function(e, t, n) {
        var a = n(56110)(n(9325), "DataView");
        e.exports = a
    },
    21549: function(e, t, n) {
        var a = n(22032)
          , r = n(63862)
          , i = n(66721)
          , o = n(12749)
          , s = n(35749);
        function u(e) {
            var t = -1
              , n = null == e ? 0 : e.length;
            for (this.clear(); ++t < n; ) {
                var a = e[t];
                this.set(a[0], a[1])
            }
        }
        u.prototype.clear = a,
        u.prototype.delete = r,
        u.prototype.get = i,
        u.prototype.has = o,
        u.prototype.set = s,
        e.exports = u
    },
    80079: function(e, t, n) {
        var a = n(63702)
          , r = n(70080)
          , i = n(24739)
          , o = n(48655)
          , s = n(31175);
        function u(e) {
            var t = -1
              , n = null == e ? 0 : e.length;
            for (this.clear(); ++t < n; ) {
                var a = e[t];
                this.set(a[0], a[1])
            }
        }
        u.prototype.clear = a,
        u.prototype.delete = r,
        u.prototype.get = i,
        u.prototype.has = o,
        u.prototype.set = s,
        e.exports = u
    },
    68223: function(e, t, n) {
        var a = n(56110)(n(9325), "Map");
        e.exports = a
    },
    53661: function(e, t, n) {
        var a = n(63040)
          , r = n(17670)
          , i = n(90289)
          , o = n(4509)
          , s = n(72949);
        function u(e) {
            var t = -1
              , n = null == e ? 0 : e.length;
            for (this.clear(); ++t < n; ) {
                var a = e[t];
                this.set(a[0], a[1])
            }
        }
        u.prototype.clear = a,
        u.prototype.delete = r,
        u.prototype.get = i,
        u.prototype.has = o,
        u.prototype.set = s,
        e.exports = u
    },
    32804: function(e, t, n) {
        var a = n(56110)(n(9325), "Promise");
        e.exports = a
    },
    76545: function(e, t, n) {
        var a = n(56110)(n(9325), "Set");
        e.exports = a
    },
    38859: function(e, t, n) {
        var a = n(53661)
          , r = n(31380)
          , i = n(51459);
        function o(e) {
            var t = -1
              , n = null == e ? 0 : e.length;
            for (this.__data__ = new a; ++t < n; )
                this.add(e[t])
        }
        o.prototype.add = o.prototype.push = r,
        o.prototype.has = i,
        e.exports = o
    },
    37217: function(e, t, n) {
        var a = n(80079)
          , r = n(51420)
          , i = n(90938)
          , o = n(63605)
          , s = n(29817)
          , u = n(80945);
        function d(e) {
            var t = this.__data__ = new a(e);
            this.size = t.size
        }
        d.prototype.clear = r,
        d.prototype.delete = i,
        d.prototype.get = o,
        d.prototype.has = s,
        d.prototype.set = u,
        e.exports = d
    },
    51873: function(e, t, n) {
        var a = n(9325).Symbol;
        e.exports = a
    },
    37828: function(e, t, n) {
        var a = n(9325).Uint8Array;
        e.exports = a
    },
    28303: function(e, t, n) {
        var a = n(56110)(n(9325), "WeakMap");
        e.exports = a
    },
    91033: function(e) {
        e.exports = function(e, t, n) {
            switch (n.length) {
            case 0:
                return e.call(t);
            case 1:
                return e.call(t, n[0]);
            case 2:
                return e.call(t, n[0], n[1]);
            case 3:
                return e.call(t, n[0], n[1], n[2])
            }
            return e.apply(t, n)
        }
    },
    79770: function(e) {
        e.exports = function(e, t) {
            for (var n = -1, a = null == e ? 0 : e.length, r = 0, i = []; ++n < a; ) {
                var o = e[n];
                t(o, n, e) && (i[r++] = o)
            }
            return i
        }
    },
    15325: function(e, t, n) {
        var a = n(96131);
        e.exports = function(e, t) {
            return !!(null == e ? 0 : e.length) && a(e, t, 0) > -1
        }
    },
    29905: function(e) {
        e.exports = function(e, t, n) {
            for (var a = -1, r = null == e ? 0 : e.length; ++a < r; )
                if (n(t, e[a]))
                    return !0;
            return !1
        }
    },
    70695: function(e, t, n) {
        var a = n(78096)
          , r = n(72428)
          , i = n(56449)
          , o = n(3656)
          , s = n(30361)
          , u = n(37167)
          , d = Object.prototype.hasOwnProperty;
        e.exports = function(e, t) {
            var n = i(e)
              , l = !n && r(e)
              , c = !n && !l && o(e)
              , m = !n && !l && !c && u(e)
              , h = n || l || c || m
              , f = h ? a(e.length, String) : []
              , p = f.length;
            for (var g in e)
                !t && !d.call(e, g) || h && ("length" == g || c && ("offset" == g || "parent" == g) || m && ("buffer" == g || "byteLength" == g || "byteOffset" == g) || s(g, p)) || f.push(g);
            return f
        }
    },
    34932: function(e) {
        e.exports = function(e, t) {
            for (var n = -1, a = null == e ? 0 : e.length, r = Array(a); ++n < a; )
                r[n] = t(e[n], n, e);
            return r
        }
    },
    14528: function(e) {
        e.exports = function(e, t) {
            for (var n = -1, a = t.length, r = e.length; ++n < a; )
                e[r + n] = t[n];
            return e
        }
    },
    40882: function(e) {
        e.exports = function(e, t, n, a) {
            var r = -1
              , i = null == e ? 0 : e.length;
            for (a && i && (n = e[++r]); ++r < i; )
                n = t(n, e[r], r, e);
            return n
        }
    },
    14248: function(e) {
        e.exports = function(e, t) {
            for (var n = -1, a = null == e ? 0 : e.length; ++n < a; )
                if (t(e[n], n, e))
                    return !0;
            return !1
        }
    },
    61074: function(e) {
        e.exports = function(e) {
            return e.split("")
        }
    },
    1733: function(e) {
        var t = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
        e.exports = function(e) {
            return e.match(t) || []
        }
    },
    87805: function(e, t, n) {
        var a = n(43360)
          , r = n(75288);
        e.exports = function(e, t, n) {
            (void 0 !== n && !r(e[t], n) || void 0 === n && !(t in e)) && a(e, t, n)
        }
    },
    16547: function(e, t, n) {
        var a = n(43360)
          , r = n(75288)
          , i = Object.prototype.hasOwnProperty;
        e.exports = function(e, t, n) {
            var o = e[t];
            i.call(e, t) && r(o, n) && (void 0 !== n || t in e) || a(e, t, n)
        }
    },
    26025: function(e, t, n) {
        var a = n(75288);
        e.exports = function(e, t) {
            for (var n = e.length; n--; )
                if (a(e[n][0], t))
                    return n;
            return -1
        }
    },
    43360: function(e, t, n) {
        var a = n(93243);
        e.exports = function(e, t, n) {
            "__proto__" == t && a ? a(e, t, {
                configurable: !0,
                enumerable: !0,
                value: n,
                writable: !0
            }) : e[t] = n
        }
    },
    39344: function(e, t, n) {
        var a = n(23805)
          , r = Object.create
          , i = function() {
            function e() {}
            return function(t) {
                if (!a(t))
                    return {};
                if (r)
                    return r(t);
                e.prototype = t;
                var n = new e;
                return e.prototype = void 0,
                n
            }
        }();
        e.exports = i
    },
    80909: function(e, t, n) {
        var a = n(30641)
          , r = n(38329)(a);
        e.exports = r
    },
    2523: function(e) {
        e.exports = function(e, t, n, a) {
            for (var r = e.length, i = n + (a ? 1 : -1); a ? i-- : ++i < r; )
                if (t(e[i], i, e))
                    return i;
            return -1
        }
    },
    83120: function(e, t, n) {
        var a = n(14528)
          , r = n(45891);
        e.exports = function e(t, n, i, o, s) {
            var u = -1
              , d = t.length;
            for (i || (i = r),
            s || (s = []); ++u < d; ) {
                var l = t[u];
                n > 0 && i(l) ? n > 1 ? e(l, n - 1, i, o, s) : a(s, l) : o || (s[s.length] = l)
            }
            return s
        }
    },
    86649: function(e, t, n) {
        var a = n(83221)();
        e.exports = a
    },
    30641: function(e, t, n) {
        var a = n(86649)
          , r = n(95950);
        e.exports = function(e, t) {
            return e && a(e, t, r)
        }
    },
    47422: function(e, t, n) {
        var a = n(31769)
          , r = n(77797);
        e.exports = function(e, t) {
            for (var n = 0, i = (t = a(t, e)).length; null != e && n < i; )
                e = e[r(t[n++])];
            return n && n == i ? e : void 0
        }
    },
    82199: function(e, t, n) {
        var a = n(14528)
          , r = n(56449);
        e.exports = function(e, t, n) {
            var i = t(e);
            return r(e) ? i : a(i, n(e))
        }
    },
    72552: function(e, t, n) {
        var a = n(51873)
          , r = n(659)
          , i = n(59350)
          , o = a ? a.toStringTag : void 0;
        e.exports = function(e) {
            return null == e ? void 0 === e ? "[object Undefined]" : "[object Null]" : o && o in Object(e) ? r(e) : i(e)
        }
    },
    20426: function(e) {
        var t = Object.prototype.hasOwnProperty;
        e.exports = function(e, n) {
            return null != e && t.call(e, n)
        }
    },
    28077: function(e) {
        e.exports = function(e, t) {
            return null != e && t in Object(e)
        }
    },
    96131: function(e, t, n) {
        var a = n(2523)
          , r = n(85463)
          , i = n(76959);
        e.exports = function(e, t, n) {
            return t === t ? i(e, t, n) : a(e, r, n)
        }
    },
    27534: function(e, t, n) {
        var a = n(72552)
          , r = n(40346);
        e.exports = function(e) {
            return r(e) && "[object Arguments]" == a(e)
        }
    },
    60270: function(e, t, n) {
        var a = n(87068)
          , r = n(40346);
        e.exports = function e(t, n, i, o, s) {
            return t === n || (null == t || null == n || !r(t) && !r(n) ? t !== t && n !== n : a(t, n, i, o, e, s))
        }
    },
    87068: function(e, t, n) {
        var a = n(37217)
          , r = n(25911)
          , i = n(21986)
          , o = n(50689)
          , s = n(5861)
          , u = n(56449)
          , d = n(3656)
          , l = n(37167)
          , c = "[object Arguments]"
          , m = "[object Array]"
          , h = "[object Object]"
          , f = Object.prototype.hasOwnProperty;
        e.exports = function(e, t, n, p, g, v) {
            var w = u(e)
              , b = u(t)
              , y = w ? m : s(e)
              , k = b ? m : s(t)
              , M = (y = y == c ? h : y) == h
              , P = (k = k == c ? h : k) == h
              , W = y == k;
            if (W && d(e)) {
                if (!d(t))
                    return !1;
                w = !0,
                M = !1
            }
            if (W && !M)
                return v || (v = new a),
                w || l(e) ? r(e, t, n, p, g, v) : i(e, t, y, n, p, g, v);
            if (!(1 & n)) {
                var x = M && f.call(e, "__wrapped__")
                  , S = P && f.call(t, "__wrapped__");
                if (x || S) {
                    var D = x ? e.value() : e
                      , j = S ? t.value() : t;
                    return v || (v = new a),
                    g(D, j, n, p, v)
                }
            }
            return !!W && (v || (v = new a),
            o(e, t, n, p, g, v))
        }
    },
    41799: function(e, t, n) {
        var a = n(37217)
          , r = n(60270);
        e.exports = function(e, t, n, i) {
            var o = n.length
              , s = o
              , u = !i;
            if (null == e)
                return !s;
            for (e = Object(e); o--; ) {
                var d = n[o];
                if (u && d[2] ? d[1] !== e[d[0]] : !(d[0]in e))
                    return !1
            }
            for (; ++o < s; ) {
                var l = (d = n[o])[0]
                  , c = e[l]
                  , m = d[1];
                if (u && d[2]) {
                    if (void 0 === c && !(l in e))
                        return !1
                } else {
                    var h = new a;
                    if (i)
                        var f = i(c, m, l, e, t, h);
                    if (!(void 0 === f ? r(m, c, 3, i, h) : f))
                        return !1
                }
            }
            return !0
        }
    },
    85463: function(e) {
        e.exports = function(e) {
            return e !== e
        }
    },
    45083: function(e, t, n) {
        var a = n(1882)
          , r = n(87296)
          , i = n(23805)
          , o = n(47473)
          , s = /^\[object .+?Constructor\]$/
          , u = Function.prototype
          , d = Object.prototype
          , l = u.toString
          , c = d.hasOwnProperty
          , m = RegExp("^" + l.call(c).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
        e.exports = function(e) {
            return !(!i(e) || r(e)) && (a(e) ? m : s).test(o(e))
        }
    },
    4901: function(e, t, n) {
        var a = n(72552)
          , r = n(30294)
          , i = n(40346)
          , o = {};
        o["[object Float32Array]"] = o["[object Float64Array]"] = o["[object Int8Array]"] = o["[object Int16Array]"] = o["[object Int32Array]"] = o["[object Uint8Array]"] = o["[object Uint8ClampedArray]"] = o["[object Uint16Array]"] = o["[object Uint32Array]"] = !0,
        o["[object Arguments]"] = o["[object Array]"] = o["[object ArrayBuffer]"] = o["[object Boolean]"] = o["[object DataView]"] = o["[object Date]"] = o["[object Error]"] = o["[object Function]"] = o["[object Map]"] = o["[object Number]"] = o["[object Object]"] = o["[object RegExp]"] = o["[object Set]"] = o["[object String]"] = o["[object WeakMap]"] = !1,
        e.exports = function(e) {
            return i(e) && r(e.length) && !!o[a(e)]
        }
    },
    15389: function(e, t, n) {
        var a = n(93663)
          , r = n(87978)
          , i = n(83488)
          , o = n(56449)
          , s = n(50583);
        e.exports = function(e) {
            return "function" == typeof e ? e : null == e ? i : "object" == typeof e ? o(e) ? r(e[0], e[1]) : a(e) : s(e)
        }
    },
    88984: function(e, t, n) {
        var a = n(55527)
          , r = n(3650)
          , i = Object.prototype.hasOwnProperty;
        e.exports = function(e) {
            if (!a(e))
                return r(e);
            var t = [];
            for (var n in Object(e))
                i.call(e, n) && "constructor" != n && t.push(n);
            return t
        }
    },
    72903: function(e, t, n) {
        var a = n(23805)
          , r = n(55527)
          , i = n(90181)
          , o = Object.prototype.hasOwnProperty;
        e.exports = function(e) {
            if (!a(e))
                return i(e);
            var t = r(e)
              , n = [];
            for (var s in e)
                ("constructor" != s || !t && o.call(e, s)) && n.push(s);
            return n
        }
    },
    5128: function(e, t, n) {
        var a = n(80909)
          , r = n(64894);
        e.exports = function(e, t) {
            var n = -1
              , i = r(e) ? Array(e.length) : [];
            return a(e, (function(e, a, r) {
                i[++n] = t(e, a, r)
            }
            )),
            i
        }
    },
    93663: function(e, t, n) {
        var a = n(41799)
          , r = n(10776)
          , i = n(67197);
        e.exports = function(e) {
            var t = r(e);
            return 1 == t.length && t[0][2] ? i(t[0][0], t[0][1]) : function(n) {
                return n === e || a(n, e, t)
            }
        }
    },
    87978: function(e, t, n) {
        var a = n(60270)
          , r = n(58156)
          , i = n(80631)
          , o = n(28586)
          , s = n(30756)
          , u = n(67197)
          , d = n(77797);
        e.exports = function(e, t) {
            return o(e) && s(t) ? u(d(e), t) : function(n) {
                var o = r(n, e);
                return void 0 === o && o === t ? i(n, e) : a(t, o, 3)
            }
        }
    },
    85250: function(e, t, n) {
        var a = n(37217)
          , r = n(87805)
          , i = n(86649)
          , o = n(42824)
          , s = n(23805)
          , u = n(37241)
          , d = n(14974);
        e.exports = function e(t, n, l, c, m) {
            t !== n && i(n, (function(i, u) {
                if (m || (m = new a),
                s(i))
                    o(t, n, u, l, e, c, m);
                else {
                    var h = c ? c(d(t, u), i, u + "", t, n, m) : void 0;
                    void 0 === h && (h = i),
                    r(t, u, h)
                }
            }
            ), u)
        }
    },
    42824: function(e, t, n) {
        var a = n(87805)
          , r = n(93290)
          , i = n(71961)
          , o = n(23007)
          , s = n(35529)
          , u = n(72428)
          , d = n(56449)
          , l = n(83693)
          , c = n(3656)
          , m = n(1882)
          , h = n(23805)
          , f = n(11331)
          , p = n(37167)
          , g = n(14974)
          , v = n(69884);
        e.exports = function(e, t, n, w, b, y, k) {
            var M = g(e, n)
              , P = g(t, n)
              , W = k.get(P);
            if (W)
                a(e, n, W);
            else {
                var x = y ? y(M, P, n + "", e, t, k) : void 0
                  , S = void 0 === x;
                if (S) {
                    var D = d(P)
                      , j = !D && c(P)
                      , C = !D && !j && p(P);
                    x = P,
                    D || j || C ? d(M) ? x = M : l(M) ? x = o(M) : j ? (S = !1,
                    x = r(P, !0)) : C ? (S = !1,
                    x = i(P, !0)) : x = [] : f(P) || u(P) ? (x = M,
                    u(M) ? x = v(M) : h(M) && !m(M) || (x = s(P))) : S = !1
                }
                S && (k.set(P, x),
                b(x, P, w, y, k),
                k.delete(P)),
                a(e, n, x)
            }
        }
    },
    46155: function(e, t, n) {
        var a = n(34932)
          , r = n(47422)
          , i = n(15389)
          , o = n(5128)
          , s = n(73937)
          , u = n(27301)
          , d = n(43714)
          , l = n(83488)
          , c = n(56449);
        e.exports = function(e, t, n) {
            t = t.length ? a(t, (function(e) {
                return c(e) ? function(t) {
                    return r(t, 1 === e.length ? e[0] : e)
                }
                : e
            }
            )) : [l];
            var m = -1;
            t = a(t, u(i));
            var h = o(e, (function(e, n, r) {
                return {
                    criteria: a(t, (function(t) {
                        return t(e)
                    }
                    )),
                    index: ++m,
                    value: e
                }
            }
            ));
            return s(h, (function(e, t) {
                return d(e, t, n)
            }
            ))
        }
    },
    47237: function(e) {
        e.exports = function(e) {
            return function(t) {
                return null == t ? void 0 : t[e]
            }
        }
    },
    17255: function(e, t, n) {
        var a = n(47422);
        e.exports = function(e) {
            return function(t) {
                return a(t, e)
            }
        }
    },
    54552: function(e) {
        e.exports = function(e) {
            return function(t) {
                return null == e ? void 0 : e[t]
            }
        }
    },
    86151: function(e) {
        var t = Math.ceil
          , n = Math.max;
        e.exports = function(e, a, r, i) {
            for (var o = -1, s = n(t((a - e) / (r || 1)), 0), u = Array(s); s--; )
                u[i ? s : ++o] = e,
                e += r;
            return u
        }
    },
    84051: function(e) {
        var t = Math.floor;
        e.exports = function(e, n) {
            var a = "";
            if (!e || n < 1 || n > 9007199254740991)
                return a;
            do {
                n % 2 && (a += e),
                (n = t(n / 2)) && (e += e)
            } while (n);
            return a
        }
    },
    69302: function(e, t, n) {
        var a = n(83488)
          , r = n(56757)
          , i = n(32865);
        e.exports = function(e, t) {
            return i(r(e, t, a), e + "")
        }
    },
    19570: function(e, t, n) {
        var a = n(37334)
          , r = n(93243)
          , i = n(83488)
          , o = r ? function(e, t) {
            return r(e, "toString", {
                configurable: !0,
                enumerable: !1,
                value: a(t),
                writable: !0
            })
        }
        : i;
        e.exports = o
    },
    25160: function(e) {
        e.exports = function(e, t, n) {
            var a = -1
              , r = e.length;
            t < 0 && (t = -t > r ? 0 : r + t),
            (n = n > r ? r : n) < 0 && (n += r),
            r = t > n ? 0 : n - t >>> 0,
            t >>>= 0;
            for (var i = Array(r); ++a < r; )
                i[a] = e[a + t];
            return i
        }
    },
    73937: function(e) {
        e.exports = function(e, t) {
            var n = e.length;
            for (e.sort(t); n--; )
                e[n] = e[n].value;
            return e
        }
    },
    78096: function(e) {
        e.exports = function(e, t) {
            for (var n = -1, a = Array(e); ++n < e; )
                a[n] = t(n);
            return a
        }
    },
    77556: function(e, t, n) {
        var a = n(51873)
          , r = n(34932)
          , i = n(56449)
          , o = n(44394)
          , s = a ? a.prototype : void 0
          , u = s ? s.toString : void 0;
        e.exports = function e(t) {
            if ("string" == typeof t)
                return t;
            if (i(t))
                return r(t, e) + "";
            if (o(t))
                return u ? u.call(t) : "";
            var n = t + "";
            return "0" == n && 1 / t == -Infinity ? "-0" : n
        }
    },
    54128: function(e, t, n) {
        var a = n(31800)
          , r = /^\s+/;
        e.exports = function(e) {
            return e ? e.slice(0, a(e) + 1).replace(r, "") : e
        }
    },
    27301: function(e) {
        e.exports = function(e) {
            return function(t) {
                return e(t)
            }
        }
    },
    55765: function(e, t, n) {
        var a = n(38859)
          , r = n(15325)
          , i = n(29905)
          , o = n(19219)
          , s = n(44517)
          , u = n(84247);
        e.exports = function(e, t, n) {
            var d = -1
              , l = r
              , c = e.length
              , m = !0
              , h = []
              , f = h;
            if (n)
                m = !1,
                l = i;
            else if (c >= 200) {
                var p = t ? null : s(e);
                if (p)
                    return u(p);
                m = !1,
                l = o,
                f = new a
            } else
                f = t ? [] : h;
            e: for (; ++d < c; ) {
                var g = e[d]
                  , v = t ? t(g) : g;
                if (g = n || 0 !== g ? g : 0,
                m && v === v) {
                    for (var w = f.length; w--; )
                        if (f[w] === v)
                            continue e;
                    t && f.push(v),
                    h.push(g)
                } else
                    l(f, v, n) || (f !== h && f.push(v),
                    h.push(g))
            }
            return h
        }
    },
    51234: function(e) {
        e.exports = function(e, t, n) {
            for (var a = -1, r = e.length, i = t.length, o = {}; ++a < r; ) {
                var s = a < i ? t[a] : void 0;
                n(o, e[a], s)
            }
            return o
        }
    },
    19219: function(e) {
        e.exports = function(e, t) {
            return e.has(t)
        }
    },
    31769: function(e, t, n) {
        var a = n(56449)
          , r = n(28586)
          , i = n(61802)
          , o = n(13222);
        e.exports = function(e, t) {
            return a(e) ? e : r(e, t) ? [e] : i(o(e))
        }
    },
    28754: function(e, t, n) {
        var a = n(25160);
        e.exports = function(e, t, n) {
            var r = e.length;
            return n = void 0 === n ? r : n,
            !t && n >= r ? e : a(e, t, n)
        }
    },
    49653: function(e, t, n) {
        var a = n(37828);
        e.exports = function(e) {
            var t = new e.constructor(e.byteLength);
            return new a(t).set(new a(e)),
            t
        }
    },
    93290: function(e, t, n) {
        e = n.nmd(e);
        var a = n(9325)
          , r = t && !t.nodeType && t
          , i = r && e && !e.nodeType && e
          , o = i && i.exports === r ? a.Buffer : void 0
          , s = o ? o.allocUnsafe : void 0;
        e.exports = function(e, t) {
            if (t)
                return e.slice();
            var n = e.length
              , a = s ? s(n) : new e.constructor(n);
            return e.copy(a),
            a
        }
    },
    71961: function(e, t, n) {
        var a = n(49653);
        e.exports = function(e, t) {
            var n = t ? a(e.buffer) : e.buffer;
            return new e.constructor(n,e.byteOffset,e.length)
        }
    },
    53730: function(e, t, n) {
        var a = n(44394);
        e.exports = function(e, t) {
            if (e !== t) {
                var n = void 0 !== e
                  , r = null === e
                  , i = e === e
                  , o = a(e)
                  , s = void 0 !== t
                  , u = null === t
                  , d = t === t
                  , l = a(t);
                if (!u && !l && !o && e > t || o && s && d && !u && !l || r && s && d || !n && d || !i)
                    return 1;
                if (!r && !o && !l && e < t || l && n && i && !r && !o || u && n && i || !s && i || !d)
                    return -1
            }
            return 0
        }
    },
    43714: function(e, t, n) {
        var a = n(53730);
        e.exports = function(e, t, n) {
            for (var r = -1, i = e.criteria, o = t.criteria, s = i.length, u = n.length; ++r < s; ) {
                var d = a(i[r], o[r]);
                if (d)
                    return r >= u ? d : d * ("desc" == n[r] ? -1 : 1)
            }
            return e.index - t.index
        }
    },
    23007: function(e) {
        e.exports = function(e, t) {
            var n = -1
              , a = e.length;
            for (t || (t = Array(a)); ++n < a; )
                t[n] = e[n];
            return t
        }
    },
    21791: function(e, t, n) {
        var a = n(16547)
          , r = n(43360);
        e.exports = function(e, t, n, i) {
            var o = !n;
            n || (n = {});
            for (var s = -1, u = t.length; ++s < u; ) {
                var d = t[s]
                  , l = i ? i(n[d], e[d], d, n, e) : void 0;
                void 0 === l && (l = e[d]),
                o ? r(n, d, l) : a(n, d, l)
            }
            return n
        }
    },
    55481: function(e, t, n) {
        var a = n(9325)["__core-js_shared__"];
        e.exports = a
    },
    20999: function(e, t, n) {
        var a = n(69302)
          , r = n(36800);
        e.exports = function(e) {
            return a((function(t, n) {
                var a = -1
                  , i = n.length
                  , o = i > 1 ? n[i - 1] : void 0
                  , s = i > 2 ? n[2] : void 0;
                for (o = e.length > 3 && "function" == typeof o ? (i--,
                o) : void 0,
                s && r(n[0], n[1], s) && (o = i < 3 ? void 0 : o,
                i = 1),
                t = Object(t); ++a < i; ) {
                    var u = n[a];
                    u && e(t, u, a, o)
                }
                return t
            }
            ))
        }
    },
    38329: function(e, t, n) {
        var a = n(64894);
        e.exports = function(e, t) {
            return function(n, r) {
                if (null == n)
                    return n;
                if (!a(n))
                    return e(n, r);
                for (var i = n.length, o = t ? i : -1, s = Object(n); (t ? o-- : ++o < i) && !1 !== r(s[o], o, s); )
                    ;
                return n
            }
        }
    },
    83221: function(e) {
        e.exports = function(e) {
            return function(t, n, a) {
                for (var r = -1, i = Object(t), o = a(t), s = o.length; s--; ) {
                    var u = o[e ? s : ++r];
                    if (!1 === n(i[u], u, i))
                        break
                }
                return t
            }
        }
    },
    12507: function(e, t, n) {
        var a = n(28754)
          , r = n(49698)
          , i = n(63912)
          , o = n(13222);
        e.exports = function(e) {
            return function(t) {
                t = o(t);
                var n = r(t) ? i(t) : void 0
                  , s = n ? n[0] : t.charAt(0)
                  , u = n ? a(n, 1).join("") : t.slice(1);
                return s[e]() + u
            }
        }
    },
    45539: function(e, t, n) {
        var a = n(40882)
          , r = n(50828)
          , i = n(66645)
          , o = RegExp("['\u2019]", "g");
        e.exports = function(e) {
            return function(t) {
                return a(i(r(t).replace(o, "")), e, "")
            }
        }
    },
    85508: function(e, t, n) {
        var a = n(86151)
          , r = n(36800)
          , i = n(17400);
        e.exports = function(e) {
            return function(t, n, o) {
                return o && "number" != typeof o && r(t, n, o) && (n = o = void 0),
                t = i(t),
                void 0 === n ? (n = t,
                t = 0) : n = i(n),
                o = void 0 === o ? t < n ? 1 : -1 : i(o),
                a(t, n, o, e)
            }
        }
    },
    44517: function(e, t, n) {
        var a = n(76545)
          , r = n(63950)
          , i = n(84247)
          , o = a && 1 / i(new a([, -0]))[1] == 1 / 0 ? function(e) {
            return new a(e)
        }
        : r;
        e.exports = o
    },
    24647: function(e, t, n) {
        var a = n(54552)({
            "\xc0": "A",
            "\xc1": "A",
            "\xc2": "A",
            "\xc3": "A",
            "\xc4": "A",
            "\xc5": "A",
            "\xe0": "a",
            "\xe1": "a",
            "\xe2": "a",
            "\xe3": "a",
            "\xe4": "a",
            "\xe5": "a",
            "\xc7": "C",
            "\xe7": "c",
            "\xd0": "D",
            "\xf0": "d",
            "\xc8": "E",
            "\xc9": "E",
            "\xca": "E",
            "\xcb": "E",
            "\xe8": "e",
            "\xe9": "e",
            "\xea": "e",
            "\xeb": "e",
            "\xcc": "I",
            "\xcd": "I",
            "\xce": "I",
            "\xcf": "I",
            "\xec": "i",
            "\xed": "i",
            "\xee": "i",
            "\xef": "i",
            "\xd1": "N",
            "\xf1": "n",
            "\xd2": "O",
            "\xd3": "O",
            "\xd4": "O",
            "\xd5": "O",
            "\xd6": "O",
            "\xd8": "O",
            "\xf2": "o",
            "\xf3": "o",
            "\xf4": "o",
            "\xf5": "o",
            "\xf6": "o",
            "\xf8": "o",
            "\xd9": "U",
            "\xda": "U",
            "\xdb": "U",
            "\xdc": "U",
            "\xf9": "u",
            "\xfa": "u",
            "\xfb": "u",
            "\xfc": "u",
            "\xdd": "Y",
            "\xfd": "y",
            "\xff": "y",
            "\xc6": "Ae",
            "\xe6": "ae",
            "\xde": "Th",
            "\xfe": "th",
            "\xdf": "ss",
            "\u0100": "A",
            "\u0102": "A",
            "\u0104": "A",
            "\u0101": "a",
            "\u0103": "a",
            "\u0105": "a",
            "\u0106": "C",
            "\u0108": "C",
            "\u010a": "C",
            "\u010c": "C",
            "\u0107": "c",
            "\u0109": "c",
            "\u010b": "c",
            "\u010d": "c",
            "\u010e": "D",
            "\u0110": "D",
            "\u010f": "d",
            "\u0111": "d",
            "\u0112": "E",
            "\u0114": "E",
            "\u0116": "E",
            "\u0118": "E",
            "\u011a": "E",
            "\u0113": "e",
            "\u0115": "e",
            "\u0117": "e",
            "\u0119": "e",
            "\u011b": "e",
            "\u011c": "G",
            "\u011e": "G",
            "\u0120": "G",
            "\u0122": "G",
            "\u011d": "g",
            "\u011f": "g",
            "\u0121": "g",
            "\u0123": "g",
            "\u0124": "H",
            "\u0126": "H",
            "\u0125": "h",
            "\u0127": "h",
            "\u0128": "I",
            "\u012a": "I",
            "\u012c": "I",
            "\u012e": "I",
            "\u0130": "I",
            "\u0129": "i",
            "\u012b": "i",
            "\u012d": "i",
            "\u012f": "i",
            "\u0131": "i",
            "\u0134": "J",
            "\u0135": "j",
            "\u0136": "K",
            "\u0137": "k",
            "\u0138": "k",
            "\u0139": "L",
            "\u013b": "L",
            "\u013d": "L",
            "\u013f": "L",
            "\u0141": "L",
            "\u013a": "l",
            "\u013c": "l",
            "\u013e": "l",
            "\u0140": "l",
            "\u0142": "l",
            "\u0143": "N",
            "\u0145": "N",
            "\u0147": "N",
            "\u014a": "N",
            "\u0144": "n",
            "\u0146": "n",
            "\u0148": "n",
            "\u014b": "n",
            "\u014c": "O",
            "\u014e": "O",
            "\u0150": "O",
            "\u014d": "o",
            "\u014f": "o",
            "\u0151": "o",
            "\u0154": "R",
            "\u0156": "R",
            "\u0158": "R",
            "\u0155": "r",
            "\u0157": "r",
            "\u0159": "r",
            "\u015a": "S",
            "\u015c": "S",
            "\u015e": "S",
            "\u0160": "S",
            "\u015b": "s",
            "\u015d": "s",
            "\u015f": "s",
            "\u0161": "s",
            "\u0162": "T",
            "\u0164": "T",
            "\u0166": "T",
            "\u0163": "t",
            "\u0165": "t",
            "\u0167": "t",
            "\u0168": "U",
            "\u016a": "U",
            "\u016c": "U",
            "\u016e": "U",
            "\u0170": "U",
            "\u0172": "U",
            "\u0169": "u",
            "\u016b": "u",
            "\u016d": "u",
            "\u016f": "u",
            "\u0171": "u",
            "\u0173": "u",
            "\u0174": "W",
            "\u0175": "w",
            "\u0176": "Y",
            "\u0177": "y",
            "\u0178": "Y",
            "\u0179": "Z",
            "\u017b": "Z",
            "\u017d": "Z",
            "\u017a": "z",
            "\u017c": "z",
            "\u017e": "z",
            "\u0132": "IJ",
            "\u0133": "ij",
            "\u0152": "Oe",
            "\u0153": "oe",
            "\u0149": "'n",
            "\u017f": "s"
        });
        e.exports = a
    },
    93243: function(e, t, n) {
        var a = n(56110)
          , r = function() {
            try {
                var e = a(Object, "defineProperty");
                return e({}, "", {}),
                e
            } catch (t) {}
        }();
        e.exports = r
    },
    25911: function(e, t, n) {
        var a = n(38859)
          , r = n(14248)
          , i = n(19219);
        e.exports = function(e, t, n, o, s, u) {
            var d = 1 & n
              , l = e.length
              , c = t.length;
            if (l != c && !(d && c > l))
                return !1;
            var m = u.get(e)
              , h = u.get(t);
            if (m && h)
                return m == t && h == e;
            var f = -1
              , p = !0
              , g = 2 & n ? new a : void 0;
            for (u.set(e, t),
            u.set(t, e); ++f < l; ) {
                var v = e[f]
                  , w = t[f];
                if (o)
                    var b = d ? o(w, v, f, t, e, u) : o(v, w, f, e, t, u);
                if (void 0 !== b) {
                    if (b)
                        continue;
                    p = !1;
                    break
                }
                if (g) {
                    if (!r(t, (function(e, t) {
                        if (!i(g, t) && (v === e || s(v, e, n, o, u)))
                            return g.push(t)
                    }
                    ))) {
                        p = !1;
                        break
                    }
                } else if (v !== w && !s(v, w, n, o, u)) {
                    p = !1;
                    break
                }
            }
            return u.delete(e),
            u.delete(t),
            p
        }
    },
    21986: function(e, t, n) {
        var a = n(51873)
          , r = n(37828)
          , i = n(75288)
          , o = n(25911)
          , s = n(20317)
          , u = n(84247)
          , d = a ? a.prototype : void 0
          , l = d ? d.valueOf : void 0;
        e.exports = function(e, t, n, a, d, c, m) {
            switch (n) {
            case "[object DataView]":
                if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
                    return !1;
                e = e.buffer,
                t = t.buffer;
            case "[object ArrayBuffer]":
                return !(e.byteLength != t.byteLength || !c(new r(e), new r(t)));
            case "[object Boolean]":
            case "[object Date]":
            case "[object Number]":
                return i(+e, +t);
            case "[object Error]":
                return e.name == t.name && e.message == t.message;
            case "[object RegExp]":
            case "[object String]":
                return e == t + "";
            case "[object Map]":
                var h = s;
            case "[object Set]":
                var f = 1 & a;
                if (h || (h = u),
                e.size != t.size && !f)
                    return !1;
                var p = m.get(e);
                if (p)
                    return p == t;
                a |= 2,
                m.set(e, t);
                var g = o(h(e), h(t), a, d, c, m);
                return m.delete(e),
                g;
            case "[object Symbol]":
                if (l)
                    return l.call(e) == l.call(t)
            }
            return !1
        }
    },
    50689: function(e, t, n) {
        var a = n(50002)
          , r = Object.prototype.hasOwnProperty;
        e.exports = function(e, t, n, i, o, s) {
            var u = 1 & n
              , d = a(e)
              , l = d.length;
            if (l != a(t).length && !u)
                return !1;
            for (var c = l; c--; ) {
                var m = d[c];
                if (!(u ? m in t : r.call(t, m)))
                    return !1
            }
            var h = s.get(e)
              , f = s.get(t);
            if (h && f)
                return h == t && f == e;
            var p = !0;
            s.set(e, t),
            s.set(t, e);
            for (var g = u; ++c < l; ) {
                var v = e[m = d[c]]
                  , w = t[m];
                if (i)
                    var b = u ? i(w, v, m, t, e, s) : i(v, w, m, e, t, s);
                if (!(void 0 === b ? v === w || o(v, w, n, i, s) : b)) {
                    p = !1;
                    break
                }
                g || (g = "constructor" == m)
            }
            if (p && !g) {
                var y = e.constructor
                  , k = t.constructor;
                y == k || !("constructor"in e) || !("constructor"in t) || "function" == typeof y && y instanceof y && "function" == typeof k && k instanceof k || (p = !1)
            }
            return s.delete(e),
            s.delete(t),
            p
        }
    },
    34840: function(e, t, n) {
        var a = "object" == typeof n.g && n.g && n.g.Object === Object && n.g;
        e.exports = a
    },
    50002: function(e, t, n) {
        var a = n(82199)
          , r = n(4664)
          , i = n(95950);
        e.exports = function(e) {
            return a(e, i, r)
        }
    },
    12651: function(e, t, n) {
        var a = n(74218);
        e.exports = function(e, t) {
            var n = e.__data__;
            return a(t) ? n["string" == typeof t ? "string" : "hash"] : n.map
        }
    },
    10776: function(e, t, n) {
        var a = n(30756)
          , r = n(95950);
        e.exports = function(e) {
            for (var t = r(e), n = t.length; n--; ) {
                var i = t[n]
                  , o = e[i];
                t[n] = [i, o, a(o)]
            }
            return t
        }
    },
    56110: function(e, t, n) {
        var a = n(45083)
          , r = n(10392);
        e.exports = function(e, t) {
            var n = r(e, t);
            return a(n) ? n : void 0
        }
    },
    28879: function(e, t, n) {
        var a = n(74335)(Object.getPrototypeOf, Object);
        e.exports = a
    },
    659: function(e, t, n) {
        var a = n(51873)
          , r = Object.prototype
          , i = r.hasOwnProperty
          , o = r.toString
          , s = a ? a.toStringTag : void 0;
        e.exports = function(e) {
            var t = i.call(e, s)
              , n = e[s];
            try {
                e[s] = void 0;
                var a = !0
            } catch (u) {}
            var r = o.call(e);
            return a && (t ? e[s] = n : delete e[s]),
            r
        }
    },
    4664: function(e, t, n) {
        var a = n(79770)
          , r = n(63345)
          , i = Object.prototype.propertyIsEnumerable
          , o = Object.getOwnPropertySymbols
          , s = o ? function(e) {
            return null == e ? [] : (e = Object(e),
            a(o(e), (function(t) {
                return i.call(e, t)
            }
            )))
        }
        : r;
        e.exports = s
    },
    5861: function(e, t, n) {
        var a = n(55580)
          , r = n(68223)
          , i = n(32804)
          , o = n(76545)
          , s = n(28303)
          , u = n(72552)
          , d = n(47473)
          , l = "[object Map]"
          , c = "[object Promise]"
          , m = "[object Set]"
          , h = "[object WeakMap]"
          , f = "[object DataView]"
          , p = d(a)
          , g = d(r)
          , v = d(i)
          , w = d(o)
          , b = d(s)
          , y = u;
        (a && y(new a(new ArrayBuffer(1))) != f || r && y(new r) != l || i && y(i.resolve()) != c || o && y(new o) != m || s && y(new s) != h) && (y = function(e) {
            var t = u(e)
              , n = "[object Object]" == t ? e.constructor : void 0
              , a = n ? d(n) : "";
            if (a)
                switch (a) {
                case p:
                    return f;
                case g:
                    return l;
                case v:
                    return c;
                case w:
                    return m;
                case b:
                    return h
                }
            return t
        }
        ),
        e.exports = y
    },
    10392: function(e) {
        e.exports = function(e, t) {
            return null == e ? void 0 : e[t]
        }
    },
    49326: function(e, t, n) {
        var a = n(31769)
          , r = n(72428)
          , i = n(56449)
          , o = n(30361)
          , s = n(30294)
          , u = n(77797);
        e.exports = function(e, t, n) {
            for (var d = -1, l = (t = a(t, e)).length, c = !1; ++d < l; ) {
                var m = u(t[d]);
                if (!(c = null != e && n(e, m)))
                    break;
                e = e[m]
            }
            return c || ++d != l ? c : !!(l = null == e ? 0 : e.length) && s(l) && o(m, l) && (i(e) || r(e))
        }
    },
    49698: function(e) {
        var t = RegExp("[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]");
        e.exports = function(e) {
            return t.test(e)
        }
    },
    45434: function(e) {
        var t = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
        e.exports = function(e) {
            return t.test(e)
        }
    },
    22032: function(e, t, n) {
        var a = n(81042);
        e.exports = function() {
            this.__data__ = a ? a(null) : {},
            this.size = 0
        }
    },
    63862: function(e) {
        e.exports = function(e) {
            var t = this.has(e) && delete this.__data__[e];
            return this.size -= t ? 1 : 0,
            t
        }
    },
    66721: function(e, t, n) {
        var a = n(81042)
          , r = Object.prototype.hasOwnProperty;
        e.exports = function(e) {
            var t = this.__data__;
            if (a) {
                var n = t[e];
                return "__lodash_hash_undefined__" === n ? void 0 : n
            }
            return r.call(t, e) ? t[e] : void 0
        }
    },
    12749: function(e, t, n) {
        var a = n(81042)
          , r = Object.prototype.hasOwnProperty;
        e.exports = function(e) {
            var t = this.__data__;
            return a ? void 0 !== t[e] : r.call(t, e)
        }
    },
    35749: function(e, t, n) {
        var a = n(81042);
        e.exports = function(e, t) {
            var n = this.__data__;
            return this.size += this.has(e) ? 0 : 1,
            n[e] = a && void 0 === t ? "__lodash_hash_undefined__" : t,
            this
        }
    },
    35529: function(e, t, n) {
        var a = n(39344)
          , r = n(28879)
          , i = n(55527);
        e.exports = function(e) {
            return "function" != typeof e.constructor || i(e) ? {} : a(r(e))
        }
    },
    45891: function(e, t, n) {
        var a = n(51873)
          , r = n(72428)
          , i = n(56449)
          , o = a ? a.isConcatSpreadable : void 0;
        e.exports = function(e) {
            return i(e) || r(e) || !!(o && e && e[o])
        }
    },
    30361: function(e) {
        var t = /^(?:0|[1-9]\d*)$/;
        e.exports = function(e, n) {
            var a = typeof e;
            return !!(n = null == n ? 9007199254740991 : n) && ("number" == a || "symbol" != a && t.test(e)) && e > -1 && e % 1 == 0 && e < n
        }
    },
    36800: function(e, t, n) {
        var a = n(75288)
          , r = n(64894)
          , i = n(30361)
          , o = n(23805);
        e.exports = function(e, t, n) {
            if (!o(n))
                return !1;
            var s = typeof t;
            return !!("number" == s ? r(n) && i(t, n.length) : "string" == s && t in n) && a(n[t], e)
        }
    },
    28586: function(e, t, n) {
        var a = n(56449)
          , r = n(44394)
          , i = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/
          , o = /^\w*$/;
        e.exports = function(e, t) {
            if (a(e))
                return !1;
            var n = typeof e;
            return !("number" != n && "symbol" != n && "boolean" != n && null != e && !r(e)) || (o.test(e) || !i.test(e) || null != t && e in Object(t))
        }
    },
    74218: function(e) {
        e.exports = function(e) {
            var t = typeof e;
            return "string" == t || "number" == t || "symbol" == t || "boolean" == t ? "__proto__" !== e : null === e
        }
    },
    87296: function(e, t, n) {
        var a, r = n(55481), i = (a = /[^.]+$/.exec(r && r.keys && r.keys.IE_PROTO || "")) ? "Symbol(src)_1." + a : "";
        e.exports = function(e) {
            return !!i && i in e
        }
    },
    55527: function(e) {
        var t = Object.prototype;
        e.exports = function(e) {
            var n = e && e.constructor;
            return e === ("function" == typeof n && n.prototype || t)
        }
    },
    30756: function(e, t, n) {
        var a = n(23805);
        e.exports = function(e) {
            return e === e && !a(e)
        }
    },
    63702: function(e) {
        e.exports = function() {
            this.__data__ = [],
            this.size = 0
        }
    },
    70080: function(e, t, n) {
        var a = n(26025)
          , r = Array.prototype.splice;
        e.exports = function(e) {
            var t = this.__data__
              , n = a(t, e);
            return !(n < 0) && (n == t.length - 1 ? t.pop() : r.call(t, n, 1),
            --this.size,
            !0)
        }
    },
    24739: function(e, t, n) {
        var a = n(26025);
        e.exports = function(e) {
            var t = this.__data__
              , n = a(t, e);
            return n < 0 ? void 0 : t[n][1]
        }
    },
    48655: function(e, t, n) {
        var a = n(26025);
        e.exports = function(e) {
            return a(this.__data__, e) > -1
        }
    },
    31175: function(e, t, n) {
        var a = n(26025);
        e.exports = function(e, t) {
            var n = this.__data__
              , r = a(n, e);
            return r < 0 ? (++this.size,
            n.push([e, t])) : n[r][1] = t,
            this
        }
    },
    63040: function(e, t, n) {
        var a = n(21549)
          , r = n(80079)
          , i = n(68223);
        e.exports = function() {
            this.size = 0,
            this.__data__ = {
                hash: new a,
                map: new (i || r),
                string: new a
            }
        }
    },
    17670: function(e, t, n) {
        var a = n(12651);
        e.exports = function(e) {
            var t = a(this, e).delete(e);
            return this.size -= t ? 1 : 0,
            t
        }
    },
    90289: function(e, t, n) {
        var a = n(12651);
        e.exports = function(e) {
            return a(this, e).get(e)
        }
    },
    4509: function(e, t, n) {
        var a = n(12651);
        e.exports = function(e) {
            return a(this, e).has(e)
        }
    },
    72949: function(e, t, n) {
        var a = n(12651);
        e.exports = function(e, t) {
            var n = a(this, e)
              , r = n.size;
            return n.set(e, t),
            this.size += n.size == r ? 0 : 1,
            this
        }
    },
    20317: function(e) {
        e.exports = function(e) {
            var t = -1
              , n = Array(e.size);
            return e.forEach((function(e, a) {
                n[++t] = [a, e]
            }
            )),
            n
        }
    },
    67197: function(e) {
        e.exports = function(e, t) {
            return function(n) {
                return null != n && (n[e] === t && (void 0 !== t || e in Object(n)))
            }
        }
    },
    62224: function(e, t, n) {
        var a = n(50104);
        e.exports = function(e) {
            var t = a(e, (function(e) {
                return 500 === n.size && n.clear(),
                e
            }
            ))
              , n = t.cache;
            return t
        }
    },
    81042: function(e, t, n) {
        var a = n(56110)(Object, "create");
        e.exports = a
    },
    3650: function(e, t, n) {
        var a = n(74335)(Object.keys, Object);
        e.exports = a
    },
    90181: function(e) {
        e.exports = function(e) {
            var t = [];
            if (null != e)
                for (var n in Object(e))
                    t.push(n);
            return t
        }
    },
    86009: function(e, t, n) {
        e = n.nmd(e);
        var a = n(34840)
          , r = t && !t.nodeType && t
          , i = r && e && !e.nodeType && e
          , o = i && i.exports === r && a.process
          , s = function() {
            try {
                var e = i && i.require && i.require("util").types;
                return e || o && o.binding && o.binding("util")
            } catch (t) {}
        }();
        e.exports = s
    },
    59350: function(e) {
        var t = Object.prototype.toString;
        e.exports = function(e) {
            return t.call(e)
        }
    },
    74335: function(e) {
        e.exports = function(e, t) {
            return function(n) {
                return e(t(n))
            }
        }
    },
    56757: function(e, t, n) {
        var a = n(91033)
          , r = Math.max;
        e.exports = function(e, t, n) {
            return t = r(void 0 === t ? e.length - 1 : t, 0),
            function() {
                for (var i = arguments, o = -1, s = r(i.length - t, 0), u = Array(s); ++o < s; )
                    u[o] = i[t + o];
                o = -1;
                for (var d = Array(t + 1); ++o < t; )
                    d[o] = i[o];
                return d[t] = n(u),
                a(e, this, d)
            }
        }
    },
    9325: function(e, t, n) {
        var a = n(34840)
          , r = "object" == typeof self && self && self.Object === Object && self
          , i = a || r || Function("return this")();
        e.exports = i
    },
    14974: function(e) {
        e.exports = function(e, t) {
            if (("constructor" !== t || "function" !== typeof e[t]) && "__proto__" != t)
                return e[t]
        }
    },
    31380: function(e) {
        e.exports = function(e) {
            return this.__data__.set(e, "__lodash_hash_undefined__"),
            this
        }
    },
    51459: function(e) {
        e.exports = function(e) {
            return this.__data__.has(e)
        }
    },
    84247: function(e) {
        e.exports = function(e) {
            var t = -1
              , n = Array(e.size);
            return e.forEach((function(e) {
                n[++t] = e
            }
            )),
            n
        }
    },
    32865: function(e, t, n) {
        var a = n(19570)
          , r = n(51811)(a);
        e.exports = r
    },
    51811: function(e) {
        var t = Date.now;
        e.exports = function(e) {
            var n = 0
              , a = 0;
            return function() {
                var r = t()
                  , i = 16 - (r - a);
                if (a = r,
                i > 0) {
                    if (++n >= 800)
                        return arguments[0]
                } else
                    n = 0;
                return e.apply(void 0, arguments)
            }
        }
    },
    51420: function(e, t, n) {
        var a = n(80079);
        e.exports = function() {
            this.__data__ = new a,
            this.size = 0
        }
    },
    90938: function(e) {
        e.exports = function(e) {
            var t = this.__data__
              , n = t.delete(e);
            return this.size = t.size,
            n
        }
    },
    63605: function(e) {
        e.exports = function(e) {
            return this.__data__.get(e)
        }
    },
    29817: function(e) {
        e.exports = function(e) {
            return this.__data__.has(e)
        }
    },
    80945: function(e, t, n) {
        var a = n(80079)
          , r = n(68223)
          , i = n(53661);
        e.exports = function(e, t) {
            var n = this.__data__;
            if (n instanceof a) {
                var o = n.__data__;
                if (!r || o.length < 199)
                    return o.push([e, t]),
                    this.size = ++n.size,
                    this;
                n = this.__data__ = new i(o)
            }
            return n.set(e, t),
            this.size = n.size,
            this
        }
    },
    76959: function(e) {
        e.exports = function(e, t, n) {
            for (var a = n - 1, r = e.length; ++a < r; )
                if (e[a] === t)
                    return a;
            return -1
        }
    },
    63912: function(e, t, n) {
        var a = n(61074)
          , r = n(49698)
          , i = n(42054);
        e.exports = function(e) {
            return r(e) ? i(e) : a(e)
        }
    },
    61802: function(e, t, n) {
        var a = n(62224)
          , r = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g
          , i = /\\(\\)?/g
          , o = a((function(e) {
            var t = [];
            return 46 === e.charCodeAt(0) && t.push(""),
            e.replace(r, (function(e, n, a, r) {
                t.push(a ? r.replace(i, "$1") : n || e)
            }
            )),
            t
        }
        ));
        e.exports = o
    },
    77797: function(e, t, n) {
        var a = n(44394);
        e.exports = function(e) {
            if ("string" == typeof e || a(e))
                return e;
            var t = e + "";
            return "0" == t && 1 / e == -Infinity ? "-0" : t
        }
    },
    47473: function(e) {
        var t = Function.prototype.toString;
        e.exports = function(e) {
            if (null != e) {
                try {
                    return t.call(e)
                } catch (n) {}
                try {
                    return e + ""
                } catch (n) {}
            }
            return ""
        }
    },
    31800: function(e) {
        var t = /\s/;
        e.exports = function(e) {
            for (var n = e.length; n-- && t.test(e.charAt(n)); )
                ;
            return n
        }
    },
    42054: function(e) {
        var t = "\\ud800-\\udfff"
          , n = "[" + t + "]"
          , a = "[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]"
          , r = "\\ud83c[\\udffb-\\udfff]"
          , i = "[^" + t + "]"
          , o = "(?:\\ud83c[\\udde6-\\uddff]){2}"
          , s = "[\\ud800-\\udbff][\\udc00-\\udfff]"
          , u = "(?:" + a + "|" + r + ")" + "?"
          , d = "[\\ufe0e\\ufe0f]?"
          , l = d + u + ("(?:\\u200d(?:" + [i, o, s].join("|") + ")" + d + u + ")*")
          , c = "(?:" + [i + a + "?", a, o, s, n].join("|") + ")"
          , m = RegExp(r + "(?=" + r + ")|" + c + l, "g");
        e.exports = function(e) {
            return e.match(m) || []
        }
    },
    22225: function(e) {
        var t = "\\ud800-\\udfff"
          , n = "\\u2700-\\u27bf"
          , a = "a-z\\xdf-\\xf6\\xf8-\\xff"
          , r = "A-Z\\xc0-\\xd6\\xd8-\\xde"
          , i = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000"
          , o = "[" + i + "]"
          , s = "\\d+"
          , u = "[" + n + "]"
          , d = "[" + a + "]"
          , l = "[^" + t + i + s + n + a + r + "]"
          , c = "(?:\\ud83c[\\udde6-\\uddff]){2}"
          , m = "[\\ud800-\\udbff][\\udc00-\\udfff]"
          , h = "[" + r + "]"
          , f = "(?:" + d + "|" + l + ")"
          , p = "(?:" + h + "|" + l + ")"
          , g = "(?:['\u2019](?:d|ll|m|re|s|t|ve))?"
          , v = "(?:['\u2019](?:D|LL|M|RE|S|T|VE))?"
          , w = "(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?"
          , b = "[\\ufe0e\\ufe0f]?"
          , y = b + w + ("(?:\\u200d(?:" + ["[^" + t + "]", c, m].join("|") + ")" + b + w + ")*")
          , k = "(?:" + [u, c, m].join("|") + ")" + y
          , M = RegExp([h + "?" + d + "+" + g + "(?=" + [o, h, "$"].join("|") + ")", p + "+" + v + "(?=" + [o, h + f, "$"].join("|") + ")", h + "?" + f + "+" + g, h + "+" + v, "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", s, k].join("|"), "g");
        e.exports = function(e) {
            return e.match(M) || []
        }
    },
    84058: function(e, t, n) {
        var a = n(14792)
          , r = n(45539)((function(e, t, n) {
            return t = t.toLowerCase(),
            e + (n ? a(t) : t)
        }
        ));
        e.exports = r
    },
    14792: function(e, t, n) {
        var a = n(13222)
          , r = n(55808);
        e.exports = function(e) {
            return r(a(e).toLowerCase())
        }
    },
    37334: function(e) {
        e.exports = function(e) {
            return function() {
                return e
            }
        }
    },
    50828: function(e, t, n) {
        var a = n(24647)
          , r = n(13222)
          , i = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g
          , o = RegExp("[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]", "g");
        e.exports = function(e) {
            return (e = r(e)) && e.replace(i, a).replace(o, "")
        }
    },
    75288: function(e) {
        e.exports = function(e, t) {
            return e === t || e !== e && t !== t
        }
    },
    58156: function(e, t, n) {
        var a = n(47422);
        e.exports = function(e, t, n) {
            var r = null == e ? void 0 : a(e, t);
            return void 0 === r ? n : r
        }
    },
    61448: function(e, t, n) {
        var a = n(20426)
          , r = n(49326);
        e.exports = function(e, t) {
            return null != e && r(e, t, a)
        }
    },
    80631: function(e, t, n) {
        var a = n(28077)
          , r = n(49326);
        e.exports = function(e, t) {
            return null != e && r(e, t, a)
        }
    },
    83488: function(e) {
        e.exports = function(e) {
            return e
        }
    },
    72428: function(e, t, n) {
        var a = n(27534)
          , r = n(40346)
          , i = Object.prototype
          , o = i.hasOwnProperty
          , s = i.propertyIsEnumerable
          , u = a(function() {
            return arguments
        }()) ? a : function(e) {
            return r(e) && o.call(e, "callee") && !s.call(e, "callee")
        }
        ;
        e.exports = u
    },
    56449: function(e) {
        var t = Array.isArray;
        e.exports = t
    },
    64894: function(e, t, n) {
        var a = n(1882)
          , r = n(30294);
        e.exports = function(e) {
            return null != e && r(e.length) && !a(e)
        }
    },
    83693: function(e, t, n) {
        var a = n(64894)
          , r = n(40346);
        e.exports = function(e) {
            return r(e) && a(e)
        }
    },
    3656: function(e, t, n) {
        e = n.nmd(e);
        var a = n(9325)
          , r = n(89935)
          , i = t && !t.nodeType && t
          , o = i && e && !e.nodeType && e
          , s = o && o.exports === i ? a.Buffer : void 0
          , u = (s ? s.isBuffer : void 0) || r;
        e.exports = u
    },
    1882: function(e, t, n) {
        var a = n(72552)
          , r = n(23805);
        e.exports = function(e) {
            if (!r(e))
                return !1;
            var t = a(e);
            return "[object Function]" == t || "[object GeneratorFunction]" == t || "[object AsyncFunction]" == t || "[object Proxy]" == t
        }
    },
    30294: function(e) {
        e.exports = function(e) {
            return "number" == typeof e && e > -1 && e % 1 == 0 && e <= 9007199254740991
        }
    },
    23805: function(e) {
        e.exports = function(e) {
            var t = typeof e;
            return null != e && ("object" == t || "function" == t)
        }
    },
    40346: function(e) {
        e.exports = function(e) {
            return null != e && "object" == typeof e
        }
    },
    11331: function(e, t, n) {
        var a = n(72552)
          , r = n(28879)
          , i = n(40346)
          , o = Function.prototype
          , s = Object.prototype
          , u = o.toString
          , d = s.hasOwnProperty
          , l = u.call(Object);
        e.exports = function(e) {
            if (!i(e) || "[object Object]" != a(e))
                return !1;
            var t = r(e);
            if (null === t)
                return !0;
            var n = d.call(t, "constructor") && t.constructor;
            return "function" == typeof n && n instanceof n && u.call(n) == l
        }
    },
    44394: function(e, t, n) {
        var a = n(72552)
          , r = n(40346);
        e.exports = function(e) {
            return "symbol" == typeof e || r(e) && "[object Symbol]" == a(e)
        }
    },
    37167: function(e, t, n) {
        var a = n(4901)
          , r = n(27301)
          , i = n(86009)
          , o = i && i.isTypedArray
          , s = o ? r(o) : a;
        e.exports = s
    },
    95950: function(e, t, n) {
        var a = n(70695)
          , r = n(88984)
          , i = n(64894);
        e.exports = function(e) {
            return i(e) ? a(e) : r(e)
        }
    },
    37241: function(e, t, n) {
        var a = n(70695)
          , r = n(72903)
          , i = n(64894);
        e.exports = function(e) {
            return i(e) ? a(e, !0) : r(e)
        }
    },
    50104: function(e, t, n) {
        var a = n(53661);
        function r(e, t) {
            if ("function" != typeof e || null != t && "function" != typeof t)
                throw new TypeError("Expected a function");
            var n = function() {
                var a = arguments
                  , r = t ? t.apply(this, a) : a[0]
                  , i = n.cache;
                if (i.has(r))
                    return i.get(r);
                var o = e.apply(this, a);
                return n.cache = i.set(r, o) || i,
                o
            };
            return n.cache = new (r.Cache || a),
            n
        }
        r.Cache = a,
        e.exports = r
    },
    55364: function(e, t, n) {
        var a = n(85250)
          , r = n(20999)((function(e, t, n) {
            a(e, t, n)
        }
        ));
        e.exports = r
    },
    63950: function(e) {
        e.exports = function() {}
    },
    50583: function(e, t, n) {
        var a = n(47237)
          , r = n(17255)
          , i = n(28586)
          , o = n(77797);
        e.exports = function(e) {
            return i(e) ? a(o(e)) : r(e)
        }
    },
    23181: function(e, t, n) {
        var a = n(85508)();
        e.exports = a
    },
    12493: function(e, t, n) {
        var a = n(84051)
          , r = n(36800)
          , i = n(61489)
          , o = n(13222);
        e.exports = function(e, t, n) {
            return t = (n ? r(e, t, n) : void 0 === t) ? 1 : i(t),
            a(o(e), t)
        }
    },
    33031: function(e, t, n) {
        var a = n(83120)
          , r = n(46155)
          , i = n(69302)
          , o = n(36800)
          , s = i((function(e, t) {
            if (null == e)
                return [];
            var n = t.length;
            return n > 1 && o(e, t[0], t[1]) ? t = [] : n > 2 && o(t[0], t[1], t[2]) && (t = [t[0]]),
            r(e, a(t, 1), [])
        }
        ));
        e.exports = s
    },
    63345: function(e) {
        e.exports = function() {
            return []
        }
    },
    89935: function(e) {
        e.exports = function() {
            return !1
        }
    },
    17400: function(e, t, n) {
        var a = n(99374)
          , r = 1 / 0;
        e.exports = function(e) {
            return e ? (e = a(e)) === r || e === -1 / 0 ? 17976931348623157e292 * (e < 0 ? -1 : 1) : e === e ? e : 0 : 0 === e ? e : 0
        }
    },
    61489: function(e, t, n) {
        var a = n(17400);
        e.exports = function(e) {
            var t = a(e)
              , n = t % 1;
            return t === t ? n ? t - n : t : 0
        }
    },
    99374: function(e, t, n) {
        var a = n(54128)
          , r = n(23805)
          , i = n(44394)
          , o = /^[-+]0x[0-9a-f]+$/i
          , s = /^0b[01]+$/i
          , u = /^0o[0-7]+$/i
          , d = parseInt;
        e.exports = function(e) {
            if ("number" == typeof e)
                return e;
            if (i(e))
                return NaN;
            if (r(e)) {
                var t = "function" == typeof e.valueOf ? e.valueOf() : e;
                e = r(t) ? t + "" : t
            }
            if ("string" != typeof e)
                return 0 === e ? e : +e;
            e = a(e);
            var n = s.test(e);
            return n || u.test(e) ? d(e.slice(2), n ? 2 : 8) : o.test(e) ? NaN : +e
        }
    },
    69884: function(e, t, n) {
        var a = n(21791)
          , r = n(37241);
        e.exports = function(e) {
            return a(e, r(e))
        }
    },
    13222: function(e, t, n) {
        var a = n(77556);
        e.exports = function(e) {
            return null == e ? "" : a(e)
        }
    },
    63375: function(e, t, n) {
        var a = n(55765);
        e.exports = function(e) {
            return e && e.length ? a(e) : []
        }
    },
    55808: function(e, t, n) {
        var a = n(12507)("toUpperCase");
        e.exports = a
    },
    66645: function(e, t, n) {
        var a = n(1733)
          , r = n(45434)
          , i = n(13222)
          , o = n(22225);
        e.exports = function(e, t, n) {
            return e = i(e),
            void 0 === (t = n ? void 0 : t) ? r(e) ? o(e) : a(e) : e.match(t) || []
        }
    },
    47248: function(e, t, n) {
        var a = n(16547)
          , r = n(51234);
        e.exports = function(e, t) {
            return r(e || [], t || [], a)
        }
    },
    2694: function(e, t, n) {
        "use strict";
        var a = n(6925);
        function r() {}
        function i() {}
        i.resetWarningCache = r,
        e.exports = function() {
            function e(e, t, n, r, i, o) {
                if (o !== a) {
                    var s = new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");
                    throw s.name = "Invariant Violation",
                    s
                }
            }
            function t() {
                return e
            }
            e.isRequired = e;
            var n = {
                array: e,
                bigint: e,
                bool: e,
                func: e,
                number: e,
                object: e,
                string: e,
                symbol: e,
                any: e,
                arrayOf: t,
                element: e,
                elementType: e,
                instanceOf: t,
                node: e,
                objectOf: t,
                oneOf: t,
                oneOfType: t,
                shape: t,
                exact: t,
                checkPropTypes: i,
                resetWarningCache: r
            };
            return n.PropTypes = n,
            n
        }
    },
    5556: function(e, t, n) {
        e.exports = n(2694)()
    },
    6925: function(e) {
        "use strict";
        e.exports = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"
    },
    59386: function(e, t, n) {
        !function(e, t, n, a, r, i, o, s, u, d, l, c, m, h, f, p, g, v, w, b, y, k, M, P, W, x, S, D, j, C, T, E, N, z, I, O, H, A, Y, _, X, R, L, F, q, G, K, V, $, B, J, Q, U, Z, ee, te, ne, ae, re, ie, oe, se, ue, de) {
            "use strict";
            function le(e) {
                return e && "object" == typeof e && "default"in e ? e : {
                    default: e
                }
            }
            var ce = le(t)
              , me = le(oe)
              , he = le(se);
            function fe(e, t, n) {
                return t = Se(t),
                function(e, t) {
                    if (t && ("object" == typeof t || "function" == typeof t))
                        return t;
                    if (void 0 !== t)
                        throw new TypeError("Derived constructors may only return object or undefined");
                    return function(e) {
                        if (void 0 === e)
                            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return e
                    }(e)
                }(e, pe() ? Reflect.construct(t, n || [], Se(e).constructor) : t.apply(e, n))
            }
            function pe() {
                try {
                    var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}
                    )))
                } catch (e) {}
                return (pe = function() {
                    return !!e
                }
                )()
            }
            function ge(e, t) {
                var n = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var a = Object.getOwnPropertySymbols(e);
                    t && (a = a.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }
                    ))),
                    n.push.apply(n, a)
                }
                return n
            }
            function ve(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? ge(Object(n), !0).forEach((function(t) {
                        Pe(e, t, n[t])
                    }
                    )) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ge(Object(n)).forEach((function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                    }
                    ))
                }
                return e
            }
            function we(e) {
                var t = function(e, t) {
                    if ("object" != typeof e || !e)
                        return e;
                    var n = e[Symbol.toPrimitive];
                    if (void 0 !== n) {
                        var a = n.call(e, t || "default");
                        if ("object" != typeof a)
                            return a;
                        throw new TypeError("@@toPrimitive must return a primitive value.")
                    }
                    return ("string" === t ? String : Number)(e)
                }(e, "string");
                return "symbol" == typeof t ? t : t + ""
            }
            function be(e) {
                return be = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                }
                : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                }
                ,
                be(e)
            }
            function ye(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
            function ke(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var a = t[n];
                    a.enumerable = a.enumerable || !1,
                    a.configurable = !0,
                    "value"in a && (a.writable = !0),
                    Object.defineProperty(e, we(a.key), a)
                }
            }
            function Me(e, t, n) {
                return t && ke(e.prototype, t),
                n && ke(e, n),
                Object.defineProperty(e, "prototype", {
                    writable: !1
                }),
                e
            }
            function Pe(e, t, n) {
                return (t = we(t))in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n,
                e
            }
            function We() {
                return We = Object.assign ? Object.assign.bind() : function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var n = arguments[t];
                        for (var a in n)
                            Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a])
                    }
                    return e
                }
                ,
                We.apply(this, arguments)
            }
            function xe(e, t) {
                if ("function" != typeof t && null !== t)
                    throw new TypeError("Super expression must either be null or a function");
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        writable: !0,
                        configurable: !0
                    }
                }),
                Object.defineProperty(e, "prototype", {
                    writable: !1
                }),
                t && De(e, t)
            }
            function Se(e) {
                return Se = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                    return e.__proto__ || Object.getPrototypeOf(e)
                }
                ,
                Se(e)
            }
            function De(e, t) {
                return De = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                    return e.__proto__ = t,
                    e
                }
                ,
                De(e, t)
            }
            function je(e) {
                return function(e) {
                    if (Array.isArray(e))
                        return Ce(e)
                }(e) || function(e) {
                    if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"])
                        return Array.from(e)
                }(e) || function(e, t) {
                    if (e) {
                        if ("string" == typeof e)
                            return Ce(e, t);
                        var n = Object.prototype.toString.call(e).slice(8, -1);
                        return "Object" === n && e.constructor && (n = e.constructor.name),
                        "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Ce(e, t) : void 0
                    }
                }(e) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }
            function Ce(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, a = new Array(t); n < t; n++)
                    a[n] = e[n];
                return a
            }
            var Te = 12
              , Ee = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
            function Ne(e) {
                var t = e ? "string" == typeof e || e instanceof String ? ie.parseISO(e) : ae.toDate(e) : new Date;
                return ze(t) ? t : null
            }
            function ze(e, t) {
                return t = t || new Date("1/1/1000"),
                i.isValid(e) && !te.isBefore(e, t)
            }
            function Ie(e, t, n) {
                if ("en" === n)
                    return o.format(e, t, {
                        useAdditionalWeekYearTokens: !0,
                        useAdditionalDayOfYearTokens: !0
                    });
                var a = Be(n);
                return n && !a && console.warn('A locale object was not found for the provided string ["'.concat(n, '"].')),
                !a && $e() && Be($e()) && (a = Be($e())),
                o.format(e, t, {
                    locale: a || null,
                    useAdditionalWeekYearTokens: !0,
                    useAdditionalDayOfYearTokens: !0
                })
            }
            function Oe(e, t) {
                var n = t.dateFormat
                  , a = t.locale;
                return e && Ie(e, Array.isArray(n) ? n[0] : n, a) || ""
            }
            function He(e, t) {
                var n = t.hour
                  , a = void 0 === n ? 0 : n
                  , r = t.minute
                  , i = void 0 === r ? 0 : r
                  , o = t.second
                  , s = void 0 === o ? 0 : o;
                return E.setHours(T.setMinutes(C.setSeconds(e, s), i), a)
            }
            function Ae(e, t, n) {
                var a = Be(t || $e());
                return R.startOfWeek(e, {
                    locale: a,
                    weekStartsOn: n
                })
            }
            function Ye(e) {
                return L.startOfMonth(e)
            }
            function _e(e) {
                return q.startOfYear(e)
            }
            function Xe(e) {
                return F.startOfQuarter(e)
            }
            function Re() {
                return X.startOfDay(Ne())
            }
            function Le(e, t) {
                return e && t ? U.isSameYear(e, t) : !e && !t
            }
            function Fe(e, t) {
                return e && t ? Q.isSameMonth(e, t) : !e && !t
            }
            function qe(e, t) {
                return e && t ? Z.isSameQuarter(e, t) : !e && !t
            }
            function Ge(e, t) {
                return e && t ? J.isSameDay(e, t) : !e && !t
            }
            function Ke(e, t) {
                return e && t ? B.isEqual(e, t) : !e && !t
            }
            function Ve(e, t, n) {
                var a, r = X.startOfDay(t), i = G.endOfDay(n);
                try {
                    a = ne.isWithinInterval(e, {
                        start: r,
                        end: i
                    })
                } catch (e) {
                    a = !1
                }
                return a
            }
            function $e() {
                return ("undefined" != typeof window ? window : globalThis).__localeId__
            }
            function Be(e) {
                if ("string" == typeof e) {
                    var t = "undefined" != typeof window ? window : globalThis;
                    return t.__localeData__ ? t.__localeData__[e] : null
                }
                return e
            }
            function Je(e, t) {
                return Ie(N.setMonth(Ne(), e), "LLLL", t)
            }
            function Qe(e, t) {
                return Ie(N.setMonth(Ne(), e), "LLL", t)
            }
            function Ue(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , n = t.minDate
                  , a = t.maxDate
                  , r = t.excludeDates
                  , i = t.excludeDateIntervals
                  , o = t.includeDates
                  , s = t.includeDateIntervals
                  , u = t.filterDate;
                return ot(e, {
                    minDate: n,
                    maxDate: a
                }) || r && r.some((function(t) {
                    return Ge(e, t.date ? t.date : t)
                }
                )) || i && i.some((function(t) {
                    var n = t.start
                      , a = t.end;
                    return ne.isWithinInterval(e, {
                        start: n,
                        end: a
                    })
                }
                )) || o && !o.some((function(t) {
                    return Ge(e, t)
                }
                )) || s && !s.some((function(t) {
                    var n = t.start
                      , a = t.end;
                    return ne.isWithinInterval(e, {
                        start: n,
                        end: a
                    })
                }
                )) || u && !u(Ne(e)) || !1
            }
            function Ze(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , n = t.excludeDates
                  , a = t.excludeDateIntervals;
                return a && a.length > 0 ? a.some((function(t) {
                    var n = t.start
                      , a = t.end;
                    return ne.isWithinInterval(e, {
                        start: n,
                        end: a
                    })
                }
                )) : n && n.some((function(t) {
                    return Ge(e, t.date ? t.date : t)
                }
                )) || !1
            }
            function et(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , n = t.minDate
                  , a = t.maxDate
                  , r = t.excludeDates
                  , i = t.includeDates
                  , o = t.filterDate;
                return ot(e, {
                    minDate: L.startOfMonth(n),
                    maxDate: V.endOfMonth(a)
                }) || r && r.some((function(t) {
                    return Fe(e, t)
                }
                )) || i && !i.some((function(t) {
                    return Fe(e, t)
                }
                )) || o && !o(Ne(e)) || !1
            }
            function tt(e, t, n, a) {
                var r = D.getYear(e)
                  , i = x.getMonth(e)
                  , o = D.getYear(t)
                  , s = x.getMonth(t)
                  , u = D.getYear(a);
                return r === o && r === u ? i <= n && n <= s : r < o ? u === r && i <= n || u === o && s >= n || u < o && u > r : void 0
            }
            function nt(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , n = t.minDate
                  , a = t.maxDate
                  , r = t.excludeDates
                  , i = t.includeDates
                  , o = t.filterDate;
                return ot(e, {
                    minDate: n,
                    maxDate: a
                }) || r && r.some((function(t) {
                    return qe(e, t)
                }
                )) || i && !i.some((function(t) {
                    return qe(e, t)
                }
                )) || o && !o(Ne(e)) || !1
            }
            function at(e, t, n) {
                if (!i.isValid(t) || !i.isValid(n))
                    return !1;
                var a = D.getYear(t)
                  , r = D.getYear(n);
                return a <= e && r >= e
            }
            function rt(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , n = t.minDate
                  , a = t.maxDate
                  , r = t.excludeDates
                  , i = t.includeDates
                  , o = t.filterDate
                  , s = new Date(e,0,1);
                return ot(s, {
                    minDate: q.startOfYear(n),
                    maxDate: $.endOfYear(a)
                }) || r && r.some((function(e) {
                    return Le(s, e)
                }
                )) || i && !i.some((function(e) {
                    return Le(s, e)
                }
                )) || o && !o(Ne(s)) || !1
            }
            function it(e, t, n, a) {
                var r = D.getYear(e)
                  , i = S.getQuarter(e)
                  , o = D.getYear(t)
                  , s = S.getQuarter(t)
                  , u = D.getYear(a);
                return r === o && r === u ? i <= n && n <= s : r < o ? u === r && i <= n || u === o && s >= n || u < o && u > r : void 0
            }
            function ot(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , n = t.minDate
                  , a = t.maxDate;
                return n && A.differenceInCalendarDays(e, n) < 0 || a && A.differenceInCalendarDays(e, a) > 0
            }
            function st(e, t) {
                return t.some((function(t) {
                    return k.getHours(t) === k.getHours(e) && y.getMinutes(t) === y.getMinutes(e)
                }
                ))
            }
            function ut(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , n = t.excludeTimes
                  , a = t.includeTimes
                  , r = t.filterTime;
                return n && st(e, n) || a && !st(e, a) || r && !r(e) || !1
            }
            function dt(e, t) {
                var n = t.minTime
                  , a = t.maxTime;
                if (!n || !a)
                    throw new Error("Both minTime and maxTime props required");
                var r, i = Ne(), o = E.setHours(T.setMinutes(i, y.getMinutes(e)), k.getHours(e)), s = E.setHours(T.setMinutes(i, y.getMinutes(n)), k.getHours(n)), u = E.setHours(T.setMinutes(i, y.getMinutes(a)), k.getHours(a));
                try {
                    r = !ne.isWithinInterval(o, {
                        start: s,
                        end: u
                    })
                } catch (e) {
                    r = !1
                }
                return r
            }
            function lt(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , n = t.minDate
                  , a = t.includeDates
                  , r = g.subMonths(e, 1);
                return n && Y.differenceInCalendarMonths(n, r) > 0 || a && a.every((function(e) {
                    return Y.differenceInCalendarMonths(e, r) > 0
                }
                )) || !1
            }
            function ct(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , n = t.maxDate
                  , a = t.includeDates
                  , r = c.addMonths(e, 1);
                return n && Y.differenceInCalendarMonths(r, n) > 0 || a && a.every((function(e) {
                    return Y.differenceInCalendarMonths(r, e) > 0
                }
                )) || !1
            }
            function mt(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , n = t.minDate
                  , a = t.includeDates
                  , r = w.subYears(e, 1);
                return n && _.differenceInCalendarYears(n, r) > 0 || a && a.every((function(e) {
                    return _.differenceInCalendarYears(e, r) > 0
                }
                )) || !1
            }
            function ht(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                  , n = t.maxDate
                  , a = t.includeDates
                  , r = h.addYears(e, 1);
                return n && _.differenceInCalendarYears(r, n) > 0 || a && a.every((function(e) {
                    return _.differenceInCalendarYears(r, e) > 0
                }
                )) || !1
            }
            function ft(e) {
                var t = e.minDate
                  , n = e.includeDates;
                if (n && t) {
                    var a = n.filter((function(e) {
                        return A.differenceInCalendarDays(e, t) >= 0
                    }
                    ));
                    return O.min(a)
                }
                return n ? O.min(n) : t
            }
            function pt(e) {
                var t = e.maxDate
                  , n = e.includeDates;
                if (n && t) {
                    var a = n.filter((function(e) {
                        return A.differenceInCalendarDays(e, t) <= 0
                    }
                    ));
                    return H.max(a)
                }
                return n ? H.max(n) : t
            }
            function gt() {
                for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "react-datepicker__day--highlighted", n = new Map, a = 0, i = e.length; a < i; a++) {
                    var o = e[a];
                    if (r.isDate(o)) {
                        var s = Ie(o, "MM.dd.yyyy")
                          , u = n.get(s) || [];
                        u.includes(t) || (u.push(t),
                        n.set(s, u))
                    } else if ("object" === be(o)) {
                        var d = Object.keys(o)
                          , l = d[0]
                          , c = o[d[0]];
                        if ("string" == typeof l && c.constructor === Array)
                            for (var m = 0, h = c.length; m < h; m++) {
                                var f = Ie(c[m], "MM.dd.yyyy")
                                  , p = n.get(f) || [];
                                p.includes(l) || (p.push(l),
                                n.set(f, p))
                            }
                    }
                }
                return n
            }
            function vt() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []
                  , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "react-datepicker__day--holidays"
                  , n = new Map;
                return e.forEach((function(e) {
                    var a = e.date
                      , i = e.holidayName;
                    if (r.isDate(a)) {
                        var o = Ie(a, "MM.dd.yyyy")
                          , s = n.get(o) || {};
                        if (!("className"in s) || s.className !== t || (u = s.holidayNames,
                        d = [i],
                        u.length !== d.length || !u.every((function(e, t) {
                            return e === d[t]
                        }
                        )))) {
                            var u, d;
                            s.className = t;
                            var l = s.holidayNames;
                            s.holidayNames = l ? [].concat(je(l), [i]) : [i],
                            n.set(o, s)
                        }
                    }
                }
                )),
                n
            }
            function wt(e, t, n, a, r) {
                for (var i = r.length, o = [], d = 0; d < i; d++) {
                    var l = s.addMinutes(u.addHours(e, k.getHours(r[d])), y.getMinutes(r[d]))
                      , c = s.addMinutes(e, (n + 1) * a);
                    ee.isAfter(l, t) && te.isBefore(l, c) && o.push(r[d])
                }
                return o
            }
            function bt(e) {
                return e < 10 ? "0".concat(e) : "".concat(e)
            }
            function yt(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Te
                  , n = Math.ceil(D.getYear(e) / t) * t;
                return {
                    startPeriod: n - (t - 1),
                    endPeriod: n
                }
            }
            function kt(e) {
                var t = e.getSeconds()
                  , n = e.getMilliseconds();
                return ae.toDate(e.getTime() - 1e3 * t - n)
            }
            function Mt(e) {
                if (!r.isDate(e))
                    throw new Error("Invalid date");
                var t = new Date(e);
                return t.setHours(0, 0, 0, 0),
                t
            }
            function Pt(e, t) {
                if (!r.isDate(e) || !r.isDate(t))
                    throw new Error("Invalid date received");
                var n = Mt(e)
                  , a = Mt(t);
                return te.isBefore(n, a)
            }
            function Wt(e) {
                return " " === e.key
            }
            function xt(e, t, n, a) {
                for (var r = [], i = 0; i < 2 * t + 1; i++) {
                    var o = e + t - i
                      , s = !0;
                    n && (s = D.getYear(n) <= o),
                    a && s && (s = D.getYear(a) >= o),
                    s && r.push(o)
                }
                return r
            }
            var St = function(e) {
                function n(e) {
                    var a;
                    ye(this, n),
                    Pe(a = fe(this, n, [e]), "renderOptions", (function() {
                        var e = a.props.year
                          , t = a.state.yearsList.map((function(t) {
                            return ce.default.createElement("div", {
                                className: e === t ? "react-datepicker__year-option react-datepicker__year-option--selected_year" : "react-datepicker__year-option",
                                key: t,
                                onClick: a.onChange.bind(a, t),
                                "aria-selected": e === t ? "true" : void 0
                            }, e === t ? ce.default.createElement("span", {
                                className: "react-datepicker__year-option--selected"
                            }, "\u2713") : "", t)
                        }
                        ))
                          , n = a.props.minDate ? D.getYear(a.props.minDate) : null
                          , r = a.props.maxDate ? D.getYear(a.props.maxDate) : null;
                        return r && a.state.yearsList.find((function(e) {
                            return e === r
                        }
                        )) || t.unshift(ce.default.createElement("div", {
                            className: "react-datepicker__year-option",
                            key: "upcoming",
                            onClick: a.incrementYears
                        }, ce.default.createElement("a", {
                            className: "react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-upcoming"
                        }))),
                        n && a.state.yearsList.find((function(e) {
                            return e === n
                        }
                        )) || t.push(ce.default.createElement("div", {
                            className: "react-datepicker__year-option",
                            key: "previous",
                            onClick: a.decrementYears
                        }, ce.default.createElement("a", {
                            className: "react-datepicker__navigation react-datepicker__navigation--years react-datepicker__navigation--years-previous"
                        }))),
                        t
                    }
                    )),
                    Pe(a, "onChange", (function(e) {
                        a.props.onChange(e)
                    }
                    )),
                    Pe(a, "handleClickOutside", (function() {
                        a.props.onCancel()
                    }
                    )),
                    Pe(a, "shiftYears", (function(e) {
                        var t = a.state.yearsList.map((function(t) {
                            return t + e
                        }
                        ));
                        a.setState({
                            yearsList: t
                        })
                    }
                    )),
                    Pe(a, "incrementYears", (function() {
                        return a.shiftYears(1)
                    }
                    )),
                    Pe(a, "decrementYears", (function() {
                        return a.shiftYears(-1)
                    }
                    ));
                    var r = e.yearDropdownItemNumber
                      , i = e.scrollableYearDropdown
                      , o = r || (i ? 10 : 5);
                    return a.state = {
                        yearsList: xt(a.props.year, o, a.props.minDate, a.props.maxDate)
                    },
                    a.dropdownRef = t.createRef(),
                    a
                }
                return xe(n, e),
                Me(n, [{
                    key: "componentDidMount",
                    value: function() {
                        var e = this.dropdownRef.current;
                        if (e) {
                            var t = e.children ? Array.from(e.children) : null
                              , n = t ? t.find((function(e) {
                                return e.ariaSelected
                            }
                            )) : null;
                            e.scrollTop = n ? n.offsetTop + (n.clientHeight - e.clientHeight) / 2 : (e.scrollHeight - e.clientHeight) / 2
                        }
                    }
                }, {
                    key: "render",
                    value: function() {
                        var e = a.clsx({
                            "react-datepicker__year-dropdown": !0,
                            "react-datepicker__year-dropdown--scrollable": this.props.scrollableYearDropdown
                        });
                        return ce.default.createElement("div", {
                            className: e,
                            ref: this.dropdownRef
                        }, this.renderOptions())
                    }
                }])
            }(ce.default.Component)
              , Dt = me.default(St)
              , jt = function(e) {
                function t() {
                    var e;
                    ye(this, t);
                    for (var n = arguments.length, a = new Array(n), r = 0; r < n; r++)
                        a[r] = arguments[r];
                    return Pe(e = fe(this, t, [].concat(a)), "state", {
                        dropdownVisible: !1
                    }),
                    Pe(e, "renderSelectOptions", (function() {
                        for (var t = e.props.minDate ? D.getYear(e.props.minDate) : 1900, n = e.props.maxDate ? D.getYear(e.props.maxDate) : 2100, a = [], r = t; r <= n; r++)
                            a.push(ce.default.createElement("option", {
                                key: r,
                                value: r
                            }, r));
                        return a
                    }
                    )),
                    Pe(e, "onSelectChange", (function(t) {
                        e.onChange(t.target.value)
                    }
                    )),
                    Pe(e, "renderSelectMode", (function() {
                        return ce.default.createElement("select", {
                            value: e.props.year,
                            className: "react-datepicker__year-select",
                            onChange: e.onSelectChange
                        }, e.renderSelectOptions())
                    }
                    )),
                    Pe(e, "renderReadView", (function(t) {
                        return ce.default.createElement("div", {
                            key: "read",
                            style: {
                                visibility: t ? "visible" : "hidden"
                            },
                            className: "react-datepicker__year-read-view",
                            onClick: function(t) {
                                return e.toggleDropdown(t)
                            }
                        }, ce.default.createElement("span", {
                            className: "react-datepicker__year-read-view--down-arrow"
                        }), ce.default.createElement("span", {
                            className: "react-datepicker__year-read-view--selected-year"
                        }, e.props.year))
                    }
                    )),
                    Pe(e, "renderDropdown", (function() {
                        return ce.default.createElement(Dt, {
                            key: "dropdown",
                            year: e.props.year,
                            onChange: e.onChange,
                            onCancel: e.toggleDropdown,
                            minDate: e.props.minDate,
                            maxDate: e.props.maxDate,
                            scrollableYearDropdown: e.props.scrollableYearDropdown,
                            yearDropdownItemNumber: e.props.yearDropdownItemNumber
                        })
                    }
                    )),
                    Pe(e, "renderScrollMode", (function() {
                        var t = e.state.dropdownVisible
                          , n = [e.renderReadView(!t)];
                        return t && n.unshift(e.renderDropdown()),
                        n
                    }
                    )),
                    Pe(e, "onChange", (function(t) {
                        e.toggleDropdown(),
                        t !== e.props.year && e.props.onChange(t)
                    }
                    )),
                    Pe(e, "toggleDropdown", (function(t) {
                        e.setState({
                            dropdownVisible: !e.state.dropdownVisible
                        }, (function() {
                            e.props.adjustDateOnChange && e.handleYearChange(e.props.date, t)
                        }
                        ))
                    }
                    )),
                    Pe(e, "handleYearChange", (function(t, n) {
                        e.onSelect(t, n),
                        e.setOpen()
                    }
                    )),
                    Pe(e, "onSelect", (function(t, n) {
                        e.props.onSelect && e.props.onSelect(t, n)
                    }
                    )),
                    Pe(e, "setOpen", (function() {
                        e.props.setOpen && e.props.setOpen(!0)
                    }
                    )),
                    e
                }
                return xe(t, e),
                Me(t, [{
                    key: "render",
                    value: function() {
                        var e;
                        switch (this.props.dropdownMode) {
                        case "scroll":
                            e = this.renderScrollMode();
                            break;
                        case "select":
                            e = this.renderSelectMode()
                        }
                        return ce.default.createElement("div", {
                            className: "react-datepicker__year-dropdown-container react-datepicker__year-dropdown-container--".concat(this.props.dropdownMode)
                        }, e)
                    }
                }])
            }(ce.default.Component)
              , Ct = function(e) {
                function t() {
                    var e;
                    ye(this, t);
                    for (var n = arguments.length, a = new Array(n), r = 0; r < n; r++)
                        a[r] = arguments[r];
                    return Pe(e = fe(this, t, [].concat(a)), "isSelectedMonth", (function(t) {
                        return e.props.month === t
                    }
                    )),
                    Pe(e, "renderOptions", (function() {
                        return e.props.monthNames.map((function(t, n) {
                            return ce.default.createElement("div", {
                                className: e.isSelectedMonth(n) ? "react-datepicker__month-option react-datepicker__month-option--selected_month" : "react-datepicker__month-option",
                                key: t,
                                onClick: e.onChange.bind(e, n),
                                "aria-selected": e.isSelectedMonth(n) ? "true" : void 0
                            }, e.isSelectedMonth(n) ? ce.default.createElement("span", {
                                className: "react-datepicker__month-option--selected"
                            }, "\u2713") : "", t)
                        }
                        ))
                    }
                    )),
                    Pe(e, "onChange", (function(t) {
                        return e.props.onChange(t)
                    }
                    )),
                    Pe(e, "handleClickOutside", (function() {
                        return e.props.onCancel()
                    }
                    )),
                    e
                }
                return xe(t, e),
                Me(t, [{
                    key: "render",
                    value: function() {
                        return ce.default.createElement("div", {
                            className: "react-datepicker__month-dropdown"
                        }, this.renderOptions())
                    }
                }])
            }(ce.default.Component)
              , Tt = me.default(Ct)
              , Et = function(e) {
                function t() {
                    var e;
                    ye(this, t);
                    for (var n = arguments.length, a = new Array(n), r = 0; r < n; r++)
                        a[r] = arguments[r];
                    return Pe(e = fe(this, t, [].concat(a)), "state", {
                        dropdownVisible: !1
                    }),
                    Pe(e, "renderSelectOptions", (function(e) {
                        return e.map((function(e, t) {
                            return ce.default.createElement("option", {
                                key: t,
                                value: t
                            }, e)
                        }
                        ))
                    }
                    )),
                    Pe(e, "renderSelectMode", (function(t) {
                        return ce.default.createElement("select", {
                            value: e.props.month,
                            className: "react-datepicker__month-select",
                            onChange: function(t) {
                                return e.onChange(t.target.value)
                            }
                        }, e.renderSelectOptions(t))
                    }
                    )),
                    Pe(e, "renderReadView", (function(t, n) {
                        return ce.default.createElement("div", {
                            key: "read",
                            style: {
                                visibility: t ? "visible" : "hidden"
                            },
                            className: "react-datepicker__month-read-view",
                            onClick: e.toggleDropdown
                        }, ce.default.createElement("span", {
                            className: "react-datepicker__month-read-view--down-arrow"
                        }), ce.default.createElement("span", {
                            className: "react-datepicker__month-read-view--selected-month"
                        }, n[e.props.month]))
                    }
                    )),
                    Pe(e, "renderDropdown", (function(t) {
                        return ce.default.createElement(Tt, {
                            key: "dropdown",
                            month: e.props.month,
                            monthNames: t,
                            onChange: e.onChange,
                            onCancel: e.toggleDropdown
                        })
                    }
                    )),
                    Pe(e, "renderScrollMode", (function(t) {
                        var n = e.state.dropdownVisible
                          , a = [e.renderReadView(!n, t)];
                        return n && a.unshift(e.renderDropdown(t)),
                        a
                    }
                    )),
                    Pe(e, "onChange", (function(t) {
                        e.toggleDropdown(),
                        t !== e.props.month && e.props.onChange(t)
                    }
                    )),
                    Pe(e, "toggleDropdown", (function() {
                        return e.setState({
                            dropdownVisible: !e.state.dropdownVisible
                        })
                    }
                    )),
                    e
                }
                return xe(t, e),
                Me(t, [{
                    key: "render",
                    value: function() {
                        var e, t = this, n = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map(this.props.useShortMonthInDropdown ? function(e) {
                            return Qe(e, t.props.locale)
                        }
                        : function(e) {
                            return Je(e, t.props.locale)
                        }
                        );
                        switch (this.props.dropdownMode) {
                        case "scroll":
                            e = this.renderScrollMode(n);
                            break;
                        case "select":
                            e = this.renderSelectMode(n)
                        }
                        return ce.default.createElement("div", {
                            className: "react-datepicker__month-dropdown-container react-datepicker__month-dropdown-container--".concat(this.props.dropdownMode)
                        }, e)
                    }
                }])
            }(ce.default.Component);
            function Nt(e, t) {
                for (var n = [], a = Ye(e), r = Ye(t); !ee.isAfter(a, r); )
                    n.push(Ne(a)),
                    a = c.addMonths(a, 1);
                return n
            }
            var zt = function(e) {
                function t(e) {
                    var n;
                    return ye(this, t),
                    Pe(n = fe(this, t, [e]), "renderOptions", (function() {
                        return n.state.monthYearsList.map((function(e) {
                            var t = j.getTime(e)
                              , a = Le(n.props.date, e) && Fe(n.props.date, e);
                            return ce.default.createElement("div", {
                                className: a ? "react-datepicker__month-year-option--selected_month-year" : "react-datepicker__month-year-option",
                                key: t,
                                onClick: n.onChange.bind(n, t),
                                "aria-selected": a ? "true" : void 0
                            }, a ? ce.default.createElement("span", {
                                className: "react-datepicker__month-year-option--selected"
                            }, "\u2713") : "", Ie(e, n.props.dateFormat, n.props.locale))
                        }
                        ))
                    }
                    )),
                    Pe(n, "onChange", (function(e) {
                        return n.props.onChange(e)
                    }
                    )),
                    Pe(n, "handleClickOutside", (function() {
                        n.props.onCancel()
                    }
                    )),
                    n.state = {
                        monthYearsList: Nt(n.props.minDate, n.props.maxDate)
                    },
                    n
                }
                return xe(t, e),
                Me(t, [{
                    key: "render",
                    value: function() {
                        var e = a.clsx({
                            "react-datepicker__month-year-dropdown": !0,
                            "react-datepicker__month-year-dropdown--scrollable": this.props.scrollableMonthYearDropdown
                        });
                        return ce.default.createElement("div", {
                            className: e
                        }, this.renderOptions())
                    }
                }])
            }(ce.default.Component)
              , It = me.default(zt)
              , Ot = function(e) {
                function t() {
                    var e;
                    ye(this, t);
                    for (var n = arguments.length, a = new Array(n), r = 0; r < n; r++)
                        a[r] = arguments[r];
                    return Pe(e = fe(this, t, [].concat(a)), "state", {
                        dropdownVisible: !1
                    }),
                    Pe(e, "renderSelectOptions", (function() {
                        for (var t = Ye(e.props.minDate), n = Ye(e.props.maxDate), a = []; !ee.isAfter(t, n); ) {
                            var r = j.getTime(t);
                            a.push(ce.default.createElement("option", {
                                key: r,
                                value: r
                            }, Ie(t, e.props.dateFormat, e.props.locale))),
                            t = c.addMonths(t, 1)
                        }
                        return a
                    }
                    )),
                    Pe(e, "onSelectChange", (function(t) {
                        e.onChange(t.target.value)
                    }
                    )),
                    Pe(e, "renderSelectMode", (function() {
                        return ce.default.createElement("select", {
                            value: j.getTime(Ye(e.props.date)),
                            className: "react-datepicker__month-year-select",
                            onChange: e.onSelectChange
                        }, e.renderSelectOptions())
                    }
                    )),
                    Pe(e, "renderReadView", (function(t) {
                        var n = Ie(e.props.date, e.props.dateFormat, e.props.locale);
                        return ce.default.createElement("div", {
                            key: "read",
                            style: {
                                visibility: t ? "visible" : "hidden"
                            },
                            className: "react-datepicker__month-year-read-view",
                            onClick: function(t) {
                                return e.toggleDropdown(t)
                            }
                        }, ce.default.createElement("span", {
                            className: "react-datepicker__month-year-read-view--down-arrow"
                        }), ce.default.createElement("span", {
                            className: "react-datepicker__month-year-read-view--selected-month-year"
                        }, n))
                    }
                    )),
                    Pe(e, "renderDropdown", (function() {
                        return ce.default.createElement(It, {
                            key: "dropdown",
                            date: e.props.date,
                            dateFormat: e.props.dateFormat,
                            onChange: e.onChange,
                            onCancel: e.toggleDropdown,
                            minDate: e.props.minDate,
                            maxDate: e.props.maxDate,
                            scrollableMonthYearDropdown: e.props.scrollableMonthYearDropdown,
                            locale: e.props.locale
                        })
                    }
                    )),
                    Pe(e, "renderScrollMode", (function() {
                        var t = e.state.dropdownVisible
                          , n = [e.renderReadView(!t)];
                        return t && n.unshift(e.renderDropdown()),
                        n
                    }
                    )),
                    Pe(e, "onChange", (function(t) {
                        e.toggleDropdown();
                        var n = Ne(parseInt(t));
                        Le(e.props.date, n) && Fe(e.props.date, n) || e.props.onChange(n)
                    }
                    )),
                    Pe(e, "toggleDropdown", (function() {
                        return e.setState({
                            dropdownVisible: !e.state.dropdownVisible
                        })
                    }
                    )),
                    e
                }
                return xe(t, e),
                Me(t, [{
                    key: "render",
                    value: function() {
                        var e;
                        switch (this.props.dropdownMode) {
                        case "scroll":
                            e = this.renderScrollMode();
                            break;
                        case "select":
                            e = this.renderSelectMode()
                        }
                        return ce.default.createElement("div", {
                            className: "react-datepicker__month-year-dropdown-container react-datepicker__month-year-dropdown-container--".concat(this.props.dropdownMode)
                        }, e)
                    }
                }])
            }(ce.default.Component)
              , Ht = function(e) {
                function t() {
                    var e;
                    ye(this, t);
                    for (var n = arguments.length, r = new Array(n), i = 0; i < n; i++)
                        r[i] = arguments[i];
                    return Pe(e = fe(this, t, [].concat(r)), "dayEl", ce.default.createRef()),
                    Pe(e, "handleClick", (function(t) {
                        !e.isDisabled() && e.props.onClick && e.props.onClick(t)
                    }
                    )),
                    Pe(e, "handleMouseEnter", (function(t) {
                        !e.isDisabled() && e.props.onMouseEnter && e.props.onMouseEnter(t)
                    }
                    )),
                    Pe(e, "handleOnKeyDown", (function(t) {
                        " " === t.key && (t.preventDefault(),
                        t.key = "Enter"),
                        e.props.handleOnKeyDown(t)
                    }
                    )),
                    Pe(e, "isSameDay", (function(t) {
                        return Ge(e.props.day, t)
                    }
                    )),
                    Pe(e, "isKeyboardSelected", (function() {
                        var t;
                        return !e.props.disabledKeyboardNavigation && !(e.props.selectsMultiple ? null === (t = e.props.selectedDates) || void 0 === t ? void 0 : t.some((function(t) {
                            return e.isSameDayOrWeek(t)
                        }
                        )) : e.isSameDayOrWeek(e.props.selected)) && e.isSameDayOrWeek(e.props.preSelection)
                    }
                    )),
                    Pe(e, "isDisabled", (function() {
                        return Ue(e.props.day, e.props)
                    }
                    )),
                    Pe(e, "isExcluded", (function() {
                        return Ze(e.props.day, e.props)
                    }
                    )),
                    Pe(e, "isStartOfWeek", (function() {
                        return Ge(e.props.day, Ae(e.props.day, e.props.locale, e.props.calendarStartDay))
                    }
                    )),
                    Pe(e, "isSameWeek", (function(t) {
                        return e.props.showWeekPicker && Ge(t, Ae(e.props.day, e.props.locale, e.props.calendarStartDay))
                    }
                    )),
                    Pe(e, "isSameDayOrWeek", (function(t) {
                        return e.isSameDay(t) || e.isSameWeek(t)
                    }
                    )),
                    Pe(e, "getHighLightedClass", (function() {
                        var t = e.props
                          , n = t.day
                          , a = t.highlightDates;
                        if (!a)
                            return !1;
                        var r = Ie(n, "MM.dd.yyyy");
                        return a.get(r)
                    }
                    )),
                    Pe(e, "getHolidaysClass", (function() {
                        var t = e.props
                          , n = t.day
                          , a = t.holidays;
                        if (!a)
                            return !1;
                        var r = Ie(n, "MM.dd.yyyy");
                        return a.has(r) ? [a.get(r).className] : void 0
                    }
                    )),
                    Pe(e, "isInRange", (function() {
                        var t = e.props
                          , n = t.day
                          , a = t.startDate
                          , r = t.endDate;
                        return !(!a || !r) && Ve(n, a, r)
                    }
                    )),
                    Pe(e, "isInSelectingRange", (function() {
                        var t, n = e.props, a = n.day, r = n.selectsStart, i = n.selectsEnd, o = n.selectsRange, s = n.selectsDisabledDaysInRange, u = n.startDate, d = n.endDate, l = null !== (t = e.props.selectingDate) && void 0 !== t ? t : e.props.preSelection;
                        return !(!(r || i || o) || !l || !s && e.isDisabled()) && (r && d && (te.isBefore(l, d) || Ke(l, d)) ? Ve(a, l, d) : (i && u && (ee.isAfter(l, u) || Ke(l, u)) || !(!o || !u || d || !ee.isAfter(l, u) && !Ke(l, u))) && Ve(a, u, l))
                    }
                    )),
                    Pe(e, "isSelectingRangeStart", (function() {
                        var t;
                        if (!e.isInSelectingRange())
                            return !1;
                        var n = e.props
                          , a = n.day
                          , r = n.startDate
                          , i = n.selectsStart
                          , o = null !== (t = e.props.selectingDate) && void 0 !== t ? t : e.props.preSelection;
                        return Ge(a, i ? o : r)
                    }
                    )),
                    Pe(e, "isSelectingRangeEnd", (function() {
                        var t;
                        if (!e.isInSelectingRange())
                            return !1;
                        var n = e.props
                          , a = n.day
                          , r = n.endDate
                          , i = n.selectsEnd
                          , o = n.selectsRange
                          , s = null !== (t = e.props.selectingDate) && void 0 !== t ? t : e.props.preSelection;
                        return Ge(a, i || o ? s : r)
                    }
                    )),
                    Pe(e, "isRangeStart", (function() {
                        var t = e.props
                          , n = t.day
                          , a = t.startDate
                          , r = t.endDate;
                        return !(!a || !r) && Ge(a, n)
                    }
                    )),
                    Pe(e, "isRangeEnd", (function() {
                        var t = e.props
                          , n = t.day
                          , a = t.startDate
                          , r = t.endDate;
                        return !(!a || !r) && Ge(r, n)
                    }
                    )),
                    Pe(e, "isWeekend", (function() {
                        var t = M.getDay(e.props.day);
                        return 0 === t || 6 === t
                    }
                    )),
                    Pe(e, "isAfterMonth", (function() {
                        return void 0 !== e.props.month && (e.props.month + 1) % 12 === x.getMonth(e.props.day)
                    }
                    )),
                    Pe(e, "isBeforeMonth", (function() {
                        return void 0 !== e.props.month && (x.getMonth(e.props.day) + 1) % 12 === e.props.month
                    }
                    )),
                    Pe(e, "isCurrentDay", (function() {
                        return e.isSameDay(Ne())
                    }
                    )),
                    Pe(e, "isSelected", (function() {
                        var t;
                        return e.props.selectsMultiple ? null === (t = e.props.selectedDates) || void 0 === t ? void 0 : t.some((function(t) {
                            return e.isSameDayOrWeek(t)
                        }
                        )) : e.isSameDayOrWeek(e.props.selected)
                    }
                    )),
                    Pe(e, "getClassNames", (function(t) {
                        var n, r = e.props.dayClassName ? e.props.dayClassName(t) : void 0;
                        return a.clsx("react-datepicker__day", r, "react-datepicker__day--" + Ie(e.props.day, "ddd", n), {
                            "react-datepicker__day--disabled": e.isDisabled(),
                            "react-datepicker__day--excluded": e.isExcluded(),
                            "react-datepicker__day--selected": e.isSelected(),
                            "react-datepicker__day--keyboard-selected": e.isKeyboardSelected(),
                            "react-datepicker__day--range-start": e.isRangeStart(),
                            "react-datepicker__day--range-end": e.isRangeEnd(),
                            "react-datepicker__day--in-range": e.isInRange(),
                            "react-datepicker__day--in-selecting-range": e.isInSelectingRange(),
                            "react-datepicker__day--selecting-range-start": e.isSelectingRangeStart(),
                            "react-datepicker__day--selecting-range-end": e.isSelectingRangeEnd(),
                            "react-datepicker__day--today": e.isCurrentDay(),
                            "react-datepicker__day--weekend": e.isWeekend(),
                            "react-datepicker__day--outside-month": e.isAfterMonth() || e.isBeforeMonth()
                        }, e.getHighLightedClass("react-datepicker__day--highlighted"), e.getHolidaysClass())
                    }
                    )),
                    Pe(e, "getAriaLabel", (function() {
                        var t = e.props
                          , n = t.day
                          , a = t.ariaLabelPrefixWhenEnabled
                          , r = void 0 === a ? "Choose" : a
                          , i = t.ariaLabelPrefixWhenDisabled
                          , o = void 0 === i ? "Not available" : i
                          , s = e.isDisabled() || e.isExcluded() ? o : r;
                        return "".concat(s, " ").concat(Ie(n, "PPPP", e.props.locale))
                    }
                    )),
                    Pe(e, "getTitle", (function() {
                        var t = e.props
                          , n = t.day
                          , a = t.holidays
                          , r = void 0 === a ? new Map : a
                          , i = t.excludeDates
                          , o = Ie(n, "MM.dd.yyyy")
                          , s = [];
                        return r.has(o) && s.push.apply(s, je(r.get(o).holidayNames)),
                        e.isExcluded() && s.push(null == i ? void 0 : i.filter((function(e) {
                            return Ge(e.date ? e.date : e, n)
                        }
                        )).map((function(e) {
                            return e.message
                        }
                        ))),
                        s.join(", ")
                    }
                    )),
                    Pe(e, "getTabIndex", (function(t, n) {
                        var a = t || e.props.selected
                          , r = n || e.props.preSelection;
                        return (!e.props.showWeekPicker || !e.props.showWeekNumber && e.isStartOfWeek()) && (e.isKeyboardSelected() || e.isSameDay(a) && Ge(r, a)) ? 0 : -1
                    }
                    )),
                    Pe(e, "handleFocusDay", (function() {
                        var t, n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}, a = !1;
                        0 === e.getTabIndex() && !n.isInputFocused && e.isSameDay(e.props.preSelection) && (document.activeElement && document.activeElement !== document.body || (a = !0),
                        e.props.inline && !e.props.shouldFocusDayInline && (a = !1),
                        e.props.containerRef && e.props.containerRef.current && e.props.containerRef.current.contains(document.activeElement) && document.activeElement.classList.contains("react-datepicker__day") && (a = !0),
                        e.props.monthShowsDuplicateDaysEnd && e.isAfterMonth() && (a = !1),
                        e.props.monthShowsDuplicateDaysStart && e.isBeforeMonth() && (a = !1)),
                        a && (null === (t = e.dayEl.current) || void 0 === t || t.focus({
                            preventScroll: !0
                        }))
                    }
                    )),
                    Pe(e, "renderDayContents", (function() {
                        return e.props.monthShowsDuplicateDaysEnd && e.isAfterMonth() || e.props.monthShowsDuplicateDaysStart && e.isBeforeMonth() ? null : e.props.renderDayContents ? e.props.renderDayContents(P.getDate(e.props.day), e.props.day) : P.getDate(e.props.day)
                    }
                    )),
                    Pe(e, "render", (function() {
                        return ce.default.createElement("div", {
                            ref: e.dayEl,
                            className: e.getClassNames(e.props.day),
                            onKeyDown: e.handleOnKeyDown,
                            onClick: e.handleClick,
                            onMouseEnter: e.props.usePointerEvent ? void 0 : e.handleMouseEnter,
                            onPointerEnter: e.props.usePointerEvent ? e.handleMouseEnter : void 0,
                            tabIndex: e.getTabIndex(),
                            "aria-label": e.getAriaLabel(),
                            role: "option",
                            title: e.getTitle(),
                            "aria-disabled": e.isDisabled(),
                            "aria-current": e.isCurrentDay() ? "date" : void 0,
                            "aria-selected": e.isSelected() || e.isInRange()
                        }, e.renderDayContents(), "" !== e.getTitle() && ce.default.createElement("span", {
                            className: "overlay"
                        }, e.getTitle()))
                    }
                    )),
                    e
                }
                return xe(t, e),
                Me(t, [{
                    key: "componentDidMount",
                    value: function() {
                        this.handleFocusDay()
                    }
                }, {
                    key: "componentDidUpdate",
                    value: function(e) {
                        this.handleFocusDay(e)
                    }
                }])
            }(ce.default.Component)
              , At = function(e) {
                function t() {
                    var e;
                    ye(this, t);
                    for (var n = arguments.length, a = new Array(n), r = 0; r < n; r++)
                        a[r] = arguments[r];
                    return Pe(e = fe(this, t, [].concat(a)), "weekNumberEl", ce.default.createRef()),
                    Pe(e, "handleClick", (function(t) {
                        e.props.onClick && e.props.onClick(t)
                    }
                    )),
                    Pe(e, "handleOnKeyDown", (function(t) {
                        " " === t.key && (t.preventDefault(),
                        t.key = "Enter"),
                        e.props.handleOnKeyDown(t)
                    }
                    )),
                    Pe(e, "isKeyboardSelected", (function() {
                        return !e.props.disabledKeyboardNavigation && !Ge(e.props.date, e.props.selected) && Ge(e.props.date, e.props.preSelection)
                    }
                    )),
                    Pe(e, "getTabIndex", (function() {
                        return e.props.showWeekPicker && e.props.showWeekNumber && (e.isKeyboardSelected() || Ge(e.props.date, e.props.selected) && Ge(e.props.preSelection, e.props.selected)) ? 0 : -1
                    }
                    )),
                    Pe(e, "handleFocusWeekNumber", (function() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
                          , n = !1;
                        0 === e.getTabIndex() && !t.isInputFocused && Ge(e.props.date, e.props.preSelection) && (document.activeElement && document.activeElement !== document.body || (n = !0),
                        e.props.inline && !e.props.shouldFocusDayInline && (n = !1),
                        e.props.containerRef && e.props.containerRef.current && e.props.containerRef.current.contains(document.activeElement) && document.activeElement && document.activeElement.classList.contains("react-datepicker__week-number") && (n = !0)),
                        n && e.weekNumberEl.current && e.weekNumberEl.current.focus({
                            preventScroll: !0
                        })
                    }
                    )),
                    e
                }
                return xe(t, e),
                Me(t, [{
                    key: "componentDidMount",
                    value: function() {
                        this.handleFocusWeekNumber()
                    }
                }, {
                    key: "componentDidUpdate",
                    value: function(e) {
                        this.handleFocusWeekNumber(e)
                    }
                }, {
                    key: "render",
                    value: function() {
                        var e = this.props
                          , t = e.weekNumber
                          , n = e.ariaLabelPrefix
                          , r = void 0 === n ? "week " : n
                          , i = e.onClick
                          , o = {
                            "react-datepicker__week-number": !0,
                            "react-datepicker__week-number--clickable": !!i,
                            "react-datepicker__week-number--selected": !!i && Ge(this.props.date, this.props.selected),
                            "react-datepicker__week-number--keyboard-selected": this.isKeyboardSelected()
                        };
                        return ce.default.createElement("div", {
                            ref: this.weekNumberEl,
                            className: a.clsx(o),
                            "aria-label": "".concat(r, " ").concat(this.props.weekNumber),
                            onClick: this.handleClick,
                            onKeyDown: this.handleOnKeyDown,
                            tabIndex: this.getTabIndex()
                        }, t)
                    }
                }], [{
                    key: "defaultProps",
                    get: function() {
                        return {
                            ariaLabelPrefix: "week "
                        }
                    }
                }])
            }(ce.default.Component)
              , Yt = function(e) {
                function t() {
                    var e;
                    ye(this, t);
                    for (var n = arguments.length, a = new Array(n), r = 0; r < n; r++)
                        a[r] = arguments[r];
                    return Pe(e = fe(this, t, [].concat(a)), "handleDayClick", (function(t, n) {
                        e.props.onDayClick && e.props.onDayClick(t, n)
                    }
                    )),
                    Pe(e, "handleDayMouseEnter", (function(t) {
                        e.props.onDayMouseEnter && e.props.onDayMouseEnter(t)
                    }
                    )),
                    Pe(e, "handleWeekClick", (function(t, n, a) {
                        "function" == typeof e.props.onWeekSelect && e.props.onWeekSelect(t, n, a),
                        e.props.showWeekPicker && e.handleDayClick(t, a),
                        e.props.shouldCloseOnSelect && e.props.setOpen(!1)
                    }
                    )),
                    Pe(e, "formatWeekNumber", (function(t) {
                        return e.props.formatWeekNumber ? e.props.formatWeekNumber(t) : function(e, t) {
                            var n = t && Be(t) || $e() && Be($e());
                            return W.getISOWeek(e, n ? {
                                locale: n
                            } : null)
                        }(t)
                    }
                    )),
                    Pe(e, "renderDays", (function() {
                        var t = e.startOfWeek()
                          , n = []
                          , a = e.formatWeekNumber(t);
                        if (e.props.showWeekNumber) {
                            var r = e.props.onWeekSelect || e.props.showWeekPicker ? e.handleWeekClick.bind(e, t, a) : void 0;
                            n.push(ce.default.createElement(At, {
                                key: "W",
                                weekNumber: a,
                                date: t,
                                onClick: r,
                                selected: e.props.selected,
                                preSelection: e.props.preSelection,
                                ariaLabelPrefix: e.props.ariaLabelPrefix,
                                showWeekPicker: e.props.showWeekPicker,
                                showWeekNumber: e.props.showWeekNumber,
                                disabledKeyboardNavigation: e.props.disabledKeyboardNavigation,
                                handleOnKeyDown: e.props.handleOnKeyDown,
                                isInputFocused: e.props.isInputFocused,
                                containerRef: e.props.containerRef
                            }))
                        }
                        return n.concat([0, 1, 2, 3, 4, 5, 6].map((function(n) {
                            var a = d.addDays(t, n);
                            return ce.default.createElement(Ht, {
                                ariaLabelPrefixWhenEnabled: e.props.chooseDayAriaLabelPrefix,
                                ariaLabelPrefixWhenDisabled: e.props.disabledDayAriaLabelPrefix,
                                key: a.valueOf(),
                                day: a,
                                month: e.props.month,
                                onClick: e.handleDayClick.bind(e, a),
                                usePointerEvent: e.props.usePointerEvent,
                                onMouseEnter: e.handleDayMouseEnter.bind(e, a),
                                minDate: e.props.minDate,
                                maxDate: e.props.maxDate,
                                calendarStartDay: e.props.calendarStartDay,
                                excludeDates: e.props.excludeDates,
                                excludeDateIntervals: e.props.excludeDateIntervals,
                                includeDates: e.props.includeDates,
                                includeDateIntervals: e.props.includeDateIntervals,
                                highlightDates: e.props.highlightDates,
                                holidays: e.props.holidays,
                                selectingDate: e.props.selectingDate,
                                filterDate: e.props.filterDate,
                                preSelection: e.props.preSelection,
                                selected: e.props.selected,
                                selectsStart: e.props.selectsStart,
                                selectsEnd: e.props.selectsEnd,
                                selectsRange: e.props.selectsRange,
                                showWeekPicker: e.props.showWeekPicker,
                                showWeekNumber: e.props.showWeekNumber,
                                selectsDisabledDaysInRange: e.props.selectsDisabledDaysInRange,
                                selectsMultiple: e.props.selectsMultiple,
                                selectedDates: e.props.selectedDates,
                                startDate: e.props.startDate,
                                endDate: e.props.endDate,
                                dayClassName: e.props.dayClassName,
                                renderDayContents: e.props.renderDayContents,
                                disabledKeyboardNavigation: e.props.disabledKeyboardNavigation,
                                handleOnKeyDown: e.props.handleOnKeyDown,
                                isInputFocused: e.props.isInputFocused,
                                containerRef: e.props.containerRef,
                                inline: e.props.inline,
                                shouldFocusDayInline: e.props.shouldFocusDayInline,
                                monthShowsDuplicateDaysEnd: e.props.monthShowsDuplicateDaysEnd,
                                monthShowsDuplicateDaysStart: e.props.monthShowsDuplicateDaysStart,
                                locale: e.props.locale
                            })
                        }
                        )))
                    }
                    )),
                    Pe(e, "startOfWeek", (function() {
                        return Ae(e.props.day, e.props.locale, e.props.calendarStartDay)
                    }
                    )),
                    Pe(e, "isKeyboardSelected", (function() {
                        return !e.props.disabledKeyboardNavigation && !Ge(e.startOfWeek(), e.props.selected) && Ge(e.startOfWeek(), e.props.preSelection)
                    }
                    )),
                    e
                }
                return xe(t, e),
                Me(t, [{
                    key: "render",
                    value: function() {
                        var e = {
                            "react-datepicker__week": !0,
                            "react-datepicker__week--selected": Ge(this.startOfWeek(), this.props.selected),
                            "react-datepicker__week--keyboard-selected": this.isKeyboardSelected()
                        };
                        return ce.default.createElement("div", {
                            className: a.clsx(e)
                        }, this.renderDays())
                    }
                }], [{
                    key: "defaultProps",
                    get: function() {
                        return {
                            shouldCloseOnSelect: !0
                        }
                    }
                }])
            }(ce.default.Component)
              , _t = "two_columns"
              , Xt = "three_columns"
              , Rt = "four_columns"
              , Lt = Pe(Pe(Pe({}, _t, {
                grid: [[0, 1], [2, 3], [4, 5], [6, 7], [8, 9], [10, 11]],
                verticalNavigationOffset: 2
            }), Xt, {
                grid: [[0, 1, 2], [3, 4, 5], [6, 7, 8], [9, 10, 11]],
                verticalNavigationOffset: 3
            }), Rt, {
                grid: [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]],
                verticalNavigationOffset: 4
            });
            function Ft(e, t) {
                return e ? Rt : t ? _t : Xt
            }
            var qt = function(e) {
                function t() {
                    var e;
                    ye(this, t);
                    for (var n = arguments.length, r = new Array(n), i = 0; i < n; i++)
                        r[i] = arguments[i];
                    return Pe(e = fe(this, t, [].concat(r)), "MONTH_REFS", je(Array(12)).map((function() {
                        return ce.default.createRef()
                    }
                    ))),
                    Pe(e, "QUARTER_REFS", je(Array(4)).map((function() {
                        return ce.default.createRef()
                    }
                    ))),
                    Pe(e, "isDisabled", (function(t) {
                        return Ue(t, e.props)
                    }
                    )),
                    Pe(e, "isExcluded", (function(t) {
                        return Ze(t, e.props)
                    }
                    )),
                    Pe(e, "handleDayClick", (function(t, n) {
                        e.props.onDayClick && e.props.onDayClick(t, n, e.props.orderInDisplay)
                    }
                    )),
                    Pe(e, "handleDayMouseEnter", (function(t) {
                        e.props.onDayMouseEnter && e.props.onDayMouseEnter(t)
                    }
                    )),
                    Pe(e, "handleMouseLeave", (function() {
                        e.props.onMouseLeave && e.props.onMouseLeave()
                    }
                    )),
                    Pe(e, "isRangeStartMonth", (function(t) {
                        var n = e.props
                          , a = n.day
                          , r = n.startDate
                          , i = n.endDate;
                        return !(!r || !i) && Fe(N.setMonth(a, t), r)
                    }
                    )),
                    Pe(e, "isRangeStartQuarter", (function(t) {
                        var n = e.props
                          , a = n.day
                          , r = n.startDate
                          , i = n.endDate;
                        return !(!r || !i) && qe(z.setQuarter(a, t), r)
                    }
                    )),
                    Pe(e, "isRangeEndMonth", (function(t) {
                        var n = e.props
                          , a = n.day
                          , r = n.startDate
                          , i = n.endDate;
                        return !(!r || !i) && Fe(N.setMonth(a, t), i)
                    }
                    )),
                    Pe(e, "isRangeEndQuarter", (function(t) {
                        var n = e.props
                          , a = n.day
                          , r = n.startDate
                          , i = n.endDate;
                        return !(!r || !i) && qe(z.setQuarter(a, t), i)
                    }
                    )),
                    Pe(e, "isInSelectingRangeMonth", (function(t) {
                        var n, a = e.props, r = a.day, i = a.selectsStart, o = a.selectsEnd, s = a.selectsRange, u = a.startDate, d = a.endDate, l = null !== (n = e.props.selectingDate) && void 0 !== n ? n : e.props.preSelection;
                        return !(!(i || o || s) || !l) && (i && d ? tt(l, d, t, r) : (o && u || !(!s || !u || d)) && tt(u, l, t, r))
                    }
                    )),
                    Pe(e, "isSelectingMonthRangeStart", (function(t) {
                        var n;
                        if (!e.isInSelectingRangeMonth(t))
                            return !1;
                        var a = e.props
                          , r = a.day
                          , i = a.startDate
                          , o = a.selectsStart
                          , s = N.setMonth(r, t)
                          , u = null !== (n = e.props.selectingDate) && void 0 !== n ? n : e.props.preSelection;
                        return Fe(s, o ? u : i)
                    }
                    )),
                    Pe(e, "isSelectingMonthRangeEnd", (function(t) {
                        var n;
                        if (!e.isInSelectingRangeMonth(t))
                            return !1;
                        var a = e.props
                          , r = a.day
                          , i = a.endDate
                          , o = a.selectsEnd
                          , s = a.selectsRange
                          , u = N.setMonth(r, t)
                          , d = null !== (n = e.props.selectingDate) && void 0 !== n ? n : e.props.preSelection;
                        return Fe(u, o || s ? d : i)
                    }
                    )),
                    Pe(e, "isInSelectingRangeQuarter", (function(t) {
                        var n, a = e.props, r = a.day, i = a.selectsStart, o = a.selectsEnd, s = a.selectsRange, u = a.startDate, d = a.endDate, l = null !== (n = e.props.selectingDate) && void 0 !== n ? n : e.props.preSelection;
                        return !(!(i || o || s) || !l) && (i && d ? it(l, d, t, r) : (o && u || !(!s || !u || d)) && it(u, l, t, r))
                    }
                    )),
                    Pe(e, "isWeekInMonth", (function(t) {
                        var n = e.props.day
                          , a = d.addDays(t, 6);
                        return Fe(t, n) || Fe(a, n)
                    }
                    )),
                    Pe(e, "isCurrentMonth", (function(e, t) {
                        return D.getYear(e) === D.getYear(Ne()) && t === x.getMonth(Ne())
                    }
                    )),
                    Pe(e, "isCurrentQuarter", (function(e, t) {
                        return D.getYear(e) === D.getYear(Ne()) && t === S.getQuarter(Ne())
                    }
                    )),
                    Pe(e, "isSelectedMonth", (function(e, t, n) {
                        return x.getMonth(n) === t && D.getYear(e) === D.getYear(n)
                    }
                    )),
                    Pe(e, "isSelectedQuarter", (function(e, t, n) {
                        return S.getQuarter(e) === t && D.getYear(e) === D.getYear(n)
                    }
                    )),
                    Pe(e, "renderWeeks", (function() {
                        for (var t = [], n = e.props.fixedHeight, a = 0, r = !1, i = Ae(Ye(e.props.day), e.props.locale, e.props.calendarStartDay), o = e.props.showWeekPicker ? Ae(e.props.selected, e.props.locale, e.props.calendarStartDay) : e.props.selected, s = e.props.showWeekPicker ? Ae(e.props.preSelection, e.props.locale, e.props.calendarStartDay) : e.props.preSelection; t.push(ce.default.createElement(Yt, {
                            ariaLabelPrefix: e.props.weekAriaLabelPrefix,
                            chooseDayAriaLabelPrefix: e.props.chooseDayAriaLabelPrefix,
                            disabledDayAriaLabelPrefix: e.props.disabledDayAriaLabelPrefix,
                            key: a,
                            day: i,
                            month: x.getMonth(e.props.day),
                            onDayClick: e.handleDayClick,
                            usePointerEvent: e.props.usePointerEvent,
                            onDayMouseEnter: e.handleDayMouseEnter,
                            onWeekSelect: e.props.onWeekSelect,
                            formatWeekNumber: e.props.formatWeekNumber,
                            locale: e.props.locale,
                            minDate: e.props.minDate,
                            maxDate: e.props.maxDate,
                            excludeDates: e.props.excludeDates,
                            excludeDateIntervals: e.props.excludeDateIntervals,
                            includeDates: e.props.includeDates,
                            includeDateIntervals: e.props.includeDateIntervals,
                            inline: e.props.inline,
                            shouldFocusDayInline: e.props.shouldFocusDayInline,
                            highlightDates: e.props.highlightDates,
                            holidays: e.props.holidays,
                            selectingDate: e.props.selectingDate,
                            filterDate: e.props.filterDate,
                            preSelection: s,
                            selected: o,
                            selectsStart: e.props.selectsStart,
                            selectsEnd: e.props.selectsEnd,
                            selectsRange: e.props.selectsRange,
                            selectsDisabledDaysInRange: e.props.selectsDisabledDaysInRange,
                            selectsMultiple: e.props.selectsMultiple,
                            selectedDates: e.props.selectedDates,
                            showWeekNumber: e.props.showWeekNumbers,
                            showWeekPicker: e.props.showWeekPicker,
                            startDate: e.props.startDate,
                            endDate: e.props.endDate,
                            dayClassName: e.props.dayClassName,
                            setOpen: e.props.setOpen,
                            shouldCloseOnSelect: e.props.shouldCloseOnSelect,
                            disabledKeyboardNavigation: e.props.disabledKeyboardNavigation,
                            renderDayContents: e.props.renderDayContents,
                            handleOnKeyDown: e.props.handleOnKeyDown,
                            isInputFocused: e.props.isInputFocused,
                            containerRef: e.props.containerRef,
                            calendarStartDay: e.props.calendarStartDay,
                            monthShowsDuplicateDaysEnd: e.props.monthShowsDuplicateDaysEnd,
                            monthShowsDuplicateDaysStart: e.props.monthShowsDuplicateDaysStart
                        })),
                        !r; ) {
                            a++,
                            i = l.addWeeks(i, 1);
                            var u = n && a >= 6
                              , d = !n && !e.isWeekInMonth(i);
                            if (u || d) {
                                if (!e.props.peekNextMonth)
                                    break;
                                r = !0
                            }
                        }
                        return t
                    }
                    )),
                    Pe(e, "onMonthClick", (function(t, n) {
                        var a = N.setMonth(e.props.day, n);
                        et(a, e.props) || e.handleDayClick(Ye(a), t)
                    }
                    )),
                    Pe(e, "onMonthMouseEnter", (function(t) {
                        var n = N.setMonth(e.props.day, t);
                        et(n, e.props) || e.handleDayMouseEnter(Ye(n))
                    }
                    )),
                    Pe(e, "handleMonthNavigation", (function(t, n) {
                        e.isDisabled(n) || e.isExcluded(n) || (e.props.setPreSelection(n),
                        e.MONTH_REFS[t].current && e.MONTH_REFS[t].current.focus())
                    }
                    )),
                    Pe(e, "onMonthKeyDown", (function(t, n) {
                        var a = e.props
                          , r = a.selected
                          , i = a.preSelection
                          , o = a.disabledKeyboardNavigation
                          , s = a.showTwoColumnMonthYearPicker
                          , u = a.showFourColumnMonthYearPicker
                          , d = a.setPreSelection
                          , l = a.handleOnMonthKeyDown
                          , m = t.key;
                        if ("Tab" !== m && t.preventDefault(),
                        !o) {
                            var h = Ft(u, s)
                              , f = Lt[h].verticalNavigationOffset
                              , p = Lt[h].grid;
                            switch (m) {
                            case "Enter":
                                e.onMonthClick(t, n),
                                d(r);
                                break;
                            case "ArrowRight":
                                e.handleMonthNavigation(11 === n ? 0 : n + 1, c.addMonths(i, 1));
                                break;
                            case "ArrowLeft":
                                e.handleMonthNavigation(0 === n ? 11 : n - 1, g.subMonths(i, 1));
                                break;
                            case "ArrowUp":
                                e.handleMonthNavigation(p[0].includes(n) ? n + 12 - f : n - f, g.subMonths(i, f));
                                break;
                            case "ArrowDown":
                                e.handleMonthNavigation(p[p.length - 1].includes(n) ? n - 12 + f : n + f, c.addMonths(i, f))
                            }
                        }
                        l && l(t)
                    }
                    )),
                    Pe(e, "onQuarterClick", (function(t, n) {
                        var a = z.setQuarter(e.props.day, n);
                        nt(a, e.props) || e.handleDayClick(Xe(a), t)
                    }
                    )),
                    Pe(e, "onQuarterMouseEnter", (function(t) {
                        var n = z.setQuarter(e.props.day, t);
                        nt(n, e.props) || e.handleDayMouseEnter(Xe(n))
                    }
                    )),
                    Pe(e, "handleQuarterNavigation", (function(t, n) {
                        e.isDisabled(n) || e.isExcluded(n) || (e.props.setPreSelection(n),
                        e.QUARTER_REFS[t - 1].current && e.QUARTER_REFS[t - 1].current.focus())
                    }
                    )),
                    Pe(e, "onQuarterKeyDown", (function(t, n) {
                        var a = t.key;
                        if (!e.props.disabledKeyboardNavigation)
                            switch (a) {
                            case "Enter":
                                e.onQuarterClick(t, n),
                                e.props.setPreSelection(e.props.selected);
                                break;
                            case "ArrowRight":
                                e.handleQuarterNavigation(4 === n ? 1 : n + 1, m.addQuarters(e.props.preSelection, 1));
                                break;
                            case "ArrowLeft":
                                e.handleQuarterNavigation(1 === n ? 4 : n - 1, v.subQuarters(e.props.preSelection, 1))
                            }
                    }
                    )),
                    Pe(e, "getMonthClassNames", (function(t) {
                        var n = e.props
                          , r = n.day
                          , i = n.startDate
                          , o = n.endDate
                          , s = n.selected
                          , u = n.minDate
                          , d = n.maxDate
                          , l = n.preSelection
                          , c = n.monthClassName
                          , m = n.excludeDates
                          , h = n.includeDates
                          , f = c ? c(N.setMonth(r, t)) : void 0
                          , p = N.setMonth(r, t);
                        return a.clsx("react-datepicker__month-text", "react-datepicker__month-".concat(t), f, {
                            "react-datepicker__month-text--disabled": (u || d || m || h) && et(p, e.props),
                            "react-datepicker__month-text--selected": e.isSelectedMonth(r, t, s),
                            "react-datepicker__month-text--keyboard-selected": !e.props.disabledKeyboardNavigation && e.isSelectedMonth(r, t, l),
                            "react-datepicker__month-text--in-selecting-range": e.isInSelectingRangeMonth(t),
                            "react-datepicker__month-text--in-range": tt(i, o, t, r),
                            "react-datepicker__month-text--range-start": e.isRangeStartMonth(t),
                            "react-datepicker__month-text--range-end": e.isRangeEndMonth(t),
                            "react-datepicker__month-text--selecting-range-start": e.isSelectingMonthRangeStart(t),
                            "react-datepicker__month-text--selecting-range-end": e.isSelectingMonthRangeEnd(t),
                            "react-datepicker__month-text--today": e.isCurrentMonth(r, t)
                        })
                    }
                    )),
                    Pe(e, "getTabIndex", (function(t) {
                        var n = x.getMonth(e.props.preSelection);
                        return e.props.disabledKeyboardNavigation || t !== n ? "-1" : "0"
                    }
                    )),
                    Pe(e, "getQuarterTabIndex", (function(t) {
                        var n = S.getQuarter(e.props.preSelection);
                        return e.props.disabledKeyboardNavigation || t !== n ? "-1" : "0"
                    }
                    )),
                    Pe(e, "getAriaLabel", (function(t) {
                        var n = e.props
                          , a = n.chooseDayAriaLabelPrefix
                          , r = void 0 === a ? "Choose" : a
                          , i = n.disabledDayAriaLabelPrefix
                          , o = void 0 === i ? "Not available" : i
                          , s = n.day
                          , u = N.setMonth(s, t)
                          , d = e.isDisabled(u) || e.isExcluded(u) ? o : r;
                        return "".concat(d, " ").concat(Ie(u, "MMMM yyyy"))
                    }
                    )),
                    Pe(e, "getQuarterClassNames", (function(t) {
                        var n = e.props
                          , r = n.day
                          , i = n.startDate
                          , o = n.endDate
                          , s = n.selected
                          , u = n.minDate
                          , d = n.maxDate
                          , l = n.preSelection
                          , c = n.disabledKeyboardNavigation;
                        return a.clsx("react-datepicker__quarter-text", "react-datepicker__quarter-".concat(t), {
                            "react-datepicker__quarter-text--disabled": (u || d) && nt(z.setQuarter(r, t), e.props),
                            "react-datepicker__quarter-text--selected": e.isSelectedQuarter(r, t, s),
                            "react-datepicker__quarter-text--keyboard-selected": !c && e.isSelectedQuarter(r, t, l),
                            "react-datepicker__quarter-text--in-selecting-range": e.isInSelectingRangeQuarter(t),
                            "react-datepicker__quarter-text--in-range": it(i, o, t, r),
                            "react-datepicker__quarter-text--range-start": e.isRangeStartQuarter(t),
                            "react-datepicker__quarter-text--range-end": e.isRangeEndQuarter(t)
                        })
                    }
                    )),
                    Pe(e, "getMonthContent", (function(t) {
                        var n = e.props
                          , a = n.showFullMonthYearPicker
                          , r = n.renderMonthContent
                          , i = n.locale
                          , o = n.day
                          , s = Qe(t, i)
                          , u = Je(t, i);
                        return r ? r(t, s, u, o) : a ? u : s
                    }
                    )),
                    Pe(e, "getQuarterContent", (function(t) {
                        var n = e.props
                          , a = n.renderQuarterContent
                          , r = function(e, t) {
                            return Ie(z.setQuarter(Ne(), e), "QQQ", t)
                        }(t, n.locale);
                        return a ? a(t, r) : r
                    }
                    )),
                    Pe(e, "renderMonths", (function() {
                        var t = e.props
                          , n = t.showTwoColumnMonthYearPicker
                          , a = t.showFourColumnMonthYearPicker
                          , r = t.day
                          , i = t.selected;
                        return Lt[Ft(a, n)].grid.map((function(t, n) {
                            return ce.default.createElement("div", {
                                className: "react-datepicker__month-wrapper",
                                key: n
                            }, t.map((function(t, n) {
                                return ce.default.createElement("div", {
                                    ref: e.MONTH_REFS[t],
                                    key: n,
                                    onClick: function(n) {
                                        e.onMonthClick(n, t)
                                    },
                                    onKeyDown: function(n) {
                                        Wt(n) && (n.preventDefault(),
                                        n.key = "Enter"),
                                        e.onMonthKeyDown(n, t)
                                    },
                                    onMouseEnter: e.props.usePointerEvent ? void 0 : function() {
                                        return e.onMonthMouseEnter(t)
                                    }
                                    ,
                                    onPointerEnter: e.props.usePointerEvent ? function() {
                                        return e.onMonthMouseEnter(t)
                                    }
                                    : void 0,
                                    tabIndex: e.getTabIndex(t),
                                    className: e.getMonthClassNames(t),
                                    role: "option",
                                    "aria-label": e.getAriaLabel(t),
                                    "aria-current": e.isCurrentMonth(r, t) ? "date" : void 0,
                                    "aria-selected": e.isSelectedMonth(r, t, i)
                                }, e.getMonthContent(t))
                            }
                            )))
                        }
                        ))
                    }
                    )),
                    Pe(e, "renderQuarters", (function() {
                        var t = e.props
                          , n = t.day
                          , a = t.selected;
                        return ce.default.createElement("div", {
                            className: "react-datepicker__quarter-wrapper"
                        }, [1, 2, 3, 4].map((function(t, r) {
                            return ce.default.createElement("div", {
                                key: r,
                                ref: e.QUARTER_REFS[r],
                                role: "option",
                                onClick: function(n) {
                                    e.onQuarterClick(n, t)
                                },
                                onKeyDown: function(n) {
                                    e.onQuarterKeyDown(n, t)
                                },
                                onMouseEnter: e.props.usePointerEvent ? void 0 : function() {
                                    return e.onQuarterMouseEnter(t)
                                }
                                ,
                                onPointerEnter: e.props.usePointerEvent ? function() {
                                    return e.onQuarterMouseEnter(t)
                                }
                                : void 0,
                                className: e.getQuarterClassNames(t),
                                "aria-selected": e.isSelectedQuarter(n, t, a),
                                tabIndex: e.getQuarterTabIndex(t),
                                "aria-current": e.isCurrentQuarter(n, t) ? "date" : void 0
                            }, e.getQuarterContent(t))
                        }
                        )))
                    }
                    )),
                    Pe(e, "getClassNames", (function() {
                        var t = e.props
                          , n = t.selectingDate
                          , r = t.selectsStart
                          , i = t.selectsEnd
                          , o = t.showMonthYearPicker
                          , s = t.showQuarterYearPicker
                          , u = t.showWeekPicker;
                        return a.clsx("react-datepicker__month", {
                            "react-datepicker__month--selecting-range": n && (r || i)
                        }, {
                            "react-datepicker__monthPicker": o
                        }, {
                            "react-datepicker__quarterPicker": s
                        }, {
                            "react-datepicker__weekPicker": u
                        })
                    }
                    )),
                    e
                }
                return xe(t, e),
                Me(t, [{
                    key: "render",
                    value: function() {
                        var e = this.props
                          , t = e.showMonthYearPicker
                          , n = e.showQuarterYearPicker
                          , a = e.day
                          , r = e.ariaLabelPrefix
                          , i = void 0 === r ? "Month " : r
                          , o = i ? i.trim() + " " : "";
                        return ce.default.createElement("div", {
                            className: this.getClassNames(),
                            onMouseLeave: this.props.usePointerEvent ? void 0 : this.handleMouseLeave,
                            onPointerLeave: this.props.usePointerEvent ? this.handleMouseLeave : void 0,
                            "aria-label": "".concat(o).concat(Ie(a, "MMMM, yyyy")),
                            role: "listbox"
                        }, t ? this.renderMonths() : n ? this.renderQuarters() : this.renderWeeks())
                    }
                }])
            }(ce.default.Component)
              , Gt = function(e) {
                function t() {
                    var e;
                    ye(this, t);
                    for (var n = arguments.length, a = new Array(n), r = 0; r < n; r++)
                        a[r] = arguments[r];
                    return Pe(e = fe(this, t, [].concat(a)), "state", {
                        height: null
                    }),
                    Pe(e, "scrollToTheSelectedTime", (function() {
                        requestAnimationFrame((function() {
                            e.list && (e.list.scrollTop = e.centerLi && t.calcCenterPosition(e.props.monthRef ? e.props.monthRef.clientHeight - e.header.clientHeight : e.list.clientHeight, e.centerLi))
                        }
                        ))
                    }
                    )),
                    Pe(e, "handleClick", (function(t) {
                        (e.props.minTime || e.props.maxTime) && dt(t, e.props) || (e.props.excludeTimes || e.props.includeTimes || e.props.filterTime) && ut(t, e.props) || e.props.onChange(t)
                    }
                    )),
                    Pe(e, "isSelectedTime", (function(t) {
                        return e.props.selected && (n = t,
                        kt(e.props.selected).getTime() === kt(n).getTime());
                        var n
                    }
                    )),
                    Pe(e, "isDisabledTime", (function(t) {
                        return (e.props.minTime || e.props.maxTime) && dt(t, e.props) || (e.props.excludeTimes || e.props.includeTimes || e.props.filterTime) && ut(t, e.props)
                    }
                    )),
                    Pe(e, "liClasses", (function(t) {
                        var n = ["react-datepicker__time-list-item", e.props.timeClassName ? e.props.timeClassName(t) : void 0];
                        return e.isSelectedTime(t) && n.push("react-datepicker__time-list-item--selected"),
                        e.isDisabledTime(t) && n.push("react-datepicker__time-list-item--disabled"),
                        e.props.injectTimes && (60 * k.getHours(t) + y.getMinutes(t)) % e.props.intervals != 0 && n.push("react-datepicker__time-list-item--injected"),
                        n.join(" ")
                    }
                    )),
                    Pe(e, "handleOnKeyDown", (function(t, n) {
                        " " === t.key && (t.preventDefault(),
                        t.key = "Enter"),
                        "ArrowUp" !== t.key && "ArrowLeft" !== t.key || !t.target.previousSibling || (t.preventDefault(),
                        t.target.previousSibling.focus()),
                        "ArrowDown" !== t.key && "ArrowRight" !== t.key || !t.target.nextSibling || (t.preventDefault(),
                        t.target.nextSibling.focus()),
                        "Enter" === t.key && e.handleClick(n),
                        e.props.handleOnKeyDown(t)
                    }
                    )),
                    Pe(e, "renderTimes", (function() {
                        for (var t, n = [], a = e.props.format ? e.props.format : "p", r = e.props.intervals, i = e.props.selected || e.props.openToDate || Ne(), o = (t = i,
                        X.startOfDay(t)), u = e.props.injectTimes && e.props.injectTimes.sort((function(e, t) {
                            return e - t
                        }
                        )), d = 60 * function(e) {
                            var t = new Date(e.getFullYear(),e.getMonth(),e.getDate())
                              , n = new Date(e.getFullYear(),e.getMonth(),e.getDate(),24);
                            return Math.round((+n - +t) / 36e5)
                        }(i), l = d / r, c = 0; c < l; c++) {
                            var m = s.addMinutes(o, c * r);
                            if (n.push(m),
                            u) {
                                var h = wt(o, m, c, r, u);
                                n = n.concat(h)
                            }
                        }
                        var f = n.reduce((function(e, t) {
                            return t.getTime() <= i.getTime() ? t : e
                        }
                        ), n[0]);
                        return n.map((function(t, n) {
                            return ce.default.createElement("li", {
                                key: n,
                                onClick: e.handleClick.bind(e, t),
                                className: e.liClasses(t),
                                ref: function(n) {
                                    t === f && (e.centerLi = n)
                                },
                                onKeyDown: function(n) {
                                    e.handleOnKeyDown(n, t)
                                },
                                tabIndex: t === f ? 0 : -1,
                                role: "option",
                                "aria-selected": e.isSelectedTime(t) ? "true" : void 0,
                                "aria-disabled": e.isDisabledTime(t) ? "true" : void 0
                            }, Ie(t, a, e.props.locale))
                        }
                        ))
                    }
                    )),
                    e
                }
                return xe(t, e),
                Me(t, [{
                    key: "componentDidMount",
                    value: function() {
                        this.scrollToTheSelectedTime(),
                        this.props.monthRef && this.header && this.setState({
                            height: this.props.monthRef.clientHeight - this.header.clientHeight
                        })
                    }
                }, {
                    key: "render",
                    value: function() {
                        var e = this
                          , t = this.state.height;
                        return ce.default.createElement("div", {
                            className: "react-datepicker__time-container ".concat(this.props.todayButton ? "react-datepicker__time-container--with-today-button" : "")
                        }, ce.default.createElement("div", {
                            className: "react-datepicker__header react-datepicker__header--time ".concat(this.props.showTimeSelectOnly ? "react-datepicker__header--time--only" : ""),
                            ref: function(t) {
                                e.header = t
                            }
                        }, ce.default.createElement("div", {
                            className: "react-datepicker-time__header"
                        }, this.props.timeCaption)), ce.default.createElement("div", {
                            className: "react-datepicker__time"
                        }, ce.default.createElement("div", {
                            className: "react-datepicker__time-box"
                        }, ce.default.createElement("ul", {
                            className: "react-datepicker__time-list",
                            ref: function(t) {
                                e.list = t
                            },
                            style: t ? {
                                height: t
                            } : {},
                            role: "listbox",
                            "aria-label": this.props.timeCaption
                        }, this.renderTimes()))))
                    }
                }], [{
                    key: "defaultProps",
                    get: function() {
                        return {
                            intervals: 30,
                            onTimeChange: function() {},
                            todayButton: null,
                            timeCaption: "Time"
                        }
                    }
                }])
            }(ce.default.Component);
            Pe(Gt, "calcCenterPosition", (function(e, t) {
                return t.offsetTop - (e / 2 - t.clientHeight / 2)
            }
            ));
            var Kt = function(e) {
                function t(e) {
                    var n;
                    return ye(this, t),
                    Pe(n = fe(this, t, [e]), "YEAR_REFS", je(Array(n.props.yearItemNumber)).map((function() {
                        return ce.default.createRef()
                    }
                    ))),
                    Pe(n, "isDisabled", (function(e) {
                        return Ue(e, n.props)
                    }
                    )),
                    Pe(n, "isExcluded", (function(e) {
                        return Ze(e, n.props)
                    }
                    )),
                    Pe(n, "selectingDate", (function() {
                        var e;
                        return null !== (e = n.props.selectingDate) && void 0 !== e ? e : n.props.preSelection
                    }
                    )),
                    Pe(n, "updateFocusOnPaginate", (function(e) {
                        var t = function() {
                            this.YEAR_REFS[e].current.focus()
                        }
                        .bind(n);
                        window.requestAnimationFrame(t)
                    }
                    )),
                    Pe(n, "handleYearClick", (function(e, t) {
                        n.props.onDayClick && n.props.onDayClick(e, t)
                    }
                    )),
                    Pe(n, "handleYearNavigation", (function(e, t) {
                        var a = n.props
                          , r = a.date
                          , i = a.yearItemNumber
                          , o = yt(r, i).startPeriod;
                        n.isDisabled(t) || n.isExcluded(t) || (n.props.setPreSelection(t),
                        e - o == -1 ? n.updateFocusOnPaginate(i - 1) : e - o === i ? n.updateFocusOnPaginate(0) : n.YEAR_REFS[e - o].current.focus())
                    }
                    )),
                    Pe(n, "isSameDay", (function(e, t) {
                        return Ge(e, t)
                    }
                    )),
                    Pe(n, "isCurrentYear", (function(e) {
                        return e === D.getYear(Ne())
                    }
                    )),
                    Pe(n, "isRangeStart", (function(e) {
                        return n.props.startDate && n.props.endDate && Le(I.setYear(Ne(), e), n.props.startDate)
                    }
                    )),
                    Pe(n, "isRangeEnd", (function(e) {
                        return n.props.startDate && n.props.endDate && Le(I.setYear(Ne(), e), n.props.endDate)
                    }
                    )),
                    Pe(n, "isInRange", (function(e) {
                        return at(e, n.props.startDate, n.props.endDate)
                    }
                    )),
                    Pe(n, "isInSelectingRange", (function(e) {
                        var t = n.props
                          , a = t.selectsStart
                          , r = t.selectsEnd
                          , i = t.selectsRange
                          , o = t.startDate
                          , s = t.endDate;
                        return !(!(a || r || i) || !n.selectingDate()) && (a && s ? at(e, n.selectingDate(), s) : (r && o || !(!i || !o || s)) && at(e, o, n.selectingDate()))
                    }
                    )),
                    Pe(n, "isSelectingRangeStart", (function(e) {
                        if (!n.isInSelectingRange(e))
                            return !1;
                        var t = n.props
                          , a = t.startDate
                          , r = t.selectsStart;
                        return Le(I.setYear(Ne(), e), r ? n.selectingDate() : a)
                    }
                    )),
                    Pe(n, "isSelectingRangeEnd", (function(e) {
                        if (!n.isInSelectingRange(e))
                            return !1;
                        var t = n.props
                          , a = t.endDate
                          , r = t.selectsEnd
                          , i = t.selectsRange;
                        return Le(I.setYear(Ne(), e), r || i ? n.selectingDate() : a)
                    }
                    )),
                    Pe(n, "isKeyboardSelected", (function(e) {
                        var t = _e(I.setYear(n.props.date, e));
                        return !n.props.disabledKeyboardNavigation && !n.props.inline && !Ge(t, _e(n.props.selected)) && Ge(t, _e(n.props.preSelection))
                    }
                    )),
                    Pe(n, "onYearClick", (function(e, t) {
                        var a = n.props.date;
                        n.handleYearClick(_e(I.setYear(a, t)), e)
                    }
                    )),
                    Pe(n, "onYearKeyDown", (function(e, t) {
                        var a = e.key
                          , r = n.props.handleOnKeyDown;
                        if (!n.props.disabledKeyboardNavigation)
                            switch (a) {
                            case "Enter":
                                n.onYearClick(e, t),
                                n.props.setPreSelection(n.props.selected);
                                break;
                            case "ArrowRight":
                                n.handleYearNavigation(t + 1, h.addYears(n.props.preSelection, 1));
                                break;
                            case "ArrowLeft":
                                n.handleYearNavigation(t - 1, w.subYears(n.props.preSelection, 1))
                            }
                        r && r(e)
                    }
                    )),
                    Pe(n, "getYearClassNames", (function(e) {
                        var t = n.props
                          , r = t.date
                          , i = t.minDate
                          , o = t.maxDate
                          , s = t.selected
                          , u = t.excludeDates
                          , d = t.includeDates
                          , l = t.filterDate
                          , c = t.yearClassName;
                        return a.clsx("react-datepicker__year-text", "react-datepicker__year-".concat(e), c ? c(I.setYear(r, e)) : void 0, {
                            "react-datepicker__year-text--selected": e === D.getYear(s),
                            "react-datepicker__year-text--disabled": (i || o || u || d || l) && rt(e, n.props),
                            "react-datepicker__year-text--keyboard-selected": n.isKeyboardSelected(e),
                            "react-datepicker__year-text--range-start": n.isRangeStart(e),
                            "react-datepicker__year-text--range-end": n.isRangeEnd(e),
                            "react-datepicker__year-text--in-range": n.isInRange(e),
                            "react-datepicker__year-text--in-selecting-range": n.isInSelectingRange(e),
                            "react-datepicker__year-text--selecting-range-start": n.isSelectingRangeStart(e),
                            "react-datepicker__year-text--selecting-range-end": n.isSelectingRangeEnd(e),
                            "react-datepicker__year-text--today": n.isCurrentYear(e)
                        })
                    }
                    )),
                    Pe(n, "getYearTabIndex", (function(e) {
                        return n.props.disabledKeyboardNavigation ? "-1" : e === D.getYear(n.props.preSelection) ? "0" : "-1"
                    }
                    )),
                    Pe(n, "getYearContainerClassNames", (function() {
                        var e = n.props
                          , t = e.selectingDate
                          , r = e.selectsStart
                          , i = e.selectsEnd
                          , o = e.selectsRange;
                        return a.clsx("react-datepicker__year", {
                            "react-datepicker__year--selecting-range": t && (r || i || o)
                        })
                    }
                    )),
                    Pe(n, "getYearContent", (function(e) {
                        return n.props.renderYearContent ? n.props.renderYearContent(e) : e
                    }
                    )),
                    n
                }
                return xe(t, e),
                Me(t, [{
                    key: "render",
                    value: function() {
                        for (var e = this, t = [], n = this.props, a = n.date, r = n.yearItemNumber, i = n.onYearMouseEnter, o = n.onYearMouseLeave, s = yt(a, r), u = s.startPeriod, d = s.endPeriod, l = function(n) {
                            t.push(ce.default.createElement("div", {
                                ref: e.YEAR_REFS[n - u],
                                onClick: function(t) {
                                    e.onYearClick(t, n)
                                },
                                onKeyDown: function(t) {
                                    Wt(t) && (t.preventDefault(),
                                    t.key = "Enter"),
                                    e.onYearKeyDown(t, n)
                                },
                                tabIndex: e.getYearTabIndex(n),
                                className: e.getYearClassNames(n),
                                onMouseEnter: e.props.usePointerEvent ? void 0 : function(e) {
                                    return i(e, n)
                                }
                                ,
                                onPointerEnter: e.props.usePointerEvent ? function(e) {
                                    return i(e, n)
                                }
                                : void 0,
                                onMouseLeave: e.props.usePointerEvent ? void 0 : function(e) {
                                    return o(e, n)
                                }
                                ,
                                onPointerLeave: e.props.usePointerEvent ? function(e) {
                                    return o(e, n)
                                }
                                : void 0,
                                key: n,
                                "aria-current": e.isCurrentYear(n) ? "date" : void 0
                            }, e.getYearContent(n)))
                        }, c = u; c <= d; c++)
                            l(c);
                        return ce.default.createElement("div", {
                            className: this.getYearContainerClassNames()
                        }, ce.default.createElement("div", {
                            className: "react-datepicker__year-wrapper",
                            onMouseLeave: this.props.usePointerEvent ? void 0 : this.props.clearSelectingDate,
                            onPointerLeave: this.props.usePointerEvent ? this.props.clearSelectingDate : void 0
                        }, t))
                    }
                }])
            }(ce.default.Component)
              , Vt = function(e) {
                function t(e) {
                    var n;
                    return ye(this, t),
                    Pe(n = fe(this, t, [e]), "onTimeChange", (function(e) {
                        n.setState({
                            time: e
                        });
                        var t = n.props.date
                          , a = t instanceof Date && !isNaN(t) ? t : new Date;
                        a.setHours(e.split(":")[0]),
                        a.setMinutes(e.split(":")[1]),
                        n.props.onChange(a)
                    }
                    )),
                    Pe(n, "renderTimeInput", (function() {
                        var e = n.state.time
                          , t = n.props
                          , a = t.date
                          , r = t.timeString
                          , i = t.customTimeInput;
                        return i ? ce.default.cloneElement(i, {
                            date: a,
                            value: e,
                            onChange: n.onTimeChange
                        }) : ce.default.createElement("input", {
                            type: "time",
                            className: "react-datepicker-time__input",
                            placeholder: "Time",
                            name: "time-input",
                            required: !0,
                            value: e,
                            onChange: function(e) {
                                n.onTimeChange(e.target.value || r)
                            }
                        })
                    }
                    )),
                    n.state = {
                        time: n.props.timeString
                    },
                    n
                }
                return xe(t, e),
                Me(t, [{
                    key: "render",
                    value: function() {
                        return ce.default.createElement("div", {
                            className: "react-datepicker__input-time-container"
                        }, ce.default.createElement("div", {
                            className: "react-datepicker-time__caption"
                        }, this.props.timeInputLabel), ce.default.createElement("div", {
                            className: "react-datepicker-time__input-container"
                        }, ce.default.createElement("div", {
                            className: "react-datepicker-time__input"
                        }, this.renderTimeInput())))
                    }
                }], [{
                    key: "getDerivedStateFromProps",
                    value: function(e, t) {
                        return e.timeString !== t.time ? {
                            time: e.timeString
                        } : null
                    }
                }])
            }(ce.default.Component);
            function $t(e) {
                var t = e.showTimeSelectOnly
                  , n = void 0 !== t && t
                  , a = e.showTime
                  , r = void 0 !== a && a
                  , i = e.className
                  , o = e.children
                  , s = n ? "Choose Time" : "Choose Date".concat(r ? " and Time" : "");
                return ce.default.createElement("div", {
                    className: i,
                    role: "dialog",
                    "aria-label": s,
                    "aria-modal": "true"
                }, o)
            }
            var Bt, Jt = ["react-datepicker__year-select", "react-datepicker__month-select", "react-datepicker__month-year-select"], Qt = function(e) {
                function t(e) {
                    var n;
                    return ye(this, t),
                    Pe(n = fe(this, t, [e]), "handleClickOutside", (function(e) {
                        n.props.onClickOutside(e)
                    }
                    )),
                    Pe(n, "setClickOutsideRef", (function() {
                        return n.containerRef.current
                    }
                    )),
                    Pe(n, "handleDropdownFocus", (function(e) {
                        (function() {
                            var e = ((arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}).className || "").split(/\s+/);
                            return Jt.some((function(t) {
                                return e.indexOf(t) >= 0
                            }
                            ))
                        }
                        )(e.target) && n.props.onDropdownFocus()
                    }
                    )),
                    Pe(n, "getDateInView", (function() {
                        var e = n.props
                          , t = e.preSelection
                          , a = e.selected
                          , r = e.openToDate
                          , i = ft(n.props)
                          , o = pt(n.props)
                          , s = Ne();
                        return r || a || t || (i && te.isBefore(s, i) ? i : o && ee.isAfter(s, o) ? o : s)
                    }
                    )),
                    Pe(n, "increaseMonth", (function() {
                        n.setState((function(e) {
                            var t = e.date;
                            return {
                                date: c.addMonths(t, 1)
                            }
                        }
                        ), (function() {
                            return n.handleMonthChange(n.state.date)
                        }
                        ))
                    }
                    )),
                    Pe(n, "decreaseMonth", (function() {
                        n.setState((function(e) {
                            var t = e.date;
                            return {
                                date: g.subMonths(t, 1)
                            }
                        }
                        ), (function() {
                            return n.handleMonthChange(n.state.date)
                        }
                        ))
                    }
                    )),
                    Pe(n, "handleDayClick", (function(e, t, a) {
                        n.props.onSelect(e, t, a),
                        n.props.setPreSelection && n.props.setPreSelection(e)
                    }
                    )),
                    Pe(n, "handleDayMouseEnter", (function(e) {
                        n.setState({
                            selectingDate: e
                        }),
                        n.props.onDayMouseEnter && n.props.onDayMouseEnter(e)
                    }
                    )),
                    Pe(n, "handleMonthMouseLeave", (function() {
                        n.setState({
                            selectingDate: null
                        }),
                        n.props.onMonthMouseLeave && n.props.onMonthMouseLeave()
                    }
                    )),
                    Pe(n, "handleYearMouseEnter", (function(e, t) {
                        n.setState({
                            selectingDate: I.setYear(Ne(), t)
                        }),
                        n.props.onYearMouseEnter && n.props.onYearMouseEnter(e, t)
                    }
                    )),
                    Pe(n, "handleYearMouseLeave", (function(e, t) {
                        n.props.onYearMouseLeave && n.props.onYearMouseLeave(e, t)
                    }
                    )),
                    Pe(n, "handleYearChange", (function(e) {
                        n.props.onYearChange && (n.props.onYearChange(e),
                        n.setState({
                            isRenderAriaLiveMessage: !0
                        })),
                        n.props.adjustDateOnChange && (n.props.onSelect && n.props.onSelect(e),
                        n.props.setOpen && n.props.setOpen(!0)),
                        n.props.setPreSelection && n.props.setPreSelection(e)
                    }
                    )),
                    Pe(n, "handleMonthChange", (function(e) {
                        n.handleCustomMonthChange(e),
                        n.props.adjustDateOnChange && (n.props.onSelect && n.props.onSelect(e),
                        n.props.setOpen && n.props.setOpen(!0)),
                        n.props.setPreSelection && n.props.setPreSelection(e)
                    }
                    )),
                    Pe(n, "handleCustomMonthChange", (function(e) {
                        n.props.onMonthChange && (n.props.onMonthChange(e),
                        n.setState({
                            isRenderAriaLiveMessage: !0
                        }))
                    }
                    )),
                    Pe(n, "handleMonthYearChange", (function(e) {
                        n.handleYearChange(e),
                        n.handleMonthChange(e)
                    }
                    )),
                    Pe(n, "changeYear", (function(e) {
                        n.setState((function(t) {
                            var n = t.date;
                            return {
                                date: I.setYear(n, e)
                            }
                        }
                        ), (function() {
                            return n.handleYearChange(n.state.date)
                        }
                        ))
                    }
                    )),
                    Pe(n, "changeMonth", (function(e) {
                        n.setState((function(t) {
                            var n = t.date;
                            return {
                                date: N.setMonth(n, e)
                            }
                        }
                        ), (function() {
                            return n.handleMonthChange(n.state.date)
                        }
                        ))
                    }
                    )),
                    Pe(n, "changeMonthYear", (function(e) {
                        n.setState((function(t) {
                            var n = t.date;
                            return {
                                date: I.setYear(N.setMonth(n, x.getMonth(e)), D.getYear(e))
                            }
                        }
                        ), (function() {
                            return n.handleMonthYearChange(n.state.date)
                        }
                        ))
                    }
                    )),
                    Pe(n, "header", (function() {
                        var e = Ae(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : n.state.date, n.props.locale, n.props.calendarStartDay)
                          , t = [];
                        return n.props.showWeekNumbers && t.push(ce.default.createElement("div", {
                            key: "W",
                            className: "react-datepicker__day-name"
                        }, n.props.weekLabel || "#")),
                        t.concat([0, 1, 2, 3, 4, 5, 6].map((function(t) {
                            var r = d.addDays(e, t)
                              , i = n.formatWeekday(r, n.props.locale)
                              , o = n.props.weekDayClassName ? n.props.weekDayClassName(r) : void 0;
                            return ce.default.createElement("div", {
                                key: t,
                                className: a.clsx("react-datepicker__day-name", o)
                            }, i)
                        }
                        )))
                    }
                    )),
                    Pe(n, "formatWeekday", (function(e, t) {
                        return n.props.formatWeekDay ? function(e, t, n) {
                            return t(Ie(e, "EEEE", n))
                        }(e, n.props.formatWeekDay, t) : n.props.useWeekdaysShort ? function(e, t) {
                            return Ie(e, "EEE", t)
                        }(e, t) : function(e, t) {
                            return Ie(e, "EEEEEE", t)
                        }(e, t)
                    }
                    )),
                    Pe(n, "decreaseYear", (function() {
                        n.setState((function(e) {
                            var t = e.date;
                            return {
                                date: w.subYears(t, n.props.showYearPicker ? n.props.yearItemNumber : 1)
                            }
                        }
                        ), (function() {
                            return n.handleYearChange(n.state.date)
                        }
                        ))
                    }
                    )),
                    Pe(n, "clearSelectingDate", (function() {
                        n.setState({
                            selectingDate: null
                        })
                    }
                    )),
                    Pe(n, "renderPreviousButton", (function() {
                        if (!n.props.renderCustomHeader) {
                            var e;
                            switch (!0) {
                            case n.props.showMonthYearPicker:
                                e = mt(n.state.date, n.props);
                                break;
                            case n.props.showYearPicker:
                                e = function(e) {
                                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                                      , n = t.minDate
                                      , a = t.yearItemNumber
                                      , r = void 0 === a ? Te : a
                                      , i = yt(_e(w.subYears(e, r)), r).endPeriod
                                      , o = n && D.getYear(n);
                                    return o && o > i || !1
                                }(n.state.date, n.props);
                                break;
                            default:
                                e = lt(n.state.date, n.props)
                            }
                            if ((n.props.forceShowMonthNavigation || n.props.showDisabledMonthNavigation || !e) && !n.props.showTimeSelectOnly) {
                                var t = ["react-datepicker__navigation", "react-datepicker__navigation--previous"]
                                  , a = n.decreaseMonth;
                                (n.props.showMonthYearPicker || n.props.showQuarterYearPicker || n.props.showYearPicker) && (a = n.decreaseYear),
                                e && n.props.showDisabledMonthNavigation && (t.push("react-datepicker__navigation--previous--disabled"),
                                a = null);
                                var r = n.props.showMonthYearPicker || n.props.showQuarterYearPicker || n.props.showYearPicker
                                  , i = n.props
                                  , o = i.previousMonthButtonLabel
                                  , s = i.previousYearButtonLabel
                                  , u = n.props
                                  , d = u.previousMonthAriaLabel
                                  , l = void 0 === d ? "string" == typeof o ? o : "Previous Month" : d
                                  , c = u.previousYearAriaLabel
                                  , m = void 0 === c ? "string" == typeof s ? s : "Previous Year" : c;
                                return ce.default.createElement("button", {
                                    type: "button",
                                    className: t.join(" "),
                                    onClick: a,
                                    onKeyDown: n.props.handleOnKeyDown,
                                    "aria-label": r ? m : l
                                }, ce.default.createElement("span", {
                                    className: ["react-datepicker__navigation-icon", "react-datepicker__navigation-icon--previous"].join(" ")
                                }, r ? n.props.previousYearButtonLabel : n.props.previousMonthButtonLabel))
                            }
                        }
                    }
                    )),
                    Pe(n, "increaseYear", (function() {
                        n.setState((function(e) {
                            var t = e.date;
                            return {
                                date: h.addYears(t, n.props.showYearPicker ? n.props.yearItemNumber : 1)
                            }
                        }
                        ), (function() {
                            return n.handleYearChange(n.state.date)
                        }
                        ))
                    }
                    )),
                    Pe(n, "renderNextButton", (function() {
                        if (!n.props.renderCustomHeader) {
                            var e;
                            switch (!0) {
                            case n.props.showMonthYearPicker:
                                e = ht(n.state.date, n.props);
                                break;
                            case n.props.showYearPicker:
                                e = function(e) {
                                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                                      , n = t.maxDate
                                      , a = t.yearItemNumber
                                      , r = void 0 === a ? Te : a
                                      , i = yt(h.addYears(e, r), r).startPeriod
                                      , o = n && D.getYear(n);
                                    return o && o < i || !1
                                }(n.state.date, n.props);
                                break;
                            default:
                                e = ct(n.state.date, n.props)
                            }
                            if ((n.props.forceShowMonthNavigation || n.props.showDisabledMonthNavigation || !e) && !n.props.showTimeSelectOnly) {
                                var t = ["react-datepicker__navigation", "react-datepicker__navigation--next"];
                                n.props.showTimeSelect && t.push("react-datepicker__navigation--next--with-time"),
                                n.props.todayButton && t.push("react-datepicker__navigation--next--with-today-button");
                                var a = n.increaseMonth;
                                (n.props.showMonthYearPicker || n.props.showQuarterYearPicker || n.props.showYearPicker) && (a = n.increaseYear),
                                e && n.props.showDisabledMonthNavigation && (t.push("react-datepicker__navigation--next--disabled"),
                                a = null);
                                var r = n.props.showMonthYearPicker || n.props.showQuarterYearPicker || n.props.showYearPicker
                                  , i = n.props
                                  , o = i.nextMonthButtonLabel
                                  , s = i.nextYearButtonLabel
                                  , u = n.props
                                  , d = u.nextMonthAriaLabel
                                  , l = void 0 === d ? "string" == typeof o ? o : "Next Month" : d
                                  , c = u.nextYearAriaLabel
                                  , m = void 0 === c ? "string" == typeof s ? s : "Next Year" : c;
                                return ce.default.createElement("button", {
                                    type: "button",
                                    className: t.join(" "),
                                    onClick: a,
                                    onKeyDown: n.props.handleOnKeyDown,
                                    "aria-label": r ? m : l
                                }, ce.default.createElement("span", {
                                    className: ["react-datepicker__navigation-icon", "react-datepicker__navigation-icon--next"].join(" ")
                                }, r ? n.props.nextYearButtonLabel : n.props.nextMonthButtonLabel))
                            }
                        }
                    }
                    )),
                    Pe(n, "renderCurrentMonth", (function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : n.state.date
                          , t = ["react-datepicker__current-month"];
                        return n.props.showYearDropdown && t.push("react-datepicker__current-month--hasYearDropdown"),
                        n.props.showMonthDropdown && t.push("react-datepicker__current-month--hasMonthDropdown"),
                        n.props.showMonthYearDropdown && t.push("react-datepicker__current-month--hasMonthYearDropdown"),
                        ce.default.createElement("div", {
                            className: t.join(" ")
                        }, Ie(e, n.props.dateFormat, n.props.locale))
                    }
                    )),
                    Pe(n, "renderYearDropdown", (function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                        if (n.props.showYearDropdown && !e)
                            return ce.default.createElement(jt, {
                                adjustDateOnChange: n.props.adjustDateOnChange,
                                date: n.state.date,
                                onSelect: n.props.onSelect,
                                setOpen: n.props.setOpen,
                                dropdownMode: n.props.dropdownMode,
                                onChange: n.changeYear,
                                minDate: n.props.minDate,
                                maxDate: n.props.maxDate,
                                year: D.getYear(n.state.date),
                                scrollableYearDropdown: n.props.scrollableYearDropdown,
                                yearDropdownItemNumber: n.props.yearDropdownItemNumber
                            })
                    }
                    )),
                    Pe(n, "renderMonthDropdown", (function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                        if (n.props.showMonthDropdown && !e)
                            return ce.default.createElement(Et, {
                                dropdownMode: n.props.dropdownMode,
                                locale: n.props.locale,
                                onChange: n.changeMonth,
                                month: x.getMonth(n.state.date),
                                useShortMonthInDropdown: n.props.useShortMonthInDropdown
                            })
                    }
                    )),
                    Pe(n, "renderMonthYearDropdown", (function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                        if (n.props.showMonthYearDropdown && !e)
                            return ce.default.createElement(Ot, {
                                dropdownMode: n.props.dropdownMode,
                                locale: n.props.locale,
                                dateFormat: n.props.dateFormat,
                                onChange: n.changeMonthYear,
                                minDate: n.props.minDate,
                                maxDate: n.props.maxDate,
                                date: n.state.date,
                                scrollableMonthYearDropdown: n.props.scrollableMonthYearDropdown
                            })
                    }
                    )),
                    Pe(n, "handleTodayButtonClick", (function(e) {
                        n.props.onSelect(Re(), e),
                        n.props.setPreSelection && n.props.setPreSelection(Re())
                    }
                    )),
                    Pe(n, "renderTodayButton", (function() {
                        if (n.props.todayButton && !n.props.showTimeSelectOnly)
                            return ce.default.createElement("div", {
                                className: "react-datepicker__today-button",
                                onClick: function(e) {
                                    return n.handleTodayButtonClick(e)
                                }
                            }, n.props.todayButton)
                    }
                    )),
                    Pe(n, "renderDefaultHeader", (function(e) {
                        var t = e.monthDate
                          , a = e.i;
                        return ce.default.createElement("div", {
                            className: "react-datepicker__header ".concat(n.props.showTimeSelect ? "react-datepicker__header--has-time-select" : "")
                        }, n.renderCurrentMonth(t), ce.default.createElement("div", {
                            className: "react-datepicker__header__dropdown react-datepicker__header__dropdown--".concat(n.props.dropdownMode),
                            onFocus: n.handleDropdownFocus
                        }, n.renderMonthDropdown(0 !== a), n.renderMonthYearDropdown(0 !== a), n.renderYearDropdown(0 !== a)), ce.default.createElement("div", {
                            className: "react-datepicker__day-names"
                        }, n.header(t)))
                    }
                    )),
                    Pe(n, "renderCustomHeader", (function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
                          , t = e.monthDate
                          , a = e.i;
                        if (n.props.showTimeSelect && !n.state.monthContainer || n.props.showTimeSelectOnly)
                            return null;
                        var r = lt(n.state.date, n.props)
                          , i = ct(n.state.date, n.props)
                          , o = mt(n.state.date, n.props)
                          , s = ht(n.state.date, n.props)
                          , u = !n.props.showMonthYearPicker && !n.props.showQuarterYearPicker && !n.props.showYearPicker;
                        return ce.default.createElement("div", {
                            className: "react-datepicker__header react-datepicker__header--custom",
                            onFocus: n.props.onDropdownFocus
                        }, n.props.renderCustomHeader(ve(ve({}, n.state), {}, {
                            customHeaderCount: a,
                            monthDate: t,
                            changeMonth: n.changeMonth,
                            changeYear: n.changeYear,
                            decreaseMonth: n.decreaseMonth,
                            increaseMonth: n.increaseMonth,
                            decreaseYear: n.decreaseYear,
                            increaseYear: n.increaseYear,
                            prevMonthButtonDisabled: r,
                            nextMonthButtonDisabled: i,
                            prevYearButtonDisabled: o,
                            nextYearButtonDisabled: s
                        })), u && ce.default.createElement("div", {
                            className: "react-datepicker__day-names"
                        }, n.header(t)))
                    }
                    )),
                    Pe(n, "renderYearHeader", (function(e) {
                        var t = e.monthDate
                          , a = n.props
                          , r = a.showYearPicker
                          , i = yt(t, a.yearItemNumber)
                          , o = i.startPeriod
                          , s = i.endPeriod;
                        return ce.default.createElement("div", {
                            className: "react-datepicker__header react-datepicker-year-header"
                        }, r ? "".concat(o, " - ").concat(s) : D.getYear(t))
                    }
                    )),
                    Pe(n, "renderHeader", (function(e) {
                        switch (!0) {
                        case void 0 !== n.props.renderCustomHeader:
                            return n.renderCustomHeader(e);
                        case n.props.showMonthYearPicker || n.props.showQuarterYearPicker || n.props.showYearPicker:
                            return n.renderYearHeader(e);
                        default:
                            return n.renderDefaultHeader(e)
                        }
                    }
                    )),
                    Pe(n, "renderMonths", (function() {
                        var e;
                        if (!n.props.showTimeSelectOnly && !n.props.showYearPicker) {
                            for (var t = [], a = n.props.showPreviousMonths ? n.props.monthsShown - 1 : 0, r = n.props.showMonthYearPicker || n.props.showQuarterYearPicker ? h.addYears(n.state.date, a) : g.subMonths(n.state.date, a), i = null !== (e = n.props.monthSelectedIn) && void 0 !== e ? e : a, o = 0; o < n.props.monthsShown; ++o) {
                                var s = o - i + a
                                  , u = n.props.showMonthYearPicker || n.props.showQuarterYearPicker ? h.addYears(r, s) : c.addMonths(r, s)
                                  , d = "month-".concat(o)
                                  , l = o < n.props.monthsShown - 1
                                  , m = o > 0;
                                t.push(ce.default.createElement("div", {
                                    key: d,
                                    ref: function(e) {
                                        n.monthContainer = e
                                    },
                                    className: "react-datepicker__month-container"
                                }, n.renderHeader({
                                    monthDate: u,
                                    i: o
                                }), ce.default.createElement(qt, {
                                    chooseDayAriaLabelPrefix: n.props.chooseDayAriaLabelPrefix,
                                    disabledDayAriaLabelPrefix: n.props.disabledDayAriaLabelPrefix,
                                    weekAriaLabelPrefix: n.props.weekAriaLabelPrefix,
                                    ariaLabelPrefix: n.props.monthAriaLabelPrefix,
                                    onChange: n.changeMonthYear,
                                    day: u,
                                    dayClassName: n.props.dayClassName,
                                    calendarStartDay: n.props.calendarStartDay,
                                    monthClassName: n.props.monthClassName,
                                    onDayClick: n.handleDayClick,
                                    handleOnKeyDown: n.props.handleOnDayKeyDown,
                                    handleOnMonthKeyDown: n.props.handleOnKeyDown,
                                    usePointerEvent: n.props.usePointerEvent,
                                    onDayMouseEnter: n.handleDayMouseEnter,
                                    onMouseLeave: n.handleMonthMouseLeave,
                                    onWeekSelect: n.props.onWeekSelect,
                                    orderInDisplay: o,
                                    formatWeekNumber: n.props.formatWeekNumber,
                                    locale: n.props.locale,
                                    minDate: n.props.minDate,
                                    maxDate: n.props.maxDate,
                                    excludeDates: n.props.excludeDates,
                                    excludeDateIntervals: n.props.excludeDateIntervals,
                                    highlightDates: n.props.highlightDates,
                                    holidays: n.props.holidays,
                                    selectingDate: n.state.selectingDate,
                                    includeDates: n.props.includeDates,
                                    includeDateIntervals: n.props.includeDateIntervals,
                                    inline: n.props.inline,
                                    shouldFocusDayInline: n.props.shouldFocusDayInline,
                                    fixedHeight: n.props.fixedHeight,
                                    filterDate: n.props.filterDate,
                                    preSelection: n.props.preSelection,
                                    setPreSelection: n.props.setPreSelection,
                                    selected: n.props.selected,
                                    selectsStart: n.props.selectsStart,
                                    selectsEnd: n.props.selectsEnd,
                                    selectsRange: n.props.selectsRange,
                                    selectsDisabledDaysInRange: n.props.selectsDisabledDaysInRange,
                                    selectsMultiple: n.props.selectsMultiple,
                                    selectedDates: n.props.selectedDates,
                                    showWeekNumbers: n.props.showWeekNumbers,
                                    startDate: n.props.startDate,
                                    endDate: n.props.endDate,
                                    peekNextMonth: n.props.peekNextMonth,
                                    setOpen: n.props.setOpen,
                                    shouldCloseOnSelect: n.props.shouldCloseOnSelect,
                                    renderDayContents: n.props.renderDayContents,
                                    renderMonthContent: n.props.renderMonthContent,
                                    renderQuarterContent: n.props.renderQuarterContent,
                                    renderYearContent: n.props.renderYearContent,
                                    disabledKeyboardNavigation: n.props.disabledKeyboardNavigation,
                                    showMonthYearPicker: n.props.showMonthYearPicker,
                                    showFullMonthYearPicker: n.props.showFullMonthYearPicker,
                                    showTwoColumnMonthYearPicker: n.props.showTwoColumnMonthYearPicker,
                                    showFourColumnMonthYearPicker: n.props.showFourColumnMonthYearPicker,
                                    showYearPicker: n.props.showYearPicker,
                                    showQuarterYearPicker: n.props.showQuarterYearPicker,
                                    showWeekPicker: n.props.showWeekPicker,
                                    isInputFocused: n.props.isInputFocused,
                                    containerRef: n.containerRef,
                                    monthShowsDuplicateDaysEnd: l,
                                    monthShowsDuplicateDaysStart: m
                                })))
                            }
                            return t
                        }
                    }
                    )),
                    Pe(n, "renderYears", (function() {
                        if (!n.props.showTimeSelectOnly)
                            return n.props.showYearPicker ? ce.default.createElement("div", {
                                className: "react-datepicker__year--container"
                            }, n.renderHeader({
                                monthDate: n.state.date
                            }), ce.default.createElement(Kt, We({
                                onDayClick: n.handleDayClick,
                                selectingDate: n.state.selectingDate,
                                clearSelectingDate: n.clearSelectingDate,
                                date: n.state.date
                            }, n.props, {
                                onYearMouseEnter: n.handleYearMouseEnter,
                                onYearMouseLeave: n.handleYearMouseLeave
                            }))) : void 0
                    }
                    )),
                    Pe(n, "renderTimeSection", (function() {
                        if (n.props.showTimeSelect && (n.state.monthContainer || n.props.showTimeSelectOnly))
                            return ce.default.createElement(Gt, {
                                selected: n.props.selected,
                                openToDate: n.props.openToDate,
                                onChange: n.props.onTimeChange,
                                timeClassName: n.props.timeClassName,
                                format: n.props.timeFormat,
                                includeTimes: n.props.includeTimes,
                                intervals: n.props.timeIntervals,
                                minTime: n.props.minTime,
                                maxTime: n.props.maxTime,
                                excludeTimes: n.props.excludeTimes,
                                filterTime: n.props.filterTime,
                                timeCaption: n.props.timeCaption,
                                todayButton: n.props.todayButton,
                                showMonthDropdown: n.props.showMonthDropdown,
                                showMonthYearDropdown: n.props.showMonthYearDropdown,
                                showYearDropdown: n.props.showYearDropdown,
                                withPortal: n.props.withPortal,
                                monthRef: n.state.monthContainer,
                                injectTimes: n.props.injectTimes,
                                locale: n.props.locale,
                                handleOnKeyDown: n.props.handleOnKeyDown,
                                showTimeSelectOnly: n.props.showTimeSelectOnly
                            })
                    }
                    )),
                    Pe(n, "renderInputTimeSection", (function() {
                        var e = new Date(n.props.selected)
                          , t = ze(e) && Boolean(n.props.selected) ? "".concat(bt(e.getHours()), ":").concat(bt(e.getMinutes())) : "";
                        if (n.props.showTimeInput)
                            return ce.default.createElement(Vt, {
                                date: e,
                                timeString: t,
                                timeInputLabel: n.props.timeInputLabel,
                                onChange: n.props.onTimeChange,
                                customTimeInput: n.props.customTimeInput
                            })
                    }
                    )),
                    Pe(n, "renderAriaLiveRegion", (function() {
                        var e, t = yt(n.state.date, n.props.yearItemNumber), a = t.startPeriod, r = t.endPeriod;
                        return e = n.props.showYearPicker ? "".concat(a, " - ").concat(r) : n.props.showMonthYearPicker || n.props.showQuarterYearPicker ? D.getYear(n.state.date) : "".concat(Je(x.getMonth(n.state.date), n.props.locale), " ").concat(D.getYear(n.state.date)),
                        ce.default.createElement("span", {
                            role: "alert",
                            "aria-live": "polite",
                            className: "react-datepicker__aria-live"
                        }, n.state.isRenderAriaLiveMessage && e)
                    }
                    )),
                    Pe(n, "renderChildren", (function() {
                        if (n.props.children)
                            return ce.default.createElement("div", {
                                className: "react-datepicker__children-container"
                            }, n.props.children)
                    }
                    )),
                    n.containerRef = ce.default.createRef(),
                    n.state = {
                        date: n.getDateInView(),
                        selectingDate: null,
                        monthContainer: null,
                        isRenderAriaLiveMessage: !1
                    },
                    n
                }
                return xe(t, e),
                Me(t, [{
                    key: "componentDidMount",
                    value: function() {
                        var e = this;
                        this.props.showTimeSelect && (this.assignMonthContainer = void e.setState({
                            monthContainer: e.monthContainer
                        }))
                    }
                }, {
                    key: "componentDidUpdate",
                    value: function(e) {
                        var t = this;
                        if (!this.props.preSelection || Ge(this.props.preSelection, e.preSelection) && this.props.monthSelectedIn === e.monthSelectedIn)
                            this.props.openToDate && !Ge(this.props.openToDate, e.openToDate) && this.setState({
                                date: this.props.openToDate
                            });
                        else {
                            var n = !Fe(this.state.date, this.props.preSelection);
                            this.setState({
                                date: this.props.preSelection
                            }, (function() {
                                return n && t.handleCustomMonthChange(t.state.date)
                            }
                            ))
                        }
                    }
                }, {
                    key: "render",
                    value: function() {
                        var e = this.props.container || $t;
                        return ce.default.createElement("div", {
                            style: {
                                display: "contents"
                            },
                            ref: this.containerRef
                        }, ce.default.createElement(e, {
                            className: a.clsx("react-datepicker", this.props.className, {
                                "react-datepicker--time-only": this.props.showTimeSelectOnly
                            }),
                            showTime: this.props.showTimeSelect || this.props.showTimeInput,
                            showTimeSelectOnly: this.props.showTimeSelectOnly
                        }, this.renderAriaLiveRegion(), this.renderPreviousButton(), this.renderNextButton(), this.renderMonths(), this.renderYears(), this.renderTodayButton(), this.renderTimeSection(), this.renderInputTimeSection(), this.renderChildren()))
                    }
                }], [{
                    key: "defaultProps",
                    get: function() {
                        return {
                            onDropdownFocus: function() {},
                            monthsShown: 1,
                            forceShowMonthNavigation: !1,
                            timeCaption: "Time",
                            previousYearButtonLabel: "Previous Year",
                            nextYearButtonLabel: "Next Year",
                            previousMonthButtonLabel: "Previous Month",
                            nextMonthButtonLabel: "Next Month",
                            customTimeInput: null,
                            yearItemNumber: Te
                        }
                    }
                }])
            }(ce.default.Component), Ut = function(e) {
                var t = e.icon
                  , n = e.className
                  , a = void 0 === n ? "" : n
                  , r = e.onClick
                  , i = "react-datepicker__calendar-icon";
                return ce.default.isValidElement(t) ? ce.default.cloneElement(t, {
                    className: "".concat(t.props.className || "", " ").concat(i, " ").concat(a),
                    onClick: function(e) {
                        "function" == typeof t.props.onClick && t.props.onClick(e),
                        "function" == typeof r && r(e)
                    }
                }) : "string" == typeof t ? ce.default.createElement("i", {
                    className: "".concat(i, " ").concat(t, " ").concat(a),
                    "aria-hidden": "true",
                    onClick: r
                }) : ce.default.createElement("svg", {
                    className: "".concat(i, " ").concat(a),
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 448 512",
                    onClick: r
                }, ce.default.createElement("path", {
                    d: "M96 32V64H48C21.5 64 0 85.5 0 112v48H448V112c0-26.5-21.5-48-48-48H352V32c0-17.7-14.3-32-32-32s-32 14.3-32 32V64H160V32c0-17.7-14.3-32-32-32S96 14.3 96 32zM448 192H0V464c0 26.5 21.5 48 48 48H400c26.5 0 48-21.5 48-48V192z"
                }))
            }, Zt = function(e) {
                function t(e) {
                    var n;
                    return ye(this, t),
                    (n = fe(this, t, [e])).el = document.createElement("div"),
                    n
                }
                return xe(t, e),
                Me(t, [{
                    key: "componentDidMount",
                    value: function() {
                        this.portalRoot = (this.props.portalHost || document).getElementById(this.props.portalId),
                        this.portalRoot || (this.portalRoot = document.createElement("div"),
                        this.portalRoot.setAttribute("id", this.props.portalId),
                        (this.props.portalHost || document.body).appendChild(this.portalRoot)),
                        this.portalRoot.appendChild(this.el)
                    }
                }, {
                    key: "componentWillUnmount",
                    value: function() {
                        this.portalRoot.removeChild(this.el)
                    }
                }, {
                    key: "render",
                    value: function() {
                        return he.default.createPortal(this.props.children, this.el)
                    }
                }])
            }(ce.default.Component), en = function(e) {
                return !e.disabled && -1 !== e.tabIndex
            }, tn = function(e) {
                function t(e) {
                    var n;
                    return ye(this, t),
                    Pe(n = fe(this, t, [e]), "getTabChildren", (function() {
                        return Array.prototype.slice.call(n.tabLoopRef.current.querySelectorAll("[tabindex], a, button, input, select, textarea"), 1, -1).filter(en)
                    }
                    )),
                    Pe(n, "handleFocusStart", (function() {
                        var e = n.getTabChildren();
                        e && e.length > 1 && e[e.length - 1].focus()
                    }
                    )),
                    Pe(n, "handleFocusEnd", (function() {
                        var e = n.getTabChildren();
                        e && e.length > 1 && e[0].focus()
                    }
                    )),
                    n.tabLoopRef = ce.default.createRef(),
                    n
                }
                return xe(t, e),
                Me(t, [{
                    key: "render",
                    value: function() {
                        return this.props.enableTabLoop ? ce.default.createElement("div", {
                            className: "react-datepicker__tab-loop",
                            ref: this.tabLoopRef
                        }, ce.default.createElement("div", {
                            className: "react-datepicker__tab-loop__start",
                            tabIndex: "0",
                            onFocus: this.handleFocusStart
                        }), this.props.children, ce.default.createElement("div", {
                            className: "react-datepicker__tab-loop__end",
                            tabIndex: "0",
                            onFocus: this.handleFocusEnd
                        })) : this.props.children
                    }
                }], [{
                    key: "defaultProps",
                    get: function() {
                        return {
                            enableTabLoop: !0
                        }
                    }
                }])
            }(ce.default.Component), nn = function(e) {
                function t() {
                    return ye(this, t),
                    fe(this, t, arguments)
                }
                return xe(t, e),
                Me(t, [{
                    key: "render",
                    value: function() {
                        var e, t = this.props, n = t.className, r = t.wrapperClassName, i = t.hidePopper, o = t.popperComponent, s = t.targetComponent, u = t.enableTabLoop, d = t.popperOnKeyDown, l = t.portalId, c = t.portalHost, m = t.popperProps, h = t.showArrow;
                        if (!i) {
                            var f = a.clsx("react-datepicker-popper", n);
                            e = ce.default.createElement(tn, {
                                enableTabLoop: u
                            }, ce.default.createElement("div", {
                                ref: m.refs.setFloating,
                                style: m.floatingStyles,
                                className: f,
                                "data-placement": m.placement,
                                onKeyDown: d
                            }, o, h && ce.default.createElement(ue.FloatingArrow, {
                                ref: m.arrowRef,
                                context: m.context,
                                fill: "currentColor",
                                strokeWidth: 1,
                                height: 8,
                                width: 16,
                                style: {
                                    transform: "translateY(-1px)"
                                },
                                className: "react-datepicker__triangle"
                            })))
                        }
                        this.props.popperContainer && (e = ce.default.createElement(this.props.popperContainer, {}, e)),
                        l && !i && (e = ce.default.createElement(Zt, {
                            portalId: l,
                            portalHost: c
                        }, e));
                        var p = a.clsx("react-datepicker-wrapper", r);
                        return ce.default.createElement(ce.default.Fragment, null, ce.default.createElement("div", {
                            ref: m.refs.setReference,
                            className: p
                        }, s), e)
                    }
                }], [{
                    key: "defaultProps",
                    get: function() {
                        return {
                            hidePopper: !0
                        }
                    }
                }])
            }(ce.default.Component), an = (Bt = nn,
            function(e) {
                var t = ve(ve({}, e), {}, {
                    popperModifiers: e.popperModifiers || [],
                    popperProps: e.popperProps || {},
                    hidePopper: "boolean" != typeof e.hidePopper || e.hidePopper
                })
                  , n = ce.default.useRef()
                  , a = ue.useFloating(ve({
                    open: !t.hidePopper,
                    whileElementsMounted: ue.autoUpdate,
                    placement: t.popperPlacement,
                    middleware: [ue.flip({
                        padding: 15
                    }), ue.offset(10), ue.arrow({
                        element: n
                    })].concat(je(t.popperModifiers))
                }, t.popperProps));
                return ce.default.createElement(Bt, We({}, t, {
                    popperProps: ve(ve({}, a), {}, {
                        arrowRef: n
                    })
                }))
            }
            ), rn = "react-datepicker-ignore-onclickoutside", on = me.default(Qt), sn = "Date input not valid.", un = function(e) {
                function t(e) {
                    var n;
                    return ye(this, t),
                    Pe(n = fe(this, t, [e]), "getPreSelection", (function() {
                        return n.props.openToDate ? n.props.openToDate : n.props.selectsEnd && n.props.startDate ? n.props.startDate : n.props.selectsStart && n.props.endDate ? n.props.endDate : Ne()
                    }
                    )),
                    Pe(n, "modifyHolidays", (function() {
                        var e;
                        return null === (e = n.props.holidays) || void 0 === e ? void 0 : e.reduce((function(e, t) {
                            var n = new Date(t.date);
                            return i.isValid(n) ? [].concat(je(e), [ve(ve({}, t), {}, {
                                date: n
                            })]) : e
                        }
                        ), [])
                    }
                    )),
                    Pe(n, "calcInitialState", (function() {
                        var e, t = n.getPreSelection(), a = ft(n.props), r = pt(n.props), i = a && te.isBefore(t, X.startOfDay(a)) ? a : r && ee.isAfter(t, G.endOfDay(r)) ? r : t;
                        return {
                            open: n.props.startOpen || !1,
                            preventFocus: !1,
                            preSelection: null !== (e = n.props.selectsRange ? n.props.startDate : n.props.selected) && void 0 !== e ? e : i,
                            highlightDates: gt(n.props.highlightDates),
                            focused: !1,
                            shouldFocusDayInline: !1,
                            isRenderAriaLiveMessage: !1
                        }
                    }
                    )),
                    Pe(n, "clearPreventFocusTimeout", (function() {
                        n.preventFocusTimeout && clearTimeout(n.preventFocusTimeout)
                    }
                    )),
                    Pe(n, "setFocus", (function() {
                        n.input && n.input.focus && n.input.focus({
                            preventScroll: !0
                        })
                    }
                    )),
                    Pe(n, "setBlur", (function() {
                        n.input && n.input.blur && n.input.blur(),
                        n.cancelFocusInput()
                    }
                    )),
                    Pe(n, "setOpen", (function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                        n.setState({
                            open: e,
                            preSelection: e && n.state.open ? n.state.preSelection : n.calcInitialState().preSelection,
                            lastPreSelectChange: ln
                        }, (function() {
                            e || n.setState((function(e) {
                                return {
                                    focused: !!t && e.focused
                                }
                            }
                            ), (function() {
                                !t && n.setBlur(),
                                n.setState({
                                    inputValue: null
                                })
                            }
                            ))
                        }
                        ))
                    }
                    )),
                    Pe(n, "inputOk", (function() {
                        return r.isDate(n.state.preSelection)
                    }
                    )),
                    Pe(n, "isCalendarOpen", (function() {
                        return void 0 === n.props.open ? n.state.open && !n.props.disabled && !n.props.readOnly : n.props.open
                    }
                    )),
                    Pe(n, "handleFocus", (function(e) {
                        n.state.preventFocus || (n.props.onFocus(e),
                        n.props.preventOpenOnFocus || n.props.readOnly || n.setOpen(!0)),
                        n.setState({
                            focused: !0
                        })
                    }
                    )),
                    Pe(n, "sendFocusBackToInput", (function() {
                        n.preventFocusTimeout && n.clearPreventFocusTimeout(),
                        n.setState({
                            preventFocus: !0
                        }, (function() {
                            n.preventFocusTimeout = setTimeout((function() {
                                n.setFocus(),
                                n.setState({
                                    preventFocus: !1
                                })
                            }
                            ))
                        }
                        ))
                    }
                    )),
                    Pe(n, "cancelFocusInput", (function() {
                        clearTimeout(n.inputFocusTimeout),
                        n.inputFocusTimeout = null
                    }
                    )),
                    Pe(n, "deferFocusInput", (function() {
                        n.cancelFocusInput(),
                        n.inputFocusTimeout = setTimeout((function() {
                            return n.setFocus()
                        }
                        ), 1)
                    }
                    )),
                    Pe(n, "handleDropdownFocus", (function() {
                        n.cancelFocusInput()
                    }
                    )),
                    Pe(n, "handleBlur", (function(e) {
                        (!n.state.open || n.props.withPortal || n.props.showTimeInput) && n.props.onBlur(e),
                        n.setState({
                            focused: !1
                        })
                    }
                    )),
                    Pe(n, "handleCalendarClickOutside", (function(e) {
                        n.props.inline || n.setOpen(!1),
                        n.props.onClickOutside(e),
                        n.props.withPortal && e.preventDefault()
                    }
                    )),
                    Pe(n, "handleChange", (function() {
                        for (var e = arguments.length, t = new Array(e), a = 0; a < e; a++)
                            t[a] = arguments[a];
                        var r = t[0];
                        if (!n.props.onChangeRaw || (n.props.onChangeRaw.apply(n, t),
                        "function" == typeof r.isDefaultPrevented && !r.isDefaultPrevented())) {
                            n.setState({
                                inputValue: r.target.value,
                                lastPreSelectChange: dn
                            });
                            var i, s, u, d, l, c, m, h, f = (i = r.target.value,
                            s = n.props.dateFormat,
                            u = n.props.locale,
                            d = n.props.strictParsing,
                            l = n.props.minDate,
                            c = null,
                            m = Be(u) || Be($e()),
                            h = !0,
                            Array.isArray(s) ? (s.forEach((function(e) {
                                var t = re.parse(i, e, new Date, {
                                    locale: m,
                                    useAdditionalWeekYearTokens: !0,
                                    useAdditionalDayOfYearTokens: !0
                                });
                                d && (h = ze(t, l) && i === Ie(t, e, u)),
                                ze(t, l) && h && (c = t)
                            }
                            )),
                            c) : (c = re.parse(i, s, new Date, {
                                locale: m,
                                useAdditionalWeekYearTokens: !0,
                                useAdditionalDayOfYearTokens: !0
                            }),
                            d ? h = ze(c) && i === Ie(c, s, u) : ze(c) || (s = s.match(Ee).map((function(e) {
                                var t = e[0];
                                if ("p" === t || "P" === t) {
                                    var n = o.longFormatters[t];
                                    return m ? n(e, m.formatLong) : t
                                }
                                return e
                            }
                            )).join(""),
                            i.length > 0 && (c = re.parse(i, s.slice(0, i.length), new Date, {
                                useAdditionalWeekYearTokens: !0,
                                useAdditionalDayOfYearTokens: !0
                            })),
                            ze(c) || (c = new Date(i))),
                            ze(c) && h ? c : null));
                            n.props.showTimeSelectOnly && n.props.selected && f && !Ge(f, n.props.selected) && (f = de.set(n.props.selected, {
                                hours: k.getHours(f),
                                minutes: y.getMinutes(f),
                                seconds: b.getSeconds(f)
                            })),
                            !f && r.target.value || n.setSelected(f, r, !0)
                        }
                    }
                    )),
                    Pe(n, "handleSelect", (function(e, t, a) {
                        if (n.props.shouldCloseOnSelect && !n.props.showTimeSelect && n.sendFocusBackToInput(),
                        n.props.onChangeRaw && n.props.onChangeRaw(t),
                        n.setSelected(e, t, !1, a),
                        n.props.showDateSelect && n.setState({
                            isRenderAriaLiveMessage: !0
                        }),
                        !n.props.shouldCloseOnSelect || n.props.showTimeSelect)
                            n.setPreSelection(e);
                        else if (!n.props.inline) {
                            n.props.selectsRange || n.setOpen(!1);
                            var r = n.props
                              , i = r.startDate
                              , o = r.endDate;
                            !i || o || Pt(e, i) || n.setOpen(!1)
                        }
                    }
                    )),
                    Pe(n, "setSelected", (function(e, t, a, r) {
                        var i = e;
                        if (n.props.showYearPicker) {
                            if (null !== i && rt(D.getYear(i), n.props))
                                return
                        } else if (n.props.showMonthYearPicker) {
                            if (null !== i && et(i, n.props))
                                return
                        } else if (null !== i && Ue(i, n.props))
                            return;
                        var o = n.props
                          , s = o.onChange
                          , u = o.selectsRange
                          , d = o.startDate
                          , l = o.endDate
                          , c = o.selectsMultiple
                          , m = o.selectedDates
                          , h = o.minTime;
                        if (!Ke(n.props.selected, i) || n.props.allowSameDay || u || c)
                            if (null !== i && (!n.props.selected || a && (n.props.showTimeSelect || n.props.showTimeSelectOnly || n.props.showTimeInput) || (i = He(i, {
                                hour: k.getHours(n.props.selected),
                                minute: y.getMinutes(n.props.selected),
                                second: b.getSeconds(n.props.selected)
                            })),
                            a || !n.props.showTimeSelect && !n.props.showTimeSelectOnly || h && (i = He(i, {
                                hour: h.getHours(),
                                minute: h.getMinutes(),
                                second: h.getSeconds()
                            })),
                            n.props.inline || n.setState({
                                preSelection: i
                            }),
                            n.props.focusSelectedMonth || n.setState({
                                monthSelectedIn: r
                            })),
                            u) {
                                var f = d && l;
                                d || l ? d && !l && (null === i ? s([null, null], t) : Pt(i, d) ? s([i, null], t) : s([d, i], t)) : s([i, null], t),
                                f && s([i, null], t)
                            } else
                                c ? null != m && m.length ? m.some((function(e) {
                                    return Ge(e, i)
                                }
                                )) ? s(m.filter((function(e) {
                                    return !Ge(e, i)
                                }
                                )), t) : s([].concat(je(m), [i]), t) : s([i], t) : s(i, t);
                        a || (n.props.onSelect(i, t),
                        n.setState({
                            inputValue: null
                        }))
                    }
                    )),
                    Pe(n, "setPreSelection", (function(e) {
                        var t = void 0 !== n.props.minDate
                          , a = void 0 !== n.props.maxDate
                          , r = !0;
                        if (e) {
                            var i = X.startOfDay(e);
                            if (t && a)
                                r = Ve(e, n.props.minDate, n.props.maxDate);
                            else if (t) {
                                var o = X.startOfDay(n.props.minDate);
                                r = ee.isAfter(e, o) || Ke(i, o)
                            } else if (a) {
                                var s = G.endOfDay(n.props.maxDate);
                                r = te.isBefore(e, s) || Ke(i, s)
                            }
                        }
                        r && n.setState({
                            preSelection: e
                        })
                    }
                    )),
                    Pe(n, "toggleCalendar", (function() {
                        n.setOpen(!n.state.open)
                    }
                    )),
                    Pe(n, "handleTimeChange", (function(e) {
                        var t = n.props.selected ? n.props.selected : n.getPreSelection()
                          , a = n.props.selected ? e : He(t, {
                            hour: k.getHours(e),
                            minute: y.getMinutes(e)
                        });
                        n.setState({
                            preSelection: a
                        }),
                        n.props.onChange(a),
                        n.props.shouldCloseOnSelect && (n.sendFocusBackToInput(),
                        n.setOpen(!1)),
                        n.props.showTimeInput && n.setOpen(!0),
                        (n.props.showTimeSelectOnly || n.props.showTimeSelect) && n.setState({
                            isRenderAriaLiveMessage: !0
                        }),
                        n.setState({
                            inputValue: null
                        })
                    }
                    )),
                    Pe(n, "onInputClick", (function() {
                        n.props.disabled || n.props.readOnly || n.setOpen(!0),
                        n.props.onInputClick()
                    }
                    )),
                    Pe(n, "onInputKeyDown", (function(e) {
                        n.props.onKeyDown(e);
                        var t = e.key;
                        if (n.state.open || n.props.inline || n.props.preventOpenOnFocus) {
                            if (n.state.open) {
                                if ("ArrowDown" === t || "ArrowUp" === t) {
                                    e.preventDefault();
                                    var a = n.props.showWeekPicker && n.props.showWeekNumbers ? '.react-datepicker__week-number[tabindex="0"]' : '.react-datepicker__day[tabindex="0"]'
                                      , r = n.calendar.componentNode && n.calendar.componentNode.querySelector(a);
                                    return void (r && r.focus({
                                        preventScroll: !0
                                    }))
                                }
                                var i = Ne(n.state.preSelection);
                                "Enter" === t ? (e.preventDefault(),
                                n.inputOk() && n.state.lastPreSelectChange === ln ? (n.handleSelect(i, e),
                                !n.props.shouldCloseOnSelect && n.setPreSelection(i)) : n.setOpen(!1)) : "Escape" === t ? (e.preventDefault(),
                                n.sendFocusBackToInput(),
                                n.setOpen(!1)) : "Tab" === t && n.setOpen(!1),
                                n.inputOk() || n.props.onInputError({
                                    code: 1,
                                    msg: sn
                                })
                            }
                        } else
                            "ArrowDown" !== t && "ArrowUp" !== t && "Enter" !== t || n.onInputClick()
                    }
                    )),
                    Pe(n, "onPortalKeyDown", (function(e) {
                        "Escape" === e.key && (e.preventDefault(),
                        n.setState({
                            preventFocus: !0
                        }, (function() {
                            n.setOpen(!1),
                            setTimeout((function() {
                                n.setFocus(),
                                n.setState({
                                    preventFocus: !1
                                })
                            }
                            ))
                        }
                        )))
                    }
                    )),
                    Pe(n, "onDayKeyDown", (function(e) {
                        n.props.onKeyDown(e);
                        var t, a = e.key, r = e.shiftKey, i = Ne(n.state.preSelection);
                        if ("Enter" === a)
                            e.preventDefault(),
                            n.handleSelect(i, e),
                            !n.props.shouldCloseOnSelect && n.setPreSelection(i);
                        else if ("Escape" === a)
                            e.preventDefault(),
                            n.setOpen(!1),
                            n.inputOk() || n.props.onInputError({
                                code: 1,
                                msg: sn
                            });
                        else if (!n.props.disabledKeyboardNavigation) {
                            var o;
                            switch (a) {
                            case "ArrowLeft":
                                o = n.props.showWeekPicker ? p.subWeeks(i, 1) : f.subDays(i, 1);
                                break;
                            case "ArrowRight":
                                o = n.props.showWeekPicker ? l.addWeeks(i, 1) : d.addDays(i, 1);
                                break;
                            case "ArrowUp":
                                o = p.subWeeks(i, 1);
                                break;
                            case "ArrowDown":
                                o = l.addWeeks(i, 1);
                                break;
                            case "PageUp":
                                o = r ? w.subYears(i, 1) : g.subMonths(i, 1);
                                break;
                            case "PageDown":
                                o = r ? h.addYears(i, 1) : c.addMonths(i, 1);
                                break;
                            case "Home":
                                o = Ae(i, n.props.locale, n.props.calendarStartDay);
                                break;
                            case "End":
                                t = i,
                                o = K.endOfWeek(t);
                                break;
                            default:
                                o = null
                            }
                            if (!o)
                                return void (n.props.onInputError && n.props.onInputError({
                                    code: 1,
                                    msg: sn
                                }));
                            if (e.preventDefault(),
                            n.setState({
                                lastPreSelectChange: ln
                            }),
                            n.props.adjustDateOnChange && n.setSelected(o),
                            n.setPreSelection(o),
                            n.props.inline) {
                                var s = x.getMonth(i)
                                  , u = x.getMonth(o)
                                  , m = D.getYear(i)
                                  , v = D.getYear(o);
                                s !== u || m !== v ? n.setState({
                                    shouldFocusDayInline: !0
                                }) : n.setState({
                                    shouldFocusDayInline: !1
                                })
                            }
                        }
                    }
                    )),
                    Pe(n, "onPopperKeyDown", (function(e) {
                        "Escape" === e.key && (e.preventDefault(),
                        n.sendFocusBackToInput())
                    }
                    )),
                    Pe(n, "onClearClick", (function(e) {
                        e && e.preventDefault && e.preventDefault(),
                        n.sendFocusBackToInput(),
                        n.props.selectsRange ? n.props.onChange([null, null], e) : n.props.onChange(null, e),
                        n.setState({
                            inputValue: null
                        })
                    }
                    )),
                    Pe(n, "clear", (function() {
                        n.onClearClick()
                    }
                    )),
                    Pe(n, "onScroll", (function(e) {
                        "boolean" == typeof n.props.closeOnScroll && n.props.closeOnScroll ? e.target !== document && e.target !== document.documentElement && e.target !== document.body || n.setOpen(!1) : "function" == typeof n.props.closeOnScroll && n.props.closeOnScroll(e) && n.setOpen(!1)
                    }
                    )),
                    Pe(n, "renderCalendar", (function() {
                        return n.props.inline || n.isCalendarOpen() ? ce.default.createElement(on, {
                            ref: function(e) {
                                n.calendar = e
                            },
                            locale: n.props.locale,
                            calendarStartDay: n.props.calendarStartDay,
                            chooseDayAriaLabelPrefix: n.props.chooseDayAriaLabelPrefix,
                            disabledDayAriaLabelPrefix: n.props.disabledDayAriaLabelPrefix,
                            weekAriaLabelPrefix: n.props.weekAriaLabelPrefix,
                            monthAriaLabelPrefix: n.props.monthAriaLabelPrefix,
                            adjustDateOnChange: n.props.adjustDateOnChange,
                            setOpen: n.setOpen,
                            shouldCloseOnSelect: n.props.shouldCloseOnSelect,
                            dateFormat: n.props.dateFormatCalendar,
                            useWeekdaysShort: n.props.useWeekdaysShort,
                            formatWeekDay: n.props.formatWeekDay,
                            dropdownMode: n.props.dropdownMode,
                            selected: n.props.selected,
                            preSelection: n.state.preSelection,
                            onSelect: n.handleSelect,
                            onWeekSelect: n.props.onWeekSelect,
                            openToDate: n.props.openToDate,
                            minDate: n.props.minDate,
                            maxDate: n.props.maxDate,
                            selectsStart: n.props.selectsStart,
                            selectsEnd: n.props.selectsEnd,
                            selectsRange: n.props.selectsRange,
                            selectsMultiple: n.props.selectsMultiple,
                            selectedDates: n.props.selectedDates,
                            startDate: n.props.startDate,
                            endDate: n.props.endDate,
                            excludeDates: n.props.excludeDates,
                            excludeDateIntervals: n.props.excludeDateIntervals,
                            filterDate: n.props.filterDate,
                            onClickOutside: n.handleCalendarClickOutside,
                            formatWeekNumber: n.props.formatWeekNumber,
                            highlightDates: n.state.highlightDates,
                            holidays: vt(n.modifyHolidays()),
                            includeDates: n.props.includeDates,
                            includeDateIntervals: n.props.includeDateIntervals,
                            includeTimes: n.props.includeTimes,
                            injectTimes: n.props.injectTimes,
                            inline: n.props.inline,
                            shouldFocusDayInline: n.state.shouldFocusDayInline,
                            peekNextMonth: n.props.peekNextMonth,
                            showMonthDropdown: n.props.showMonthDropdown,
                            showPreviousMonths: n.props.showPreviousMonths,
                            useShortMonthInDropdown: n.props.useShortMonthInDropdown,
                            showMonthYearDropdown: n.props.showMonthYearDropdown,
                            showWeekNumbers: n.props.showWeekNumbers,
                            showYearDropdown: n.props.showYearDropdown,
                            withPortal: n.props.withPortal,
                            forceShowMonthNavigation: n.props.forceShowMonthNavigation,
                            showDisabledMonthNavigation: n.props.showDisabledMonthNavigation,
                            scrollableYearDropdown: n.props.scrollableYearDropdown,
                            scrollableMonthYearDropdown: n.props.scrollableMonthYearDropdown,
                            todayButton: n.props.todayButton,
                            weekLabel: n.props.weekLabel,
                            outsideClickIgnoreClass: rn,
                            fixedHeight: n.props.fixedHeight,
                            monthsShown: n.props.monthsShown,
                            monthSelectedIn: n.state.monthSelectedIn,
                            onDropdownFocus: n.handleDropdownFocus,
                            onMonthChange: n.props.onMonthChange,
                            onYearChange: n.props.onYearChange,
                            dayClassName: n.props.dayClassName,
                            weekDayClassName: n.props.weekDayClassName,
                            monthClassName: n.props.monthClassName,
                            timeClassName: n.props.timeClassName,
                            showDateSelect: n.props.showDateSelect,
                            showTimeSelect: n.props.showTimeSelect,
                            showTimeSelectOnly: n.props.showTimeSelectOnly,
                            onTimeChange: n.handleTimeChange,
                            timeFormat: n.props.timeFormat,
                            timeIntervals: n.props.timeIntervals,
                            minTime: n.props.minTime,
                            maxTime: n.props.maxTime,
                            excludeTimes: n.props.excludeTimes,
                            filterTime: n.props.filterTime,
                            timeCaption: n.props.timeCaption,
                            className: n.props.calendarClassName,
                            container: n.props.calendarContainer,
                            yearItemNumber: n.props.yearItemNumber,
                            yearDropdownItemNumber: n.props.yearDropdownItemNumber,
                            previousMonthAriaLabel: n.props.previousMonthAriaLabel,
                            previousMonthButtonLabel: n.props.previousMonthButtonLabel,
                            nextMonthAriaLabel: n.props.nextMonthAriaLabel,
                            nextMonthButtonLabel: n.props.nextMonthButtonLabel,
                            previousYearAriaLabel: n.props.previousYearAriaLabel,
                            previousYearButtonLabel: n.props.previousYearButtonLabel,
                            nextYearAriaLabel: n.props.nextYearAriaLabel,
                            nextYearButtonLabel: n.props.nextYearButtonLabel,
                            timeInputLabel: n.props.timeInputLabel,
                            disabledKeyboardNavigation: n.props.disabledKeyboardNavigation,
                            renderCustomHeader: n.props.renderCustomHeader,
                            popperProps: n.props.popperProps,
                            renderDayContents: n.props.renderDayContents,
                            renderMonthContent: n.props.renderMonthContent,
                            renderQuarterContent: n.props.renderQuarterContent,
                            renderYearContent: n.props.renderYearContent,
                            onDayMouseEnter: n.props.onDayMouseEnter,
                            onMonthMouseLeave: n.props.onMonthMouseLeave,
                            onYearMouseEnter: n.props.onYearMouseEnter,
                            onYearMouseLeave: n.props.onYearMouseLeave,
                            selectsDisabledDaysInRange: n.props.selectsDisabledDaysInRange,
                            showTimeInput: n.props.showTimeInput,
                            showMonthYearPicker: n.props.showMonthYearPicker,
                            showFullMonthYearPicker: n.props.showFullMonthYearPicker,
                            showTwoColumnMonthYearPicker: n.props.showTwoColumnMonthYearPicker,
                            showFourColumnMonthYearPicker: n.props.showFourColumnMonthYearPicker,
                            showYearPicker: n.props.showYearPicker,
                            showQuarterYearPicker: n.props.showQuarterYearPicker,
                            showWeekPicker: n.props.showWeekPicker,
                            excludeScrollbar: n.props.excludeScrollbar,
                            handleOnKeyDown: n.props.onKeyDown,
                            handleOnDayKeyDown: n.onDayKeyDown,
                            isInputFocused: n.state.focused,
                            customTimeInput: n.props.customTimeInput,
                            setPreSelection: n.setPreSelection,
                            usePointerEvent: n.props.usePointerEvent,
                            yearClassName: n.props.yearClassName
                        }, n.props.children) : null
                    }
                    )),
                    Pe(n, "renderAriaLiveRegion", (function() {
                        var e, t = n.props, a = t.dateFormat, r = t.locale, i = n.props.showTimeInput || n.props.showTimeSelect ? "PPPPp" : "PPPP";
                        return e = n.props.selectsRange ? "Selected start date: ".concat(Oe(n.props.startDate, {
                            dateFormat: i,
                            locale: r
                        }), ". ").concat(n.props.endDate ? "End date: " + Oe(n.props.endDate, {
                            dateFormat: i,
                            locale: r
                        }) : "") : n.props.showTimeSelectOnly ? "Selected time: ".concat(Oe(n.props.selected, {
                            dateFormat: a,
                            locale: r
                        })) : n.props.showYearPicker ? "Selected year: ".concat(Oe(n.props.selected, {
                            dateFormat: "yyyy",
                            locale: r
                        })) : n.props.showMonthYearPicker ? "Selected month: ".concat(Oe(n.props.selected, {
                            dateFormat: "MMMM yyyy",
                            locale: r
                        })) : n.props.showQuarterYearPicker ? "Selected quarter: ".concat(Oe(n.props.selected, {
                            dateFormat: "yyyy, QQQ",
                            locale: r
                        })) : "Selected date: ".concat(Oe(n.props.selected, {
                            dateFormat: i,
                            locale: r
                        })),
                        ce.default.createElement("span", {
                            role: "alert",
                            "aria-live": "polite",
                            className: "react-datepicker__aria-live"
                        }, e)
                    }
                    )),
                    Pe(n, "renderDateInput", (function() {
                        var e, t = a.clsx(n.props.className, Pe({}, rn, n.state.open)), r = n.props.customInput || ce.default.createElement("input", {
                            type: "text"
                        }), i = n.props.customInputRef || "ref", o = "string" == typeof n.props.value ? n.props.value : "string" == typeof n.state.inputValue ? n.state.inputValue : n.props.selectsRange ? function(e, t, n) {
                            if (!e)
                                return "";
                            var a = Oe(e, n)
                              , r = t ? Oe(t, n) : "";
                            return "".concat(a, " - ").concat(r)
                        }(n.props.startDate, n.props.endDate, n.props) : n.props.selectsMultiple ? function(e, t) {
                            if (null == e || !e.length)
                                return "";
                            var n = Oe(e[0], t);
                            if (1 === e.length)
                                return n;
                            if (2 === e.length) {
                                var a = Oe(e[1], t);
                                return "".concat(n, ", ").concat(a)
                            }
                            var r = e.length - 1;
                            return "".concat(n, " (+").concat(r, ")")
                        }(n.props.selectedDates, n.props) : Oe(n.props.selected, n.props);
                        return ce.default.cloneElement(r, (Pe(Pe(Pe(Pe(Pe(Pe(Pe(Pe(Pe(Pe(e = {}, i, (function(e) {
                            n.input = e
                        }
                        )), "value", o), "onBlur", n.handleBlur), "onChange", n.handleChange), "onClick", n.onInputClick), "onFocus", n.handleFocus), "onKeyDown", n.onInputKeyDown), "id", n.props.id), "name", n.props.name), "form", n.props.form),
                        Pe(Pe(Pe(Pe(Pe(Pe(Pe(Pe(Pe(Pe(e, "autoFocus", n.props.autoFocus), "placeholder", n.props.placeholderText), "disabled", n.props.disabled), "autoComplete", n.props.autoComplete), "className", a.clsx(r.props.className, t)), "title", n.props.title), "readOnly", n.props.readOnly), "required", n.props.required), "tabIndex", n.props.tabIndex), "aria-describedby", n.props.ariaDescribedBy),
                        Pe(Pe(Pe(e, "aria-invalid", n.props.ariaInvalid), "aria-labelledby", n.props.ariaLabelledBy), "aria-required", n.props.ariaRequired)))
                    }
                    )),
                    Pe(n, "renderClearButton", (function() {
                        var e = n.props
                          , t = e.isClearable
                          , r = e.disabled
                          , i = e.selected
                          , o = e.startDate
                          , s = e.endDate
                          , u = e.clearButtonTitle
                          , d = e.clearButtonClassName
                          , l = void 0 === d ? "" : d
                          , c = e.ariaLabelClose
                          , m = void 0 === c ? "Close" : c
                          , h = e.selectedDates;
                        return t && (null != i || null != o || null != s || null != h && h.length) ? ce.default.createElement("button", {
                            type: "button",
                            className: a.clsx("react-datepicker__close-icon", l, {
                                "react-datepicker__close-icon--disabled": r
                            }),
                            disabled: r,
                            "aria-label": m,
                            onClick: n.onClearClick,
                            title: u,
                            tabIndex: -1
                        }) : null
                    }
                    )),
                    n.state = n.calcInitialState(),
                    n.preventFocusTimeout = null,
                    n
                }
                return xe(t, e),
                Me(t, [{
                    key: "componentDidMount",
                    value: function() {
                        window.addEventListener("scroll", this.onScroll, !0)
                    }
                }, {
                    key: "componentDidUpdate",
                    value: function(e, t) {
                        var n, a;
                        e.inline && (n = e.selected,
                        a = this.props.selected,
                        n && a ? x.getMonth(n) !== x.getMonth(a) || D.getYear(n) !== D.getYear(a) : n !== a) && this.setPreSelection(this.props.selected),
                        void 0 !== this.state.monthSelectedIn && e.monthsShown !== this.props.monthsShown && this.setState({
                            monthSelectedIn: 0
                        }),
                        e.highlightDates !== this.props.highlightDates && this.setState({
                            highlightDates: gt(this.props.highlightDates)
                        }),
                        t.focused || Ke(e.selected, this.props.selected) || this.setState({
                            inputValue: null
                        }),
                        t.open !== this.state.open && (!1 === t.open && !0 === this.state.open && this.props.onCalendarOpen(),
                        !0 === t.open && !1 === this.state.open && this.props.onCalendarClose())
                    }
                }, {
                    key: "componentWillUnmount",
                    value: function() {
                        this.clearPreventFocusTimeout(),
                        window.removeEventListener("scroll", this.onScroll, !0)
                    }
                }, {
                    key: "renderInputContainer",
                    value: function() {
                        var e = this.props
                          , t = e.showIcon
                          , n = e.icon
                          , a = e.calendarIconClassname
                          , r = e.toggleCalendarOnIconClick
                          , i = this.state.open;
                        return ce.default.createElement("div", {
                            className: "react-datepicker__input-container".concat(t ? " react-datepicker__view-calendar-icon" : "")
                        }, t && ce.default.createElement(Ut, We({
                            icon: n,
                            className: "".concat(a, " ").concat(i && "react-datepicker-ignore-onclickoutside")
                        }, r ? {
                            onClick: this.toggleCalendar
                        } : null)), this.state.isRenderAriaLiveMessage && this.renderAriaLiveRegion(), this.renderDateInput(), this.renderClearButton())
                    }
                }, {
                    key: "render",
                    value: function() {
                        var e = this.renderCalendar();
                        if (this.props.inline)
                            return e;
                        if (this.props.withPortal) {
                            var t = this.state.open ? ce.default.createElement(tn, {
                                enableTabLoop: this.props.enableTabLoop
                            }, ce.default.createElement("div", {
                                className: "react-datepicker__portal",
                                tabIndex: -1,
                                onKeyDown: this.onPortalKeyDown
                            }, e)) : null;
                            return this.state.open && this.props.portalId && (t = ce.default.createElement(Zt, {
                                portalId: this.props.portalId,
                                portalHost: this.props.portalHost
                            }, t)),
                            ce.default.createElement("div", null, this.renderInputContainer(), t)
                        }
                        return ce.default.createElement(an, {
                            className: this.props.popperClassName,
                            wrapperClassName: this.props.wrapperClassName,
                            hidePopper: !this.isCalendarOpen(),
                            portalId: this.props.portalId,
                            portalHost: this.props.portalHost,
                            popperModifiers: this.props.popperModifiers,
                            targetComponent: this.renderInputContainer(),
                            popperContainer: this.props.popperContainer,
                            popperComponent: e,
                            popperPlacement: this.props.popperPlacement,
                            popperProps: this.props.popperProps,
                            popperOnKeyDown: this.onPopperKeyDown,
                            enableTabLoop: this.props.enableTabLoop,
                            showArrow: this.props.showPopperArrow
                        })
                    }
                }], [{
                    key: "defaultProps",
                    get: function() {
                        return {
                            allowSameDay: !1,
                            dateFormat: "MM/dd/yyyy",
                            dateFormatCalendar: "LLLL yyyy",
                            onChange: function() {},
                            disabled: !1,
                            disabledKeyboardNavigation: !1,
                            dropdownMode: "scroll",
                            onFocus: function() {},
                            onBlur: function() {},
                            onKeyDown: function() {},
                            onInputClick: function() {},
                            onSelect: function() {},
                            onClickOutside: function() {},
                            onMonthChange: function() {},
                            onCalendarOpen: function() {},
                            onCalendarClose: function() {},
                            preventOpenOnFocus: !1,
                            onYearChange: function() {},
                            onInputError: function() {},
                            monthsShown: 1,
                            readOnly: !1,
                            withPortal: !1,
                            selectsDisabledDaysInRange: !1,
                            shouldCloseOnSelect: !0,
                            showTimeSelect: !1,
                            showTimeInput: !1,
                            showPreviousMonths: !1,
                            showMonthYearPicker: !1,
                            showFullMonthYearPicker: !1,
                            showTwoColumnMonthYearPicker: !1,
                            showFourColumnMonthYearPicker: !1,
                            showYearPicker: !1,
                            showQuarterYearPicker: !1,
                            showWeekPicker: !1,
                            strictParsing: !1,
                            timeIntervals: 30,
                            timeCaption: "Time",
                            previousMonthAriaLabel: "Previous Month",
                            previousMonthButtonLabel: "Previous Month",
                            nextMonthAriaLabel: "Next Month",
                            nextMonthButtonLabel: "Next Month",
                            previousYearAriaLabel: "Previous Year",
                            previousYearButtonLabel: "Previous Year",
                            nextYearAriaLabel: "Next Year",
                            nextYearButtonLabel: "Next Year",
                            timeInputLabel: "Time",
                            enableTabLoop: !0,
                            yearItemNumber: Te,
                            focusSelectedMonth: !1,
                            showPopperArrow: !0,
                            excludeScrollbar: !0,
                            customTimeInput: null,
                            calendarStartDay: void 0,
                            toggleCalendarOnIconClick: !1,
                            usePointerEvent: !1
                        }
                    }
                }])
            }(ce.default.Component), dn = "input", ln = "navigate";
            e.CalendarContainer = $t,
            e.default = un,
            e.getDefaultLocale = $e,
            e.registerLocale = function(e, t) {
                var n = "undefined" != typeof window ? window : globalThis;
                n.__localeData__ || (n.__localeData__ = {}),
                n.__localeData__[e] = t
            }
            ,
            e.setDefaultLocale = function(e) {
                ("undefined" != typeof window ? window : globalThis).__localeId__ = e
            }
            ,
            Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }(t, n(96540), n(5556), n(71508), n(76253), n(89111), n(81002), n(44461), n(83359), n(27761), n(4481), n(55353), n(88823), n(60274), n(37608), n(25278), n(85380), n(18590), n(857), n(86392), n(26688), n(22918), n(4195), n(22901), n(29332), n(98511), n(921), n(97328), n(77116), n(80356), n(28772), n(34386), n(41819), n(80093), n(46908), n(82377), n(56171), n(88676), n(8), n(12701), n(71228), n(36128), n(39852), n(80066), n(14745), n(75327), n(98577), n(51411), n(4820), n(86925), n(17933), n(65137), n(81322), n(90795), n(65171), n(68330), n(63727), n(34032), n(75798), n(4793), n(73908), n(40961), n(77422), n(75245))
    },
    91396: function(e, t) {
        "use strict";
        t.addLeadingZeros = function(e, t) {
            const n = e < 0 ? "-" : ""
              , a = Math.abs(e).toString().padStart(t, "0");
            return n + a
        }
    },
    79057: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "defaultLocale", {
            enumerable: !0,
            get: function() {
                return a.enUS
            }
        });
        var a = n(34134)
    },
    20445: function(e, t) {
        "use strict";
        t.getDefaultOptions = function() {
            return n
        }
        ,
        t.setDefaultOptions = function(e) {
            n = e
        }
        ;
        let n = {}
    },
    81889: function(e, t, n) {
        "use strict";
        t.formatters = void 0;
        var a = n(627)
          , r = n(29332)
          , i = n(6253)
          , o = n(63613)
          , s = n(9804)
          , u = n(91396)
          , d = n(7019);
        const l = "midnight"
          , c = "noon"
          , m = "morning"
          , h = "afternoon"
          , f = "evening"
          , p = "night";
        t.formatters = {
            G: function(e, t, n) {
                const a = e.getFullYear() > 0 ? 1 : 0;
                switch (t) {
                case "G":
                case "GG":
                case "GGG":
                    return n.era(a, {
                        width: "abbreviated"
                    });
                case "GGGGG":
                    return n.era(a, {
                        width: "narrow"
                    });
                default:
                    return n.era(a, {
                        width: "wide"
                    })
                }
            },
            y: function(e, t, n) {
                if ("yo" === t) {
                    const t = e.getFullYear()
                      , a = t > 0 ? t : 1 - t;
                    return n.ordinalNumber(a, {
                        unit: "year"
                    })
                }
                return d.lightFormatters.y(e, t)
            },
            Y: function(e, t, n, a) {
                const r = (0,
                s.getWeekYear)(e, a)
                  , i = r > 0 ? r : 1 - r;
                if ("YY" === t) {
                    const e = i % 100;
                    return (0,
                    u.addLeadingZeros)(e, 2)
                }
                return "Yo" === t ? n.ordinalNumber(i, {
                    unit: "year"
                }) : (0,
                u.addLeadingZeros)(i, t.length)
            },
            R: function(e, t) {
                const n = (0,
                i.getISOWeekYear)(e);
                return (0,
                u.addLeadingZeros)(n, t.length)
            },
            u: function(e, t) {
                const n = e.getFullYear();
                return (0,
                u.addLeadingZeros)(n, t.length)
            },
            Q: function(e, t, n) {
                const a = Math.ceil((e.getMonth() + 1) / 3);
                switch (t) {
                case "Q":
                    return String(a);
                case "QQ":
                    return (0,
                    u.addLeadingZeros)(a, 2);
                case "Qo":
                    return n.ordinalNumber(a, {
                        unit: "quarter"
                    });
                case "QQQ":
                    return n.quarter(a, {
                        width: "abbreviated",
                        context: "formatting"
                    });
                case "QQQQQ":
                    return n.quarter(a, {
                        width: "narrow",
                        context: "formatting"
                    });
                default:
                    return n.quarter(a, {
                        width: "wide",
                        context: "formatting"
                    })
                }
            },
            q: function(e, t, n) {
                const a = Math.ceil((e.getMonth() + 1) / 3);
                switch (t) {
                case "q":
                    return String(a);
                case "qq":
                    return (0,
                    u.addLeadingZeros)(a, 2);
                case "qo":
                    return n.ordinalNumber(a, {
                        unit: "quarter"
                    });
                case "qqq":
                    return n.quarter(a, {
                        width: "abbreviated",
                        context: "standalone"
                    });
                case "qqqqq":
                    return n.quarter(a, {
                        width: "narrow",
                        context: "standalone"
                    });
                default:
                    return n.quarter(a, {
                        width: "wide",
                        context: "standalone"
                    })
                }
            },
            M: function(e, t, n) {
                const a = e.getMonth();
                switch (t) {
                case "M":
                case "MM":
                    return d.lightFormatters.M(e, t);
                case "Mo":
                    return n.ordinalNumber(a + 1, {
                        unit: "month"
                    });
                case "MMM":
                    return n.month(a, {
                        width: "abbreviated",
                        context: "formatting"
                    });
                case "MMMMM":
                    return n.month(a, {
                        width: "narrow",
                        context: "formatting"
                    });
                default:
                    return n.month(a, {
                        width: "wide",
                        context: "formatting"
                    })
                }
            },
            L: function(e, t, n) {
                const a = e.getMonth();
                switch (t) {
                case "L":
                    return String(a + 1);
                case "LL":
                    return (0,
                    u.addLeadingZeros)(a + 1, 2);
                case "Lo":
                    return n.ordinalNumber(a + 1, {
                        unit: "month"
                    });
                case "LLL":
                    return n.month(a, {
                        width: "abbreviated",
                        context: "standalone"
                    });
                case "LLLLL":
                    return n.month(a, {
                        width: "narrow",
                        context: "standalone"
                    });
                default:
                    return n.month(a, {
                        width: "wide",
                        context: "standalone"
                    })
                }
            },
            w: function(e, t, n, a) {
                const r = (0,
                o.getWeek)(e, a);
                return "wo" === t ? n.ordinalNumber(r, {
                    unit: "week"
                }) : (0,
                u.addLeadingZeros)(r, t.length)
            },
            I: function(e, t, n) {
                const a = (0,
                r.getISOWeek)(e);
                return "Io" === t ? n.ordinalNumber(a, {
                    unit: "week"
                }) : (0,
                u.addLeadingZeros)(a, t.length)
            },
            d: function(e, t, n) {
                return "do" === t ? n.ordinalNumber(e.getDate(), {
                    unit: "date"
                }) : d.lightFormatters.d(e, t)
            },
            D: function(e, t, n) {
                const r = (0,
                a.getDayOfYear)(e);
                return "Do" === t ? n.ordinalNumber(r, {
                    unit: "dayOfYear"
                }) : (0,
                u.addLeadingZeros)(r, t.length)
            },
            E: function(e, t, n) {
                const a = e.getDay();
                switch (t) {
                case "E":
                case "EE":
                case "EEE":
                    return n.day(a, {
                        width: "abbreviated",
                        context: "formatting"
                    });
                case "EEEEE":
                    return n.day(a, {
                        width: "narrow",
                        context: "formatting"
                    });
                case "EEEEEE":
                    return n.day(a, {
                        width: "short",
                        context: "formatting"
                    });
                default:
                    return n.day(a, {
                        width: "wide",
                        context: "formatting"
                    })
                }
            },
            e: function(e, t, n, a) {
                const r = e.getDay()
                  , i = (r - a.weekStartsOn + 8) % 7 || 7;
                switch (t) {
                case "e":
                    return String(i);
                case "ee":
                    return (0,
                    u.addLeadingZeros)(i, 2);
                case "eo":
                    return n.ordinalNumber(i, {
                        unit: "day"
                    });
                case "eee":
                    return n.day(r, {
                        width: "abbreviated",
                        context: "formatting"
                    });
                case "eeeee":
                    return n.day(r, {
                        width: "narrow",
                        context: "formatting"
                    });
                case "eeeeee":
                    return n.day(r, {
                        width: "short",
                        context: "formatting"
                    });
                default:
                    return n.day(r, {
                        width: "wide",
                        context: "formatting"
                    })
                }
            },
            c: function(e, t, n, a) {
                const r = e.getDay()
                  , i = (r - a.weekStartsOn + 8) % 7 || 7;
                switch (t) {
                case "c":
                    return String(i);
                case "cc":
                    return (0,
                    u.addLeadingZeros)(i, t.length);
                case "co":
                    return n.ordinalNumber(i, {
                        unit: "day"
                    });
                case "ccc":
                    return n.day(r, {
                        width: "abbreviated",
                        context: "standalone"
                    });
                case "ccccc":
                    return n.day(r, {
                        width: "narrow",
                        context: "standalone"
                    });
                case "cccccc":
                    return n.day(r, {
                        width: "short",
                        context: "standalone"
                    });
                default:
                    return n.day(r, {
                        width: "wide",
                        context: "standalone"
                    })
                }
            },
            i: function(e, t, n) {
                const a = e.getDay()
                  , r = 0 === a ? 7 : a;
                switch (t) {
                case "i":
                    return String(r);
                case "ii":
                    return (0,
                    u.addLeadingZeros)(r, t.length);
                case "io":
                    return n.ordinalNumber(r, {
                        unit: "day"
                    });
                case "iii":
                    return n.day(a, {
                        width: "abbreviated",
                        context: "formatting"
                    });
                case "iiiii":
                    return n.day(a, {
                        width: "narrow",
                        context: "formatting"
                    });
                case "iiiiii":
                    return n.day(a, {
                        width: "short",
                        context: "formatting"
                    });
                default:
                    return n.day(a, {
                        width: "wide",
                        context: "formatting"
                    })
                }
            },
            a: function(e, t, n) {
                const a = e.getHours() / 12 >= 1 ? "pm" : "am";
                switch (t) {
                case "a":
                case "aa":
                    return n.dayPeriod(a, {
                        width: "abbreviated",
                        context: "formatting"
                    });
                case "aaa":
                    return n.dayPeriod(a, {
                        width: "abbreviated",
                        context: "formatting"
                    }).toLowerCase();
                case "aaaaa":
                    return n.dayPeriod(a, {
                        width: "narrow",
                        context: "formatting"
                    });
                default:
                    return n.dayPeriod(a, {
                        width: "wide",
                        context: "formatting"
                    })
                }
            },
            b: function(e, t, n) {
                const a = e.getHours();
                let r;
                switch (r = 12 === a ? c : 0 === a ? l : a / 12 >= 1 ? "pm" : "am",
                t) {
                case "b":
                case "bb":
                    return n.dayPeriod(r, {
                        width: "abbreviated",
                        context: "formatting"
                    });
                case "bbb":
                    return n.dayPeriod(r, {
                        width: "abbreviated",
                        context: "formatting"
                    }).toLowerCase();
                case "bbbbb":
                    return n.dayPeriod(r, {
                        width: "narrow",
                        context: "formatting"
                    });
                default:
                    return n.dayPeriod(r, {
                        width: "wide",
                        context: "formatting"
                    })
                }
            },
            B: function(e, t, n) {
                const a = e.getHours();
                let r;
                switch (r = a >= 17 ? f : a >= 12 ? h : a >= 4 ? m : p,
                t) {
                case "B":
                case "BB":
                case "BBB":
                    return n.dayPeriod(r, {
                        width: "abbreviated",
                        context: "formatting"
                    });
                case "BBBBB":
                    return n.dayPeriod(r, {
                        width: "narrow",
                        context: "formatting"
                    });
                default:
                    return n.dayPeriod(r, {
                        width: "wide",
                        context: "formatting"
                    })
                }
            },
            h: function(e, t, n) {
                if ("ho" === t) {
                    let t = e.getHours() % 12;
                    return 0 === t && (t = 12),
                    n.ordinalNumber(t, {
                        unit: "hour"
                    })
                }
                return d.lightFormatters.h(e, t)
            },
            H: function(e, t, n) {
                return "Ho" === t ? n.ordinalNumber(e.getHours(), {
                    unit: "hour"
                }) : d.lightFormatters.H(e, t)
            },
            K: function(e, t, n) {
                const a = e.getHours() % 12;
                return "Ko" === t ? n.ordinalNumber(a, {
                    unit: "hour"
                }) : (0,
                u.addLeadingZeros)(a, t.length)
            },
            k: function(e, t, n) {
                let a = e.getHours();
                return 0 === a && (a = 24),
                "ko" === t ? n.ordinalNumber(a, {
                    unit: "hour"
                }) : (0,
                u.addLeadingZeros)(a, t.length)
            },
            m: function(e, t, n) {
                return "mo" === t ? n.ordinalNumber(e.getMinutes(), {
                    unit: "minute"
                }) : d.lightFormatters.m(e, t)
            },
            s: function(e, t, n) {
                return "so" === t ? n.ordinalNumber(e.getSeconds(), {
                    unit: "second"
                }) : d.lightFormatters.s(e, t)
            },
            S: function(e, t) {
                return d.lightFormatters.S(e, t)
            },
            X: function(e, t, n) {
                const a = e.getTimezoneOffset();
                if (0 === a)
                    return "Z";
                switch (t) {
                case "X":
                    return v(a);
                case "XXXX":
                case "XX":
                    return w(a);
                default:
                    return w(a, ":")
                }
            },
            x: function(e, t, n) {
                const a = e.getTimezoneOffset();
                switch (t) {
                case "x":
                    return v(a);
                case "xxxx":
                case "xx":
                    return w(a);
                default:
                    return w(a, ":")
                }
            },
            O: function(e, t, n) {
                const a = e.getTimezoneOffset();
                switch (t) {
                case "O":
                case "OO":
                case "OOO":
                    return "GMT" + g(a, ":");
                default:
                    return "GMT" + w(a, ":")
                }
            },
            z: function(e, t, n) {
                const a = e.getTimezoneOffset();
                switch (t) {
                case "z":
                case "zz":
                case "zzz":
                    return "GMT" + g(a, ":");
                default:
                    return "GMT" + w(a, ":")
                }
            },
            t: function(e, t, n) {
                const a = Math.trunc(e.getTime() / 1e3);
                return (0,
                u.addLeadingZeros)(a, t.length)
            },
            T: function(e, t, n) {
                const a = e.getTime();
                return (0,
                u.addLeadingZeros)(a, t.length)
            }
        };
        function g(e, t="") {
            const n = e > 0 ? "-" : "+"
              , a = Math.abs(e)
              , r = Math.trunc(a / 60)
              , i = a % 60;
            return 0 === i ? n + String(r) : n + String(r) + t + (0,
            u.addLeadingZeros)(i, 2)
        }
        function v(e, t) {
            if (e % 60 === 0) {
                return (e > 0 ? "-" : "+") + (0,
                u.addLeadingZeros)(Math.abs(e) / 60, 2)
            }
            return w(e, t)
        }
        function w(e, t="") {
            const n = e > 0 ? "-" : "+"
              , a = Math.abs(e);
            return n + (0,
            u.addLeadingZeros)(Math.trunc(a / 60), 2) + t + (0,
            u.addLeadingZeros)(a % 60, 2)
        }
    },
    7019: function(e, t, n) {
        "use strict";
        t.lightFormatters = void 0;
        var a = n(91396);
        t.lightFormatters = {
            y(e, t) {
                const n = e.getFullYear()
                  , r = n > 0 ? n : 1 - n;
                return (0,
                a.addLeadingZeros)("yy" === t ? r % 100 : r, t.length)
            },
            M(e, t) {
                const n = e.getMonth();
                return "M" === t ? String(n + 1) : (0,
                a.addLeadingZeros)(n + 1, 2)
            },
            d(e, t) {
                return (0,
                a.addLeadingZeros)(e.getDate(), t.length)
            },
            a(e, t) {
                const n = e.getHours() / 12 >= 1 ? "pm" : "am";
                switch (t) {
                case "a":
                case "aa":
                    return n.toUpperCase();
                case "aaa":
                    return n;
                case "aaaaa":
                    return n[0];
                default:
                    return "am" === n ? "a.m." : "p.m."
                }
            },
            h(e, t) {
                return (0,
                a.addLeadingZeros)(e.getHours() % 12 || 12, t.length)
            },
            H(e, t) {
                return (0,
                a.addLeadingZeros)(e.getHours(), t.length)
            },
            m(e, t) {
                return (0,
                a.addLeadingZeros)(e.getMinutes(), t.length)
            },
            s(e, t) {
                return (0,
                a.addLeadingZeros)(e.getSeconds(), t.length)
            },
            S(e, t) {
                const n = t.length
                  , r = e.getMilliseconds()
                  , i = Math.trunc(r * Math.pow(10, n - 3));
                return (0,
                a.addLeadingZeros)(i, t.length)
            }
        }
    },
    85879: function(e, t) {
        "use strict";
        t.longFormatters = void 0;
        const n = (e,t)=>{
            switch (e) {
            case "P":
                return t.date({
                    width: "short"
                });
            case "PP":
                return t.date({
                    width: "medium"
                });
            case "PPP":
                return t.date({
                    width: "long"
                });
            default:
                return t.date({
                    width: "full"
                })
            }
        }
          , a = (e,t)=>{
            switch (e) {
            case "p":
                return t.time({
                    width: "short"
                });
            case "pp":
                return t.time({
                    width: "medium"
                });
            case "ppp":
                return t.time({
                    width: "long"
                });
            default:
                return t.time({
                    width: "full"
                })
            }
        }
        ;
        t.longFormatters = {
            p: a,
            P: (e,t)=>{
                const r = e.match(/(P+)(p+)?/) || []
                  , i = r[1]
                  , o = r[2];
                if (!o)
                    return n(e, t);
                let s;
                switch (i) {
                case "P":
                    s = t.dateTime({
                        width: "short"
                    });
                    break;
                case "PP":
                    s = t.dateTime({
                        width: "medium"
                    });
                    break;
                case "PPP":
                    s = t.dateTime({
                        width: "long"
                    });
                    break;
                default:
                    s = t.dateTime({
                        width: "full"
                    })
                }
                return s.replace("{{date}}", n(i, t)).replace("{{time}}", a(o, t))
            }
        }
    },
    62535: function(e, t, n) {
        "use strict";
        t.getTimezoneOffsetInMilliseconds = function(e) {
            const t = (0,
            a.toDate)(e)
              , n = new Date(Date.UTC(t.getFullYear(), t.getMonth(), t.getDate(), t.getHours(), t.getMinutes(), t.getSeconds(), t.getMilliseconds()));
            return n.setUTCFullYear(t.getFullYear()),
            +e - +n
        }
        ;
        var a = n(34032)
    },
    47602: function(e, t) {
        "use strict";
        t.isProtectedDayOfYearToken = function(e) {
            return n.test(e)
        }
        ,
        t.isProtectedWeekYearToken = function(e) {
            return a.test(e)
        }
        ,
        t.warnOrThrowProtectedError = function(e, t, n) {
            const a = function(e, t, n) {
                const a = "Y" === e[0] ? "years" : "days of the month";
                return `Use \`${e.toLowerCase()}\` instead of \`${e}\` (in \`${t}\`) for formatting ${a} to the input \`${n}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`
            }(e, t, n);
            if (console.warn(a),
            r.includes(e))
                throw new RangeError(a)
        }
        ;
        const n = /^D+$/
          , a = /^Y+$/
          , r = ["D", "DD", "YY", "YYYY"]
    },
    27761: function(e, t, n) {
        "use strict";
        t.addDays = function(e, t) {
            const n = (0,
            a.toDate)(e);
            if (isNaN(t))
                return (0,
                r.constructFrom)(e, NaN);
            if (!t)
                return n;
            return n.setDate(n.getDate() + t),
            n
        }
        ;
        var a = n(34032)
          , r = n(81516)
    },
    83359: function(e, t, n) {
        "use strict";
        t.addHours = function(e, t) {
            return (0,
            a.addMilliseconds)(e, t * r.millisecondsInHour)
        }
        ;
        var a = n(40276)
          , r = n(69992)
    },
    40276: function(e, t, n) {
        "use strict";
        t.addMilliseconds = function(e, t) {
            const n = +(0,
            a.toDate)(e);
            return (0,
            r.constructFrom)(e, n + t)
        }
        ;
        var a = n(34032)
          , r = n(81516)
    },
    44461: function(e, t, n) {
        "use strict";
        t.addMinutes = function(e, t) {
            return (0,
            a.addMilliseconds)(e, t * r.millisecondsInMinute)
        }
        ;
        var a = n(40276)
          , r = n(69992)
    },
    55353: function(e, t, n) {
        "use strict";
        t.addMonths = function(e, t) {
            const n = (0,
            a.toDate)(e);
            if (isNaN(t))
                return (0,
                r.constructFrom)(e, NaN);
            if (!t)
                return n;
            const i = n.getDate()
              , o = (0,
            r.constructFrom)(e, n.getTime());
            o.setMonth(n.getMonth() + t + 1, 0);
            const s = o.getDate();
            return i >= s ? o : (n.setFullYear(o.getFullYear(), o.getMonth(), i),
            n)
        }
        ;
        var a = n(34032)
          , r = n(81516)
    },
    88823: function(e, t, n) {
        "use strict";
        t.addQuarters = function(e, t) {
            const n = 3 * t;
            return (0,
            a.addMonths)(e, n)
        }
        ;
        var a = n(55353)
    },
    4481: function(e, t, n) {
        "use strict";
        t.addWeeks = function(e, t) {
            const n = 7 * t;
            return (0,
            a.addDays)(e, n)
        }
        ;
        var a = n(27761)
    },
    60274: function(e, t, n) {
        "use strict";
        t.addYears = function(e, t) {
            return (0,
            a.addMonths)(e, 12 * t)
        }
        ;
        var a = n(55353)
    },
    69992: function(e, t) {
        "use strict";
        t.secondsInYear = t.secondsInWeek = t.secondsInQuarter = t.secondsInMonth = t.secondsInMinute = t.secondsInHour = t.secondsInDay = t.quartersInYear = t.monthsInYear = t.monthsInQuarter = t.minutesInYear = t.minutesInMonth = t.minutesInHour = t.minutesInDay = t.minTime = t.millisecondsInWeek = t.millisecondsInSecond = t.millisecondsInMinute = t.millisecondsInHour = t.millisecondsInDay = t.maxTime = t.daysInYear = t.daysInWeek = void 0;
        t.daysInWeek = 7;
        const n = t.daysInYear = 365.2425
          , a = t.maxTime = 24 * Math.pow(10, 8) * 60 * 60 * 1e3
          , r = (t.minTime = -a,
        t.millisecondsInWeek = 6048e5,
        t.millisecondsInDay = 864e5,
        t.millisecondsInMinute = 6e4,
        t.millisecondsInHour = 36e5,
        t.millisecondsInSecond = 1e3,
        t.minutesInYear = 525600,
        t.minutesInMonth = 43200,
        t.minutesInDay = 1440,
        t.minutesInHour = 60,
        t.monthsInQuarter = 3,
        t.monthsInYear = 12,
        t.quartersInYear = 4,
        t.secondsInHour = 3600)
          , i = (t.secondsInMinute = 60,
        t.secondsInDay = 24 * r)
          , o = (t.secondsInWeek = 7 * i,
        t.secondsInYear = i * n)
          , s = t.secondsInMonth = o / 12;
        t.secondsInQuarter = 3 * s
    },
    81516: function(e, t) {
        "use strict";
        t.constructFrom = function(e, t) {
            return e instanceof Date ? new e.constructor(t) : new Date(t)
        }
    },
    88676: function(e, t, n) {
        "use strict";
        t.differenceInCalendarDays = function(e, t) {
            const n = (0,
            r.startOfDay)(e)
              , o = (0,
            r.startOfDay)(t)
              , s = +n - (0,
            i.getTimezoneOffsetInMilliseconds)(n)
              , u = +o - (0,
            i.getTimezoneOffsetInMilliseconds)(o);
            return Math.round((s - u) / a.millisecondsInDay)
        }
        ;
        var a = n(69992)
          , r = n(71228)
          , i = n(62535)
    },
    8: function(e, t, n) {
        "use strict";
        t.differenceInCalendarMonths = function(e, t) {
            const n = (0,
            a.toDate)(e)
              , r = (0,
            a.toDate)(t)
              , i = n.getFullYear() - r.getFullYear()
              , o = n.getMonth() - r.getMonth();
            return 12 * i + o
        }
        ;
        var a = n(34032)
    },
    12701: function(e, t, n) {
        "use strict";
        t.differenceInCalendarYears = function(e, t) {
            const n = (0,
            a.toDate)(e)
              , r = (0,
            a.toDate)(t);
            return n.getFullYear() - r.getFullYear()
        }
        ;
        var a = n(34032)
    },
    75327: function(e, t, n) {
        "use strict";
        t.endOfDay = function(e) {
            const t = (0,
            a.toDate)(e);
            return t.setHours(23, 59, 59, 999),
            t
        }
        ;
        var a = n(34032)
    },
    51411: function(e, t, n) {
        "use strict";
        t.endOfMonth = function(e) {
            const t = (0,
            a.toDate)(e)
              , n = t.getMonth();
            return t.setFullYear(t.getFullYear(), n + 1, 0),
            t.setHours(23, 59, 59, 999),
            t
        }
        ;
        var a = n(34032)
    },
    98577: function(e, t, n) {
        "use strict";
        t.endOfWeek = function(e, t) {
            const n = (0,
            r.getDefaultOptions)()
              , i = t?.weekStartsOn ?? t?.locale?.options?.weekStartsOn ?? n.weekStartsOn ?? n.locale?.options?.weekStartsOn ?? 0
              , o = (0,
            a.toDate)(e)
              , s = o.getDay()
              , u = 6 + (s < i ? -7 : 0) - (s - i);
            return o.setDate(o.getDate() + u),
            o.setHours(23, 59, 59, 999),
            o
        }
        ;
        var a = n(34032)
          , r = n(20445)
    },
    4820: function(e, t, n) {
        "use strict";
        t.endOfYear = function(e) {
            const t = (0,
            a.toDate)(e)
              , n = t.getFullYear();
            return t.setFullYear(n + 1, 0, 0),
            t.setHours(23, 59, 59, 999),
            t
        }
        ;
        var a = n(34032)
    },
    81002: function(e, t, n) {
        "use strict";
        t.format = t.formatDate = function(e, t, n) {
            const m = (0,
            r.getDefaultOptions)()
              , h = n?.locale ?? m.locale ?? a.defaultLocale
              , g = n?.firstWeekContainsDate ?? n?.locale?.options?.firstWeekContainsDate ?? m.firstWeekContainsDate ?? m.locale?.options?.firstWeekContainsDate ?? 1
              , v = n?.weekStartsOn ?? n?.locale?.options?.weekStartsOn ?? m.weekStartsOn ?? m.locale?.options?.weekStartsOn ?? 0
              , w = (0,
            d.toDate)(e);
            if (!(0,
            u.isValid)(w))
                throw new RangeError("Invalid time value");
            let b = t.match(c).map((e=>{
                const t = e[0];
                if ("p" === t || "P" === t) {
                    return (0,
                    o.longFormatters[t])(e, h.formatLong)
                }
                return e
            }
            )).join("").match(l).map((e=>{
                if ("''" === e)
                    return {
                        isToken: !1,
                        value: "'"
                    };
                const t = e[0];
                if ("'" === t)
                    return {
                        isToken: !1,
                        value: p(e)
                    };
                if (i.formatters[t])
                    return {
                        isToken: !0,
                        value: e
                    };
                if (t.match(f))
                    throw new RangeError("Format string contains an unescaped latin alphabet character `" + t + "`");
                return {
                    isToken: !1,
                    value: e
                }
            }
            ));
            h.localize.preprocessor && (b = h.localize.preprocessor(w, b));
            const y = {
                firstWeekContainsDate: g,
                weekStartsOn: v,
                locale: h
            };
            return b.map((a=>{
                if (!a.isToken)
                    return a.value;
                const r = a.value;
                (!n?.useAdditionalWeekYearTokens && (0,
                s.isProtectedWeekYearToken)(r) || !n?.useAdditionalDayOfYearTokens && (0,
                s.isProtectedDayOfYearToken)(r)) && (0,
                s.warnOrThrowProtectedError)(r, t, String(e));
                return (0,
                i.formatters[r[0]])(w, r, h.localize, y)
            }
            )).join("")
        }
        ,
        Object.defineProperty(t, "formatters", {
            enumerable: !0,
            get: function() {
                return i.formatters
            }
        }),
        Object.defineProperty(t, "longFormatters", {
            enumerable: !0,
            get: function() {
                return o.longFormatters
            }
        });
        var a = n(79057)
          , r = n(20445)
          , i = n(81889)
          , o = n(85879)
          , s = n(47602)
          , u = n(89111)
          , d = n(34032);
        const l = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g
          , c = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g
          , m = /^'([^]*?)'?$/
          , h = /''/g
          , f = /[a-zA-Z]/;
        function p(e) {
            const t = e.match(m);
            return t ? t[1].replace(h, "'") : e
        }
    },
    22901: function(e, t, n) {
        "use strict";
        t.getDate = function(e) {
            const t = (0,
            a.toDate)(e);
            return t.getDate()
        }
        ;
        var a = n(34032)
    },
    4195: function(e, t, n) {
        "use strict";
        t.getDay = function(e) {
            const t = (0,
            a.toDate)(e);
            return t.getDay()
        }
        ;
        var a = n(34032)
    },
    627: function(e, t, n) {
        "use strict";
        t.getDayOfYear = function(e) {
            const t = (0,
            i.toDate)(e)
              , n = (0,
            a.differenceInCalendarDays)(t, (0,
            r.startOfYear)(t));
            return n + 1
        }
        ;
        var a = n(88676)
          , r = n(14745)
          , i = n(34032)
    },
    46087: function(e, t, n) {
        "use strict";
        t.getDaysInMonth = function(e) {
            const t = (0,
            a.toDate)(e)
              , n = t.getFullYear()
              , i = t.getMonth()
              , o = (0,
            r.constructFrom)(e, 0);
            return o.setFullYear(n, i + 1, 0),
            o.setHours(0, 0, 0, 0),
            o.getDate()
        }
        ;
        var a = n(34032)
          , r = n(81516)
    },
    63348: function(e, t, n) {
        "use strict";
        t.getDefaultOptions = function() {
            return Object.assign({}, (0,
            a.getDefaultOptions)())
        }
        ;
        var a = n(20445)
    },
    22918: function(e, t, n) {
        "use strict";
        t.getHours = function(e) {
            const t = (0,
            a.toDate)(e);
            return t.getHours()
        }
        ;
        var a = n(34032)
    },
    19272: function(e, t, n) {
        "use strict";
        t.getISODay = function(e) {
            let t = (0,
            a.toDate)(e).getDay();
            0 === t && (t = 7);
            return t
        }
        ;
        var a = n(34032)
    },
    29332: function(e, t, n) {
        "use strict";
        t.getISOWeek = function(e) {
            const t = (0,
            o.toDate)(e)
              , n = +(0,
            r.startOfISOWeek)(t) - +(0,
            i.startOfISOWeekYear)(t);
            return Math.round(n / a.millisecondsInWeek) + 1
        }
        ;
        var a = n(69992)
          , r = n(20419)
          , i = n(91046)
          , o = n(34032)
    },
    6253: function(e, t, n) {
        "use strict";
        t.getISOWeekYear = function(e) {
            const t = (0,
            i.toDate)(e)
              , n = t.getFullYear()
              , o = (0,
            a.constructFrom)(e, 0);
            o.setFullYear(n + 1, 0, 4),
            o.setHours(0, 0, 0, 0);
            const s = (0,
            r.startOfISOWeek)(o)
              , u = (0,
            a.constructFrom)(e, 0);
            u.setFullYear(n, 0, 4),
            u.setHours(0, 0, 0, 0);
            const d = (0,
            r.startOfISOWeek)(u);
            return t.getTime() >= s.getTime() ? n + 1 : t.getTime() >= d.getTime() ? n : n - 1
        }
        ;
        var a = n(81516)
          , r = n(20419)
          , i = n(34032)
    },
    26688: function(e, t, n) {
        "use strict";
        t.getMinutes = function(e) {
            const t = (0,
            a.toDate)(e);
            return t.getMinutes()
        }
        ;
        var a = n(34032)
    },
    98511: function(e, t, n) {
        "use strict";
        t.getMonth = function(e) {
            const t = (0,
            a.toDate)(e);
            return t.getMonth()
        }
        ;
        var a = n(34032)
    },
    921: function(e, t, n) {
        "use strict";
        t.getQuarter = function(e) {
            const t = (0,
            a.toDate)(e);
            return Math.trunc(t.getMonth() / 3) + 1
        }
        ;
        var a = n(34032)
    },
    86392: function(e, t, n) {
        "use strict";
        t.getSeconds = function(e) {
            const t = (0,
            a.toDate)(e);
            return t.getSeconds()
        }
        ;
        var a = n(34032)
    },
    77116: function(e, t, n) {
        "use strict";
        t.getTime = function(e) {
            const t = (0,
            a.toDate)(e);
            return t.getTime()
        }
        ;
        var a = n(34032)
    },
    63613: function(e, t, n) {
        "use strict";
        t.getWeek = function(e, t) {
            const n = (0,
            o.toDate)(e)
              , s = +(0,
            r.startOfWeek)(n, t) - +(0,
            i.startOfWeekYear)(n, t);
            return Math.round(s / a.millisecondsInWeek) + 1
        }
        ;
        var a = n(69992)
          , r = n(36128)
          , i = n(34241)
          , o = n(34032)
    },
    9804: function(e, t, n) {
        "use strict";
        t.getWeekYear = function(e, t) {
            const n = (0,
            i.toDate)(e)
              , s = n.getFullYear()
              , u = (0,
            o.getDefaultOptions)()
              , d = t?.firstWeekContainsDate ?? t?.locale?.options?.firstWeekContainsDate ?? u.firstWeekContainsDate ?? u.locale?.options?.firstWeekContainsDate ?? 1
              , l = (0,
            a.constructFrom)(e, 0);
            l.setFullYear(s + 1, 0, d),
            l.setHours(0, 0, 0, 0);
            const c = (0,
            r.startOfWeek)(l, t)
              , m = (0,
            a.constructFrom)(e, 0);
            m.setFullYear(s, 0, d),
            m.setHours(0, 0, 0, 0);
            const h = (0,
            r.startOfWeek)(m, t);
            return n.getTime() >= c.getTime() ? s + 1 : n.getTime() >= h.getTime() ? s : s - 1
        }
        ;
        var a = n(81516)
          , r = n(36128)
          , i = n(34032)
          , o = n(20445)
    },
    97328: function(e, t, n) {
        "use strict";
        t.getYear = function(e) {
            return (0,
            a.toDate)(e).getFullYear()
        }
        ;
        var a = n(34032)
    },
    65171: function(e, t, n) {
        "use strict";
        t.isAfter = function(e, t) {
            const n = (0,
            a.toDate)(e)
              , r = (0,
            a.toDate)(t);
            return n.getTime() > r.getTime()
        }
        ;
        var a = n(34032)
    },
    68330: function(e, t, n) {
        "use strict";
        t.isBefore = function(e, t) {
            const n = (0,
            a.toDate)(e)
              , r = (0,
            a.toDate)(t);
            return +n < +r
        }
        ;
        var a = n(34032)
    },
    76253: function(e, t) {
        "use strict";
        t.isDate = function(e) {
            return e instanceof Date || "object" === typeof e && "[object Date]" === Object.prototype.toString.call(e)
        }
    },
    86925: function(e, t, n) {
        "use strict";
        t.isEqual = function(e, t) {
            const n = (0,
            a.toDate)(e)
              , r = (0,
            a.toDate)(t);
            return +n === +r
        }
        ;
        var a = n(34032)
    },
    17933: function(e, t, n) {
        "use strict";
        t.isSameDay = function(e, t) {
            const n = (0,
            a.startOfDay)(e)
              , r = (0,
            a.startOfDay)(t);
            return +n === +r
        }
        ;
        var a = n(71228)
    },
    65137: function(e, t, n) {
        "use strict";
        t.isSameMonth = function(e, t) {
            const n = (0,
            a.toDate)(e)
              , r = (0,
            a.toDate)(t);
            return n.getFullYear() === r.getFullYear() && n.getMonth() === r.getMonth()
        }
        ;
        var a = n(34032)
    },
    90795: function(e, t, n) {
        "use strict";
        t.isSameQuarter = function(e, t) {
            const n = (0,
            a.startOfQuarter)(e)
              , r = (0,
            a.startOfQuarter)(t);
            return +n === +r
        }
        ;
        var a = n(80066)
    },
    81322: function(e, t, n) {
        "use strict";
        t.isSameYear = function(e, t) {
            const n = (0,
            a.toDate)(e)
              , r = (0,
            a.toDate)(t);
            return n.getFullYear() === r.getFullYear()
        }
        ;
        var a = n(34032)
    },
    89111: function(e, t, n) {
        "use strict";
        t.isValid = function(e) {
            if (!(0,
            a.isDate)(e) && "number" !== typeof e)
                return !1;
            const t = (0,
            r.toDate)(e);
            return !isNaN(Number(t))
        }
        ;
        var a = n(76253)
          , r = n(34032)
    },
    63727: function(e, t, n) {
        "use strict";
        t.isWithinInterval = function(e, t) {
            const n = +(0,
            a.toDate)(e)
              , [r,i] = [+(0,
            a.toDate)(t.start), +(0,
            a.toDate)(t.end)].sort(((e,t)=>e - t));
            return n >= r && n <= i
        }
        ;
        var a = n(34032)
    },
    804: function(e, t) {
        "use strict";
        t.buildFormatLongFn = function(e) {
            return (t={})=>{
                const n = t.width ? String(t.width) : e.defaultWidth;
                return e.formats[n] || e.formats[e.defaultWidth]
            }
        }
    },
    75426: function(e, t) {
        "use strict";
        t.buildLocalizeFn = function(e) {
            return (t,n)=>{
                let a;
                if ("formatting" === (n?.context ? String(n.context) : "standalone") && e.formattingValues) {
                    const t = e.defaultFormattingWidth || e.defaultWidth
                      , r = n?.width ? String(n.width) : t;
                    a = e.formattingValues[r] || e.formattingValues[t]
                } else {
                    const t = e.defaultWidth
                      , r = n?.width ? String(n.width) : e.defaultWidth;
                    a = e.values[r] || e.values[t]
                }
                return a[e.argumentCallback ? e.argumentCallback(t) : t]
            }
        }
    },
    14568: function(e, t) {
        "use strict";
        t.buildMatchFn = function(e) {
            return (t,n={})=>{
                const a = n.width
                  , r = a && e.matchPatterns[a] || e.matchPatterns[e.defaultMatchWidth]
                  , i = t.match(r);
                if (!i)
                    return null;
                const o = i[0]
                  , s = a && e.parsePatterns[a] || e.parsePatterns[e.defaultParseWidth]
                  , u = Array.isArray(s) ? function(e, t) {
                    for (let n = 0; n < e.length; n++)
                        if (t(e[n]))
                            return n;
                    return
                }(s, (e=>e.test(o))) : function(e, t) {
                    for (const n in e)
                        if (Object.prototype.hasOwnProperty.call(e, n) && t(e[n]))
                            return n;
                    return
                }(s, (e=>e.test(o)));
                let d;
                d = e.valueCallback ? e.valueCallback(u) : u,
                d = n.valueCallback ? n.valueCallback(d) : d;
                return {
                    value: d,
                    rest: t.slice(o.length)
                }
            }
        }
    },
    64072: function(e, t) {
        "use strict";
        t.buildMatchPatternFn = function(e) {
            return (t,n={})=>{
                const a = t.match(e.matchPattern);
                if (!a)
                    return null;
                const r = a[0]
                  , i = t.match(e.parsePattern);
                if (!i)
                    return null;
                let o = e.valueCallback ? e.valueCallback(i[0]) : i[0];
                o = n.valueCallback ? n.valueCallback(o) : o;
                return {
                    value: o,
                    rest: t.slice(r.length)
                }
            }
        }
    },
    34134: function(e, t, n) {
        "use strict";
        t.enUS = void 0;
        var a = n(50696)
          , r = n(87153)
          , i = n(67511)
          , o = n(35415)
          , s = n(7711);
        t.enUS = {
            code: "en-US",
            formatDistance: a.formatDistance,
            formatLong: r.formatLong,
            formatRelative: i.formatRelative,
            localize: o.localize,
            match: s.match,
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        }
    },
    50696: function(e, t) {
        "use strict";
        t.formatDistance = void 0;
        const n = {
            lessThanXSeconds: {
                one: "less than a second",
                other: "less than {{count}} seconds"
            },
            xSeconds: {
                one: "1 second",
                other: "{{count}} seconds"
            },
            halfAMinute: "half a minute",
            lessThanXMinutes: {
                one: "less than a minute",
                other: "less than {{count}} minutes"
            },
            xMinutes: {
                one: "1 minute",
                other: "{{count}} minutes"
            },
            aboutXHours: {
                one: "about 1 hour",
                other: "about {{count}} hours"
            },
            xHours: {
                one: "1 hour",
                other: "{{count}} hours"
            },
            xDays: {
                one: "1 day",
                other: "{{count}} days"
            },
            aboutXWeeks: {
                one: "about 1 week",
                other: "about {{count}} weeks"
            },
            xWeeks: {
                one: "1 week",
                other: "{{count}} weeks"
            },
            aboutXMonths: {
                one: "about 1 month",
                other: "about {{count}} months"
            },
            xMonths: {
                one: "1 month",
                other: "{{count}} months"
            },
            aboutXYears: {
                one: "about 1 year",
                other: "about {{count}} years"
            },
            xYears: {
                one: "1 year",
                other: "{{count}} years"
            },
            overXYears: {
                one: "over 1 year",
                other: "over {{count}} years"
            },
            almostXYears: {
                one: "almost 1 year",
                other: "almost {{count}} years"
            }
        };
        t.formatDistance = (e,t,a)=>{
            let r;
            const i = n[e];
            return r = "string" === typeof i ? i : 1 === t ? i.one : i.other.replace("{{count}}", t.toString()),
            a?.addSuffix ? a.comparison && a.comparison > 0 ? "in " + r : r + " ago" : r
        }
    },
    87153: function(e, t, n) {
        "use strict";
        t.formatLong = void 0;
        var a = n(804);
        t.formatLong = {
            date: (0,
            a.buildFormatLongFn)({
                formats: {
                    full: "EEEE, MMMM do, y",
                    long: "MMMM do, y",
                    medium: "MMM d, y",
                    short: "MM/dd/yyyy"
                },
                defaultWidth: "full"
            }),
            time: (0,
            a.buildFormatLongFn)({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: (0,
            a.buildFormatLongFn)({
                formats: {
                    full: "{{date}} 'at' {{time}}",
                    long: "{{date}} 'at' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
    },
    67511: function(e, t) {
        "use strict";
        t.formatRelative = void 0;
        const n = {
            lastWeek: "'last' eeee 'at' p",
            yesterday: "'yesterday at' p",
            today: "'today at' p",
            tomorrow: "'tomorrow at' p",
            nextWeek: "eeee 'at' p",
            other: "P"
        };
        t.formatRelative = (e,t,a,r)=>n[e]
    },
    35415: function(e, t, n) {
        "use strict";
        t.localize = void 0;
        var a = n(75426);
        t.localize = {
            ordinalNumber: (e,t)=>{
                const n = Number(e)
                  , a = n % 100;
                if (a > 20 || a < 10)
                    switch (a % 10) {
                    case 1:
                        return n + "st";
                    case 2:
                        return n + "nd";
                    case 3:
                        return n + "rd"
                    }
                return n + "th"
            }
            ,
            era: (0,
            a.buildLocalizeFn)({
                values: {
                    narrow: ["B", "A"],
                    abbreviated: ["BC", "AD"],
                    wide: ["Before Christ", "Anno Domini"]
                },
                defaultWidth: "wide"
            }),
            quarter: (0,
            a.buildLocalizeFn)({
                values: {
                    narrow: ["1", "2", "3", "4"],
                    abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                    wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
                },
                defaultWidth: "wide",
                argumentCallback: e=>e - 1
            }),
            month: (0,
            a.buildLocalizeFn)({
                values: {
                    narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                    abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
                },
                defaultWidth: "wide"
            }),
            day: (0,
            a.buildLocalizeFn)({
                values: {
                    narrow: ["S", "M", "T", "W", "T", "F", "S"],
                    short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
                    abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                    wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
                },
                defaultWidth: "wide"
            }),
            dayPeriod: (0,
            a.buildLocalizeFn)({
                values: {
                    narrow: {
                        am: "a",
                        pm: "p",
                        midnight: "mi",
                        noon: "n",
                        morning: "morning",
                        afternoon: "afternoon",
                        evening: "evening",
                        night: "night"
                    },
                    abbreviated: {
                        am: "AM",
                        pm: "PM",
                        midnight: "midnight",
                        noon: "noon",
                        morning: "morning",
                        afternoon: "afternoon",
                        evening: "evening",
                        night: "night"
                    },
                    wide: {
                        am: "a.m.",
                        pm: "p.m.",
                        midnight: "midnight",
                        noon: "noon",
                        morning: "morning",
                        afternoon: "afternoon",
                        evening: "evening",
                        night: "night"
                    }
                },
                defaultWidth: "wide",
                formattingValues: {
                    narrow: {
                        am: "a",
                        pm: "p",
                        midnight: "mi",
                        noon: "n",
                        morning: "in the morning",
                        afternoon: "in the afternoon",
                        evening: "in the evening",
                        night: "at night"
                    },
                    abbreviated: {
                        am: "AM",
                        pm: "PM",
                        midnight: "midnight",
                        noon: "noon",
                        morning: "in the morning",
                        afternoon: "in the afternoon",
                        evening: "in the evening",
                        night: "at night"
                    },
                    wide: {
                        am: "a.m.",
                        pm: "p.m.",
                        midnight: "midnight",
                        noon: "noon",
                        morning: "in the morning",
                        afternoon: "in the afternoon",
                        evening: "in the evening",
                        night: "at night"
                    }
                },
                defaultFormattingWidth: "wide"
            })
        }
    },
    7711: function(e, t, n) {
        "use strict";
        t.match = void 0;
        var a = n(14568)
          , r = n(64072);
        t.match = {
            ordinalNumber: (0,
            r.buildMatchPatternFn)({
                matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                parsePattern: /\d+/i,
                valueCallback: e=>parseInt(e, 10)
            }),
            era: (0,
            a.buildMatchFn)({
                matchPatterns: {
                    narrow: /^(b|a)/i,
                    abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
                    wide: /^(before christ|before common era|anno domini|common era)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    any: [/^b/i, /^(a|c)/i]
                },
                defaultParseWidth: "any"
            }),
            quarter: (0,
            a.buildMatchFn)({
                matchPatterns: {
                    narrow: /^[1234]/i,
                    abbreviated: /^q[1234]/i,
                    wide: /^[1234](th|st|nd|rd)? quarter/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    any: [/1/i, /2/i, /3/i, /4/i]
                },
                defaultParseWidth: "any",
                valueCallback: e=>e + 1
            }),
            month: (0,
            a.buildMatchFn)({
                matchPatterns: {
                    narrow: /^[jfmasond]/i,
                    abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
                    wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                    any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
                },
                defaultParseWidth: "any"
            }),
            day: (0,
            a.buildMatchFn)({
                matchPatterns: {
                    narrow: /^[smtwf]/i,
                    short: /^(su|mo|tu|we|th|fr|sa)/i,
                    abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
                    wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
                    any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
                },
                defaultParseWidth: "any"
            }),
            dayPeriod: (0,
            a.buildMatchFn)({
                matchPatterns: {
                    narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
                    any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
                },
                defaultMatchWidth: "any",
                parsePatterns: {
                    any: {
                        am: /^a/i,
                        pm: /^p/i,
                        midnight: /^mi/i,
                        noon: /^no/i,
                        morning: /morning/i,
                        afternoon: /afternoon/i,
                        evening: /evening/i,
                        night: /night/i
                    }
                },
                defaultParseWidth: "any"
            })
        }
    },
    56171: function(e, t, n) {
        "use strict";
        t.max = function(e) {
            let t;
            return e.forEach((function(e) {
                const n = (0,
                a.toDate)(e);
                (void 0 === t || t < n || isNaN(Number(n))) && (t = n)
            }
            )),
            t || new Date(NaN)
        }
        ;
        var a = n(34032)
    },
    82377: function(e, t, n) {
        "use strict";
        t.min = function(e) {
            let t;
            return e.forEach((e=>{
                const n = (0,
                a.toDate)(e);
                (!t || t > n || isNaN(+n)) && (t = n)
            }
            )),
            t || new Date(NaN)
        }
        ;
        var a = n(34032)
    },
    75798: function(e, t, n) {
        "use strict";
        Object.defineProperty(t, "longFormatters", {
            enumerable: !0,
            get: function() {
                return s.longFormatters
            }
        }),
        t.parse = function(e, t, n, v) {
            const w = (0,
            r.getDefaultOptions)()
              , b = v?.locale ?? w.locale ?? i.enUS
              , y = v?.firstWeekContainsDate ?? v?.locale?.options?.firstWeekContainsDate ?? w.firstWeekContainsDate ?? w.locale?.options?.firstWeekContainsDate ?? 1
              , k = v?.weekStartsOn ?? v?.locale?.options?.weekStartsOn ?? w.weekStartsOn ?? w.locale?.options?.weekStartsOn ?? 0;
            if ("" === t)
                return "" === e ? (0,
                o.toDate)(n) : (0,
                a.constructFrom)(n, NaN);
            const M = {
                firstWeekContainsDate: y,
                weekStartsOn: k,
                locale: b
            }
              , P = [new l.DateToSystemTimezoneSetter]
              , W = t.match(m).map((e=>{
                const t = e[0];
                if (t in s.longFormatters) {
                    return (0,
                    s.longFormatters[t])(e, b.formatLong)
                }
                return e
            }
            )).join("").match(c)
              , x = [];
            for (let r of W) {
                !v?.useAdditionalWeekYearTokens && (0,
                u.isProtectedWeekYearToken)(r) && (0,
                u.warnOrThrowProtectedError)(r, t, e),
                !v?.useAdditionalDayOfYearTokens && (0,
                u.isProtectedDayOfYearToken)(r) && (0,
                u.warnOrThrowProtectedError)(r, t, e);
                const i = r[0]
                  , o = d.parsers[i];
                if (o) {
                    const {incompatibleTokens: t} = o;
                    if (Array.isArray(t)) {
                        const e = x.find((e=>t.includes(e.token) || e.token === i));
                        if (e)
                            throw new RangeError(`The format string mustn't contain \`${e.fullToken}\` and \`${r}\` at the same time`)
                    } else if ("*" === o.incompatibleTokens && x.length > 0)
                        throw new RangeError(`The format string mustn't contain \`${r}\` and any other token at the same time`);
                    x.push({
                        token: i,
                        fullToken: r
                    });
                    const s = o.run(e, r, b.match, M);
                    if (!s)
                        return (0,
                        a.constructFrom)(n, NaN);
                    P.push(s.setter),
                    e = s.rest
                } else {
                    if (i.match(g))
                        throw new RangeError("Format string contains an unescaped latin alphabet character `" + i + "`");
                    if ("''" === r ? r = "'" : "'" === i && (r = r.match(h)[1].replace(f, "'")),
                    0 !== e.indexOf(r))
                        return (0,
                        a.constructFrom)(n, NaN);
                    e = e.slice(r.length)
                }
            }
            if (e.length > 0 && p.test(e))
                return (0,
                a.constructFrom)(n, NaN);
            const S = P.map((e=>e.priority)).sort(((e,t)=>t - e)).filter(((e,t,n)=>n.indexOf(e) === t)).map((e=>P.filter((t=>t.priority === e)).sort(((e,t)=>t.subPriority - e.subPriority)))).map((e=>e[0]));
            let D = (0,
            o.toDate)(n);
            if (isNaN(D.getTime()))
                return (0,
                a.constructFrom)(n, NaN);
            const j = {};
            for (const r of S) {
                if (!r.validate(D, M))
                    return (0,
                    a.constructFrom)(n, NaN);
                const e = r.set(D, j, M);
                Array.isArray(e) ? (D = e[0],
                Object.assign(j, e[1])) : D = e
            }
            return (0,
            a.constructFrom)(n, D)
        }
        ,
        Object.defineProperty(t, "parsers", {
            enumerable: !0,
            get: function() {
                return d.parsers
            }
        });
        var a = n(81516)
          , r = n(63348)
          , i = n(34134)
          , o = n(34032)
          , s = n(85879)
          , u = n(47602)
          , d = n(71122)
          , l = n(60095);
        const c = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g
          , m = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g
          , h = /^'([^]*?)'?$/
          , f = /''/g
          , p = /\S/
          , g = /[a-zA-Z]/
    },
    56167: function(e, t, n) {
        "use strict";
        t.Parser = void 0;
        var a = n(60095);
        t.Parser = class {
            run(e, t, n, r) {
                const i = this.parse(e, t, n, r);
                return i ? {
                    setter: new a.ValueSetter(i.value,this.validate,this.set,this.priority,this.subPriority),
                    rest: i.rest
                } : null
            }
            validate(e, t, n) {
                return !0
            }
        }
    },
    60095: function(e, t, n) {
        "use strict";
        t.ValueSetter = t.Setter = t.DateToSystemTimezoneSetter = void 0;
        var a = n(61306)
          , r = n(81516);
        class i {
            subPriority = 0;
            validate(e, t) {
                return !0
            }
        }
        t.Setter = i;
        t.ValueSetter = class extends i {
            constructor(e, t, n, a, r) {
                super(),
                this.value = e,
                this.validateValue = t,
                this.setValue = n,
                this.priority = a,
                r && (this.subPriority = r)
            }
            validate(e, t) {
                return this.validateValue(e, this.value, t)
            }
            set(e, t, n) {
                return this.setValue(e, t, this.value, n)
            }
        }
        ;
        t.DateToSystemTimezoneSetter = class extends i {
            priority = 10;
            subPriority = -1;
            set(e, t) {
                return t.timestampIsSet ? e : (0,
                r.constructFrom)(e, (0,
                a.transpose)(e, Date))
            }
        }
    },
    18583: function(e, t) {
        "use strict";
        t.timezonePatterns = t.numericPatterns = void 0;
        t.numericPatterns = {
            month: /^(1[0-2]|0?\d)/,
            date: /^(3[0-1]|[0-2]?\d)/,
            dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
            week: /^(5[0-3]|[0-4]?\d)/,
            hour23h: /^(2[0-3]|[0-1]?\d)/,
            hour24h: /^(2[0-4]|[0-1]?\d)/,
            hour11h: /^(1[0-1]|0?\d)/,
            hour12h: /^(1[0-2]|0?\d)/,
            minute: /^[0-5]?\d/,
            second: /^[0-5]?\d/,
            singleDigit: /^\d/,
            twoDigits: /^\d{1,2}/,
            threeDigits: /^\d{1,3}/,
            fourDigits: /^\d{1,4}/,
            anyDigitsSigned: /^-?\d+/,
            singleDigitSigned: /^-?\d/,
            twoDigitsSigned: /^-?\d{1,2}/,
            threeDigitsSigned: /^-?\d{1,3}/,
            fourDigitsSigned: /^-?\d{1,4}/
        },
        t.timezonePatterns = {
            basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
            basic: /^([+-])(\d{2})(\d{2})|Z/,
            basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
            extended: /^([+-])(\d{2}):(\d{2})|Z/,
            extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/
        }
    },
    71122: function(e, t, n) {
        "use strict";
        t.parsers = void 0;
        var a = n(3048)
          , r = n(45647)
          , i = n(33476)
          , o = n(42010)
          , s = n(8614)
          , u = n(50382)
          , d = n(17211)
          , l = n(17e3)
          , c = n(51505)
          , m = n(10977)
          , h = n(85563)
          , f = n(38250)
          , p = n(25652)
          , g = n(31116)
          , v = n(76833)
          , w = n(15402)
          , b = n(58015)
          , y = n(67507)
          , k = n(35687)
          , M = n(94697)
          , P = n(88549)
          , W = n(63322)
          , x = n(45803)
          , S = n(5068)
          , D = n(15610)
          , j = n(28458)
          , C = n(85521)
          , T = n(24782)
          , E = n(50984)
          , N = n(78959)
          , z = n(85680);
        t.parsers = {
            G: new a.EraParser,
            y: new r.YearParser,
            Y: new i.LocalWeekYearParser,
            R: new o.ISOWeekYearParser,
            u: new s.ExtendedYearParser,
            Q: new u.QuarterParser,
            q: new d.StandAloneQuarterParser,
            M: new l.MonthParser,
            L: new c.StandAloneMonthParser,
            w: new m.LocalWeekParser,
            I: new h.ISOWeekParser,
            d: new f.DateParser,
            D: new p.DayOfYearParser,
            E: new g.DayParser,
            e: new v.LocalDayParser,
            c: new w.StandAloneLocalDayParser,
            i: new b.ISODayParser,
            a: new y.AMPMParser,
            b: new k.AMPMMidnightParser,
            B: new M.DayPeriodParser,
            h: new P.Hour1to12Parser,
            H: new W.Hour0to23Parser,
            K: new x.Hour0To11Parser,
            k: new S.Hour1To24Parser,
            m: new D.MinuteParser,
            s: new j.SecondParser,
            S: new C.FractionOfSecondParser,
            X: new T.ISOTimezoneWithZParser,
            x: new E.ISOTimezoneParser,
            t: new N.TimestampSecondsParser,
            T: new z.TimestampMillisecondsParser
        }
    },
    35687: function(e, t, n) {
        "use strict";
        t.AMPMMidnightParser = void 0;
        var a = n(56167)
          , r = n(24871);
        class i extends a.Parser {
            priority = 80;
            parse(e, t, n) {
                switch (t) {
                case "b":
                case "bb":
                case "bbb":
                    return n.dayPeriod(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.dayPeriod(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                case "bbbbb":
                    return n.dayPeriod(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                default:
                    return n.dayPeriod(e, {
                        width: "wide",
                        context: "formatting"
                    }) || n.dayPeriod(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.dayPeriod(e, {
                        width: "narrow",
                        context: "formatting"
                    })
                }
            }
            set(e, t, n) {
                return e.setHours((0,
                r.dayPeriodEnumToHours)(n), 0, 0, 0),
                e
            }
            incompatibleTokens = ["a", "B", "H", "k", "t", "T"]
        }
        t.AMPMMidnightParser = i
    },
    67507: function(e, t, n) {
        "use strict";
        t.AMPMParser = void 0;
        var a = n(56167)
          , r = n(24871);
        class i extends a.Parser {
            priority = 80;
            parse(e, t, n) {
                switch (t) {
                case "a":
                case "aa":
                case "aaa":
                    return n.dayPeriod(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.dayPeriod(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                case "aaaaa":
                    return n.dayPeriod(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                default:
                    return n.dayPeriod(e, {
                        width: "wide",
                        context: "formatting"
                    }) || n.dayPeriod(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.dayPeriod(e, {
                        width: "narrow",
                        context: "formatting"
                    })
                }
            }
            set(e, t, n) {
                return e.setHours((0,
                r.dayPeriodEnumToHours)(n), 0, 0, 0),
                e
            }
            incompatibleTokens = ["b", "B", "H", "k", "t", "T"]
        }
        t.AMPMParser = i
    },
    38250: function(e, t, n) {
        "use strict";
        t.DateParser = void 0;
        var a = n(18583)
          , r = n(56167)
          , i = n(24871);
        const o = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
          , s = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
        class u extends r.Parser {
            priority = 90;
            subPriority = 1;
            parse(e, t, n) {
                switch (t) {
                case "d":
                    return (0,
                    i.parseNumericPattern)(a.numericPatterns.date, e);
                case "do":
                    return n.ordinalNumber(e, {
                        unit: "date"
                    });
                default:
                    return (0,
                    i.parseNDigits)(t.length, e)
                }
            }
            validate(e, t) {
                const n = e.getFullYear()
                  , a = (0,
                i.isLeapYearIndex)(n)
                  , r = e.getMonth();
                return a ? t >= 1 && t <= s[r] : t >= 1 && t <= o[r]
            }
            set(e, t, n) {
                return e.setDate(n),
                e.setHours(0, 0, 0, 0),
                e
            }
            incompatibleTokens = ["Y", "R", "q", "Q", "w", "I", "D", "i", "e", "c", "t", "T"]
        }
        t.DateParser = u
    },
    25652: function(e, t, n) {
        "use strict";
        t.DayOfYearParser = void 0;
        var a = n(18583)
          , r = n(56167)
          , i = n(24871);
        class o extends r.Parser {
            priority = 90;
            subpriority = 1;
            parse(e, t, n) {
                switch (t) {
                case "D":
                case "DD":
                    return (0,
                    i.parseNumericPattern)(a.numericPatterns.dayOfYear, e);
                case "Do":
                    return n.ordinalNumber(e, {
                        unit: "date"
                    });
                default:
                    return (0,
                    i.parseNDigits)(t.length, e)
                }
            }
            validate(e, t) {
                const n = e.getFullYear();
                return (0,
                i.isLeapYearIndex)(n) ? t >= 1 && t <= 366 : t >= 1 && t <= 365
            }
            set(e, t, n) {
                return e.setMonth(0, n),
                e.setHours(0, 0, 0, 0),
                e
            }
            incompatibleTokens = ["Y", "R", "q", "Q", "M", "L", "w", "I", "d", "E", "i", "e", "c", "t", "T"]
        }
        t.DayOfYearParser = o
    },
    31116: function(e, t, n) {
        "use strict";
        t.DayParser = void 0;
        var a = n(40964)
          , r = n(56167);
        class i extends r.Parser {
            priority = 90;
            parse(e, t, n) {
                switch (t) {
                case "E":
                case "EE":
                case "EEE":
                    return n.day(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "short",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                case "EEEEE":
                    return n.day(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                case "EEEEEE":
                    return n.day(e, {
                        width: "short",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                default:
                    return n.day(e, {
                        width: "wide",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "short",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "narrow",
                        context: "formatting"
                    })
                }
            }
            validate(e, t) {
                return t >= 0 && t <= 6
            }
            set(e, t, n, r) {
                return (e = (0,
                a.setDay)(e, n, r)).setHours(0, 0, 0, 0),
                e
            }
            incompatibleTokens = ["D", "i", "e", "c", "t", "T"]
        }
        t.DayParser = i
    },
    94697: function(e, t, n) {
        "use strict";
        t.DayPeriodParser = void 0;
        var a = n(56167)
          , r = n(24871);
        class i extends a.Parser {
            priority = 80;
            parse(e, t, n) {
                switch (t) {
                case "B":
                case "BB":
                case "BBB":
                    return n.dayPeriod(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.dayPeriod(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                case "BBBBB":
                    return n.dayPeriod(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                default:
                    return n.dayPeriod(e, {
                        width: "wide",
                        context: "formatting"
                    }) || n.dayPeriod(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.dayPeriod(e, {
                        width: "narrow",
                        context: "formatting"
                    })
                }
            }
            set(e, t, n) {
                return e.setHours((0,
                r.dayPeriodEnumToHours)(n), 0, 0, 0),
                e
            }
            incompatibleTokens = ["a", "b", "t", "T"]
        }
        t.DayPeriodParser = i
    },
    3048: function(e, t, n) {
        "use strict";
        t.EraParser = void 0;
        var a = n(56167);
        class r extends a.Parser {
            priority = 140;
            parse(e, t, n) {
                switch (t) {
                case "G":
                case "GG":
                case "GGG":
                    return n.era(e, {
                        width: "abbreviated"
                    }) || n.era(e, {
                        width: "narrow"
                    });
                case "GGGGG":
                    return n.era(e, {
                        width: "narrow"
                    });
                default:
                    return n.era(e, {
                        width: "wide"
                    }) || n.era(e, {
                        width: "abbreviated"
                    }) || n.era(e, {
                        width: "narrow"
                    })
                }
            }
            set(e, t, n) {
                return t.era = n,
                e.setFullYear(n, 0, 1),
                e.setHours(0, 0, 0, 0),
                e
            }
            incompatibleTokens = ["R", "u", "t", "T"]
        }
        t.EraParser = r
    },
    8614: function(e, t, n) {
        "use strict";
        t.ExtendedYearParser = void 0;
        var a = n(56167)
          , r = n(24871);
        class i extends a.Parser {
            priority = 130;
            parse(e, t) {
                return "u" === t ? (0,
                r.parseNDigitsSigned)(4, e) : (0,
                r.parseNDigitsSigned)(t.length, e)
            }
            set(e, t, n) {
                return e.setFullYear(n, 0, 1),
                e.setHours(0, 0, 0, 0),
                e
            }
            incompatibleTokens = ["G", "y", "Y", "R", "w", "I", "i", "e", "c", "t", "T"]
        }
        t.ExtendedYearParser = i
    },
    85521: function(e, t, n) {
        "use strict";
        t.FractionOfSecondParser = void 0;
        var a = n(56167)
          , r = n(24871);
        class i extends a.Parser {
            priority = 30;
            parse(e, t) {
                return (0,
                r.mapValue)((0,
                r.parseNDigits)(t.length, e), (e=>Math.trunc(e * Math.pow(10, 3 - t.length))))
            }
            set(e, t, n) {
                return e.setMilliseconds(n),
                e
            }
            incompatibleTokens = ["t", "T"]
        }
        t.FractionOfSecondParser = i
    },
    45803: function(e, t, n) {
        "use strict";
        t.Hour0To11Parser = void 0;
        var a = n(18583)
          , r = n(56167)
          , i = n(24871);
        class o extends r.Parser {
            priority = 70;
            parse(e, t, n) {
                switch (t) {
                case "K":
                    return (0,
                    i.parseNumericPattern)(a.numericPatterns.hour11h, e);
                case "Ko":
                    return n.ordinalNumber(e, {
                        unit: "hour"
                    });
                default:
                    return (0,
                    i.parseNDigits)(t.length, e)
                }
            }
            validate(e, t) {
                return t >= 0 && t <= 11
            }
            set(e, t, n) {
                return e.getHours() >= 12 && n < 12 ? e.setHours(n + 12, 0, 0, 0) : e.setHours(n, 0, 0, 0),
                e
            }
            incompatibleTokens = ["h", "H", "k", "t", "T"]
        }
        t.Hour0To11Parser = o
    },
    63322: function(e, t, n) {
        "use strict";
        t.Hour0to23Parser = void 0;
        var a = n(18583)
          , r = n(56167)
          , i = n(24871);
        class o extends r.Parser {
            priority = 70;
            parse(e, t, n) {
                switch (t) {
                case "H":
                    return (0,
                    i.parseNumericPattern)(a.numericPatterns.hour23h, e);
                case "Ho":
                    return n.ordinalNumber(e, {
                        unit: "hour"
                    });
                default:
                    return (0,
                    i.parseNDigits)(t.length, e)
                }
            }
            validate(e, t) {
                return t >= 0 && t <= 23
            }
            set(e, t, n) {
                return e.setHours(n, 0, 0, 0),
                e
            }
            incompatibleTokens = ["a", "b", "h", "K", "k", "t", "T"]
        }
        t.Hour0to23Parser = o
    },
    5068: function(e, t, n) {
        "use strict";
        t.Hour1To24Parser = void 0;
        var a = n(18583)
          , r = n(56167)
          , i = n(24871);
        class o extends r.Parser {
            priority = 70;
            parse(e, t, n) {
                switch (t) {
                case "k":
                    return (0,
                    i.parseNumericPattern)(a.numericPatterns.hour24h, e);
                case "ko":
                    return n.ordinalNumber(e, {
                        unit: "hour"
                    });
                default:
                    return (0,
                    i.parseNDigits)(t.length, e)
                }
            }
            validate(e, t) {
                return t >= 1 && t <= 24
            }
            set(e, t, n) {
                const a = n <= 24 ? n % 24 : n;
                return e.setHours(a, 0, 0, 0),
                e
            }
            incompatibleTokens = ["a", "b", "h", "H", "K", "t", "T"]
        }
        t.Hour1To24Parser = o
    },
    88549: function(e, t, n) {
        "use strict";
        t.Hour1to12Parser = void 0;
        var a = n(18583)
          , r = n(56167)
          , i = n(24871);
        class o extends r.Parser {
            priority = 70;
            parse(e, t, n) {
                switch (t) {
                case "h":
                    return (0,
                    i.parseNumericPattern)(a.numericPatterns.hour12h, e);
                case "ho":
                    return n.ordinalNumber(e, {
                        unit: "hour"
                    });
                default:
                    return (0,
                    i.parseNDigits)(t.length, e)
                }
            }
            validate(e, t) {
                return t >= 1 && t <= 12
            }
            set(e, t, n) {
                const a = e.getHours() >= 12;
                return a && n < 12 ? e.setHours(n + 12, 0, 0, 0) : a || 12 !== n ? e.setHours(n, 0, 0, 0) : e.setHours(0, 0, 0, 0),
                e
            }
            incompatibleTokens = ["H", "K", "k", "t", "T"]
        }
        t.Hour1to12Parser = o
    },
    58015: function(e, t, n) {
        "use strict";
        t.ISODayParser = void 0;
        var a = n(2892)
          , r = n(56167)
          , i = n(24871);
        class o extends r.Parser {
            priority = 90;
            parse(e, t, n) {
                const a = e=>0 === e ? 7 : e;
                switch (t) {
                case "i":
                case "ii":
                    return (0,
                    i.parseNDigits)(t.length, e);
                case "io":
                    return n.ordinalNumber(e, {
                        unit: "day"
                    });
                case "iii":
                    return (0,
                    i.mapValue)(n.day(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "short",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "narrow",
                        context: "formatting"
                    }), a);
                case "iiiii":
                    return (0,
                    i.mapValue)(n.day(e, {
                        width: "narrow",
                        context: "formatting"
                    }), a);
                case "iiiiii":
                    return (0,
                    i.mapValue)(n.day(e, {
                        width: "short",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "narrow",
                        context: "formatting"
                    }), a);
                default:
                    return (0,
                    i.mapValue)(n.day(e, {
                        width: "wide",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "short",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "narrow",
                        context: "formatting"
                    }), a)
                }
            }
            validate(e, t) {
                return t >= 1 && t <= 7
            }
            set(e, t, n) {
                return (e = (0,
                a.setISODay)(e, n)).setHours(0, 0, 0, 0),
                e
            }
            incompatibleTokens = ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "E", "e", "c", "t", "T"]
        }
        t.ISODayParser = o
    },
    50984: function(e, t, n) {
        "use strict";
        t.ISOTimezoneParser = void 0;
        var a = n(81516)
          , r = n(62535)
          , i = n(18583)
          , o = n(56167)
          , s = n(24871);
        class u extends o.Parser {
            priority = 10;
            parse(e, t) {
                switch (t) {
                case "x":
                    return (0,
                    s.parseTimezonePattern)(i.timezonePatterns.basicOptionalMinutes, e);
                case "xx":
                    return (0,
                    s.parseTimezonePattern)(i.timezonePatterns.basic, e);
                case "xxxx":
                    return (0,
                    s.parseTimezonePattern)(i.timezonePatterns.basicOptionalSeconds, e);
                case "xxxxx":
                    return (0,
                    s.parseTimezonePattern)(i.timezonePatterns.extendedOptionalSeconds, e);
                default:
                    return (0,
                    s.parseTimezonePattern)(i.timezonePatterns.extended, e)
                }
            }
            set(e, t, n) {
                return t.timestampIsSet ? e : (0,
                a.constructFrom)(e, e.getTime() - (0,
                r.getTimezoneOffsetInMilliseconds)(e) - n)
            }
            incompatibleTokens = ["t", "T", "X"]
        }
        t.ISOTimezoneParser = u
    },
    24782: function(e, t, n) {
        "use strict";
        t.ISOTimezoneWithZParser = void 0;
        var a = n(81516)
          , r = n(62535)
          , i = n(18583)
          , o = n(56167)
          , s = n(24871);
        class u extends o.Parser {
            priority = 10;
            parse(e, t) {
                switch (t) {
                case "X":
                    return (0,
                    s.parseTimezonePattern)(i.timezonePatterns.basicOptionalMinutes, e);
                case "XX":
                    return (0,
                    s.parseTimezonePattern)(i.timezonePatterns.basic, e);
                case "XXXX":
                    return (0,
                    s.parseTimezonePattern)(i.timezonePatterns.basicOptionalSeconds, e);
                case "XXXXX":
                    return (0,
                    s.parseTimezonePattern)(i.timezonePatterns.extendedOptionalSeconds, e);
                default:
                    return (0,
                    s.parseTimezonePattern)(i.timezonePatterns.extended, e)
                }
            }
            set(e, t, n) {
                return t.timestampIsSet ? e : (0,
                a.constructFrom)(e, e.getTime() - (0,
                r.getTimezoneOffsetInMilliseconds)(e) - n)
            }
            incompatibleTokens = ["t", "T", "x"]
        }
        t.ISOTimezoneWithZParser = u
    },
    85563: function(e, t, n) {
        "use strict";
        t.ISOWeekParser = void 0;
        var a = n(7472)
          , r = n(20419)
          , i = n(18583)
          , o = n(56167)
          , s = n(24871);
        class u extends o.Parser {
            priority = 100;
            parse(e, t, n) {
                switch (t) {
                case "I":
                    return (0,
                    s.parseNumericPattern)(i.numericPatterns.week, e);
                case "Io":
                    return n.ordinalNumber(e, {
                        unit: "week"
                    });
                default:
                    return (0,
                    s.parseNDigits)(t.length, e)
                }
            }
            validate(e, t) {
                return t >= 1 && t <= 53
            }
            set(e, t, n) {
                return (0,
                r.startOfISOWeek)((0,
                a.setISOWeek)(e, n))
            }
            incompatibleTokens = ["y", "Y", "u", "q", "Q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]
        }
        t.ISOWeekParser = u
    },
    42010: function(e, t, n) {
        "use strict";
        t.ISOWeekYearParser = void 0;
        var a = n(20419)
          , r = n(81516)
          , i = n(56167)
          , o = n(24871);
        class s extends i.Parser {
            priority = 130;
            parse(e, t) {
                return "R" === t ? (0,
                o.parseNDigitsSigned)(4, e) : (0,
                o.parseNDigitsSigned)(t.length, e)
            }
            set(e, t, n) {
                const i = (0,
                r.constructFrom)(e, 0);
                return i.setFullYear(n, 0, 4),
                i.setHours(0, 0, 0, 0),
                (0,
                a.startOfISOWeek)(i)
            }
            incompatibleTokens = ["G", "y", "Y", "u", "Q", "q", "M", "L", "w", "d", "D", "e", "c", "t", "T"]
        }
        t.ISOWeekYearParser = s
    },
    76833: function(e, t, n) {
        "use strict";
        t.LocalDayParser = void 0;
        var a = n(40964)
          , r = n(56167)
          , i = n(24871);
        class o extends r.Parser {
            priority = 90;
            parse(e, t, n, a) {
                const r = e=>{
                    const t = 7 * Math.floor((e - 1) / 7);
                    return (e + a.weekStartsOn + 6) % 7 + t
                }
                ;
                switch (t) {
                case "e":
                case "ee":
                    return (0,
                    i.mapValue)((0,
                    i.parseNDigits)(t.length, e), r);
                case "eo":
                    return (0,
                    i.mapValue)(n.ordinalNumber(e, {
                        unit: "day"
                    }), r);
                case "eee":
                    return n.day(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "short",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                case "eeeee":
                    return n.day(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                case "eeeeee":
                    return n.day(e, {
                        width: "short",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                default:
                    return n.day(e, {
                        width: "wide",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "short",
                        context: "formatting"
                    }) || n.day(e, {
                        width: "narrow",
                        context: "formatting"
                    })
                }
            }
            validate(e, t) {
                return t >= 0 && t <= 6
            }
            set(e, t, n, r) {
                return (e = (0,
                a.setDay)(e, n, r)).setHours(0, 0, 0, 0),
                e
            }
            incompatibleTokens = ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "c", "t", "T"]
        }
        t.LocalDayParser = o
    },
    10977: function(e, t, n) {
        "use strict";
        t.LocalWeekParser = void 0;
        var a = n(10233)
          , r = n(36128)
          , i = n(18583)
          , o = n(56167)
          , s = n(24871);
        class u extends o.Parser {
            priority = 100;
            parse(e, t, n) {
                switch (t) {
                case "w":
                    return (0,
                    s.parseNumericPattern)(i.numericPatterns.week, e);
                case "wo":
                    return n.ordinalNumber(e, {
                        unit: "week"
                    });
                default:
                    return (0,
                    s.parseNDigits)(t.length, e)
                }
            }
            validate(e, t) {
                return t >= 1 && t <= 53
            }
            set(e, t, n, i) {
                return (0,
                r.startOfWeek)((0,
                a.setWeek)(e, n, i), i)
            }
            incompatibleTokens = ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "i", "t", "T"]
        }
        t.LocalWeekParser = u
    },
    33476: function(e, t, n) {
        "use strict";
        t.LocalWeekYearParser = void 0;
        var a = n(9804)
          , r = n(36128)
          , i = n(56167)
          , o = n(24871);
        class s extends i.Parser {
            priority = 130;
            parse(e, t, n) {
                const a = e=>({
                    year: e,
                    isTwoDigitYear: "YY" === t
                });
                switch (t) {
                case "Y":
                    return (0,
                    o.mapValue)((0,
                    o.parseNDigits)(4, e), a);
                case "Yo":
                    return (0,
                    o.mapValue)(n.ordinalNumber(e, {
                        unit: "year"
                    }), a);
                default:
                    return (0,
                    o.mapValue)((0,
                    o.parseNDigits)(t.length, e), a)
                }
            }
            validate(e, t) {
                return t.isTwoDigitYear || t.year > 0
            }
            set(e, t, n, i) {
                const s = (0,
                a.getWeekYear)(e, i);
                if (n.isTwoDigitYear) {
                    const t = (0,
                    o.normalizeTwoDigitYear)(n.year, s);
                    return e.setFullYear(t, 0, i.firstWeekContainsDate),
                    e.setHours(0, 0, 0, 0),
                    (0,
                    r.startOfWeek)(e, i)
                }
                const u = "era"in t && 1 !== t.era ? 1 - n.year : n.year;
                return e.setFullYear(u, 0, i.firstWeekContainsDate),
                e.setHours(0, 0, 0, 0),
                (0,
                r.startOfWeek)(e, i)
            }
            incompatibleTokens = ["y", "R", "u", "Q", "q", "M", "L", "I", "d", "D", "i", "t", "T"]
        }
        t.LocalWeekYearParser = s
    },
    15610: function(e, t, n) {
        "use strict";
        t.MinuteParser = void 0;
        var a = n(18583)
          , r = n(56167)
          , i = n(24871);
        class o extends r.Parser {
            priority = 60;
            parse(e, t, n) {
                switch (t) {
                case "m":
                    return (0,
                    i.parseNumericPattern)(a.numericPatterns.minute, e);
                case "mo":
                    return n.ordinalNumber(e, {
                        unit: "minute"
                    });
                default:
                    return (0,
                    i.parseNDigits)(t.length, e)
                }
            }
            validate(e, t) {
                return t >= 0 && t <= 59
            }
            set(e, t, n) {
                return e.setMinutes(n, 0, 0),
                e
            }
            incompatibleTokens = ["t", "T"]
        }
        t.MinuteParser = o
    },
    17e3: function(e, t, n) {
        "use strict";
        t.MonthParser = void 0;
        var a = n(18583)
          , r = n(56167)
          , i = n(24871);
        class o extends r.Parser {
            incompatibleTokens = ["Y", "R", "q", "Q", "L", "w", "I", "D", "i", "e", "c", "t", "T"];
            priority = 110;
            parse(e, t, n) {
                const r = e=>e - 1;
                switch (t) {
                case "M":
                    return (0,
                    i.mapValue)((0,
                    i.parseNumericPattern)(a.numericPatterns.month, e), r);
                case "MM":
                    return (0,
                    i.mapValue)((0,
                    i.parseNDigits)(2, e), r);
                case "Mo":
                    return (0,
                    i.mapValue)(n.ordinalNumber(e, {
                        unit: "month"
                    }), r);
                case "MMM":
                    return n.month(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.month(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                case "MMMMM":
                    return n.month(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                default:
                    return n.month(e, {
                        width: "wide",
                        context: "formatting"
                    }) || n.month(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.month(e, {
                        width: "narrow",
                        context: "formatting"
                    })
                }
            }
            validate(e, t) {
                return t >= 0 && t <= 11
            }
            set(e, t, n) {
                return e.setMonth(n, 1),
                e.setHours(0, 0, 0, 0),
                e
            }
        }
        t.MonthParser = o
    },
    50382: function(e, t, n) {
        "use strict";
        t.QuarterParser = void 0;
        var a = n(56167)
          , r = n(24871);
        class i extends a.Parser {
            priority = 120;
            parse(e, t, n) {
                switch (t) {
                case "Q":
                case "QQ":
                    return (0,
                    r.parseNDigits)(t.length, e);
                case "Qo":
                    return n.ordinalNumber(e, {
                        unit: "quarter"
                    });
                case "QQQ":
                    return n.quarter(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.quarter(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                case "QQQQQ":
                    return n.quarter(e, {
                        width: "narrow",
                        context: "formatting"
                    });
                default:
                    return n.quarter(e, {
                        width: "wide",
                        context: "formatting"
                    }) || n.quarter(e, {
                        width: "abbreviated",
                        context: "formatting"
                    }) || n.quarter(e, {
                        width: "narrow",
                        context: "formatting"
                    })
                }
            }
            validate(e, t) {
                return t >= 1 && t <= 4
            }
            set(e, t, n) {
                return e.setMonth(3 * (n - 1), 1),
                e.setHours(0, 0, 0, 0),
                e
            }
            incompatibleTokens = ["Y", "R", "q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]
        }
        t.QuarterParser = i
    },
    28458: function(e, t, n) {
        "use strict";
        t.SecondParser = void 0;
        var a = n(18583)
          , r = n(56167)
          , i = n(24871);
        class o extends r.Parser {
            priority = 50;
            parse(e, t, n) {
                switch (t) {
                case "s":
                    return (0,
                    i.parseNumericPattern)(a.numericPatterns.second, e);
                case "so":
                    return n.ordinalNumber(e, {
                        unit: "second"
                    });
                default:
                    return (0,
                    i.parseNDigits)(t.length, e)
                }
            }
            validate(e, t) {
                return t >= 0 && t <= 59
            }
            set(e, t, n) {
                return e.setSeconds(n, 0),
                e
            }
            incompatibleTokens = ["t", "T"]
        }
        t.SecondParser = o
    },
    15402: function(e, t, n) {
        "use strict";
        t.StandAloneLocalDayParser = void 0;
        var a = n(40964)
          , r = n(56167)
          , i = n(24871);
        class o extends r.Parser {
            priority = 90;
            parse(e, t, n, a) {
                const r = e=>{
                    const t = 7 * Math.floor((e - 1) / 7);
                    return (e + a.weekStartsOn + 6) % 7 + t
                }
                ;
                switch (t) {
                case "c":
                case "cc":
                    return (0,
                    i.mapValue)((0,
                    i.parseNDigits)(t.length, e), r);
                case "co":
                    return (0,
                    i.mapValue)(n.ordinalNumber(e, {
                        unit: "day"
                    }), r);
                case "ccc":
                    return n.day(e, {
                        width: "abbreviated",
                        context: "standalone"
                    }) || n.day(e, {
                        width: "short",
                        context: "standalone"
                    }) || n.day(e, {
                        width: "narrow",
                        context: "standalone"
                    });
                case "ccccc":
                    return n.day(e, {
                        width: "narrow",
                        context: "standalone"
                    });
                case "cccccc":
                    return n.day(e, {
                        width: "short",
                        context: "standalone"
                    }) || n.day(e, {
                        width: "narrow",
                        context: "standalone"
                    });
                default:
                    return n.day(e, {
                        width: "wide",
                        context: "standalone"
                    }) || n.day(e, {
                        width: "abbreviated",
                        context: "standalone"
                    }) || n.day(e, {
                        width: "short",
                        context: "standalone"
                    }) || n.day(e, {
                        width: "narrow",
                        context: "standalone"
                    })
                }
            }
            validate(e, t) {
                return t >= 0 && t <= 6
            }
            set(e, t, n, r) {
                return (e = (0,
                a.setDay)(e, n, r)).setHours(0, 0, 0, 0),
                e
            }
            incompatibleTokens = ["y", "R", "u", "q", "Q", "M", "L", "I", "d", "D", "E", "i", "e", "t", "T"]
        }
        t.StandAloneLocalDayParser = o
    },
    51505: function(e, t, n) {
        "use strict";
        t.StandAloneMonthParser = void 0;
        var a = n(18583)
          , r = n(56167)
          , i = n(24871);
        class o extends r.Parser {
            priority = 110;
            parse(e, t, n) {
                const r = e=>e - 1;
                switch (t) {
                case "L":
                    return (0,
                    i.mapValue)((0,
                    i.parseNumericPattern)(a.numericPatterns.month, e), r);
                case "LL":
                    return (0,
                    i.mapValue)((0,
                    i.parseNDigits)(2, e), r);
                case "Lo":
                    return (0,
                    i.mapValue)(n.ordinalNumber(e, {
                        unit: "month"
                    }), r);
                case "LLL":
                    return n.month(e, {
                        width: "abbreviated",
                        context: "standalone"
                    }) || n.month(e, {
                        width: "narrow",
                        context: "standalone"
                    });
                case "LLLLL":
                    return n.month(e, {
                        width: "narrow",
                        context: "standalone"
                    });
                default:
                    return n.month(e, {
                        width: "wide",
                        context: "standalone"
                    }) || n.month(e, {
                        width: "abbreviated",
                        context: "standalone"
                    }) || n.month(e, {
                        width: "narrow",
                        context: "standalone"
                    })
                }
            }
            validate(e, t) {
                return t >= 0 && t <= 11
            }
            set(e, t, n) {
                return e.setMonth(n, 1),
                e.setHours(0, 0, 0, 0),
                e
            }
            incompatibleTokens = ["Y", "R", "q", "Q", "M", "w", "I", "D", "i", "e", "c", "t", "T"]
        }
        t.StandAloneMonthParser = o
    },
    17211: function(e, t, n) {
        "use strict";
        t.StandAloneQuarterParser = void 0;
        var a = n(56167)
          , r = n(24871);
        class i extends a.Parser {
            priority = 120;
            parse(e, t, n) {
                switch (t) {
                case "q":
                case "qq":
                    return (0,
                    r.parseNDigits)(t.length, e);
                case "qo":
                    return n.ordinalNumber(e, {
                        unit: "quarter"
                    });
                case "qqq":
                    return n.quarter(e, {
                        width: "abbreviated",
                        context: "standalone"
                    }) || n.quarter(e, {
                        width: "narrow",
                        context: "standalone"
                    });
                case "qqqqq":
                    return n.quarter(e, {
                        width: "narrow",
                        context: "standalone"
                    });
                default:
                    return n.quarter(e, {
                        width: "wide",
                        context: "standalone"
                    }) || n.quarter(e, {
                        width: "abbreviated",
                        context: "standalone"
                    }) || n.quarter(e, {
                        width: "narrow",
                        context: "standalone"
                    })
                }
            }
            validate(e, t) {
                return t >= 1 && t <= 4
            }
            set(e, t, n) {
                return e.setMonth(3 * (n - 1), 1),
                e.setHours(0, 0, 0, 0),
                e
            }
            incompatibleTokens = ["Y", "R", "Q", "M", "L", "w", "I", "d", "D", "i", "e", "c", "t", "T"]
        }
        t.StandAloneQuarterParser = i
    },
    85680: function(e, t, n) {
        "use strict";
        t.TimestampMillisecondsParser = void 0;
        var a = n(81516)
          , r = n(56167)
          , i = n(24871);
        class o extends r.Parser {
            priority = 20;
            parse(e) {
                return (0,
                i.parseAnyDigitsSigned)(e)
            }
            set(e, t, n) {
                return [(0,
                a.constructFrom)(e, n), {
                    timestampIsSet: !0
                }]
            }
            incompatibleTokens = "*"
        }
        t.TimestampMillisecondsParser = o
    },
    78959: function(e, t, n) {
        "use strict";
        t.TimestampSecondsParser = void 0;
        var a = n(81516)
          , r = n(56167)
          , i = n(24871);
        class o extends r.Parser {
            priority = 40;
            parse(e) {
                return (0,
                i.parseAnyDigitsSigned)(e)
            }
            set(e, t, n) {
                return [(0,
                a.constructFrom)(e, 1e3 * n), {
                    timestampIsSet: !0
                }]
            }
            incompatibleTokens = "*"
        }
        t.TimestampSecondsParser = o
    },
    45647: function(e, t, n) {
        "use strict";
        t.YearParser = void 0;
        var a = n(56167)
          , r = n(24871);
        class i extends a.Parser {
            priority = 130;
            incompatibleTokens = ["Y", "R", "u", "w", "I", "i", "e", "c", "t", "T"];
            parse(e, t, n) {
                const a = e=>({
                    year: e,
                    isTwoDigitYear: "yy" === t
                });
                switch (t) {
                case "y":
                    return (0,
                    r.mapValue)((0,
                    r.parseNDigits)(4, e), a);
                case "yo":
                    return (0,
                    r.mapValue)(n.ordinalNumber(e, {
                        unit: "year"
                    }), a);
                default:
                    return (0,
                    r.mapValue)((0,
                    r.parseNDigits)(t.length, e), a)
                }
            }
            validate(e, t) {
                return t.isTwoDigitYear || t.year > 0
            }
            set(e, t, n) {
                const a = e.getFullYear();
                if (n.isTwoDigitYear) {
                    const t = (0,
                    r.normalizeTwoDigitYear)(n.year, a);
                    return e.setFullYear(t, 0, 1),
                    e.setHours(0, 0, 0, 0),
                    e
                }
                const i = "era"in t && 1 !== t.era ? 1 - n.year : n.year;
                return e.setFullYear(i, 0, 1),
                e.setHours(0, 0, 0, 0),
                e
            }
        }
        t.YearParser = i
    },
    24871: function(e, t, n) {
        "use strict";
        t.dayPeriodEnumToHours = function(e) {
            switch (e) {
            case "morning":
                return 4;
            case "evening":
                return 17;
            case "pm":
            case "noon":
            case "afternoon":
                return 12;
            default:
                return 0
            }
        }
        ,
        t.isLeapYearIndex = function(e) {
            return e % 400 === 0 || e % 4 === 0 && e % 100 !== 0
        }
        ,
        t.mapValue = function(e, t) {
            if (!e)
                return e;
            return {
                value: t(e.value),
                rest: e.rest
            }
        }
        ,
        t.normalizeTwoDigitYear = function(e, t) {
            const n = t > 0
              , a = n ? t : 1 - t;
            let r;
            if (a <= 50)
                r = e || 100;
            else {
                const t = a + 50;
                r = e + 100 * Math.trunc(t / 100) - (e >= t % 100 ? 100 : 0)
            }
            return n ? r : 1 - r
        }
        ,
        t.parseAnyDigitsSigned = function(e) {
            return i(r.numericPatterns.anyDigitsSigned, e)
        }
        ,
        t.parseNDigits = function(e, t) {
            switch (e) {
            case 1:
                return i(r.numericPatterns.singleDigit, t);
            case 2:
                return i(r.numericPatterns.twoDigits, t);
            case 3:
                return i(r.numericPatterns.threeDigits, t);
            case 4:
                return i(r.numericPatterns.fourDigits, t);
            default:
                return i(new RegExp("^\\d{1," + e + "}"), t)
            }
        }
        ,
        t.parseNDigitsSigned = function(e, t) {
            switch (e) {
            case 1:
                return i(r.numericPatterns.singleDigitSigned, t);
            case 2:
                return i(r.numericPatterns.twoDigitsSigned, t);
            case 3:
                return i(r.numericPatterns.threeDigitsSigned, t);
            case 4:
                return i(r.numericPatterns.fourDigitsSigned, t);
            default:
                return i(new RegExp("^-?\\d{1," + e + "}"), t)
            }
        }
        ,
        t.parseNumericPattern = i,
        t.parseTimezonePattern = function(e, t) {
            const n = t.match(e);
            if (!n)
                return null;
            if ("Z" === n[0])
                return {
                    value: 0,
                    rest: t.slice(1)
                };
            const r = "+" === n[1] ? 1 : -1
              , i = n[2] ? parseInt(n[2], 10) : 0
              , o = n[3] ? parseInt(n[3], 10) : 0
              , s = n[5] ? parseInt(n[5], 10) : 0;
            return {
                value: r * (i * a.millisecondsInHour + o * a.millisecondsInMinute + s * a.millisecondsInSecond),
                rest: t.slice(n[0].length)
            }
        }
        ;
        var a = n(69992)
          , r = n(18583);
        function i(e, t) {
            const n = t.match(e);
            return n ? {
                value: parseInt(n[0], 10),
                rest: t.slice(n[0].length)
            } : null
        }
    },
    4793: function(e, t, n) {
        "use strict";
        t.parseISO = function(e, t) {
            const n = t?.additionalDigits ?? 2
              , m = function(e) {
                const t = {}
                  , n = e.split(r.dateTimeDelimiter);
                let a;
                if (n.length > 2)
                    return t;
                /:/.test(n[0]) ? a = n[0] : (t.date = n[0],
                a = n[1],
                r.timeZoneDelimiter.test(t.date) && (t.date = e.split(r.timeZoneDelimiter)[0],
                a = e.substr(t.date.length, e.length)));
                if (a) {
                    const e = r.timezone.exec(a);
                    e ? (t.time = a.replace(e[1], ""),
                    t.timezone = e[1]) : t.time = a
                }
                return t
            }(e);
            let h;
            if (m.date) {
                const e = function(e, t) {
                    const n = new RegExp("^(?:(\\d{4}|[+-]\\d{" + (4 + t) + "})|(\\d{2}|[+-]\\d{" + (2 + t) + "})$)")
                      , a = e.match(n);
                    if (!a)
                        return {
                            year: NaN,
                            restDateString: ""
                        };
                    const r = a[1] ? parseInt(a[1]) : null
                      , i = a[2] ? parseInt(a[2]) : null;
                    return {
                        year: null === i ? r : 100 * i,
                        restDateString: e.slice((a[1] || a[2]).length)
                    }
                }(m.date, n);
                h = function(e, t) {
                    if (null === t)
                        return new Date(NaN);
                    const n = e.match(i);
                    if (!n)
                        return new Date(NaN);
                    const a = !!n[4]
                      , r = u(n[1])
                      , o = u(n[2]) - 1
                      , s = u(n[3])
                      , d = u(n[4])
                      , m = u(n[5]) - 1;
                    if (a)
                        return function(e, t, n) {
                            return t >= 1 && t <= 53 && n >= 0 && n <= 6
                        }(0, d, m) ? function(e, t, n) {
                            const a = new Date(0);
                            a.setUTCFullYear(e, 0, 4);
                            const r = a.getUTCDay() || 7
                              , i = 7 * (t - 1) + n + 1 - r;
                            return a.setUTCDate(a.getUTCDate() + i),
                            a
                        }(t, d, m) : new Date(NaN);
                    {
                        const e = new Date(0);
                        return function(e, t, n) {
                            return t >= 0 && t <= 11 && n >= 1 && n <= (l[t] || (c(e) ? 29 : 28))
                        }(t, o, s) && function(e, t) {
                            return t >= 1 && t <= (c(e) ? 366 : 365)
                        }(t, r) ? (e.setUTCFullYear(t, o, Math.max(r, s)),
                        e) : new Date(NaN)
                    }
                }(e.restDateString, e.year)
            }
            if (!h || isNaN(h.getTime()))
                return new Date(NaN);
            const f = h.getTime();
            let p, g = 0;
            if (m.time && (g = function(e) {
                const t = e.match(o);
                if (!t)
                    return NaN;
                const n = d(t[1])
                  , r = d(t[2])
                  , i = d(t[3]);
                if (!function(e, t, n) {
                    if (24 === e)
                        return 0 === t && 0 === n;
                    return n >= 0 && n < 60 && t >= 0 && t < 60 && e >= 0 && e < 25
                }(n, r, i))
                    return NaN;
                return n * a.millisecondsInHour + r * a.millisecondsInMinute + 1e3 * i
            }(m.time),
            isNaN(g)))
                return new Date(NaN);
            if (!m.timezone) {
                const e = new Date(f + g)
                  , t = new Date(0);
                return t.setFullYear(e.getUTCFullYear(), e.getUTCMonth(), e.getUTCDate()),
                t.setHours(e.getUTCHours(), e.getUTCMinutes(), e.getUTCSeconds(), e.getUTCMilliseconds()),
                t
            }
            if (p = function(e) {
                if ("Z" === e)
                    return 0;
                const t = e.match(s);
                if (!t)
                    return 0;
                const n = "+" === t[1] ? -1 : 1
                  , r = parseInt(t[2])
                  , i = t[3] && parseInt(t[3]) || 0;
                if (!function(e, t) {
                    return t >= 0 && t <= 59
                }(0, i))
                    return NaN;
                return n * (r * a.millisecondsInHour + i * a.millisecondsInMinute)
            }(m.timezone),
            isNaN(p))
                return new Date(NaN);
            return new Date(f + g + p)
        }
        ;
        var a = n(69992);
        const r = {
            dateTimeDelimiter: /[T ]/,
            timeZoneDelimiter: /[Z ]/i,
            timezone: /([Z+-].*)$/
        }
          , i = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/
          , o = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/
          , s = /^([+-])(\d{2})(?::?(\d{2}))?$/;
        function u(e) {
            return e ? parseInt(e) : 1
        }
        function d(e) {
            return e && parseFloat(e.replace(",", ".")) || 0
        }
        const l = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
        function c(e) {
            return e % 400 === 0 || e % 4 === 0 && e % 100 !== 0
        }
    },
    75245: function(e, t, n) {
        "use strict";
        t.set = function(e, t) {
            let n = (0,
            i.toDate)(e);
            if (isNaN(+n))
                return (0,
                a.constructFrom)(e, NaN);
            null != t.year && n.setFullYear(t.year);
            null != t.month && (n = (0,
            r.setMonth)(n, t.month));
            null != t.date && n.setDate(t.date);
            null != t.hours && n.setHours(t.hours);
            null != t.minutes && n.setMinutes(t.minutes);
            null != t.seconds && n.setSeconds(t.seconds);
            null != t.milliseconds && n.setMilliseconds(t.milliseconds);
            return n
        }
        ;
        var a = n(81516)
          , r = n(41819)
          , i = n(34032)
    },
    40964: function(e, t, n) {
        "use strict";
        t.setDay = function(e, t, n) {
            const o = (0,
            i.getDefaultOptions)()
              , s = n?.weekStartsOn ?? n?.locale?.options?.weekStartsOn ?? o.weekStartsOn ?? o.locale?.options?.weekStartsOn ?? 0
              , u = (0,
            r.toDate)(e)
              , d = u.getDay()
              , l = (t % 7 + 7) % 7
              , c = 7 - s
              , m = t < 0 || t > 6 ? t - (d + c) % 7 : (l + c) % 7 - (d + c) % 7;
            return (0,
            a.addDays)(u, m)
        }
        ;
        var a = n(27761)
          , r = n(34032)
          , i = n(20445)
    },
    34386: function(e, t, n) {
        "use strict";
        t.setHours = function(e, t) {
            const n = (0,
            a.toDate)(e);
            return n.setHours(t),
            n
        }
        ;
        var a = n(34032)
    },
    2892: function(e, t, n) {
        "use strict";
        t.setISODay = function(e, t) {
            const n = (0,
            i.toDate)(e)
              , o = (0,
            r.getISODay)(n)
              , s = t - o;
            return (0,
            a.addDays)(n, s)
        }
        ;
        var a = n(27761)
          , r = n(19272)
          , i = n(34032)
    },
    7472: function(e, t, n) {
        "use strict";
        t.setISOWeek = function(e, t) {
            const n = (0,
            r.toDate)(e)
              , i = (0,
            a.getISOWeek)(n) - t;
            return n.setDate(n.getDate() - 7 * i),
            n
        }
        ;
        var a = n(29332)
          , r = n(34032)
    },
    28772: function(e, t, n) {
        "use strict";
        t.setMinutes = function(e, t) {
            const n = (0,
            a.toDate)(e);
            return n.setMinutes(t),
            n
        }
        ;
        var a = n(34032)
    },
    41819: function(e, t, n) {
        "use strict";
        t.setMonth = function(e, t) {
            const n = (0,
            i.toDate)(e)
              , o = n.getFullYear()
              , s = n.getDate()
              , u = (0,
            a.constructFrom)(e, 0);
            u.setFullYear(o, t, 15),
            u.setHours(0, 0, 0, 0);
            const d = (0,
            r.getDaysInMonth)(u);
            return n.setMonth(t, Math.min(s, d)),
            n
        }
        ;
        var a = n(81516)
          , r = n(46087)
          , i = n(34032)
    },
    80093: function(e, t, n) {
        "use strict";
        t.setQuarter = function(e, t) {
            const n = (0,
            r.toDate)(e)
              , i = Math.trunc(n.getMonth() / 3) + 1
              , o = t - i;
            return (0,
            a.setMonth)(n, n.getMonth() + 3 * o)
        }
        ;
        var a = n(41819)
          , r = n(34032)
    },
    80356: function(e, t, n) {
        "use strict";
        t.setSeconds = function(e, t) {
            const n = (0,
            a.toDate)(e);
            return n.setSeconds(t),
            n
        }
        ;
        var a = n(34032)
    },
    10233: function(e, t, n) {
        "use strict";
        t.setWeek = function(e, t, n) {
            const i = (0,
            r.toDate)(e)
              , o = (0,
            a.getWeek)(i, n) - t;
            return i.setDate(i.getDate() - 7 * o),
            i
        }
        ;
        var a = n(63613)
          , r = n(34032)
    },
    46908: function(e, t, n) {
        "use strict";
        t.setYear = function(e, t) {
            const n = (0,
            r.toDate)(e);
            if (isNaN(+n))
                return (0,
                a.constructFrom)(e, NaN);
            return n.setFullYear(t),
            n
        }
        ;
        var a = n(81516)
          , r = n(34032)
    },
    71228: function(e, t, n) {
        "use strict";
        t.startOfDay = function(e) {
            const t = (0,
            a.toDate)(e);
            return t.setHours(0, 0, 0, 0),
            t
        }
        ;
        var a = n(34032)
    },
    20419: function(e, t, n) {
        "use strict";
        t.startOfISOWeek = function(e) {
            return (0,
            a.startOfWeek)(e, {
                weekStartsOn: 1
            })
        }
        ;
        var a = n(36128)
    },
    91046: function(e, t, n) {
        "use strict";
        t.startOfISOWeekYear = function(e) {
            const t = (0,
            a.getISOWeekYear)(e)
              , n = (0,
            i.constructFrom)(e, 0);
            return n.setFullYear(t, 0, 4),
            n.setHours(0, 0, 0, 0),
            (0,
            r.startOfISOWeek)(n)
        }
        ;
        var a = n(6253)
          , r = n(20419)
          , i = n(81516)
    },
    39852: function(e, t, n) {
        "use strict";
        t.startOfMonth = function(e) {
            const t = (0,
            a.toDate)(e);
            return t.setDate(1),
            t.setHours(0, 0, 0, 0),
            t
        }
        ;
        var a = n(34032)
    },
    80066: function(e, t, n) {
        "use strict";
        t.startOfQuarter = function(e) {
            const t = (0,
            a.toDate)(e)
              , n = t.getMonth()
              , r = n - n % 3;
            return t.setMonth(r, 1),
            t.setHours(0, 0, 0, 0),
            t
        }
        ;
        var a = n(34032)
    },
    36128: function(e, t, n) {
        "use strict";
        t.startOfWeek = function(e, t) {
            const n = (0,
            r.getDefaultOptions)()
              , i = t?.weekStartsOn ?? t?.locale?.options?.weekStartsOn ?? n.weekStartsOn ?? n.locale?.options?.weekStartsOn ?? 0
              , o = (0,
            a.toDate)(e)
              , s = o.getDay()
              , u = (s < i ? 7 : 0) + s - i;
            return o.setDate(o.getDate() - u),
            o.setHours(0, 0, 0, 0),
            o
        }
        ;
        var a = n(34032)
          , r = n(20445)
    },
    34241: function(e, t, n) {
        "use strict";
        t.startOfWeekYear = function(e, t) {
            const n = (0,
            o.getDefaultOptions)()
              , s = t?.firstWeekContainsDate ?? t?.locale?.options?.firstWeekContainsDate ?? n.firstWeekContainsDate ?? n.locale?.options?.firstWeekContainsDate ?? 1
              , u = (0,
            r.getWeekYear)(e, t)
              , d = (0,
            a.constructFrom)(e, 0);
            d.setFullYear(u, 0, s),
            d.setHours(0, 0, 0, 0);
            return (0,
            i.startOfWeek)(d, t)
        }
        ;
        var a = n(81516)
          , r = n(9804)
          , i = n(36128)
          , o = n(20445)
    },
    14745: function(e, t, n) {
        "use strict";
        t.startOfYear = function(e) {
            const t = (0,
            a.toDate)(e)
              , n = (0,
            r.constructFrom)(e, 0);
            return n.setFullYear(t.getFullYear(), 0, 1),
            n.setHours(0, 0, 0, 0),
            n
        }
        ;
        var a = n(34032)
          , r = n(81516)
    },
    37608: function(e, t, n) {
        "use strict";
        t.subDays = function(e, t) {
            return (0,
            a.addDays)(e, -t)
        }
        ;
        var a = n(27761)
    },
    85380: function(e, t, n) {
        "use strict";
        t.subMonths = function(e, t) {
            return (0,
            a.addMonths)(e, -t)
        }
        ;
        var a = n(55353)
    },
    18590: function(e, t, n) {
        "use strict";
        t.subQuarters = function(e, t) {
            return (0,
            a.addQuarters)(e, -t)
        }
        ;
        var a = n(88823)
    },
    25278: function(e, t, n) {
        "use strict";
        t.subWeeks = function(e, t) {
            return (0,
            a.addWeeks)(e, -t)
        }
        ;
        var a = n(4481)
    },
    857: function(e, t, n) {
        "use strict";
        t.subYears = function(e, t) {
            return (0,
            a.addYears)(e, -t)
        }
        ;
        var a = n(60274)
    },
    34032: function(e, t) {
        "use strict";
        t.toDate = function(e) {
            const t = Object.prototype.toString.call(e);
            return e instanceof Date || "object" === typeof e && "[object Date]" === t ? new e.constructor(+e) : "number" === typeof e || "[object Number]" === t || "string" === typeof e || "[object String]" === t ? new Date(e) : new Date(NaN)
        }
    },
    61306: function(e, t, n) {
        "use strict";
        t.transpose = function(e, t) {
            const n = t instanceof Date ? (0,
            a.constructFrom)(t, 0) : new t(0);
            return n.setFullYear(e.getFullYear(), e.getMonth(), e.getDate()),
            n.setHours(e.getHours(), e.getMinutes(), e.getSeconds(), e.getMilliseconds()),
            n
        }
        ;
        var a = n(81516)
    },
    73908: function(e, t, n) {
        "use strict";
        n.r(t),
        n.d(t, {
            IGNORE_CLASS_NAME: function() {
                return f
            }
        });
        var a = n(96540)
          , r = n(40961);
        function i(e, t) {
            return i = Object.setPrototypeOf || function(e, t) {
                return e.__proto__ = t,
                e
            }
            ,
            i(e, t)
        }
        function o(e) {
            if (void 0 === e)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e
        }
        function s(e, t, n) {
            return e === t || (e.correspondingElement ? e.correspondingElement.classList.contains(n) : e.classList.contains(n))
        }
        var u, d, l = (void 0 === u && (u = 0),
        function() {
            return ++u
        }
        ), c = {}, m = {}, h = ["touchstart", "touchmove"], f = "ignore-react-onclickoutside";
        function p(e, t) {
            var n = {};
            return -1 !== h.indexOf(t) && d && (n.passive = !e.props.preventDefault),
            n
        }
        t.default = function(e, t) {
            var n, u, h = e.displayName || e.name || "Component";
            return u = n = function(n) {
                var u, f;
                function g(e) {
                    var a;
                    return (a = n.call(this, e) || this).__outsideClickHandler = function(e) {
                        if ("function" !== typeof a.__clickOutsideHandlerProp) {
                            var t = a.getInstance();
                            if ("function" !== typeof t.props.handleClickOutside) {
                                if ("function" !== typeof t.handleClickOutside)
                                    throw new Error("WrappedComponent: " + h + " lacks a handleClickOutside(event) function for processing outside click events.");
                                t.handleClickOutside(e)
                            } else
                                t.props.handleClickOutside(e)
                        } else
                            a.__clickOutsideHandlerProp(e)
                    }
                    ,
                    a.__getComponentNode = function() {
                        var e = a.getInstance();
                        return t && "function" === typeof t.setClickOutsideRef ? t.setClickOutsideRef()(e) : "function" === typeof e.setClickOutsideRef ? e.setClickOutsideRef() : (0,
                        r.findDOMNode)(e)
                    }
                    ,
                    a.enableOnClickOutside = function() {
                        if ("undefined" !== typeof document && !m[a._uid]) {
                            "undefined" === typeof d && (d = function() {
                                if ("undefined" !== typeof window && "function" === typeof window.addEventListener) {
                                    var e = !1
                                      , t = Object.defineProperty({}, "passive", {
                                        get: function() {
                                            e = !0
                                        }
                                    })
                                      , n = function() {};
                                    return window.addEventListener("testPassiveEventSupport", n, t),
                                    window.removeEventListener("testPassiveEventSupport", n, t),
                                    e
                                }
                            }()),
                            m[a._uid] = !0;
                            var e = a.props.eventTypes;
                            e.forEach || (e = [e]),
                            c[a._uid] = function(e) {
                                var t;
                                null !== a.componentNode && (a.props.preventDefault && e.preventDefault(),
                                a.props.stopPropagation && e.stopPropagation(),
                                a.props.excludeScrollbar && (t = e,
                                document.documentElement.clientWidth <= t.clientX || document.documentElement.clientHeight <= t.clientY) || function(e, t, n) {
                                    if (e === t)
                                        return !0;
                                    for (; e.parentNode || e.host; ) {
                                        if (e.parentNode && s(e, t, n))
                                            return !0;
                                        e = e.parentNode || e.host
                                    }
                                    return e
                                }(e.composed && e.composedPath && e.composedPath().shift() || e.target, a.componentNode, a.props.outsideClickIgnoreClass) === document && a.__outsideClickHandler(e))
                            }
                            ,
                            e.forEach((function(e) {
                                document.addEventListener(e, c[a._uid], p(o(a), e))
                            }
                            ))
                        }
                    }
                    ,
                    a.disableOnClickOutside = function() {
                        delete m[a._uid];
                        var e = c[a._uid];
                        if (e && "undefined" !== typeof document) {
                            var t = a.props.eventTypes;
                            t.forEach || (t = [t]),
                            t.forEach((function(t) {
                                return document.removeEventListener(t, e, p(o(a), t))
                            }
                            )),
                            delete c[a._uid]
                        }
                    }
                    ,
                    a.getRef = function(e) {
                        return a.instanceRef = e
                    }
                    ,
                    a._uid = l(),
                    a
                }
                f = n,
                (u = g).prototype = Object.create(f.prototype),
                u.prototype.constructor = u,
                i(u, f);
                var v = g.prototype;
                return v.getInstance = function() {
                    if (e.prototype && !e.prototype.isReactComponent)
                        return this;
                    var t = this.instanceRef;
                    return t.getInstance ? t.getInstance() : t
                }
                ,
                v.componentDidMount = function() {
                    if ("undefined" !== typeof document && document.createElement) {
                        var e = this.getInstance();
                        if (t && "function" === typeof t.handleClickOutside && (this.__clickOutsideHandlerProp = t.handleClickOutside(e),
                        "function" !== typeof this.__clickOutsideHandlerProp))
                            throw new Error("WrappedComponent: " + h + " lacks a function for processing outside click events specified by the handleClickOutside config option.");
                        this.componentNode = this.__getComponentNode(),
                        this.props.disableOnClickOutside || this.enableOnClickOutside()
                    }
                }
                ,
                v.componentDidUpdate = function() {
                    this.componentNode = this.__getComponentNode()
                }
                ,
                v.componentWillUnmount = function() {
                    this.disableOnClickOutside()
                }
                ,
                v.render = function() {
                    var t = this.props;
                    t.excludeScrollbar;
                    var n = function(e, t) {
                        if (null == e)
                            return {};
                        var n, a, r = {}, i = Object.keys(e);
                        for (a = 0; a < i.length; a++)
                            n = i[a],
                            t.indexOf(n) >= 0 || (r[n] = e[n]);
                        return r
                    }(t, ["excludeScrollbar"]);
                    return e.prototype && e.prototype.isReactComponent ? n.ref = this.getRef : n.wrappedRef = this.getRef,
                    n.disableOnClickOutside = this.disableOnClickOutside,
                    n.enableOnClickOutside = this.enableOnClickOutside,
                    (0,
                    a.createElement)(e, n)
                }
                ,
                g
            }(a.Component),
            n.displayName = "OnClickOutside(" + h + ")",
            n.defaultProps = {
                eventTypes: ["mousedown", "touchstart"],
                excludeScrollbar: t && t.excludeScrollbar || !1,
                outsideClickIgnoreClass: f,
                preventDefault: !1,
                stopPropagation: !1
            },
            n.getClass = function() {
                return e.getClass ? e.getClass() : e
            }
            ,
            u
        }
    },
    7463: function(e, t) {
        "use strict";
        function n(e, t) {
            var n = e.length;
            e.push(t);
            e: for (; 0 < n; ) {
                var a = n - 1 >>> 1
                  , r = e[a];
                if (!(0 < i(r, t)))
                    break e;
                e[a] = t,
                e[n] = r,
                n = a
            }
        }
        function a(e) {
            return 0 === e.length ? null : e[0]
        }
        function r(e) {
            if (0 === e.length)
                return null;
            var t = e[0]
              , n = e.pop();
            if (n !== t) {
                e[0] = n;
                e: for (var a = 0, r = e.length, o = r >>> 1; a < o; ) {
                    var s = 2 * (a + 1) - 1
                      , u = e[s]
                      , d = s + 1
                      , l = e[d];
                    if (0 > i(u, n))
                        d < r && 0 > i(l, u) ? (e[a] = l,
                        e[d] = n,
                        a = d) : (e[a] = u,
                        e[s] = n,
                        a = s);
                    else {
                        if (!(d < r && 0 > i(l, n)))
                            break e;
                        e[a] = l,
                        e[d] = n,
                        a = d
                    }
                }
            }
            return t
        }
        function i(e, t) {
            var n = e.sortIndex - t.sortIndex;
            return 0 !== n ? n : e.id - t.id
        }
        if ("object" === typeof performance && "function" === typeof performance.now) {
            var o = performance;
            t.unstable_now = function() {
                return o.now()
            }
        } else {
            var s = Date
              , u = s.now();
            t.unstable_now = function() {
                return s.now() - u
            }
        }
        var d = []
          , l = []
          , c = 1
          , m = null
          , h = 3
          , f = !1
          , p = !1
          , g = !1
          , v = "function" === typeof setTimeout ? setTimeout : null
          , w = "function" === typeof clearTimeout ? clearTimeout : null
          , b = "undefined" !== typeof setImmediate ? setImmediate : null;
        function y(e) {
            for (var t = a(l); null !== t; ) {
                if (null === t.callback)
                    r(l);
                else {
                    if (!(t.startTime <= e))
                        break;
                    r(l),
                    t.sortIndex = t.expirationTime,
                    n(d, t)
                }
                t = a(l)
            }
        }
        function k(e) {
            if (g = !1,
            y(e),
            !p)
                if (null !== a(d))
                    p = !0,
                    z(M);
                else {
                    var t = a(l);
                    null !== t && I(k, t.startTime - e)
                }
        }
        function M(e, n) {
            p = !1,
            g && (g = !1,
            w(S),
            S = -1),
            f = !0;
            var i = h;
            try {
                for (y(n),
                m = a(d); null !== m && (!(m.expirationTime > n) || e && !C()); ) {
                    var o = m.callback;
                    if ("function" === typeof o) {
                        m.callback = null,
                        h = m.priorityLevel;
                        var s = o(m.expirationTime <= n);
                        n = t.unstable_now(),
                        "function" === typeof s ? m.callback = s : m === a(d) && r(d),
                        y(n)
                    } else
                        r(d);
                    m = a(d)
                }
                if (null !== m)
                    var u = !0;
                else {
                    var c = a(l);
                    null !== c && I(k, c.startTime - n),
                    u = !1
                }
                return u
            } finally {
                m = null,
                h = i,
                f = !1
            }
        }
        "undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
        var P, W = !1, x = null, S = -1, D = 5, j = -1;
        function C() {
            return !(t.unstable_now() - j < D)
        }
        function T() {
            if (null !== x) {
                var e = t.unstable_now();
                j = e;
                var n = !0;
                try {
                    n = x(!0, e)
                } finally {
                    n ? P() : (W = !1,
                    x = null)
                }
            } else
                W = !1
        }
        if ("function" === typeof b)
            P = function() {
                b(T)
            }
            ;
        else if ("undefined" !== typeof MessageChannel) {
            var E = new MessageChannel
              , N = E.port2;
            E.port1.onmessage = T,
            P = function() {
                N.postMessage(null)
            }
        } else
            P = function() {
                v(T, 0)
            }
            ;
        function z(e) {
            x = e,
            W || (W = !0,
            P())
        }
        function I(e, n) {
            S = v((function() {
                e(t.unstable_now())
            }
            ), n)
        }
        t.unstable_IdlePriority = 5,
        t.unstable_ImmediatePriority = 1,
        t.unstable_LowPriority = 4,
        t.unstable_NormalPriority = 3,
        t.unstable_Profiling = null,
        t.unstable_UserBlockingPriority = 2,
        t.unstable_cancelCallback = function(e) {
            e.callback = null
        }
        ,
        t.unstable_continueExecution = function() {
            p || f || (p = !0,
            z(M))
        }
        ,
        t.unstable_forceFrameRate = function(e) {
            0 > e || 125 < e ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : D = 0 < e ? Math.floor(1e3 / e) : 5
        }
        ,
        t.unstable_getCurrentPriorityLevel = function() {
            return h
        }
        ,
        t.unstable_getFirstCallbackNode = function() {
            return a(d)
        }
        ,
        t.unstable_next = function(e) {
            switch (h) {
            case 1:
            case 2:
            case 3:
                var t = 3;
                break;
            default:
                t = h
            }
            var n = h;
            h = t;
            try {
                return e()
            } finally {
                h = n
            }
        }
        ,
        t.unstable_pauseExecution = function() {}
        ,
        t.unstable_requestPaint = function() {}
        ,
        t.unstable_runWithPriority = function(e, t) {
            switch (e) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                break;
            default:
                e = 3
            }
            var n = h;
            h = e;
            try {
                return t()
            } finally {
                h = n
            }
        }
        ,
        t.unstable_scheduleCallback = function(e, r, i) {
            var o = t.unstable_now();
            switch ("object" === typeof i && null !== i ? i = "number" === typeof (i = i.delay) && 0 < i ? o + i : o : i = o,
            e) {
            case 1:
                var s = -1;
                break;
            case 2:
                s = 250;
                break;
            case 5:
                s = 1073741823;
                break;
            case 4:
                s = 1e4;
                break;
            default:
                s = 5e3
            }
            return e = {
                id: c++,
                callback: r,
                priorityLevel: e,
                startTime: i,
                expirationTime: s = i + s,
                sortIndex: -1
            },
            i > o ? (e.sortIndex = i,
            n(l, e),
            null === a(d) && e === a(l) && (g ? (w(S),
            S = -1) : g = !0,
            I(k, i - o))) : (e.sortIndex = s,
            n(d, e),
            p || f || (p = !0,
            z(M))),
            e
        }
        ,
        t.unstable_shouldYield = C,
        t.unstable_wrapCallback = function(e) {
            var t = h;
            return function() {
                var n = h;
                h = t;
                try {
                    return e.apply(this, arguments)
                } finally {
                    h = n
                }
            }
        }
    },
    69982: function(e, t, n) {
        "use strict";
        e.exports = n(7463)
    },
    82318: function(e, t, n) {
        "use strict";
        n.r(t),
        n.d(t, {
            af: function() {
                return l
            },
            ar: function() {
                return f
            },
            arDZ: function() {
                return w
            },
            arEG: function() {
                return M
            },
            arMA: function() {
                return S
            },
            arSA: function() {
                return T
            },
            arTN: function() {
                return I
            },
            az: function() {
                return _
            },
            be: function() {
                return U
            },
            beTarask: function() {
                return oe
            },
            bg: function() {
                return he
            },
            bn: function() {
                return ye
            },
            bs: function() {
                return We
            },
            ca: function() {
                return Ce
            },
            ckb: function() {
                return ze
            },
            cs: function() {
                return Ye
            },
            cy: function() {
                return Le
            },
            da: function() {
                return Ke
            },
            de: function() {
                return nt
            },
            deAT: function() {
                return it
            },
            el: function() {
                return dt
            },
            enAU: function() {
                return vt
            },
            enCA: function() {
                return bt
            },
            enGB: function() {
                return kt
            },
            enIE: function() {
                return Mt
            },
            enIN: function() {
                return Pt
            },
            enNZ: function() {
                return Wt
            },
            enUS: function() {
                return xt
            },
            enZA: function() {
                return St
            },
            eo: function() {
                return Tt
            },
            es: function() {
                return Ot
            },
            et: function() {
                return Rt
            },
            eu: function() {
                return Kt
            },
            faIR: function() {
                return Jt
            },
            fi: function() {
                return cn
            },
            fr: function() {
                return yn
            },
            frCA: function() {
                return kn
            },
            frCH: function() {
                return Wn
            },
            fy: function() {
                return jn
            },
            gd: function() {
                return Nn
            },
            gl: function() {
                return An
            },
            gu: function() {
                return Rn
            },
            he: function() {
                return Vn
            },
            hi: function() {
                return ta
            },
            hr: function() {
                return ia
            },
            ht: function() {
                return da
            },
            hu: function() {
                return va
            },
            hy: function() {
                return ka
            },
            id: function() {
                return xa
            },
            is: function() {
                return Ca
            },
            it: function() {
                return _a
            },
            itCH: function() {
                return Xa
            },
            ja: function() {
                return qa
            },
            jaHira: function() {
                return $a
            },
            ka: function() {
                return Ua
            },
            kk: function() {
                return or
            },
            km: function() {
                return lr
            },
            kn: function() {
                return pr
            },
            ko: function() {
                return br
            },
            lb: function() {
                return jr
            },
            lt: function() {
                return Yr
            },
            lv: function() {
                return qr
            },
            mk: function() {
                return Jr
            },
            mn: function() {
                return ei
            },
            ms: function() {
                return ri
            },
            mt: function() {
                return ui
            },
            nb: function() {
                return mi
            },
            nl: function() {
                return gi
            },
            nlBE: function() {
                return yi
            },
            nn: function() {
                return xi
            },
            oc: function() {
                return Ci
            },
            pl: function() {
                return _i
            },
            pt: function() {
                return Fi
            },
            ptBR: function() {
                return Vi
            },
            ro: function() {
                return Qi
            },
            ru: function() {
                return io
            },
            se: function() {
                return lo
            },
            sk: function() {
                return bo
            },
            sl: function() {
                return Po
            },
            sq: function() {
                return Do
            },
            sr: function() {
                return Eo
            },
            srLatn: function() {
                return Oo
            },
            sv: function() {
                return Xo
            },
            ta: function() {
                return qo
            },
            te: function() {
                return $o
            },
            th: function() {
                return Uo
            },
            tr: function() {
                return ns
            },
            ug: function() {
                return os
            },
            uk: function() {
                return fs
            },
            uz: function() {
                return ws
            },
            uzCyrl: function() {
                return Ms
            },
            vi: function() {
                return Ss
            },
            zhCN: function() {
                return Es
            },
            zhHK: function() {
                return Os
            },
            zhTW: function() {
                return _s
            }
        });
        const a = {
            lessThanXSeconds: {
                one: "minder as 'n sekonde",
                other: "minder as {{count}} sekondes"
            },
            xSeconds: {
                one: "1 sekonde",
                other: "{{count}} sekondes"
            },
            halfAMinute: "'n halwe minuut",
            lessThanXMinutes: {
                one: "minder as 'n minuut",
                other: "minder as {{count}} minute"
            },
            xMinutes: {
                one: "'n minuut",
                other: "{{count}} minute"
            },
            aboutXHours: {
                one: "ongeveer 1 uur",
                other: "ongeveer {{count}} ure"
            },
            xHours: {
                one: "1 uur",
                other: "{{count}} ure"
            },
            xDays: {
                one: "1 dag",
                other: "{{count}} dae"
            },
            aboutXWeeks: {
                one: "ongeveer 1 week",
                other: "ongeveer {{count}} weke"
            },
            xWeeks: {
                one: "1 week",
                other: "{{count}} weke"
            },
            aboutXMonths: {
                one: "ongeveer 1 maand",
                other: "ongeveer {{count}} maande"
            },
            xMonths: {
                one: "1 maand",
                other: "{{count}} maande"
            },
            aboutXYears: {
                one: "ongeveer 1 jaar",
                other: "ongeveer {{count}} jaar"
            },
            xYears: {
                one: "1 jaar",
                other: "{{count}} jaar"
            },
            overXYears: {
                one: "meer as 1 jaar",
                other: "meer as {{count}} jaar"
            },
            almostXYears: {
                one: "byna 1 jaar",
                other: "byna {{count}} jaar"
            }
        };
        function r(e) {
            return (t={})=>{
                const n = t.width ? String(t.width) : e.defaultWidth;
                return e.formats[n] || e.formats[e.defaultWidth]
            }
        }
        const i = {
            date: r({
                formats: {
                    full: "EEEE, d MMMM yyyy",
                    long: "d MMMM yyyy",
                    medium: "d MMM yyyy",
                    short: "yyyy/MM/dd"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'om' {{time}}",
                    long: "{{date}} 'om' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , o = {
            lastWeek: "'verlede' eeee 'om' p",
            yesterday: "'gister om' p",
            today: "'vandag om' p",
            tomorrow: "'m\xf4re om' p",
            nextWeek: "eeee 'om' p",
            other: "P"
        };
        function s(e) {
            return (t,n)=>{
                let a;
                if ("formatting" === (n?.context ? String(n.context) : "standalone") && e.formattingValues) {
                    const t = e.defaultFormattingWidth || e.defaultWidth
                      , r = n?.width ? String(n.width) : t;
                    a = e.formattingValues[r] || e.formattingValues[t]
                } else {
                    const t = e.defaultWidth
                      , r = n?.width ? String(n.width) : e.defaultWidth;
                    a = e.values[r] || e.values[t]
                }
                return a[e.argumentCallback ? e.argumentCallback(t) : t]
            }
        }
        function u(e) {
            return (t,n={})=>{
                const a = n.width
                  , r = a && e.matchPatterns[a] || e.matchPatterns[e.defaultMatchWidth]
                  , i = t.match(r);
                if (!i)
                    return null;
                const o = i[0]
                  , s = a && e.parsePatterns[a] || e.parsePatterns[e.defaultParseWidth]
                  , u = Array.isArray(s) ? function(e, t) {
                    for (let n = 0; n < e.length; n++)
                        if (t(e[n]))
                            return n;
                    return
                }(s, (e=>e.test(o))) : function(e, t) {
                    for (const n in e)
                        if (Object.prototype.hasOwnProperty.call(e, n) && t(e[n]))
                            return n;
                    return
                }(s, (e=>e.test(o)));
                let d;
                d = e.valueCallback ? e.valueCallback(u) : u,
                d = n.valueCallback ? n.valueCallback(d) : d;
                return {
                    value: d,
                    rest: t.slice(o.length)
                }
            }
        }
        function d(e) {
            return (t,n={})=>{
                const a = t.match(e.matchPattern);
                if (!a)
                    return null;
                const r = a[0]
                  , i = t.match(e.parsePattern);
                if (!i)
                    return null;
                let o = e.valueCallback ? e.valueCallback(i[0]) : i[0];
                o = n.valueCallback ? n.valueCallback(o) : o;
                return {
                    value: o,
                    rest: t.slice(r.length)
                }
            }
        }
        const l = {
            code: "af",
            formatDistance: (e,t,n)=>{
                let r;
                const i = a[e];
                return r = "string" === typeof i ? i : 1 === t ? i.one : i.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "oor " + r : r + " gelede" : r
            }
            ,
            formatLong: i,
            formatRelative: (e,t,n,a)=>o[e],
            localize: {
                ordinalNumber: e=>{
                    const t = Number(e)
                      , n = t % 100;
                    if (n < 20)
                        switch (n) {
                        case 1:
                        case 8:
                            return t + "ste";
                        default:
                            return t + "de"
                        }
                    return t + "ste"
                }
                ,
                era: s({
                    values: {
                        narrow: ["vC", "nC"],
                        abbreviated: ["vC", "nC"],
                        wide: ["voor Christus", "na Christus"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["K1", "K2", "K3", "K4"],
                        wide: ["1ste kwartaal", "2de kwartaal", "3de kwartaal", "4de kwartaal"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                        abbreviated: ["Jan", "Feb", "Mrt", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"],
                        wide: ["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", "Oktober", "November", "Desember"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["S", "M", "D", "W", "D", "V", "S"],
                        short: ["So", "Ma", "Di", "Wo", "Do", "Vr", "Sa"],
                        abbreviated: ["Son", "Maa", "Din", "Woe", "Don", "Vry", "Sat"],
                        wide: ["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "vm",
                            pm: "nm",
                            midnight: "middernag",
                            noon: "middaguur",
                            morning: "oggend",
                            afternoon: "middag",
                            evening: "laat middag",
                            night: "aand"
                        },
                        abbreviated: {
                            am: "vm",
                            pm: "nm",
                            midnight: "middernag",
                            noon: "middaguur",
                            morning: "oggend",
                            afternoon: "middag",
                            evening: "laat middag",
                            night: "aand"
                        },
                        wide: {
                            am: "vm",
                            pm: "nm",
                            midnight: "middernag",
                            noon: "middaguur",
                            morning: "oggend",
                            afternoon: "middag",
                            evening: "laat middag",
                            night: "aand"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "vm",
                            pm: "nm",
                            midnight: "middernag",
                            noon: "uur die middag",
                            morning: "uur die oggend",
                            afternoon: "uur die middag",
                            evening: "uur die aand",
                            night: "uur die aand"
                        },
                        abbreviated: {
                            am: "vm",
                            pm: "nm",
                            midnight: "middernag",
                            noon: "uur die middag",
                            morning: "uur die oggend",
                            afternoon: "uur die middag",
                            evening: "uur die aand",
                            night: "uur die aand"
                        },
                        wide: {
                            am: "vm",
                            pm: "nm",
                            midnight: "middernag",
                            noon: "uur die middag",
                            morning: "uur die oggend",
                            afternoon: "uur die middag",
                            evening: "uur die aand",
                            night: "uur die aand"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(ste|de)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^([vn]\.? ?C\.?)/,
                        abbreviated: /^([vn]\. ?C\.?)/,
                        wide: /^((voor|na) Christus)/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^v/, /^n/]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^K[1234]/i,
                        wide: /^[1234](st|d)e kwartaal/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(Jan|Feb|Mrt|Apr|Mei|Jun|Jul|Aug|Sep|Okt|Nov|Dec)\.?/i,
                        wide: /^(Januarie|Februarie|Maart|April|Mei|Junie|Julie|Augustus|September|Oktober|November|Desember)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^J/i, /^F/i, /^M/i, /^A/i, /^M/i, /^J/i, /^J/i, /^A/i, /^S/i, /^O/i, /^N/i, /^D/i],
                        any: [/^Jan/i, /^Feb/i, /^Mrt/i, /^Apr/i, /^Mei/i, /^Jun/i, /^Jul/i, /^Aug/i, /^Sep/i, /^Okt/i, /^Nov/i, /^Dec/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[smdwv]/i,
                        short: /^(So|Ma|Di|Wo|Do|Vr|Sa)/i,
                        abbreviated: /^(Son|Maa|Din|Woe|Don|Vry|Sat)/i,
                        wide: /^(Sondag|Maandag|Dinsdag|Woensdag|Donderdag|Vrydag|Saterdag)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^S/i, /^M/i, /^D/i, /^W/i, /^D/i, /^V/i, /^S/i],
                        any: [/^So/i, /^Ma/i, /^Di/i, /^Wo/i, /^Do/i, /^Vr/i, /^Sa/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(vm|nm|middernag|(?:uur )?die (oggend|middag|aand))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^vm/i,
                            pm: /^nm/i,
                            midnight: /^middernag/i,
                            noon: /^middaguur/i,
                            morning: /oggend/i,
                            afternoon: /middag/i,
                            evening: /laat middag/i,
                            night: /aand/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const c = {
            lessThanXSeconds: {
                one: "\u0623\u0642\u0644 \u0645\u0646 \u062b\u0627\u0646\u064a\u0629",
                two: "\u0623\u0642\u0644 \u0645\u0646 \u062b\u0627\u0646\u064a\u062a\u064a\u0646",
                threeToTen: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062b\u0648\u0627\u0646\u064a",
                other: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062b\u0627\u0646\u064a\u0629"
            },
            xSeconds: {
                one: "\u062b\u0627\u0646\u064a\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u062b\u0627\u0646\u064a\u062a\u0627\u0646",
                threeToTen: "{{count}} \u062b\u0648\u0627\u0646\u064a",
                other: "{{count}} \u062b\u0627\u0646\u064a\u0629"
            },
            halfAMinute: "\u0646\u0635\u0641 \u062f\u0642\u064a\u0642\u0629",
            lessThanXMinutes: {
                one: "\u0623\u0642\u0644 \u0645\u0646 \u062f\u0642\u064a\u0642\u0629",
                two: "\u0623\u0642\u0644 \u0645\u0646 \u062f\u0642\u064a\u0642\u062a\u064a\u0646",
                threeToTen: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062f\u0642\u0627\u0626\u0642",
                other: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062f\u0642\u064a\u0642\u0629"
            },
            xMinutes: {
                one: "\u062f\u0642\u064a\u0642\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u062f\u0642\u064a\u0642\u062a\u0627\u0646",
                threeToTen: "{{count}} \u062f\u0642\u0627\u0626\u0642",
                other: "{{count}} \u062f\u0642\u064a\u0642\u0629"
            },
            aboutXHours: {
                one: "\u0633\u0627\u0639\u0629 \u0648\u0627\u062d\u062f\u0629 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0633\u0627\u0639\u062a\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627",
                threeToTen: "{{count}} \u0633\u0627\u0639\u0627\u062a \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0633\u0627\u0639\u0629 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            },
            xHours: {
                one: "\u0633\u0627\u0639\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u0633\u0627\u0639\u062a\u0627\u0646",
                threeToTen: "{{count}} \u0633\u0627\u0639\u0627\u062a",
                other: "{{count}} \u0633\u0627\u0639\u0629"
            },
            xDays: {
                one: "\u064a\u0648\u0645 \u0648\u0627\u062d\u062f",
                two: "\u064a\u0648\u0645\u0627\u0646",
                threeToTen: "{{count}} \u0623\u064a\u0627\u0645",
                other: "{{count}} \u064a\u0648\u0645"
            },
            aboutXWeeks: {
                one: "\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062d\u062f \u062a\u0642\u0631\u064a\u0628\u0627",
                two: "\u0623\u0633\u0628\u0648\u0639\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627",
                threeToTen: "{{count}} \u0623\u0633\u0627\u0628\u064a\u0639 \u062a\u0642\u0631\u064a\u0628\u0627",
                other: "{{count}} \u0623\u0633\u0628\u0648\u0639\u0627 \u062a\u0642\u0631\u064a\u0628\u0627"
            },
            xWeeks: {
                one: "\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062d\u062f",
                two: "\u0623\u0633\u0628\u0648\u0639\u0627\u0646",
                threeToTen: "{{count}} \u0623\u0633\u0627\u0628\u064a\u0639",
                other: "{{count}} \u0623\u0633\u0628\u0648\u0639\u0627"
            },
            aboutXMonths: {
                one: "\u0634\u0647\u0631 \u0648\u0627\u062d\u062f \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0634\u0647\u0631\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627",
                threeToTen: "{{count}} \u0623\u0634\u0647\u0631 \u062a\u0642\u0631\u064a\u0628\u0627",
                other: "{{count}} \u0634\u0647\u0631\u0627 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            },
            xMonths: {
                one: "\u0634\u0647\u0631 \u0648\u0627\u062d\u062f",
                two: "\u0634\u0647\u0631\u0627\u0646",
                threeToTen: "{{count}} \u0623\u0634\u0647\u0631",
                other: "{{count}} \u0634\u0647\u0631\u0627"
            },
            aboutXYears: {
                one: "\u0633\u0646\u0629 \u0648\u0627\u062d\u062f\u0629 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0633\u0646\u062a\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627",
                threeToTen: "{{count}} \u0633\u0646\u0648\u0627\u062a \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0633\u0646\u0629 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            },
            xYears: {
                one: "\u0633\u0646\u0629 \u0648\u0627\u062d\u062f",
                two: "\u0633\u0646\u062a\u0627\u0646",
                threeToTen: "{{count}} \u0633\u0646\u0648\u0627\u062a",
                other: "{{count}} \u0633\u0646\u0629"
            },
            overXYears: {
                one: "\u0623\u0643\u062b\u0631 \u0645\u0646 \u0633\u0646\u0629",
                two: "\u0623\u0643\u062b\u0631 \u0645\u0646 \u0633\u0646\u062a\u064a\u0646",
                threeToTen: "\u0623\u0643\u062b\u0631 \u0645\u0646 {{count}} \u0633\u0646\u0648\u0627\u062a",
                other: "\u0623\u0643\u062b\u0631 \u0645\u0646 {{count}} \u0633\u0646\u0629"
            },
            almostXYears: {
                one: "\u0645\u0627 \u064a\u0642\u0627\u0631\u0628 \u0633\u0646\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u0645\u0627 \u064a\u0642\u0627\u0631\u0628 \u0633\u0646\u062a\u064a\u0646",
                threeToTen: "\u0645\u0627 \u064a\u0642\u0627\u0631\u0628 {{count}} \u0633\u0646\u0648\u0627\u062a",
                other: "\u0645\u0627 \u064a\u0642\u0627\u0631\u0628 {{count}} \u0633\u0646\u0629"
            }
        }
          , m = {
            date: r({
                formats: {
                    full: "EEEE\u060c do MMMM y",
                    long: "do MMMM y",
                    medium: "d MMM y",
                    short: "dd/MM/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss",
                    long: "HH:mm:ss",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629' {{time}}",
                    long: "{{date}} '\u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , h = {
            lastWeek: "eeee '\u0627\u0644\u0645\u0627\u0636\u064a \u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629' p",
            yesterday: "'\u0627\u0644\u0623\u0645\u0633 \u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629' p",
            today: "'\u0627\u0644\u064a\u0648\u0645 \u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629' p",
            tomorrow: "'\u063a\u062f\u0627 \u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629' p",
            nextWeek: "eeee '\u0627\u0644\u0642\u0627\u062f\u0645 \u0639\u0646\u062f \u0627\u0644\u0633\u0627\u0639\u0629' p",
            other: "P"
        }
          , f = {
            code: "ar",
            formatDistance: (e,t,n)=>{
                const a = c[e];
                let r;
                return r = "string" === typeof a ? a : 1 === t ? a.one : 2 === t ? a.two : t <= 10 ? a.threeToTen.replace("{{count}}", String(t)) : a.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "\u062e\u0644\u0627\u0644 " + r : "\u0645\u0646\u0630 " + r : r
            }
            ,
            formatLong: m,
            formatRelative: e=>h[e],
            localize: {
                ordinalNumber: e=>String(e),
                era: s({
                    values: {
                        narrow: ["\u0642", "\u0628"],
                        abbreviated: ["\u0642.\u0645.", "\u0628.\u0645."],
                        wide: ["\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f", "\u0628\u0639\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u06311", "\u06312", "\u06313", "\u06314"],
                        wide: ["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u064a", "\u0641", "\u0645", "\u0623", "\u0645", "\u064a", "\u064a", "\u0623", "\u0633", "\u0623", "\u0646", "\u062f"],
                        abbreviated: ["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"],
                        wide: ["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", "\u062c", "\u0633"],
                        short: ["\u0623\u062d\u062f", "\u0627\u062b\u0646\u064a\u0646", "\u062b\u0644\u0627\u062b\u0627\u0621", "\u0623\u0631\u0628\u0639\u0627\u0621", "\u062e\u0645\u064a\u0633", "\u062c\u0645\u0639\u0629", "\u0633\u0628\u062a"],
                        abbreviated: ["\u0623\u062d\u062f", "\u0627\u062b\u0646\u064a\u0646", "\u062b\u0644\u0627\u062b\u0627\u0621", "\u0623\u0631\u0628\u0639\u0627\u0621", "\u062e\u0645\u064a\u0633", "\u062c\u0645\u0639\u0629", "\u0633\u0628\u062a"],
                        wide: ["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0635",
                            pm: "\u0645",
                            morning: "\u0627\u0644\u0635\u0628\u0627\u062d",
                            noon: "\u0627\u0644\u0638\u0647\u0631",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0627\u0644\u0644\u064a\u0644",
                            midnight: "\u0645\u0646\u062a\u0635\u0641 \u0627\u0644\u0644\u064a\u0644"
                        },
                        abbreviated: {
                            am: "\u0635",
                            pm: "\u0645",
                            morning: "\u0627\u0644\u0635\u0628\u0627\u062d",
                            noon: "\u0627\u0644\u0638\u0647\u0631",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0627\u0644\u0644\u064a\u0644",
                            midnight: "\u0645\u0646\u062a\u0635\u0641 \u0627\u0644\u0644\u064a\u0644"
                        },
                        wide: {
                            am: "\u0635",
                            pm: "\u0645",
                            morning: "\u0627\u0644\u0635\u0628\u0627\u062d",
                            noon: "\u0627\u0644\u0638\u0647\u0631",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0627\u0644\u0644\u064a\u0644",
                            midnight: "\u0645\u0646\u062a\u0635\u0641 \u0627\u0644\u0644\u064a\u0644"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u0635",
                            pm: "\u0645",
                            morning: "\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d",
                            noon: "\u0627\u0644\u0638\u0647\u0631",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644",
                            midnight: "\u0645\u0646\u062a\u0635\u0641 \u0627\u0644\u0644\u064a\u0644"
                        },
                        abbreviated: {
                            am: "\u0635",
                            pm: "\u0645",
                            morning: "\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d",
                            noon: "\u0627\u0644\u0638\u0647\u0631",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644",
                            midnight: "\u0645\u0646\u062a\u0635\u0641 \u0627\u0644\u0644\u064a\u0644"
                        },
                        wide: {
                            am: "\u0635",
                            pm: "\u0645",
                            morning: "\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d",
                            noon: "\u0627\u0644\u0638\u0647\u0631",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644",
                            midnight: "\u0645\u0646\u062a\u0635\u0641 \u0627\u0644\u0644\u064a\u0644"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /[\u0642\u0628]/,
                        abbreviated: /[\u0642\u0628]\.\u0645\./,
                        wide: /(\u0642\u0628\u0644|\u0628\u0639\u062f) \u0627\u0644\u0645\u064a\u0644\u0627\u062f/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/\u0642\u0628\u0644/, /\u0628\u0639\u062f/]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /\u0631[1234]/,
                        wide: /\u0627\u0644\u0631\u0628\u0639 (\u0627\u0644\u0623\u0648\u0644|\u0627\u0644\u062b\u0627\u0646\u064a|\u0627\u0644\u062b\u0627\u0644\u062b|\u0627\u0644\u0631\u0627\u0628\u0639)/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[\u0623\u064a\u0641\u0645\u0633\u0646\u062f]/,
                        abbreviated: /^(\u064a\u0646\u0627\u064a\u0631|\u0641\u0628\u0631\u0627\u064a\u0631|\u0645\u0627\u0631\u0633|\u0623\u0628\u0631\u064a\u0644|\u0645\u0627\u064a\u0648|\u064a\u0648\u0646\u064a\u0648|\u064a\u0648\u0644\u064a\u0648|\u0623\u063a\u0633\u0637\u0633|\u0633\u0628\u062a\u0645\u0628\u0631|\u0623\u0643\u062a\u0648\u0628\u0631|\u0646\u0648\u0641\u0645\u0628\u0631|\u062f\u064a\u0633\u0645\u0628\u0631)/,
                        wide: /^(\u064a\u0646\u0627\u064a\u0631|\u0641\u0628\u0631\u0627\u064a\u0631|\u0645\u0627\u0631\u0633|\u0623\u0628\u0631\u064a\u0644|\u0645\u0627\u064a\u0648|\u064a\u0648\u0646\u064a\u0648|\u064a\u0648\u0644\u064a\u0648|\u0623\u063a\u0633\u0637\u0633|\u0633\u0628\u062a\u0645\u0628\u0631|\u0623\u0643\u062a\u0648\u0628\u0631|\u0646\u0648\u0641\u0645\u0628\u0631|\u062f\u064a\u0633\u0645\u0628\u0631)/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u064a/i, /^\u0641/i, /^\u0645/i, /^\u0623/i, /^\u0645/i, /^\u064a/i, /^\u064a/i, /^\u0623/i, /^\u0633/i, /^\u0623/i, /^\u0646/i, /^\u062f/i],
                        any: [/^\u064a\u0646\u0627\u064a\u0631/i, /^\u0641\u0628\u0631\u0627\u064a\u0631/i, /^\u0645\u0627\u0631\u0633/i, /^\u0623\u0628\u0631\u064a\u0644/i, /^\u0645\u0627\u064a\u0648/i, /^\u064a\u0648\u0646\u064a\u0648/i, /^\u064a\u0648\u0644\u064a\u0648/i, /^\u0623\u063a\u0633\u0637\u0633/i, /^\u0633\u0628\u062a\u0645\u0628\u0631/i, /^\u0623\u0643\u062a\u0648\u0628\u0631/i, /^\u0646\u0648\u0641\u0645\u0628\u0631/i, /^\u062f\u064a\u0633\u0645\u0628\u0631/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u062d\u0646\u062b\u0631\u062e\u062c\u0633]/i,
                        short: /^(\u0623\u062d\u062f|\u0627\u062b\u0646\u064a\u0646|\u062b\u0644\u0627\u062b\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062e\u0645\u064a\u0633|\u062c\u0645\u0639\u0629|\u0633\u0628\u062a)/i,
                        abbreviated: /^(\u0623\u062d\u062f|\u0627\u062b\u0646\u064a\u0646|\u062b\u0644\u0627\u062b\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062e\u0645\u064a\u0633|\u062c\u0645\u0639\u0629|\u0633\u0628\u062a)/i,
                        wide: /^(\u0627\u0644\u0623\u062d\u062f|\u0627\u0644\u0627\u062b\u0646\u064a\u0646|\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621|\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621|\u0627\u0644\u062e\u0645\u064a\u0633|\u0627\u0644\u062c\u0645\u0639\u0629|\u0627\u0644\u0633\u0628\u062a)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u062d/i, /^\u0646/i, /^\u062b/i, /^\u0631/i, /^\u062e/i, /^\u062c/i, /^\u0633/i],
                        wide: [/^\u0627\u0644\u0623\u062d\u062f/i, /^\u0627\u0644\u0627\u062b\u0646\u064a\u0646/i, /^\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621/i, /^\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621/i, /^\u0627\u0644\u062e\u0645\u064a\u0633/i, /^\u0627\u0644\u062c\u0645\u0639\u0629/i, /^\u0627\u0644\u0633\u0628\u062a/i],
                        any: [/^\u0623\u062d/i, /^\u0627\u062b/i, /^\u062b/i, /^\u0623\u0631/i, /^\u062e/i, /^\u062c/i, /^\u0633/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(\u0635|\u0645|\u0645\u0646\u062a\u0635\u0641 \u0627\u0644\u0644\u064a\u0644|\u0627\u0644\u0638\u0647\u0631|\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631|\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d|\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621|\u0641\u064a \u0627\u0644\u0644\u064a\u0644)/,
                        any: /^(\u0635|\u0645|\u0645\u0646\u062a\u0635\u0641 \u0627\u0644\u0644\u064a\u0644|\u0627\u0644\u0638\u0647\u0631|\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631|\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d|\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621|\u0641\u064a \u0627\u0644\u0644\u064a\u0644)/
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u0635/,
                            pm: /^\u0645/,
                            midnight: /\u0645\u0646\u062a\u0635\u0641 \u0627\u0644\u0644\u064a\u0644/,
                            noon: /\u0627\u0644\u0638\u0647\u0631/,
                            afternoon: /\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631/,
                            morning: /\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d/,
                            evening: /\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621/,
                            night: /\u0641\u064a \u0627\u0644\u0644\u064a\u0644/
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 6,
                firstWeekContainsDate: 1
            }
        };
        const p = {
            lessThanXSeconds: {
                one: "\u0623\u0642\u0644 \u0645\u0646 \u062b\u0627\u0646\u064a\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u0623\u0642\u0644 \u0645\u0646 \u062b\u0627\u0646\u062a\u064a\u0646",
                threeToTen: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062b\u0648\u0627\u0646\u064a",
                other: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062b\u0627\u0646\u064a\u0629"
            },
            xSeconds: {
                one: "\u062b\u0627\u0646\u064a\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u062b\u0627\u0646\u062a\u064a\u0646",
                threeToTen: "{{count}} \u062b\u0648\u0627\u0646\u064a",
                other: "{{count}} \u062b\u0627\u0646\u064a\u0629"
            },
            halfAMinute: "\u0646\u0635\u0641 \u062f\u0642\u064a\u0642\u0629",
            lessThanXMinutes: {
                one: "\u0623\u0642\u0644 \u0645\u0646 \u062f\u0642\u064a\u0642\u0629",
                two: "\u0623\u0642\u0644 \u0645\u0646 \u062f\u0642\u064a\u0642\u062a\u064a\u0646",
                threeToTen: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062f\u0642\u0627\u0626\u0642",
                other: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062f\u0642\u064a\u0642\u0629"
            },
            xMinutes: {
                one: "\u062f\u0642\u064a\u0642\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u062f\u0642\u064a\u0642\u062a\u064a\u0646",
                threeToTen: "{{count}} \u062f\u0642\u0627\u0626\u0642",
                other: "{{count}} \u062f\u0642\u064a\u0642\u0629"
            },
            aboutXHours: {
                one: "\u0633\u0627\u0639\u0629 \u0648\u0627\u062d\u062f\u0629 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0633\u0627\u0639\u062a\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                threeToTen: "{{count}} \u0633\u0627\u0639\u0627\u062a \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0633\u0627\u0639\u0629 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            },
            xHours: {
                one: "\u0633\u0627\u0639\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u0633\u0627\u0639\u062a\u064a\u0646",
                threeToTen: "{{count}} \u0633\u0627\u0639\u0627\u062a",
                other: "{{count}} \u0633\u0627\u0639\u0629"
            },
            xDays: {
                one: "\u064a\u0648\u0645 \u0648\u0627\u062d\u062f",
                two: "\u064a\u0648\u0645\u064a\u0646",
                threeToTen: "{{count}} \u0623\u064a\u0627\u0645",
                other: "{{count}} \u064a\u0648\u0645"
            },
            aboutXWeeks: {
                one: "\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062d\u062f \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0623\u0633\u0628\u0648\u0639\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                threeToTen: "{{count}} \u0623\u0633\u0627\u0628\u064a\u0639 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0623\u0633\u0628\u0648\u0639 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            },
            xWeeks: {
                one: "\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062d\u062f",
                two: "\u0623\u0633\u0628\u0648\u0639\u064a\u0646",
                threeToTen: "{{count}} \u0623\u0633\u0627\u0628\u064a\u0639",
                other: "{{count}} \u0623\u0633\u0628\u0648\u0639"
            },
            aboutXMonths: {
                one: "\u0634\u0647\u0631 \u0648\u0627\u062d\u062f \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0634\u0647\u0631\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                threeToTen: "{{count}} \u0623\u0634\u0647\u0631 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0634\u0647\u0631 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            },
            xMonths: {
                one: "\u0634\u0647\u0631 \u0648\u0627\u062d\u062f",
                two: "\u0634\u0647\u0631\u064a\u0646",
                threeToTen: "{{count}} \u0623\u0634\u0647\u0631",
                other: "{{count}} \u0634\u0647\u0631"
            },
            aboutXYears: {
                one: "\u0639\u0627\u0645 \u0648\u0627\u062d\u062f \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0639\u0627\u0645\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                threeToTen: "{{count}} \u0623\u0639\u0648\u0627\u0645 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0639\u0627\u0645 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            },
            xYears: {
                one: "\u0639\u0627\u0645 \u0648\u0627\u062d\u062f",
                two: "\u0639\u0627\u0645\u064a\u0646",
                threeToTen: "{{count}} \u0623\u0639\u0648\u0627\u0645",
                other: "{{count}} \u0639\u0627\u0645"
            },
            overXYears: {
                one: "\u0623\u0643\u062b\u0631 \u0645\u0646 \u0639\u0627\u0645",
                two: "\u0623\u0643\u062b\u0631 \u0645\u0646 \u0639\u0627\u0645\u064a\u0646",
                threeToTen: "\u0623\u0643\u062b\u0631 \u0645\u0646 {{count}} \u0623\u0639\u0648\u0627\u0645",
                other: "\u0623\u0643\u062b\u0631 \u0645\u0646 {{count}} \u0639\u0627\u0645"
            },
            almostXYears: {
                one: "\u0639\u0627\u0645 \u0648\u0627\u062d\u062f \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0639\u0627\u0645\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                threeToTen: "{{count}} \u0623\u0639\u0648\u0627\u0645 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0639\u0627\u0645 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            }
        }
          , g = {
            date: r({
                formats: {
                    full: "EEEE, MMMM do, y",
                    long: "MMMM do, y",
                    medium: "MMM d, y",
                    short: "MM/dd/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u0639\u0646\u062f' {{time}}",
                    long: "{{date}} '\u0639\u0646\u062f' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , v = {
            lastWeek: "'\u0623\u062e\u0631' eeee '\u0639\u0646\u062f' p",
            yesterday: "'\u0623\u0645\u0633 \u0639\u0646\u062f' p",
            today: "'\u0627\u0644\u064a\u0648\u0645 \u0639\u0646\u062f' p",
            tomorrow: "'\u063a\u062f\u0627\u064b \u0639\u0646\u062f' p",
            nextWeek: "eeee '\u0639\u0646\u062f' p",
            other: "P"
        }
          , w = {
            code: "ar-DZ",
            formatDistance: (e,t,n)=>{
                n = n || {};
                const a = p[e];
                let r;
                return r = "string" === typeof a ? a : 1 === t ? a.one : 2 === t ? a.two : t <= 10 ? a.threeToTen.replace("{{count}}", String(t)) : a.other.replace("{{count}}", String(t)),
                n.addSuffix ? n.comparison && n.comparison > 0 ? "\u0641\u064a \u062e\u0644\u0627\u0644 " + r : "\u0645\u0646\u0630 " + r : r
            }
            ,
            formatLong: g,
            formatRelative: (e,t,n,a)=>v[e],
            localize: {
                ordinalNumber: e=>String(e),
                era: s({
                    values: {
                        narrow: ["\u0642", "\u0628"],
                        abbreviated: ["\u0642.\u0645.", "\u0628.\u0645."],
                        wide: ["\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f", "\u0628\u0639\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u06311", "\u06312", "\u06313", "\u06314"],
                        wide: ["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>Number(e) - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u062c", "\u0641", "\u0645", "\u0623", "\u0645", "\u062c", "\u062c", "\u0623", "\u0633", "\u0623", "\u0646", "\u062f"],
                        abbreviated: ["\u062c\u0627\u0646\u0640", "\u0641\u064a\u0641\u0640", "\u0645\u0627\u0631\u0633", "\u0623\u0641\u0631\u064a\u0644", "\u0645\u0627\u064a\u0640", "\u062c\u0648\u0627\u0646\u0640", "\u062c\u0648\u064a\u0640", "\u0623\u0648\u062a", "\u0633\u0628\u062a\u0640", "\u0623\u0643\u062a\u0640", "\u0646\u0648\u0641\u0640", "\u062f\u064a\u0633\u0640"],
                        wide: ["\u062c\u0627\u0646\u0641\u064a", "\u0641\u064a\u0641\u0631\u064a", "\u0645\u0627\u0631\u0633", "\u0623\u0641\u0631\u064a\u0644", "\u0645\u0627\u064a", "\u062c\u0648\u0627\u0646", "\u062c\u0648\u064a\u0644\u064a\u0629", "\u0623\u0648\u062a", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", "\u062c", "\u0633"],
                        short: ["\u0623\u062d\u062f", "\u0627\u062b\u0646\u064a\u0646", "\u062b\u0644\u0627\u062b\u0627\u0621", "\u0623\u0631\u0628\u0639\u0627\u0621", "\u062e\u0645\u064a\u0633", "\u062c\u0645\u0639\u0629", "\u0633\u0628\u062a"],
                        abbreviated: ["\u0623\u062d\u062f", "\u0627\u062b\u0646\u0640", "\u062b\u0644\u0627", "\u0623\u0631\u0628\u0640", "\u062e\u0645\u064a\u0640", "\u062c\u0645\u0639\u0629", "\u0633\u0628\u062a"],
                        wide: ["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646",
                            noon: "\u0638",
                            morning: "\u0635\u0628\u0627\u062d\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0645\u0633\u0627\u0621\u0627\u064b",
                            night: "\u0644\u064a\u0644\u0627\u064b"
                        },
                        abbreviated: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0635\u0628\u0627\u062d\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0645\u0633\u0627\u0621\u0627\u064b",
                            night: "\u0644\u064a\u0644\u0627\u064b"
                        },
                        wide: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0635\u0628\u0627\u062d\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0645\u0633\u0627\u0621\u0627\u064b",
                            night: "\u0644\u064a\u0644\u0627\u064b"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646",
                            noon: "\u0638",
                            morning: "\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0640\u0647\u0631",
                            evening: "\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644"
                        },
                        abbreviated: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644"
                        },
                        wide: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0635\u0628\u0627\u062d\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0640\u0647\u0631",
                            evening: "\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u0642|\u0628)/i,
                        abbreviated: /^(\u0642\.?\s?\u0645\.?|\u0642\.?\s?\u0645\.?\s?|a\.?\s?d\.?|c\.?\s?)/i,
                        wide: /^(\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f|\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f|\u0628\u0639\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f|\u0628\u0639\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u0642\u0628\u0644/i, /^\u0628\u0639\u062f/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^\u0631[1234]/i,
                        wide: /^\u0627\u0644\u0631\u0628\u0639 [1234]/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>Number(e) + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[\u062c\u0641\u0645\u0623\u0633\u0646\u062f]/i,
                        abbreviated: /^(\u062c\u0627\u0646|\u0641\u064a\u0641|\u0645\u0627\u0631|\u0623\u0641\u0631|\u0645\u0627\u064a|\u062c\u0648\u0627|\u062c\u0648\u064a|\u0623\u0648\u062a|\u0633\u0628\u062a|\u0623\u0643\u062a|\u0646\u0648\u0641|\u062f\u064a\u0633)/i,
                        wide: /^(\u062c\u0627\u0646\u0641\u064a|\u0641\u064a\u0641\u0631\u064a|\u0645\u0627\u0631\u0633|\u0623\u0641\u0631\u064a\u0644|\u0645\u0627\u064a|\u062c\u0648\u0627\u0646|\u062c\u0648\u064a\u0644\u064a\u0629|\u0623\u0648\u062a|\u0633\u0628\u062a\u0645\u0628\u0631|\u0623\u0643\u062a\u0648\u0628\u0631|\u0646\u0648\u0641\u0645\u0628\u0631|\u062f\u064a\u0633\u0645\u0628\u0631)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u062c/i, /^\u0641/i, /^\u0645/i, /^\u0623/i, /^\u0645/i, /^\u062c/i, /^\u062c/i, /^\u0623/i, /^\u0633/i, /^\u0623/i, /^\u0646/i, /^\u062f/i],
                        any: [/^\u062c\u0627\u0646/i, /^\u0641\u064a\u0641/i, /^\u0645\u0627\u0631/i, /^\u0623\u0641\u0631/i, /^\u0645\u0627\u064a/i, /^\u062c\u0648\u0627/i, /^\u062c\u0648\u064a/i, /^\u0623\u0648\u062a/i, /^\u0633\u0628\u062a/i, /^\u0623\u0643\u062a/i, /^\u0646\u0648\u0641/i, /^\u062f\u064a\u0633/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u062d\u0646\u062b\u0631\u062e\u062c\u0633]/i,
                        short: /^(\u0623\u062d\u062f|\u0627\u062b\u0646\u064a\u0646|\u062b\u0644\u0627\u062b\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062e\u0645\u064a\u0633|\u062c\u0645\u0639\u0629|\u0633\u0628\u062a)/i,
                        abbreviated: /^(\u0623\u062d\u062f|\u0627\u062b\u0646|\u062b\u0644\u0627|\u0623\u0631\u0628|\u062e\u0645\u064a|\u062c\u0645\u0639\u0629|\u0633\u0628\u062a)/i,
                        wide: /^(\u0627\u0644\u0623\u062d\u062f|\u0627\u0644\u0627\u062b\u0646\u064a\u0646|\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621|\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621|\u0627\u0644\u062e\u0645\u064a\u0633|\u0627\u0644\u062c\u0645\u0639\u0629|\u0627\u0644\u0633\u0628\u062a)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u062d/i, /^\u0646/i, /^\u062b/i, /^\u0631/i, /^\u062e/i, /^\u062c/i, /^\u0633/i],
                        wide: [/^\u0627\u0644\u0623\u062d\u062f/i, /^\u0627\u0644\u0627\u062b\u0646\u064a\u0646/i, /^\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621/i, /^\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621/i, /^\u0627\u0644\u062e\u0645\u064a\u0633/i, /^\u0627\u0644\u062c\u0645\u0639\u0629/i, /^\u0627\u0644\u0633\u0628\u062a/i],
                        any: [/^\u0623\u062d/i, /^\u0627\u062b/i, /^\u062b/i, /^\u0623\u0631/i, /^\u062e/i, /^\u062c/i, /^\u0633/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
                        any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^mi/i,
                            noon: /^no/i,
                            morning: /morning/i,
                            afternoon: /afternoon/i,
                            evening: /evening/i,
                            night: /night/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const b = {
            lessThanXSeconds: {
                one: "\u0623\u0642\u0644 \u0645\u0646 \u062b\u0627\u0646\u064a\u0629",
                two: "\u0623\u0642\u0644 \u0645\u0646 \u062b\u0627\u0646\u064a\u062a\u064a\u0646",
                threeToTen: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062b\u0648\u0627\u0646\u064a",
                other: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062b\u0627\u0646\u064a\u0629"
            },
            xSeconds: {
                one: "\u062b\u0627\u0646\u064a\u0629",
                two: "\u062b\u0627\u0646\u064a\u062a\u064a\u0646",
                threeToTen: "{{count}} \u062b\u0648\u0627\u0646\u064a",
                other: "{{count}} \u062b\u0627\u0646\u064a\u0629"
            },
            halfAMinute: "\u0646\u0635 \u062f\u0642\u064a\u0642\u0629",
            lessThanXMinutes: {
                one: "\u0623\u0642\u0644 \u0645\u0646 \u062f\u0642\u064a\u0642\u0629",
                two: "\u0623\u0642\u0644 \u0645\u0646 \u062f\u0642\u064a\u0642\u062a\u064a\u0646",
                threeToTen: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062f\u0642\u0627\u064a\u0642",
                other: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062f\u0642\u064a\u0642\u0629"
            },
            xMinutes: {
                one: "\u062f\u0642\u064a\u0642\u0629",
                two: "\u062f\u0642\u064a\u0642\u062a\u064a\u0646",
                threeToTen: "{{count}} \u062f\u0642\u0627\u064a\u0642",
                other: "{{count}} \u062f\u0642\u064a\u0642\u0629"
            },
            aboutXHours: {
                one: "\u062d\u0648\u0627\u0644\u064a \u0633\u0627\u0639\u0629",
                two: "\u062d\u0648\u0627\u0644\u064a \u0633\u0627\u0639\u062a\u064a\u0646",
                threeToTen: "\u062d\u0648\u0627\u0644\u064a {{count}} \u0633\u0627\u0639\u0627\u062a",
                other: "\u062d\u0648\u0627\u0644\u064a {{count}} \u0633\u0627\u0639\u0629"
            },
            xHours: {
                one: "\u0633\u0627\u0639\u0629",
                two: "\u0633\u0627\u0639\u062a\u064a\u0646",
                threeToTen: "{{count}} \u0633\u0627\u0639\u0627\u062a",
                other: "{{count}} \u0633\u0627\u0639\u0629"
            },
            xDays: {
                one: "\u064a\u0648\u0645",
                two: "\u064a\u0648\u0645\u064a\u0646",
                threeToTen: "{{count}} \u0623\u064a\u0627\u0645",
                other: "{{count}} \u064a\u0648\u0645"
            },
            aboutXWeeks: {
                one: "\u062d\u0648\u0627\u0644\u064a \u0623\u0633\u0628\u0648\u0639",
                two: "\u062d\u0648\u0627\u0644\u064a \u0623\u0633\u0628\u0648\u0639\u064a\u0646",
                threeToTen: "\u062d\u0648\u0627\u0644\u064a {{count}} \u0623\u0633\u0627\u0628\u064a\u0639",
                other: "\u062d\u0648\u0627\u0644\u064a {{count}} \u0623\u0633\u0628\u0648\u0639"
            },
            xWeeks: {
                one: "\u0623\u0633\u0628\u0648\u0639",
                two: "\u0623\u0633\u0628\u0648\u0639\u064a\u0646",
                threeToTen: "{{count}} \u0623\u0633\u0627\u0628\u064a\u0639",
                other: "{{count}} \u0623\u0633\u0628\u0648\u0639"
            },
            aboutXMonths: {
                one: "\u062d\u0648\u0627\u0644\u064a \u0634\u0647\u0631",
                two: "\u062d\u0648\u0627\u0644\u064a \u0634\u0647\u0631\u064a\u0646",
                threeToTen: "\u062d\u0648\u0627\u0644\u064a {{count}} \u0623\u0634\u0647\u0631",
                other: "\u062d\u0648\u0627\u0644\u064a {{count}} \u0634\u0647\u0631"
            },
            xMonths: {
                one: "\u0634\u0647\u0631",
                two: "\u0634\u0647\u0631\u064a\u0646",
                threeToTen: "{{count}} \u0623\u0634\u0647\u0631",
                other: "{{count}} \u0634\u0647\u0631"
            },
            aboutXYears: {
                one: "\u062d\u0648\u0627\u0644\u064a \u0633\u0646\u0629",
                two: "\u062d\u0648\u0627\u0644\u064a \u0633\u0646\u062a\u064a\u0646",
                threeToTen: "\u062d\u0648\u0627\u0644\u064a {{count}} \u0633\u0646\u064a\u0646",
                other: "\u062d\u0648\u0627\u0644\u064a {{count}} \u0633\u0646\u0629"
            },
            xYears: {
                one: "\u0639\u0627\u0645",
                two: "\u0639\u0627\u0645\u064a\u0646",
                threeToTen: "{{count}} \u0623\u0639\u0648\u0627\u0645",
                other: "{{count}} \u0639\u0627\u0645"
            },
            overXYears: {
                one: "\u0623\u0643\u062b\u0631 \u0645\u0646 \u0633\u0646\u0629",
                two: "\u0623\u0643\u062b\u0631 \u0645\u0646 \u0633\u0646\u062a\u064a\u0646",
                threeToTen: "\u0623\u0643\u062b\u0631 \u0645\u0646 {{count}} \u0633\u0646\u064a\u0646",
                other: "\u0623\u0643\u062b\u0631 \u0645\u0646 {{count}} \u0633\u0646\u0629"
            },
            almostXYears: {
                one: "\u0639\u0627\u0645 \u062a\u0642\u0631\u064a\u0628\u064b\u0627",
                two: "\u0639\u0627\u0645\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u064b\u0627",
                threeToTen: "{{count}} \u0623\u0639\u0648\u0627\u0645 \u062a\u0642\u0631\u064a\u0628\u064b\u0627",
                other: "{{count}} \u0639\u0627\u0645 \u062a\u0642\u0631\u064a\u0628\u064b\u0627"
            }
        }
          , y = {
            date: r({
                formats: {
                    full: "EEEE\u060c do MMMM y",
                    long: "do MMMM y",
                    medium: "dd/MMM/y",
                    short: "d/MM/y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u0627\u0644\u0633\u0627\u0639\u0629' {{time}}",
                    long: "{{date}} '\u0627\u0644\u0633\u0627\u0639\u0629' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , k = {
            lastWeek: "eeee '\u0627\u0644\u0644\u064a \u062c\u0627\u064a \u0627\u0644\u0633\u0627\u0639\u0629' p",
            yesterday: "'\u0625\u0645\u0628\u0627\u0631\u062d \u0627\u0644\u0633\u0627\u0639\u0629' p",
            today: "'\u0627\u0644\u0646\u0647\u0627\u0631\u062f\u0629 \u0627\u0644\u0633\u0627\u0639\u0629' p",
            tomorrow: "'\u0628\u0643\u0631\u0629 \u0627\u0644\u0633\u0627\u0639\u0629' p",
            nextWeek: "eeee '\u0627\u0644\u0633\u0627\u0639\u0629' p",
            other: "P"
        }
          , M = {
            code: "ar-EG",
            formatDistance: (e,t,n)=>{
                let a;
                const r = b[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : 2 === t ? r.two : t <= 10 ? r.threeToTen.replace("{{count}}", String(t)) : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? `\u0641\u064a \u062e\u0644\u0627\u0644 ${a}` : `\u0645\u0646\u0630 ${a}` : a
            }
            ,
            formatLong: y,
            formatRelative: (e,t,n,a)=>k[e],
            localize: {
                ordinalNumber: (e,t)=>String(e),
                era: s({
                    values: {
                        narrow: ["\u0642", "\u0628"],
                        abbreviated: ["\u0642.\u0645", "\u0628.\u0645"],
                        wide: ["\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f", "\u0628\u0639\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u06311", "\u06312", "\u06313", "\u06314"],
                        wide: ["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u064a", "\u0641", "\u0645", "\u0623", "\u0645", "\u064a", "\u064a", "\u0623", "\u0633", "\u0623", "\u0646", "\u062f"],
                        abbreviated: ["\u064a\u0646\u0627", "\u0641\u0628\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u0640", "\u064a\u0648\u0644\u0640", "\u0623\u063a\u0633\u0640", "\u0633\u0628\u062a\u0640", "\u0623\u0643\u062a\u0640", "\u0646\u0648\u0641\u0640", "\u062f\u064a\u0633\u0640"],
                        wide: ["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", "\u062c", "\u0633"],
                        short: ["\u0623\u062d\u062f", "\u0627\u062b\u0646\u064a\u0646", "\u062b\u0644\u0627\u062b\u0627\u0621", "\u0623\u0631\u0628\u0639\u0627\u0621", "\u062e\u0645\u064a\u0633", "\u062c\u0645\u0639\u0629", "\u0633\u0628\u062a"],
                        abbreviated: ["\u0623\u062d\u062f", "\u0627\u062b\u0646\u064a\u0646", "\u062b\u0644\u0627\u062b\u0627\u0621", "\u0623\u0631\u0628\u0639\u0627\u0621", "\u062e\u0645\u064a\u0633", "\u062c\u0645\u0639\u0629", "\u0633\u0628\u062a"],
                        wide: ["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646",
                            noon: "\u0638",
                            morning: "\u0635\u0628\u0627\u062d\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0645\u0633\u0627\u0621\u064b",
                            night: "\u0644\u064a\u0644\u0627\u064b"
                        },
                        abbreviated: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            noon: "\u0638\u0647\u0631\u0627\u064b",
                            morning: "\u0635\u0628\u0627\u062d\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0645\u0633\u0627\u0621\u064b",
                            night: "\u0644\u064a\u0644\u0627\u064b"
                        },
                        wide: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            noon: "\u0638\u0647\u0631\u0627\u064b",
                            morning: "\u0635\u0628\u0627\u062d\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0645\u0633\u0627\u0621\u064b",
                            night: "\u0644\u064a\u0644\u0627\u064b"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646",
                            noon: "\u0638",
                            morning: "\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644"
                        },
                        abbreviated: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            noon: "\u0638\u0647\u0631\u0627\u064b",
                            morning: "\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644"
                        },
                        wide: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            morning: "\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d",
                            noon: "\u0638\u0647\u0631\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)/,
                    parsePattern: /\d+/i,
                    valueCallback: function(e) {
                        return parseInt(e, 10)
                    }
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u0642|\u0628)/g,
                        abbreviated: /^(\u0642.\u0645|\u0628.\u0645)/g,
                        wide: /^(\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f|\u0628\u0639\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f)/g
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u0642/g, /^\u0628/g]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/,
                        abbreviated: /^\u0631[1234]/,
                        wide: /^\u0627\u0644\u0631\u0628\u0639 (\u0627\u0644\u0623\u0648\u0644|\u0627\u0644\u062b\u0627\u0646\u064a|\u0627\u0644\u062b\u0627\u0644\u062b|\u0627\u0644\u0631\u0627\u0628\u0639)/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        wide: [/\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644/, /\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a/, /\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b/, /\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639/],
                        any: [/1/, /2/, /3/, /4/]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(\u064a|\u0641|\u0645|\u0623|\u0633|\u0646|\u062f)/,
                        abbreviated: /^(\u064a\u0646\u0627|\u0641\u0628\u0631|\u0645\u0627\u0631\u0633|\u0623\u0628\u0631\u064a\u0644|\u0645\u0627\u064a\u0648|\u064a\u0648\u0646\u0640|\u064a\u0648\u0644\u0640|\u0623\u063a\u0633\u0640|\u0633\u0628\u062a\u0640|\u0623\u0643\u062a\u0640|\u0646\u0648\u0641\u0640|\u062f\u064a\u0633\u0640)/,
                        wide: /^(\u064a\u0646\u0627\u064a\u0631|\u0641\u0628\u0631\u0627\u064a\u0631|\u0645\u0627\u0631\u0633|\u0623\u0628\u0631\u064a\u0644|\u0645\u0627\u064a\u0648|\u064a\u0648\u0646\u064a\u0648|\u064a\u0648\u0644\u064a\u0648|\u0623\u063a\u0633\u0637\u0633|\u0633\u0628\u062a\u0645\u0628\u0631|\u0623\u0643\u062a\u0648\u0628\u0631|\u0646\u0648\u0641\u0645\u0628\u0631|\u062f\u064a\u0633\u0645\u0628\u0631)/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u064a/, /^\u0641/, /^\u0645/, /^\u0623/, /^\u0645/, /^\u064a/, /^\u064a/, /^\u0623/, /^\u0633/, /^\u0623/, /^\u0646/, /^\u062f/],
                        any: [/^\u064a\u0646\u0627/, /^\u0641\u0628\u0631/, /^\u0645\u0627\u0631\u0633/, /^\u0623\u0628\u0631\u064a\u0644/, /^\u0645\u0627\u064a\u0648/, /^\u064a\u0648\u0646/, /^\u064a\u0648\u0644/, /^\u0623\u063a\u0633/, /^\u0633\u0628\u062a/, /^\u0623\u0643\u062a/, /^\u0646\u0648\u0641/, /^\u062f\u064a\u0633/]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(\u062d|\u0646|\u062b|\u0631|\u062e|\u062c|\u0633)/,
                        short: /^(\u0623\u062d\u062f|\u0627\u062b\u0646\u064a\u0646|\u062b\u0644\u0627\u062b\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062e\u0645\u064a\u0633|\u062c\u0645\u0639\u0629|\u0633\u0628\u062a)/,
                        abbreviated: /^(\u0623\u062d\u062f|\u0627\u062b\u0646\u064a\u0646|\u062b\u0644\u0627\u062b\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062e\u0645\u064a\u0633|\u062c\u0645\u0639\u0629|\u0633\u0628\u062a)/,
                        wide: /^(\u0627\u0644\u0623\u062d\u062f|\u0627\u0644\u0627\u062b\u0646\u064a\u0646|\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621|\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621|\u0627\u0644\u062e\u0645\u064a\u0633|\u0627\u0644\u062c\u0645\u0639\u0629|\u0627\u0644\u0633\u0628\u062a)/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u062d/, /^\u0646/, /^\u062b/, /^\u0631/, /^\u062e/, /^\u062c/, /^\u0633/],
                        any: [/\u0623\u062d\u062f/, /\u0627\u062b\u0646\u064a\u0646/, /\u062b\u0644\u0627\u062b\u0627\u0621/, /\u0623\u0631\u0628\u0639\u0627\u0621/, /\u062e\u0645\u064a\u0633/, /\u062c\u0645\u0639\u0629/, /\u0633\u0628\u062a/]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(\u0635|\u0645|\u0646|\u0638|\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d|\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631|\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621|\u0641\u064a \u0627\u0644\u0644\u064a\u0644)/,
                        abbreviated: /^(\u0635|\u0645|\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644|\u0638\u0647\u0631\u0627\u064b|\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d|\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631|\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621|\u0641\u064a \u0627\u0644\u0644\u064a\u0644)/,
                        wide: /^(\u0635|\u0645|\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644|\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d|\u0638\u0647\u0631\u0627\u064b|\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631|\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621|\u0641\u064a \u0627\u0644\u0644\u064a\u0644)/,
                        any: /^(\u0635|\u0645|\u0635\u0628\u0627\u062d|\u0638\u0647\u0631|\u0645\u0633\u0627\u0621|\u0644\u064a\u0644)/
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u0635/,
                            pm: /^\u0645/,
                            midnight: /^\u0646/,
                            noon: /^\u0638/,
                            morning: /^\u0635/,
                            afternoon: /^\u0628\u0639\u062f/,
                            evening: /^\u0645/,
                            night: /^\u0644/
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const P = {
            lessThanXSeconds: {
                one: "\u0623\u0642\u0644 \u0645\u0646 \u062b\u0627\u0646\u064a\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u0623\u0642\u0644 \u0645\u0646 \u062b\u0627\u0646\u062a\u064a\u0646",
                threeToTen: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062b\u0648\u0627\u0646\u064a",
                other: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062b\u0627\u0646\u064a\u0629"
            },
            xSeconds: {
                one: "\u062b\u0627\u0646\u064a\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u062b\u0627\u0646\u062a\u064a\u0646",
                threeToTen: "{{count}} \u062b\u0648\u0627\u0646\u064a",
                other: "{{count}} \u062b\u0627\u0646\u064a\u0629"
            },
            halfAMinute: "\u0646\u0635\u0641 \u062f\u0642\u064a\u0642\u0629",
            lessThanXMinutes: {
                one: "\u0623\u0642\u0644 \u0645\u0646 \u062f\u0642\u064a\u0642\u0629",
                two: "\u0623\u0642\u0644 \u0645\u0646 \u062f\u0642\u064a\u0642\u062a\u064a\u0646",
                threeToTen: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062f\u0642\u0627\u0626\u0642",
                other: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062f\u0642\u064a\u0642\u0629"
            },
            xMinutes: {
                one: "\u062f\u0642\u064a\u0642\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u062f\u0642\u064a\u0642\u062a\u064a\u0646",
                threeToTen: "{{count}} \u062f\u0642\u0627\u0626\u0642",
                other: "{{count}} \u062f\u0642\u064a\u0642\u0629"
            },
            aboutXHours: {
                one: "\u0633\u0627\u0639\u0629 \u0648\u0627\u062d\u062f\u0629 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0633\u0627\u0639\u062a\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                threeToTen: "{{count}} \u0633\u0627\u0639\u0627\u062a \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0633\u0627\u0639\u0629 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            },
            xHours: {
                one: "\u0633\u0627\u0639\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u0633\u0627\u0639\u062a\u064a\u0646",
                threeToTen: "{{count}} \u0633\u0627\u0639\u0627\u062a",
                other: "{{count}} \u0633\u0627\u0639\u0629"
            },
            xDays: {
                one: "\u064a\u0648\u0645 \u0648\u0627\u062d\u062f",
                two: "\u064a\u0648\u0645\u064a\u0646",
                threeToTen: "{{count}} \u0623\u064a\u0627\u0645",
                other: "{{count}} \u064a\u0648\u0645"
            },
            aboutXWeeks: {
                one: "\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062d\u062f \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0623\u0633\u0628\u0648\u0639\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                threeToTen: "{{count}} \u0623\u0633\u0627\u0628\u064a\u0639 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0623\u0633\u0628\u0648\u0639 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            },
            xWeeks: {
                one: "\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062d\u062f",
                two: "\u0623\u0633\u0628\u0648\u0639\u064a\u0646",
                threeToTen: "{{count}} \u0623\u0633\u0627\u0628\u064a\u0639",
                other: "{{count}} \u0623\u0633\u0628\u0648\u0639"
            },
            aboutXMonths: {
                one: "\u0634\u0647\u0631 \u0648\u0627\u062d\u062f \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0634\u0647\u0631\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                threeToTen: "{{count}} \u0623\u0634\u0647\u0631 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0634\u0647\u0631 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            },
            xMonths: {
                one: "\u0634\u0647\u0631 \u0648\u0627\u062d\u062f",
                two: "\u0634\u0647\u0631\u064a\u0646",
                threeToTen: "{{count}} \u0623\u0634\u0647\u0631",
                other: "{{count}} \u0634\u0647\u0631"
            },
            aboutXYears: {
                one: "\u0639\u0627\u0645 \u0648\u0627\u062d\u062f \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0639\u0627\u0645\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                threeToTen: "{{count}} \u0623\u0639\u0648\u0627\u0645 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0639\u0627\u0645 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            },
            xYears: {
                one: "\u0639\u0627\u0645 \u0648\u0627\u062d\u062f",
                two: "\u0639\u0627\u0645\u064a\u0646",
                threeToTen: "{{count}} \u0623\u0639\u0648\u0627\u0645",
                other: "{{count}} \u0639\u0627\u0645"
            },
            overXYears: {
                one: "\u0623\u0643\u062b\u0631 \u0645\u0646 \u0639\u0627\u0645",
                two: "\u0623\u0643\u062b\u0631 \u0645\u0646 \u0639\u0627\u0645\u064a\u0646",
                threeToTen: "\u0623\u0643\u062b\u0631 \u0645\u0646 {{count}} \u0623\u0639\u0648\u0627\u0645",
                other: "\u0623\u0643\u062b\u0631 \u0645\u0646 {{count}} \u0639\u0627\u0645"
            },
            almostXYears: {
                one: "\u0639\u0627\u0645 \u0648\u0627\u062d\u062f \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0639\u0627\u0645\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                threeToTen: "{{count}} \u0623\u0639\u0648\u0627\u0645 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0639\u0627\u0645 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            }
        }
          , W = {
            date: r({
                formats: {
                    full: "EEEE, MMMM do, y",
                    long: "MMMM do, y",
                    medium: "MMM d, y",
                    short: "MM/dd/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u0639\u0646\u062f' {{time}}",
                    long: "{{date}} '\u0639\u0646\u062f' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , x = {
            lastWeek: "'\u0623\u062e\u0631' eeee '\u0639\u0646\u062f' p",
            yesterday: "'\u0623\u0645\u0633 \u0639\u0646\u062f' p",
            today: "'\u0627\u0644\u064a\u0648\u0645 \u0639\u0646\u062f' p",
            tomorrow: "'\u063a\u062f\u0627\u064b \u0639\u0646\u062f' p",
            nextWeek: "eeee '\u0639\u0646\u062f' p",
            other: "P"
        }
          , S = {
            code: "ar-MA",
            formatDistance: (e,t,n)=>{
                n = n || {};
                const a = P[e];
                let r;
                return r = "string" === typeof a ? a : 1 === t ? a.one : 2 === t ? a.two : t <= 10 ? a.threeToTen.replace("{{count}}", String(t)) : a.other.replace("{{count}}", String(t)),
                n.addSuffix ? n.comparison && n.comparison > 0 ? "\u0641\u064a \u062e\u0644\u0627\u0644 " + r : "\u0645\u0646\u0630 " + r : r
            }
            ,
            formatLong: W,
            formatRelative: (e,t,n,a)=>x[e],
            localize: {
                ordinalNumber: e=>String(e),
                era: s({
                    values: {
                        narrow: ["\u0642", "\u0628"],
                        abbreviated: ["\u0642.\u0645.", "\u0628.\u0645."],
                        wide: ["\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f", "\u0628\u0639\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u06311", "\u06312", "\u06313", "\u06314"],
                        wide: ["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>Number(e) - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u064a", "\u0641", "\u0645", "\u0623", "\u0645", "\u064a", "\u064a", "\u063a", "\u0634", "\u0623", "\u0646", "\u062f"],
                        abbreviated: ["\u064a\u0646\u0627", "\u0641\u0628\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a", "\u064a\u0648\u0646\u0640", "\u064a\u0648\u0644\u0640", "\u063a\u0634\u062a", "\u0634\u062a\u0646\u0640", "\u0623\u0643\u062a\u0640", "\u0646\u0648\u0646\u0640", "\u062f\u062c\u0646\u0640"],
                        wide: ["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648\u0632", "\u063a\u0634\u062a", "\u0634\u062a\u0646\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0646\u0628\u0631", "\u062f\u062c\u0646\u0628\u0631"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", "\u062c", "\u0633"],
                        short: ["\u0623\u062d\u062f", "\u0627\u062b\u0646\u064a\u0646", "\u062b\u0644\u0627\u062b\u0627\u0621", "\u0623\u0631\u0628\u0639\u0627\u0621", "\u062e\u0645\u064a\u0633", "\u062c\u0645\u0639\u0629", "\u0633\u0628\u062a"],
                        abbreviated: ["\u0623\u062d\u062f", "\u0627\u062b\u0646\u0640", "\u062b\u0644\u0627", "\u0623\u0631\u0628\u0640", "\u062e\u0645\u064a\u0640", "\u062c\u0645\u0639\u0629", "\u0633\u0628\u062a"],
                        wide: ["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0625\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646",
                            noon: "\u0638",
                            morning: "\u0635\u0628\u0627\u062d\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0645\u0633\u0627\u0621\u0627\u064b",
                            night: "\u0644\u064a\u0644\u0627\u064b"
                        },
                        abbreviated: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0635\u0628\u0627\u062d\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0645\u0633\u0627\u0621\u0627\u064b",
                            night: "\u0644\u064a\u0644\u0627\u064b"
                        },
                        wide: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0635\u0628\u0627\u062d\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0645\u0633\u0627\u0621\u0627\u064b",
                            night: "\u0644\u064a\u0644\u0627\u064b"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646",
                            noon: "\u0638",
                            morning: "\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0640\u0647\u0631",
                            evening: "\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644"
                        },
                        abbreviated: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644"
                        },
                        wide: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0635\u0628\u0627\u062d\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0640\u0647\u0631",
                            evening: "\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u0642|\u0628)/i,
                        abbreviated: /^(\u0642\.?\s?\u0645\.?|\u0642\.?\s?\u0645\.?\s?|a\.?\s?d\.?|c\.?\s?)/i,
                        wide: /^(\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f|\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f|\u0628\u0639\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f|\u0628\u0639\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u0642\u0628\u0644/i, /^\u0628\u0639\u062f/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^\u0631[1234]/i,
                        wide: /^\u0627\u0644\u0631\u0628\u0639 [1234]/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>Number(e) + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[\u064a\u0641\u0645\u0623\u0645\u0633\u0646\u062f]/i,
                        abbreviated: /^(\u064a\u0646|\u0641|\u0645\u0627\u0631|\u0623\u0628|\u0645\u0627\u064a|\u064a\u0648\u0646|\u064a\u0648\u0644|\u063a\u0634|\u0634\u062a|\u0623\u0643|\u0646|\u062f)/i,
                        wide: /^(\u064a\u0646|\u0641|\u0645\u0627\u0631|\u0623\u0628|\u0645\u0627\u064a|\u064a\u0648\u0646|\u064a\u0648\u0644|\u063a\u0634|\u0634\u062a|\u0623\u0643|\u0646|\u062f)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u064a/i, /^\u0641/i, /^\u0645/i, /^\u0623/i, /^\u0645/i, /^\u064a/i, /^\u064a/i, /^\u063a/i, /^\u0634/i, /^\u0623/i, /^\u0646/i, /^\u062f/i],
                        any: [/^\u064a\u0646/i, /^\u0641\u0628/i, /^\u0645\u0627\u0631/i, /^\u0623\u0628/i, /^\u0645\u0627\u064a/i, /^\u064a\u0648\u0646/i, /^\u064a\u0648\u0644/i, /^\u063a\u0634\u062a/i, /^\u0634/i, /^\u0623\u0643/i, /^\u0646/i, /^\u062f/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u062d\u0646\u062b\u0631\u062e\u062c\u0633]/i,
                        short: /^(\u0623\u062d\u062f|\u0625\u062b\u0646\u064a\u0646|\u062b\u0644\u0627\u062b\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062e\u0645\u064a\u0633|\u062c\u0645\u0639\u0629|\u0633\u0628\u062a)/i,
                        abbreviated: /^(\u0623\u062d\u062f|\u0625\u062b\u0646|\u062b\u0644\u0627|\u0623\u0631\u0628|\u062e\u0645\u064a|\u062c\u0645\u0639\u0629|\u0633\u0628\u062a)/i,
                        wide: /^(\u0627\u0644\u0623\u062d\u062f|\u0627\u0644\u0625\u062b\u0646\u064a\u0646|\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621|\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621|\u0627\u0644\u062e\u0645\u064a\u0633|\u0627\u0644\u062c\u0645\u0639\u0629|\u0627\u0644\u0633\u0628\u062a)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u062d/i, /^\u0646/i, /^\u062b/i, /^\u0631/i, /^\u062e/i, /^\u062c/i, /^\u0633/i],
                        wide: [/^\u0627\u0644\u0623\u062d\u062f/i, /^\u0627\u0644\u0625\u062b\u0646\u064a\u0646/i, /^\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621/i, /^\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621/i, /^\u0627\u0644\u062e\u0645\u064a\u0633/i, /^\u0627\u0644\u062c\u0645\u0639\u0629/i, /^\u0627\u0644\u0633\u0628\u062a/i],
                        any: [/^\u0623\u062d/i, /^\u0625\u062b/i, /^\u062b/i, /^\u0623\u0631/i, /^\u062e/i, /^\u062c/i, /^\u0633/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
                        any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^mi/i,
                            noon: /^no/i,
                            morning: /morning/i,
                            afternoon: /afternoon/i,
                            evening: /evening/i,
                            night: /night/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const D = {
            lessThanXSeconds: {
                one: "\u0623\u0642\u0644 \u0645\u0646 \u062b\u0627\u0646\u064a\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u0623\u0642\u0644 \u0645\u0646 \u062b\u0627\u0646\u062a\u064a\u0646",
                threeToTen: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062b\u0648\u0627\u0646\u064a",
                other: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062b\u0627\u0646\u064a\u0629"
            },
            xSeconds: {
                one: "\u062b\u0627\u0646\u064a\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u062b\u0627\u0646\u062a\u064a\u0646",
                threeToTen: "{{count}} \u062b\u0648\u0627\u0646\u064a",
                other: "{{count}} \u062b\u0627\u0646\u064a\u0629"
            },
            halfAMinute: "\u0646\u0635\u0641 \u062f\u0642\u064a\u0642\u0629",
            lessThanXMinutes: {
                one: "\u0623\u0642\u0644 \u0645\u0646 \u062f\u0642\u064a\u0642\u0629",
                two: "\u0623\u0642\u0644 \u0645\u0646 \u062f\u0642\u064a\u0642\u062a\u064a\u0646",
                threeToTen: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062f\u0642\u0627\u0626\u0642",
                other: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062f\u0642\u064a\u0642\u0629"
            },
            xMinutes: {
                one: "\u062f\u0642\u064a\u0642\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u062f\u0642\u064a\u0642\u062a\u064a\u0646",
                threeToTen: "{{count}} \u062f\u0642\u0627\u0626\u0642",
                other: "{{count}} \u062f\u0642\u064a\u0642\u0629"
            },
            aboutXHours: {
                one: "\u0633\u0627\u0639\u0629 \u0648\u0627\u062d\u062f\u0629 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0633\u0627\u0639\u062a\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                threeToTen: "{{count}} \u0633\u0627\u0639\u0627\u062a \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0633\u0627\u0639\u0629 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            },
            xHours: {
                one: "\u0633\u0627\u0639\u0629 \u0648\u0627\u062d\u062f\u0629",
                two: "\u0633\u0627\u0639\u062a\u064a\u0646",
                threeToTen: "{{count}} \u0633\u0627\u0639\u0627\u062a",
                other: "{{count}} \u0633\u0627\u0639\u0629"
            },
            xDays: {
                one: "\u064a\u0648\u0645 \u0648\u0627\u062d\u062f",
                two: "\u064a\u0648\u0645\u064a\u0646",
                threeToTen: "{{count}} \u0623\u064a\u0627\u0645",
                other: "{{count}} \u064a\u0648\u0645"
            },
            aboutXWeeks: {
                one: "\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062d\u062f \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0623\u0633\u0628\u0648\u0639\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                threeToTen: "{{count}} \u0623\u0633\u0627\u0628\u064a\u0639 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0623\u0633\u0628\u0648\u0639 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            },
            xWeeks: {
                one: "\u0623\u0633\u0628\u0648\u0639 \u0648\u0627\u062d\u062f",
                two: "\u0623\u0633\u0628\u0648\u0639\u064a\u0646",
                threeToTen: "{{count}} \u0623\u0633\u0627\u0628\u064a\u0639",
                other: "{{count}} \u0623\u0633\u0628\u0648\u0639"
            },
            aboutXMonths: {
                one: "\u0634\u0647\u0631 \u0648\u0627\u062d\u062f \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0634\u0647\u0631\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                threeToTen: "{{count}} \u0623\u0634\u0647\u0631 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0634\u0647\u0631 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            },
            xMonths: {
                one: "\u0634\u0647\u0631 \u0648\u0627\u062d\u062f",
                two: "\u0634\u0647\u0631\u064a\u0646",
                threeToTen: "{{count}} \u0623\u0634\u0647\u0631",
                other: "{{count}} \u0634\u0647\u0631"
            },
            aboutXYears: {
                one: "\u0639\u0627\u0645 \u0648\u0627\u062d\u062f \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0639\u0627\u0645\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                threeToTen: "{{count}} \u0623\u0639\u0648\u0627\u0645 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0639\u0627\u0645 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            },
            xYears: {
                one: "\u0639\u0627\u0645 \u0648\u0627\u062d\u062f",
                two: "\u0639\u0627\u0645\u064a\u0646",
                threeToTen: "{{count}} \u0623\u0639\u0648\u0627\u0645",
                other: "{{count}} \u0639\u0627\u0645"
            },
            overXYears: {
                one: "\u0623\u0643\u062b\u0631 \u0645\u0646 \u0639\u0627\u0645",
                two: "\u0623\u0643\u062b\u0631 \u0645\u0646 \u0639\u0627\u0645\u064a\u0646",
                threeToTen: "\u0623\u0643\u062b\u0631 \u0645\u0646 {{count}} \u0623\u0639\u0648\u0627\u0645",
                other: "\u0623\u0643\u062b\u0631 \u0645\u0646 {{count}} \u0639\u0627\u0645"
            },
            almostXYears: {
                one: "\u0639\u0627\u0645 \u0648\u0627\u062d\u062f \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                two: "\u0639\u0627\u0645\u064a\u0646 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                threeToTen: "{{count}} \u0623\u0639\u0648\u0627\u0645 \u062a\u0642\u0631\u064a\u0628\u0627\u064b",
                other: "{{count}} \u0639\u0627\u0645 \u062a\u0642\u0631\u064a\u0628\u0627\u064b"
            }
        }
          , j = {
            date: r({
                formats: {
                    full: "EEEE, MMMM do, y",
                    long: "MMMM do, y",
                    medium: "MMM d, y",
                    short: "MM/dd/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u0639\u0646\u062f' {{time}}",
                    long: "{{date}} '\u0639\u0646\u062f' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , C = {
            lastWeek: "'\u0623\u062e\u0631' eeee '\u0639\u0646\u062f' p",
            yesterday: "'\u0623\u0645\u0633 \u0639\u0646\u062f' p",
            today: "'\u0627\u0644\u064a\u0648\u0645 \u0639\u0646\u062f' p",
            tomorrow: "'\u063a\u062f\u0627\u064b \u0639\u0646\u062f' p",
            nextWeek: "eeee '\u0639\u0646\u062f' p",
            other: "P"
        }
          , T = {
            code: "ar-SA",
            formatDistance: (e,t,n)=>{
                let a;
                const r = D[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : 2 === t ? r.two : t <= 10 ? r.threeToTen.replace("{{count}}", String(t)) : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "\u0641\u064a \u062e\u0644\u0627\u0644 " + a : "\u0645\u0646\u0630 " + a : a
            }
            ,
            formatLong: j,
            formatRelative: (e,t,n,a)=>C[e],
            localize: {
                ordinalNumber: e=>String(e),
                era: s({
                    values: {
                        narrow: ["\u0642", "\u0628"],
                        abbreviated: ["\u0642.\u0645.", "\u0628.\u0645."],
                        wide: ["\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f", "\u0628\u0639\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u06311", "\u06312", "\u06313", "\u06314"],
                        wide: ["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u064a", "\u0641", "\u0645", "\u0623", "\u0645", "\u064a", "\u064a", "\u0623", "\u0633", "\u0623", "\u0646", "\u062f"],
                        abbreviated: ["\u064a\u0646\u0627", "\u0641\u0628\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u0640", "\u064a\u0648\u0644\u0640", "\u0623\u063a\u0633\u0640", "\u0633\u0628\u062a\u0640", "\u0623\u0643\u062a\u0640", "\u0646\u0648\u0641\u0640", "\u062f\u064a\u0633\u0640"],
                        wide: ["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", "\u062c", "\u0633"],
                        short: ["\u0623\u062d\u062f", "\u0627\u062b\u0646\u064a\u0646", "\u062b\u0644\u0627\u062b\u0627\u0621", "\u0623\u0631\u0628\u0639\u0627\u0621", "\u062e\u0645\u064a\u0633", "\u062c\u0645\u0639\u0629", "\u0633\u0628\u062a"],
                        abbreviated: ["\u0623\u062d\u062f", "\u0627\u062b\u0646\u0640", "\u062b\u0644\u0627", "\u0623\u0631\u0628\u0640", "\u062e\u0645\u064a\u0640", "\u062c\u0645\u0639\u0629", "\u0633\u0628\u062a"],
                        wide: ["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646",
                            noon: "\u0638",
                            morning: "\u0635\u0628\u0627\u062d\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0645\u0633\u0627\u0621\u0627\u064b",
                            night: "\u0644\u064a\u0644\u0627\u064b"
                        },
                        abbreviated: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0635\u0628\u0627\u062d\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0645\u0633\u0627\u0621\u0627\u064b",
                            night: "\u0644\u064a\u0644\u0627\u064b"
                        },
                        wide: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0635\u0628\u0627\u062d\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0645\u0633\u0627\u0621\u0627\u064b",
                            night: "\u0644\u064a\u0644\u0627\u064b"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646",
                            noon: "\u0638",
                            morning: "\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0640\u0647\u0631",
                            evening: "\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644"
                        },
                        abbreviated: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0647\u0631",
                            evening: "\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644"
                        },
                        wide: {
                            am: "\u0635",
                            pm: "\u0645",
                            midnight: "\u0646\u0635\u0641 \u0627\u0644\u0644\u064a\u0644",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0635\u0628\u0627\u062d\u0627\u064b",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0638\u0640\u0647\u0631",
                            evening: "\u0641\u064a \u0627\u0644\u0645\u0633\u0627\u0621",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u0642|\u0628)/i,
                        abbreviated: /^(\u0642\.?\s?\u0645\.?|\u0642\.?\s?\u0645\.?\s?|a\.?\s?d\.?|c\.?\s?)/i,
                        wide: /^(\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f|\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f|\u0628\u0639\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f|\u0628\u0639\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u0642\u0628\u0644/i, /^\u0628\u0639\u062f/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^\u0631[1234]/i,
                        wide: /^\u0627\u0644\u0631\u0628\u0639 [1234]/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[\u064a\u0641\u0645\u0623\u0645\u0633\u0646\u062f]/i,
                        abbreviated: /^(\u064a\u0646|\u0641|\u0645\u0627\u0631|\u0623\u0628|\u0645\u0627\u064a|\u064a\u0648\u0646|\u064a\u0648\u0644|\u0623\u063a|\u0633|\u0623\u0643|\u0646|\u062f)/i,
                        wide: /^(\u064a\u0646|\u0641|\u0645\u0627\u0631|\u0623\u0628|\u0645\u0627\u064a|\u064a\u0648\u0646|\u064a\u0648\u0644|\u0623\u063a|\u0633|\u0623\u0643|\u0646|\u062f)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u064a/i, /^\u0641/i, /^\u0645/i, /^\u0623/i, /^\u0645/i, /^\u064a/i, /^\u064a/i, /^\u0623/i, /^\u0633/i, /^\u0623/i, /^\u0646/i, /^\u062f/i],
                        any: [/^\u064a\u0646/i, /^\u0641/i, /^\u0645\u0627\u0631/i, /^\u0623\u0628/i, /^\u0645\u0627\u064a/i, /^\u064a\u0648\u0646/i, /^\u064a\u0648\u0644/i, /^\u0623\u063a/i, /^\u0633/i, /^\u0623\u0643/i, /^\u0646/i, /^\u062f/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u062d\u0646\u062b\u0631\u062e\u062c\u0633]/i,
                        short: /^(\u0623\u062d\u062f|\u0627\u062b\u0646\u064a\u0646|\u062b\u0644\u0627\u062b\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062e\u0645\u064a\u0633|\u062c\u0645\u0639\u0629|\u0633\u0628\u062a)/i,
                        abbreviated: /^(\u0623\u062d\u062f|\u0627\u062b\u0646|\u062b\u0644\u0627|\u0623\u0631\u0628|\u062e\u0645\u064a|\u062c\u0645\u0639\u0629|\u0633\u0628\u062a)/i,
                        wide: /^(\u0627\u0644\u0623\u062d\u062f|\u0627\u0644\u0627\u062b\u0646\u064a\u0646|\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621|\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621|\u0627\u0644\u062e\u0645\u064a\u0633|\u0627\u0644\u062c\u0645\u0639\u0629|\u0627\u0644\u0633\u0628\u062a)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u062d/i, /^\u0646/i, /^\u062b/i, /^\u0631/i, /^\u062e/i, /^\u062c/i, /^\u0633/i],
                        wide: [/^\u0627\u0644\u0623\u062d\u062f/i, /^\u0627\u0644\u0627\u062b\u0646\u064a\u0646/i, /^\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621/i, /^\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621/i, /^\u0627\u0644\u062e\u0645\u064a\u0633/i, /^\u0627\u0644\u062c\u0645\u0639\u0629/i, /^\u0627\u0644\u0633\u0628\u062a/i],
                        any: [/^\u0623\u062d/i, /^\u0627\u062b/i, /^\u062b/i, /^\u0623\u0631/i, /^\u062e/i, /^\u062c/i, /^\u0633/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
                        any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^mi/i,
                            noon: /^no/i,
                            morning: /morning/i,
                            afternoon: /afternoon/i,
                            evening: /evening/i,
                            night: /night/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const E = {
            lessThanXSeconds: {
                one: "\u0623\u0642\u0644 \u0645\u0646 \u062b\u0627\u0646\u064a\u0629",
                two: "\u0623\u0642\u0644 \u0645\u0646 \u0632\u0648\u0632 \u062b\u0648\u0627\u0646\u064a",
                threeToTen: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062b\u0648\u0627\u0646\u064a",
                other: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062b\u0627\u0646\u064a\u0629"
            },
            xSeconds: {
                one: "\u062b\u0627\u0646\u064a\u0629",
                two: "\u0632\u0648\u0632 \u062b\u0648\u0627\u0646\u064a",
                threeToTen: "{{count}} \u062b\u0648\u0627\u0646\u064a",
                other: "{{count}} \u062b\u0627\u0646\u064a\u0629"
            },
            halfAMinute: "\u0646\u0635 \u062f\u0642\u064a\u0642\u0629",
            lessThanXMinutes: {
                one: "\u0623\u0642\u0644 \u0645\u0646 \u062f\u0642\u064a\u0642\u0629",
                two: "\u0623\u0642\u0644 \u0645\u0646 \u062f\u0642\u064a\u0642\u062a\u064a\u0646",
                threeToTen: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062f\u0642\u0627\u064a\u0642",
                other: "\u0623\u0642\u0644 \u0645\u0646 {{count}} \u062f\u0642\u064a\u0642\u0629"
            },
            xMinutes: {
                one: "\u062f\u0642\u064a\u0642\u0629",
                two: "\u062f\u0642\u064a\u0642\u062a\u064a\u0646",
                threeToTen: "{{count}} \u062f\u0642\u0627\u064a\u0642",
                other: "{{count}} \u062f\u0642\u064a\u0642\u0629"
            },
            aboutXHours: {
                one: "\u0633\u0627\u0639\u0629 \u062a\u0642\u0631\u064a\u0628",
                two: "\u0633\u0627\u0639\u062a\u064a\u0646 \u062a\u0642\u0631\u064a\u0628",
                threeToTen: "{{count}} \u0633\u0648\u0627\u064a\u0639 \u062a\u0642\u0631\u064a\u0628",
                other: "{{count}} \u0633\u0627\u0639\u0629 \u062a\u0642\u0631\u064a\u0628"
            },
            xHours: {
                one: "\u0633\u0627\u0639\u0629",
                two: "\u0633\u0627\u0639\u062a\u064a\u0646",
                threeToTen: "{{count}} \u0633\u0648\u0627\u064a\u0639",
                other: "{{count}} \u0633\u0627\u0639\u0629"
            },
            xDays: {
                one: "\u0646\u0647\u0627\u0631",
                two: "\u0646\u0647\u0627\u0631\u064a\u0646",
                threeToTen: "{{count}} \u0623\u064a\u0627\u0645",
                other: "{{count}} \u064a\u0648\u0645"
            },
            aboutXWeeks: {
                one: "\u062c\u0645\u0639\u0629 \u062a\u0642\u0631\u064a\u0628",
                two: "\u062c\u0645\u0639\u062a\u064a\u0646 \u062a\u0642\u0631\u064a\u0628",
                threeToTen: "{{count}} \u062c\u0645\u0627\u0639 \u062a\u0642\u0631\u064a\u0628",
                other: "{{count}} \u062c\u0645\u0639\u0629 \u062a\u0642\u0631\u064a\u0628"
            },
            xWeeks: {
                one: "\u062c\u0645\u0639\u0629",
                two: "\u062c\u0645\u0639\u062a\u064a\u0646",
                threeToTen: "{{count}} \u062c\u0645\u0627\u0639",
                other: "{{count}} \u062c\u0645\u0639\u0629"
            },
            aboutXMonths: {
                one: "\u0634\u0647\u0631 \u062a\u0642\u0631\u064a\u0628",
                two: "\u0634\u0647\u0631\u064a\u0646 \u062a\u0642\u0631\u064a\u0628",
                threeToTen: "{{count}} \u0623\u0634\u0647\u0631\u0629 \u062a\u0642\u0631\u064a\u0628",
                other: "{{count}} \u0634\u0647\u0631 \u062a\u0642\u0631\u064a\u0628"
            },
            xMonths: {
                one: "\u0634\u0647\u0631",
                two: "\u0634\u0647\u0631\u064a\u0646",
                threeToTen: "{{count}} \u0623\u0634\u0647\u0631\u0629",
                other: "{{count}} \u0634\u0647\u0631"
            },
            aboutXYears: {
                one: "\u0639\u0627\u0645 \u062a\u0642\u0631\u064a\u0628",
                two: "\u0639\u0627\u0645\u064a\u0646 \u062a\u0642\u0631\u064a\u0628",
                threeToTen: "{{count}} \u0623\u0639\u0648\u0627\u0645 \u062a\u0642\u0631\u064a\u0628",
                other: "{{count}} \u0639\u0627\u0645 \u062a\u0642\u0631\u064a\u0628"
            },
            xYears: {
                one: "\u0639\u0627\u0645",
                two: "\u0639\u0627\u0645\u064a\u0646",
                threeToTen: "{{count}} \u0623\u0639\u0648\u0627\u0645",
                other: "{{count}} \u0639\u0627\u0645"
            },
            overXYears: {
                one: "\u0623\u0643\u062b\u0631 \u0645\u0646 \u0639\u0627\u0645",
                two: "\u0623\u0643\u062b\u0631 \u0645\u0646 \u0639\u0627\u0645\u064a\u0646",
                threeToTen: "\u0623\u0643\u062b\u0631 \u0645\u0646 {{count}} \u0623\u0639\u0648\u0627\u0645",
                other: "\u0623\u0643\u062b\u0631 \u0645\u0646 {{count}} \u0639\u0627\u0645"
            },
            almostXYears: {
                one: "\u0639\u0627\u0645 \u062a\u0642\u0631\u064a\u0628",
                two: "\u0639\u0627\u0645\u064a\u0646 \u062a\u0642\u0631\u064a\u0628",
                threeToTen: "{{count}} \u0623\u0639\u0648\u0627\u0645 \u062a\u0642\u0631\u064a\u0628",
                other: "{{count}} \u0639\u0627\u0645 \u062a\u0642\u0631\u064a\u0628"
            }
        }
          , N = {
            date: r({
                formats: {
                    full: "EEEE\u060c do MMMM y",
                    long: "do MMMM y",
                    medium: "d MMM y",
                    short: "dd/MM/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss",
                    long: "HH:mm:ss",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u0645\u0639' {{time}}",
                    long: "{{date}} '\u0645\u0639' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , z = {
            lastWeek: "eeee '\u0625\u0644\u064a \u0641\u0627\u062a \u0645\u0639' p",
            yesterday: "'\u0627\u0644\u0628\u0627\u0631\u062d \u0645\u0639' p",
            today: "'\u0627\u0644\u064a\u0648\u0645 \u0645\u0639' p",
            tomorrow: "'\u063a\u062f\u0648\u0629 \u0645\u0639' p",
            nextWeek: "eeee '\u0627\u0644\u062c\u0645\u0639\u0629 \u0627\u0644\u062c\u0627\u064a\u0629 \u0645\u0639' p '\u0646\u0647\u0627\u0631'",
            other: "P"
        }
          , I = {
            code: "ar-TN",
            formatDistance: (e,t,n)=>{
                const a = E[e];
                let r;
                return r = "string" === typeof a ? a : 1 === t ? a.one : 2 === t ? a.two : t <= 10 ? a.threeToTen.replace("{{count}}", String(t)) : a.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "\u0641\u064a " + r : "\u0639\u0646\u062f\u0648 " + r : r
            }
            ,
            formatLong: N,
            formatRelative: e=>z[e],
            localize: {
                ordinalNumber: e=>String(e),
                era: s({
                    values: {
                        narrow: ["\u0642", "\u0628"],
                        abbreviated: ["\u0642.\u0645.", "\u0628.\u0645."],
                        wide: ["\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f", "\u0628\u0639\u062f \u0627\u0644\u0645\u064a\u0644\u0627\u062f"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u06311", "\u06312", "\u06313", "\u06314"],
                        wide: ["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u062f", "\u0646", "\u0623", "\u0633", "\u0623", "\u062c", "\u062c", "\u0645", "\u0623", "\u0645", "\u0641", "\u062c"],
                        abbreviated: ["\u062c\u0627\u0646\u0641\u064a", "\u0641\u064a\u0641\u0631\u064a", "\u0645\u0627\u0631\u0633", "\u0623\u0641\u0631\u064a\u0644", "\u0645\u0627\u064a", "\u062c\u0648\u0627\u0646", "\u062c\u0648\u064a\u0644\u064a\u0629", "\u0623\u0648\u062a", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"],
                        wide: ["\u062c\u0627\u0646\u0641\u064a", "\u0641\u064a\u0641\u0631\u064a", "\u0645\u0627\u0631\u0633", "\u0623\u0641\u0631\u064a\u0644", "\u0645\u0627\u064a", "\u062c\u0648\u0627\u0646", "\u062c\u0648\u064a\u0644\u064a\u0629", "\u0623\u0648\u062a", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", "\u062c", "\u0633"],
                        short: ["\u0623\u062d\u062f", "\u0627\u062b\u0646\u064a\u0646", "\u062b\u0644\u0627\u062b\u0627\u0621", "\u0623\u0631\u0628\u0639\u0627\u0621", "\u062e\u0645\u064a\u0633", "\u062c\u0645\u0639\u0629", "\u0633\u0628\u062a"],
                        abbreviated: ["\u0623\u062d\u062f", "\u0627\u062b\u0646\u064a\u0646", "\u062b\u0644\u0627\u062b\u0627\u0621", "\u0623\u0631\u0628\u0639\u0627\u0621", "\u062e\u0645\u064a\u0633", "\u062c\u0645\u0639\u0629", "\u0633\u0628\u062a"],
                        wide: ["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0635",
                            pm: "\u0639",
                            morning: "\u0627\u0644\u0635\u0628\u0627\u062d",
                            noon: "\u0627\u0644\u0642\u0627\u064a\u0644\u0629",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0642\u0627\u064a\u0644\u0629",
                            evening: "\u0627\u0644\u0639\u0634\u064a\u0629",
                            night: "\u0627\u0644\u0644\u064a\u0644",
                            midnight: "\u0646\u0635 \u0627\u0644\u0644\u064a\u0644"
                        },
                        abbreviated: {
                            am: "\u0635",
                            pm: "\u0639",
                            morning: "\u0627\u0644\u0635\u0628\u0627\u062d",
                            noon: "\u0627\u0644\u0642\u0627\u064a\u0644\u0629",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0642\u0627\u064a\u0644\u0629",
                            evening: "\u0627\u0644\u0639\u0634\u064a\u0629",
                            night: "\u0627\u0644\u0644\u064a\u0644",
                            midnight: "\u0646\u0635 \u0627\u0644\u0644\u064a\u0644"
                        },
                        wide: {
                            am: "\u0635",
                            pm: "\u0639",
                            morning: "\u0627\u0644\u0635\u0628\u0627\u062d",
                            noon: "\u0627\u0644\u0642\u0627\u064a\u0644\u0629",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0642\u0627\u064a\u0644\u0629",
                            evening: "\u0627\u0644\u0639\u0634\u064a\u0629",
                            night: "\u0627\u0644\u0644\u064a\u0644",
                            midnight: "\u0646\u0635 \u0627\u0644\u0644\u064a\u0644"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u0635",
                            pm: "\u0639",
                            morning: "\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d",
                            noon: "\u0641\u064a \u0627\u0644\u0642\u0627\u064a\u0644\u0629",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0642\u0627\u064a\u0644\u0629",
                            evening: "\u0641\u064a \u0627\u0644\u0639\u0634\u064a\u0629",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644",
                            midnight: "\u0646\u0635 \u0627\u0644\u0644\u064a\u0644"
                        },
                        abbreviated: {
                            am: "\u0635",
                            pm: "\u0639",
                            morning: "\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d",
                            noon: "\u0641\u064a \u0627\u0644\u0642\u0627\u064a\u0644\u0629",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0642\u0627\u064a\u0644\u0629",
                            evening: "\u0641\u064a \u0627\u0644\u0639\u0634\u064a\u0629",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644",
                            midnight: "\u0646\u0635 \u0627\u0644\u0644\u064a\u0644"
                        },
                        wide: {
                            am: "\u0635",
                            pm: "\u0639",
                            morning: "\u0641\u064a \u0627\u0644\u0635\u0628\u0627\u062d",
                            noon: "\u0641\u064a \u0627\u0644\u0642\u0627\u064a\u0644\u0629",
                            afternoon: "\u0628\u0639\u062f \u0627\u0644\u0642\u0627\u064a\u0644\u0629",
                            evening: "\u0641\u064a \u0627\u0644\u0639\u0634\u064a\u0629",
                            night: "\u0641\u064a \u0627\u0644\u0644\u064a\u0644",
                            midnight: "\u0646\u0635 \u0627\u0644\u0644\u064a\u0644"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /[\u0642\u0628]/,
                        abbreviated: /[\u0642\u0628]\.\u0645\./,
                        wide: /(\u0642\u0628\u0644|\u0628\u0639\u062f) \u0627\u0644\u0645\u064a\u0644\u0627\u062f/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/\u0642\u0628\u0644/, /\u0628\u0639\u062f/]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /\u0631[1234]/,
                        wide: /\u0627\u0644\u0631\u0628\u0639 (\u0627\u0644\u0623\u0648\u0644|\u0627\u0644\u062b\u0627\u0646\u064a|\u0627\u0644\u062b\u0627\u0644\u062b|\u0627\u0644\u0631\u0627\u0628\u0639)/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[\u062c\u0641\u0645\u0623\u0633\u0646\u062f]/,
                        abbreviated: /^(\u062c\u0627\u0646\u0641\u064a|\u0641\u064a\u0641\u0631\u064a|\u0645\u0627\u0631\u0633|\u0623\u0641\u0631\u064a\u0644|\u0645\u0627\u064a|\u062c\u0648\u0627\u0646|\u062c\u0648\u064a\u0644\u064a\u0629|\u0623\u0648\u062a|\u0633\u0628\u062a\u0645\u0628\u0631|\u0623\u0643\u062a\u0648\u0628\u0631|\u0646\u0648\u0641\u0645\u0628\u0631|\u062f\u064a\u0633\u0645\u0628\u0631)/,
                        wide: /^(\u062c\u0627\u0646\u0641\u064a|\u0641\u064a\u0641\u0631\u064a|\u0645\u0627\u0631\u0633|\u0623\u0641\u0631\u064a\u0644|\u0645\u0627\u064a|\u062c\u0648\u0627\u0646|\u062c\u0648\u064a\u0644\u064a\u0629|\u0623\u0648\u062a|\u0633\u0628\u062a\u0645\u0628\u0631|\u0623\u0643\u062a\u0648\u0628\u0631|\u0646\u0648\u0641\u0645\u0628\u0631|\u062f\u064a\u0633\u0645\u0628\u0631)/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u062c/i, /^\u0641/i, /^\u0645/i, /^\u0623/i, /^\u0645/i, /^\u062c/i, /^\u062c/i, /^\u0623/i, /^\u0633/i, /^\u0623/i, /^\u0646/i, /^\u062f/i],
                        any: [/^\u062c\u0627\u0646\u0641\u064a/i, /^\u0641\u064a\u0641\u0631\u064a/i, /^\u0645\u0627\u0631\u0633/i, /^\u0623\u0641\u0631\u064a\u0644/i, /^\u0645\u0627\u064a/i, /^\u062c\u0648\u0627\u0646/i, /^\u062c\u0648\u064a\u0644\u064a\u0629/i, /^\u0623\u0648\u062a/i, /^\u0633\u0628\u062a\u0645\u0628\u0631/i, /^\u0623\u0643\u062a\u0648\u0628\u0631/i, /^\u0646\u0648\u0641\u0645\u0628\u0631/i, /^\u062f\u064a\u0633\u0645\u0628\u0631/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u062d\u0646\u062b\u0631\u062e\u062c\u0633]/i,
                        short: /^(\u0623\u062d\u062f|\u0627\u062b\u0646\u064a\u0646|\u062b\u0644\u0627\u062b\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062e\u0645\u064a\u0633|\u062c\u0645\u0639\u0629|\u0633\u0628\u062a)/i,
                        abbreviated: /^(\u0623\u062d\u062f|\u0627\u062b\u0646\u064a\u0646|\u062b\u0644\u0627\u062b\u0627\u0621|\u0623\u0631\u0628\u0639\u0627\u0621|\u062e\u0645\u064a\u0633|\u062c\u0645\u0639\u0629|\u0633\u0628\u062a)/i,
                        wide: /^(\u0627\u0644\u0623\u062d\u062f|\u0627\u0644\u0627\u062b\u0646\u064a\u0646|\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621|\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621|\u0627\u0644\u062e\u0645\u064a\u0633|\u0627\u0644\u062c\u0645\u0639\u0629|\u0627\u0644\u0633\u0628\u062a)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u062d/i, /^\u0646/i, /^\u062b/i, /^\u0631/i, /^\u062e/i, /^\u062c/i, /^\u0633/i],
                        wide: [/^\u0627\u0644\u0623\u062d\u062f/i, /^\u0627\u0644\u0627\u062b\u0646\u064a\u0646/i, /^\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621/i, /^\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621/i, /^\u0627\u0644\u062e\u0645\u064a\u0633/i, /^\u0627\u0644\u062c\u0645\u0639\u0629/i, /^\u0627\u0644\u0633\u0628\u062a/i],
                        any: [/^\u0623\u062d/i, /^\u0627\u062b/i, /^\u062b/i, /^\u0623\u0631/i, /^\u062e/i, /^\u062c/i, /^\u0633/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(\u0635|\u0639|\u0646 \u0644|\u0644|(\u0641\u064a|\u0645\u0639) (\u0635\u0628\u0627\u062d|\u0642\u0627\u064a\u0644\u0629|\u0639\u0634\u064a\u0629|\u0644\u064a\u0644))/,
                        any: /^([\u0635\u0639]|\u0646\u0635 \u0627\u0644\u0644\u064a\u0644|\u0642\u0627\u064a\u0644\u0629|(\u0641\u064a|\u0645\u0639) (\u0635\u0628\u0627\u062d|\u0642\u0627\u064a\u0644\u0629|\u0639\u0634\u064a\u0629|\u0644\u064a\u0644))/
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u0635/,
                            pm: /^\u0639/,
                            midnight: /\u0646\u0635 \u0627\u0644\u0644\u064a\u0644/,
                            noon: /\u0642\u0627\u064a\u0644\u0629/,
                            afternoon: /\u0628\u0639\u062f \u0627\u0644\u0642\u0627\u064a\u0644\u0629/,
                            morning: /\u0635\u0628\u0627\u062d/,
                            evening: /\u0639\u0634\u064a\u0629/,
                            night: /\u0644\u064a\u0644/
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const O = {
            lessThanXSeconds: {
                one: "bir saniy\u0259d\u0259n az",
                other: "{{count}} bir saniy\u0259d\u0259n az"
            },
            xSeconds: {
                one: "1 saniy\u0259",
                other: "{{count}} saniy\u0259"
            },
            halfAMinute: "yar\u0131m d\u0259qiq\u0259",
            lessThanXMinutes: {
                one: "bir d\u0259qiq\u0259d\u0259n az",
                other: "{{count}} bir d\u0259qiq\u0259d\u0259n az"
            },
            xMinutes: {
                one: "bir d\u0259qiq\u0259",
                other: "{{count}} d\u0259qiq\u0259"
            },
            aboutXHours: {
                one: "t\u0259xmin\u0259n 1 saat",
                other: "t\u0259xmin\u0259n {{count}} saat"
            },
            xHours: {
                one: "1 saat",
                other: "{{count}} saat"
            },
            xDays: {
                one: "1 g\xfcn",
                other: "{{count}} g\xfcn"
            },
            aboutXWeeks: {
                one: "t\u0259xmin\u0259n 1 h\u0259ft\u0259",
                other: "t\u0259xmin\u0259n {{count}} h\u0259ft\u0259"
            },
            xWeeks: {
                one: "1 h\u0259ft\u0259",
                other: "{{count}} h\u0259ft\u0259"
            },
            aboutXMonths: {
                one: "t\u0259xmin\u0259n 1 ay",
                other: "t\u0259xmin\u0259n {{count}} ay"
            },
            xMonths: {
                one: "1 ay",
                other: "{{count}} ay"
            },
            aboutXYears: {
                one: "t\u0259xmin\u0259n 1 il",
                other: "t\u0259xmin\u0259n {{count}} il"
            },
            xYears: {
                one: "1 il",
                other: "{{count}} il"
            },
            overXYears: {
                one: "1 ild\u0259n \xe7ox",
                other: "{{count}} ild\u0259n \xe7ox"
            },
            almostXYears: {
                one: "dem\u0259k olar ki 1 il",
                other: "dem\u0259k olar ki {{count}} il"
            }
        }
          , H = {
            date: r({
                formats: {
                    full: "EEEE, do MMMM y 'il'",
                    long: "do MMMM y 'il'",
                    medium: "d MMM y 'il'",
                    short: "dd.MM.yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "H:mm:ss zzzz",
                    long: "H:mm:ss z",
                    medium: "H:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}} - 'd\u0259'",
                    long: "{{date}} {{time}} - 'd\u0259'",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , A = {
            lastWeek: "'sonuncu' eeee p -'d\u0259'",
            yesterday: "'d\xfcn\u0259n' p -'d\u0259'",
            today: "'bug\xfcn' p -'d\u0259'",
            tomorrow: "'sabah' p -'d\u0259'",
            nextWeek: "eeee p -'d\u0259'",
            other: "P"
        }
          , Y = {
            1: "-inci",
            5: "-inci",
            8: "-inci",
            70: "-inci",
            80: "-inci",
            2: "-nci",
            7: "-nci",
            20: "-nci",
            50: "-nci",
            3: "-\xfcnc\xfc",
            4: "-\xfcnc\xfc",
            100: "-\xfcnc\xfc",
            6: "-nc\u0131",
            9: "-uncu",
            10: "-uncu",
            30: "-uncu",
            60: "-\u0131nc\u0131",
            90: "-\u0131nc\u0131"
        }
          , _ = {
            code: "az",
            formatDistance: (e,t,n)=>{
                let a;
                const r = O[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? a + " sonra" : a + " \u0259vv\u0259l" : a
            }
            ,
            formatLong: H,
            formatRelative: (e,t,n,a)=>A[e],
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e)
                      , a = (e=>{
                        if (0 === e)
                            return e + "-\u0131nc\u0131";
                        const t = e % 10
                          , n = e % 100 - t
                          , a = e >= 100 ? 100 : null;
                        return Y[t] ? Y[t] : Y[n] ? Y[n] : null !== a ? Y[a] : ""
                    }
                    )(n);
                    return n + a
                }
                ,
                era: s({
                    values: {
                        narrow: ["e.\u0259", "b.e"],
                        abbreviated: ["e.\u0259", "b.e"],
                        wide: ["eram\u0131zdan \u0259vv\u0259l", "bizim era"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["K1", "K2", "K3", "K4"],
                        wide: ["1ci kvartal", "2ci kvartal", "3c\xfc kvartal", "4c\xfc kvartal"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["Y", "F", "M", "A", "M", "\u0130", "\u0130", "A", "S", "O", "N", "D"],
                        abbreviated: ["Yan", "Fev", "Mar", "Apr", "May", "\u0130yun", "\u0130yul", "Avq", "Sen", "Okt", "Noy", "Dek"],
                        wide: ["Yanvar", "Fevral", "Mart", "Aprel", "May", "\u0130yun", "\u0130yul", "Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["B.", "B.e", "\xc7.a", "\xc7.", "C.a", "C.", "\u015e."],
                        short: ["B.", "B.e", "\xc7.a", "\xc7.", "C.a", "C.", "\u015e."],
                        abbreviated: ["Baz", "Baz.e", "\xc7\u0259r.a", "\xc7\u0259r", "C\xfcm.a", "C\xfcm", "\u015e\u0259"],
                        wide: ["Bazar", "Bazar ert\u0259si", "\xc7\u0259r\u015f\u0259nb\u0259 ax\u015fam\u0131", "\xc7\u0259r\u015f\u0259nb\u0259", "C\xfcm\u0259 ax\u015fam\u0131", "C\xfcm\u0259", "\u015e\u0259nb\u0259"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "am",
                            pm: "pm",
                            midnight: "gec\u0259yar\u0131",
                            noon: "g\xfcn",
                            morning: "s\u0259h\u0259r",
                            afternoon: "g\xfcnd\xfcz",
                            evening: "ax\u015fam",
                            night: "gec\u0259"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "gec\u0259yar\u0131",
                            noon: "g\xfcn",
                            morning: "s\u0259h\u0259r",
                            afternoon: "g\xfcnd\xfcz",
                            evening: "ax\u015fam",
                            night: "gec\u0259"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "gec\u0259yar\u0131",
                            noon: "g\xfcn",
                            morning: "s\u0259h\u0259r",
                            afternoon: "g\xfcnd\xfcz",
                            evening: "ax\u015fam",
                            night: "gec\u0259"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "gec\u0259yar\u0131",
                            noon: "g\xfcn",
                            morning: "s\u0259h\u0259r",
                            afternoon: "g\xfcnd\xfcz",
                            evening: "ax\u015fam",
                            night: "gec\u0259"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "gec\u0259yar\u0131",
                            noon: "g\xfcn",
                            morning: "s\u0259h\u0259r",
                            afternoon: "g\xfcnd\xfcz",
                            evening: "ax\u015fam",
                            night: "gec\u0259"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "gec\u0259yar\u0131",
                            noon: "g\xfcn",
                            morning: "s\u0259h\u0259r",
                            afternoon: "g\xfcnd\xfcz",
                            evening: "ax\u015fam",
                            night: "gec\u0259"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(-?(ci|inci|nci|uncu|\xfcnc\xfc|nc\u0131))?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(b|a)$/i,
                        abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)$/i,
                        wide: /^(bizim eradan \u0259vv\u0259l|bizim era)$/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^b$/i, /^(a|c)$/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]$/i,
                        abbreviated: /^K[1234]$/i,
                        wide: /^[1234](ci)? kvartal$/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[(?-i)yfmaisond]$/i,
                        abbreviated: /^(Yan|Fev|Mar|Apr|May|\u0130yun|\u0130yul|Avq|Sen|Okt|Noy|Dek)$/i,
                        wide: /^(Yanvar|Fevral|Mart|Aprel|May|\u0130yun|\u0130yul|Avgust|Sentyabr|Oktyabr|Noyabr|Dekabr)$/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^[(?-i)y]$/i, /^[(?-i)f]$/i, /^[(?-i)m]$/i, /^[(?-i)a]$/i, /^[(?-i)m]$/i, /^[(?-i)i]$/i, /^[(?-i)i]$/i, /^[(?-i)a]$/i, /^[(?-i)s]$/i, /^[(?-i)o]$/i, /^[(?-i)n]$/i, /^[(?-i)d]$/i],
                        abbreviated: [/^Yan$/i, /^Fev$/i, /^Mar$/i, /^Apr$/i, /^May$/i, /^\u0130yun$/i, /^\u0130yul$/i, /^Avg$/i, /^Sen$/i, /^Okt$/i, /^Noy$/i, /^Dek$/i],
                        wide: [/^Yanvar$/i, /^Fevral$/i, /^Mart$/i, /^Aprel$/i, /^May$/i, /^\u0130yun$/i, /^\u0130yul$/i, /^Avgust$/i, /^Sentyabr$/i, /^Oktyabr$/i, /^Noyabr$/i, /^Dekabr$/i]
                    },
                    defaultParseWidth: "narrow"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(B\.|B\.e|\xc7\.a|\xc7\.|C\.a|C\.|\u015e\.)$/i,
                        short: /^(B\.|B\.e|\xc7\.a|\xc7\.|C\.a|C\.|\u015e\.)$/i,
                        abbreviated: /^(Baz\.e|\xc7\u0259r|\xc7\u0259r\.a|C\xfcm|C\xfcm\.a|\u015e\u0259)$/i,
                        wide: /^(Bazar|Bazar ert\u0259si|\xc7\u0259r\u015f\u0259nb\u0259 ax\u015fam\u0131|\xc7\u0259r\u015f\u0259nb\u0259|C\xfcm\u0259 ax\u015fam\u0131|C\xfcm\u0259|\u015e\u0259nb\u0259)$/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^B\.$/i, /^B\.e$/i, /^\xc7\.a$/i, /^\xc7\.$/i, /^C\.a$/i, /^C\.$/i, /^\u015e\.$/i],
                        abbreviated: [/^Baz$/i, /^Baz\.e$/i, /^\xc7\u0259r\.a$/i, /^\xc7\u0259r$/i, /^C\xfcm\.a$/i, /^C\xfcm$/i, /^\u015e\u0259$/i],
                        wide: [/^Bazar$/i, /^Bazar ert\u0259si$/i, /^\xc7\u0259r\u015f\u0259nb\u0259 ax\u015fam\u0131$/i, /^\xc7\u0259r\u015f\u0259nb\u0259$/i, /^C\xfcm\u0259 ax\u015fam\u0131$/i, /^C\xfcm\u0259$/i, /^\u015e\u0259nb\u0259$/i],
                        any: [/^B\.$/i, /^B\.e$/i, /^\xc7\.a$/i, /^\xc7\.$/i, /^C\.a$/i, /^C\.$/i, /^\u015e\.$/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|gec\u0259yar\u0131|g\xfcn|s\u0259h\u0259r|g\xfcnd\xfcz|ax\u015fam|gec\u0259)$/i,
                        any: /^(am|pm|a\.m\.|p\.m\.|AM|PM|gec\u0259yar\u0131|g\xfcn|s\u0259h\u0259r|g\xfcnd\xfcz|ax\u015fam|gec\u0259)$/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a$/i,
                            pm: /^p$/i,
                            midnight: /^gec\u0259yar\u0131$/i,
                            noon: /^g\xfcn$/i,
                            morning: /s\u0259h\u0259r$/i,
                            afternoon: /g\xfcnd\xfcz$/i,
                            evening: /ax\u015fam$/i,
                            night: /gec\u0259$/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        function X(e, t) {
            if (void 0 !== e.one && 1 === t)
                return e.one;
            const n = t % 10
              , a = t % 100;
            return 1 === n && 11 !== a ? e.singularNominative.replace("{{count}}", String(t)) : n >= 2 && n <= 4 && (a < 10 || a > 20) ? e.singularGenitive.replace("{{count}}", String(t)) : e.pluralGenitive.replace("{{count}}", String(t))
        }
        function R(e) {
            return (t,n)=>n && n.addSuffix ? n.comparison && n.comparison > 0 ? e.future ? X(e.future, t) : "\u043f\u0440\u0430\u0437 " + X(e.regular, t) : e.past ? X(e.past, t) : X(e.regular, t) + " \u0442\u0430\u043c\u0443" : X(e.regular, t)
        }
        const L = {
            lessThanXSeconds: R({
                regular: {
                    one: "\u043c\u0435\u043d\u0448 \u0437\u0430 \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularNominative: "\u043c\u0435\u043d\u0448 \u0437\u0430 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularGenitive: "\u043c\u0435\u043d\u0448 \u0437\u0430 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",
                    pluralGenitive: "\u043c\u0435\u043d\u0448 \u0437\u0430 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                },
                future: {
                    one: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularNominative: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularGenitive: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",
                    pluralGenitive: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                }
            }),
            xSeconds: R({
                regular: {
                    singularNominative: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0430",
                    singularGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",
                    pluralGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                },
                past: {
                    singularNominative: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0443 \u0442\u0430\u043c\u0443",
                    singularGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u044b \u0442\u0430\u043c\u0443",
                    pluralGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434 \u0442\u0430\u043c\u0443"
                },
                future: {
                    singularNominative: "\u043f\u0440\u0430\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularGenitive: "\u043f\u0440\u0430\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",
                    pluralGenitive: "\u043f\u0440\u0430\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                }
            }),
            halfAMinute: (e,t)=>t && t.addSuffix ? t.comparison && t.comparison > 0 ? "\u043f\u0440\u0430\u0437 \u043f\u0430\u045e\u0445\u0432\u0456\u043b\u0456\u043d\u044b" : "\u043f\u0430\u045e\u0445\u0432\u0456\u043b\u0456\u043d\u044b \u0442\u0430\u043c\u0443" : "\u043f\u0430\u045e\u0445\u0432\u0456\u043b\u0456\u043d\u044b",
            lessThanXMinutes: R({
                regular: {
                    one: "\u043c\u0435\u043d\u0448 \u0437\u0430 \u0445\u0432\u0456\u043b\u0456\u043d\u0443",
                    singularNominative: "\u043c\u0435\u043d\u0448 \u0437\u0430 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u0443",
                    singularGenitive: "\u043c\u0435\u043d\u0448 \u0437\u0430 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u044b",
                    pluralGenitive: "\u043c\u0435\u043d\u0448 \u0437\u0430 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d"
                },
                future: {
                    one: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 \u0445\u0432\u0456\u043b\u0456\u043d\u0443",
                    singularNominative: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u0443",
                    singularGenitive: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u044b",
                    pluralGenitive: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d"
                }
            }),
            xMinutes: R({
                regular: {
                    singularNominative: "{{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u0430",
                    singularGenitive: "{{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u044b",
                    pluralGenitive: "{{count}} \u0445\u0432\u0456\u043b\u0456\u043d"
                },
                past: {
                    singularNominative: "{{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u0443 \u0442\u0430\u043c\u0443",
                    singularGenitive: "{{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u044b \u0442\u0430\u043c\u0443",
                    pluralGenitive: "{{count}} \u0445\u0432\u0456\u043b\u0456\u043d \u0442\u0430\u043c\u0443"
                },
                future: {
                    singularNominative: "\u043f\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u0443",
                    singularGenitive: "\u043f\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u044b",
                    pluralGenitive: "\u043f\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d"
                }
            }),
            aboutXHours: R({
                regular: {
                    singularNominative: "\u043a\u0430\u043b\u044f {{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u044b",
                    singularGenitive: "\u043a\u0430\u043b\u044f {{count}} \u0433\u0430\u0434\u0437\u0456\u043d",
                    pluralGenitive: "\u043a\u0430\u043b\u044f {{count}} \u0433\u0430\u0434\u0437\u0456\u043d"
                },
                future: {
                    singularNominative: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u0443",
                    singularGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u044b",
                    pluralGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043d"
                }
            }),
            xHours: R({
                regular: {
                    singularNominative: "{{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u0430",
                    singularGenitive: "{{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u044b",
                    pluralGenitive: "{{count}} \u0433\u0430\u0434\u0437\u0456\u043d"
                },
                past: {
                    singularNominative: "{{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u0443 \u0442\u0430\u043c\u0443",
                    singularGenitive: "{{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u044b \u0442\u0430\u043c\u0443",
                    pluralGenitive: "{{count}} \u0433\u0430\u0434\u0437\u0456\u043d \u0442\u0430\u043c\u0443"
                },
                future: {
                    singularNominative: "\u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u0443",
                    singularGenitive: "\u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u044b",
                    pluralGenitive: "\u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043d"
                }
            }),
            xDays: R({
                regular: {
                    singularNominative: "{{count}} \u0434\u0437\u0435\u043d\u044c",
                    singularGenitive: "{{count}} \u0434\u043d\u0456",
                    pluralGenitive: "{{count}} \u0434\u0437\u0451\u043d"
                }
            }),
            aboutXWeeks: R({
                regular: {
                    singularNominative: "\u043a\u0430\u043b\u044f {{count}} \u0442\u044b\u0434\u043d\u0456",
                    singularGenitive: "\u043a\u0430\u043b\u044f {{count}} \u0442\u044b\u0434\u043d\u044f\u045e",
                    pluralGenitive: "\u043a\u0430\u043b\u044f {{count}} \u0442\u044b\u0434\u043d\u044f\u045e"
                },
                future: {
                    singularNominative: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0442\u044b\u0434\u0437\u0435\u043d\u044c",
                    singularGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0442\u044b\u0434\u043d\u0456",
                    pluralGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0442\u044b\u0434\u043d\u044f\u045e"
                }
            }),
            xWeeks: R({
                regular: {
                    singularNominative: "{{count}} \u0442\u044b\u0434\u0437\u0435\u043d\u044c",
                    singularGenitive: "{{count}} \u0442\u044b\u0434\u043d\u0456",
                    pluralGenitive: "{{count}} \u0442\u044b\u0434\u043d\u044f\u045e"
                }
            }),
            aboutXMonths: R({
                regular: {
                    singularNominative: "\u043a\u0430\u043b\u044f {{count}} \u043c\u0435\u0441\u044f\u0446\u0430",
                    singularGenitive: "\u043a\u0430\u043b\u044f {{count}} \u043c\u0435\u0441\u044f\u0446\u0430\u045e",
                    pluralGenitive: "\u043a\u0430\u043b\u044f {{count}} \u043c\u0435\u0441\u044f\u0446\u0430\u045e"
                },
                future: {
                    singularNominative: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u043c\u0435\u0441\u044f\u0446",
                    singularGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u043c\u0435\u0441\u044f\u0446\u044b",
                    pluralGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u043c\u0435\u0441\u044f\u0446\u0430\u045e"
                }
            }),
            xMonths: R({
                regular: {
                    singularNominative: "{{count}} \u043c\u0435\u0441\u044f\u0446",
                    singularGenitive: "{{count}} \u043c\u0435\u0441\u044f\u0446\u044b",
                    pluralGenitive: "{{count}} \u043c\u0435\u0441\u044f\u0446\u0430\u045e"
                }
            }),
            aboutXYears: R({
                regular: {
                    singularNominative: "\u043a\u0430\u043b\u044f {{count}} \u0433\u043e\u0434\u0430",
                    singularGenitive: "\u043a\u0430\u043b\u044f {{count}} \u0433\u0430\u0434\u043e\u045e",
                    pluralGenitive: "\u043a\u0430\u043b\u044f {{count}} \u0433\u0430\u0434\u043e\u045e"
                },
                future: {
                    singularNominative: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0433\u043e\u0434",
                    singularGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u044b",
                    pluralGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u043e\u045e"
                }
            }),
            xYears: R({
                regular: {
                    singularNominative: "{{count}} \u0433\u043e\u0434",
                    singularGenitive: "{{count}} \u0433\u0430\u0434\u044b",
                    pluralGenitive: "{{count}} \u0433\u0430\u0434\u043e\u045e"
                }
            }),
            overXYears: R({
                regular: {
                    singularNominative: "\u0431\u043e\u043b\u044c\u0448 \u0437\u0430 {{count}} \u0433\u043e\u0434",
                    singularGenitive: "\u0431\u043e\u043b\u044c\u0448 \u0437\u0430 {{count}} \u0433\u0430\u0434\u044b",
                    pluralGenitive: "\u0431\u043e\u043b\u044c\u0448 \u0437\u0430 {{count}} \u0433\u0430\u0434\u043e\u045e"
                },
                future: {
                    singularNominative: "\u0431\u043e\u043b\u044c\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0433\u043e\u0434",
                    singularGenitive: "\u0431\u043e\u043b\u044c\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u044b",
                    pluralGenitive: "\u0431\u043e\u043b\u044c\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u043e\u045e"
                }
            }),
            almostXYears: R({
                regular: {
                    singularNominative: "\u0430\u043c\u0430\u043b\u044c {{count}} \u0433\u043e\u0434",
                    singularGenitive: "\u0430\u043c\u0430\u043b\u044c {{count}} \u0433\u0430\u0434\u044b",
                    pluralGenitive: "\u0430\u043c\u0430\u043b\u044c {{count}} \u0433\u0430\u0434\u043e\u045e"
                },
                future: {
                    singularNominative: "\u0430\u043c\u0430\u043b\u044c \u043f\u0440\u0430\u0437 {{count}} \u0433\u043e\u0434",
                    singularGenitive: "\u0430\u043c\u0430\u043b\u044c \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u044b",
                    pluralGenitive: "\u0430\u043c\u0430\u043b\u044c \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u043e\u045e"
                }
            })
        }
          , F = {
            date: r({
                formats: {
                    full: "EEEE, d MMMM y '\u0433.'",
                    long: "d MMMM y '\u0433.'",
                    medium: "d MMM y '\u0433.'",
                    short: "dd.MM.y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "H:mm:ss zzzz",
                    long: "H:mm:ss z",
                    medium: "H:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    any: "{{date}}, {{time}}"
                },
                defaultWidth: "any"
            })
        };
        function q(e) {
            const t = Object.prototype.toString.call(e);
            return e instanceof Date || "object" === typeof e && "[object Date]" === t ? new e.constructor(+e) : "number" === typeof e || "[object Number]" === t || "string" === typeof e || "[object String]" === t ? new Date(e) : new Date(NaN)
        }
        let G = {};
        function K() {
            return G
        }
        function V(e, t) {
            const n = K()
              , a = t?.weekStartsOn ?? t?.locale?.options?.weekStartsOn ?? n.weekStartsOn ?? n.locale?.options?.weekStartsOn ?? 0
              , r = q(e)
              , i = r.getDay()
              , o = (i < a ? 7 : 0) + i - a;
            return r.setDate(r.getDate() - o),
            r.setHours(0, 0, 0, 0),
            r
        }
        function $(e, t, n) {
            return +V(e, n) === +V(t, n)
        }
        const B = ["\u043d\u044f\u0434\u0437\u0435\u043b\u044e", "\u043f\u0430\u043d\u044f\u0434\u0437\u0435\u043b\u0430\u043a", "\u0430\u045e\u0442\u043e\u0440\u0430\u043a", "\u0441\u0435\u0440\u0430\u0434\u0443", "\u0447\u0430\u0446\u0432\u0435\u0440", "\u043f\u044f\u0442\u043d\u0456\u0446\u0443", "\u0441\u0443\u0431\u043e\u0442\u0443"];
        function J(e) {
            return "'\u0443 " + B[e] + " \u0430' p"
        }
        const Q = {
            lastWeek: (e,t,n)=>{
                const a = q(e)
                  , r = a.getDay();
                return $(a, t, n) ? J(r) : function(e) {
                    const t = B[e];
                    switch (e) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return "'\u0443 \u043c\u0456\u043d\u0443\u043b\u0443\u044e " + t + " \u0430' p";
                    case 1:
                    case 2:
                    case 4:
                        return "'\u0443 \u043c\u0456\u043d\u0443\u043b\u044b " + t + " \u0430' p"
                    }
                }(r)
            }
            ,
            yesterday: "'\u0443\u0447\u043e\u0440\u0430 \u0430' p",
            today: "'\u0441\u0451\u043d\u043d\u044f \u0430' p",
            tomorrow: "'\u0437\u0430\u045e\u0442\u0440\u0430 \u0430' p",
            nextWeek: (e,t,n)=>{
                const a = q(e)
                  , r = a.getDay();
                return $(a, t, n) ? J(r) : function(e) {
                    const t = B[e];
                    switch (e) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return "'\u0443 \u043d\u0430\u0441\u0442\u0443\u043f\u043d\u0443\u044e " + t + " \u0430' p";
                    case 1:
                    case 2:
                    case 4:
                        return "'\u0443 \u043d\u0430\u0441\u0442\u0443\u043f\u043d\u044b " + t + " \u0430' p"
                    }
                }(r)
            }
            ,
            other: "P"
        }
          , U = {
            code: "be",
            formatDistance: (e,t,n)=>(n = n || {},
            L[e](t, n)),
            formatLong: F,
            formatRelative: (e,t,n,a)=>{
                const r = Q[e];
                return "function" === typeof r ? r(t, n, a) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = String(t?.unit)
                      , a = Number(e);
                    let r;
                    return r = "date" === n ? "-\u0433\u0430" : "hour" === n || "minute" === n || "second" === n ? "-\u044f" : a % 10 !== 2 && a % 10 !== 3 || a % 100 === 12 || a % 100 === 13 ? "-\u044b" : "-\u0456",
                    a + r
                }
                ,
                era: s({
                    values: {
                        narrow: ["\u0434\u0430 \u043d.\u044d.", "\u043d.\u044d."],
                        abbreviated: ["\u0434\u0430 \u043d. \u044d.", "\u043d. \u044d."],
                        wide: ["\u0434\u0430 \u043d\u0430\u0448\u0430\u0439 \u044d\u0440\u044b", "\u043d\u0430\u0448\u0430\u0439 \u044d\u0440\u044b"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1-\u044b \u043a\u0432.", "2-\u0456 \u043a\u0432.", "3-\u0456 \u043a\u0432.", "4-\u044b \u043a\u0432."],
                        wide: ["1-\u044b \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "2-\u0456 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "3-\u0456 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "4-\u044b \u043a\u0432\u0430\u0440\u0442\u0430\u043b"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u0421", "\u041b", "\u0421", "\u041a", "\u041c", "\u0427", "\u041b", "\u0416", "\u0412", "\u041a", "\u041b", "\u0421"],
                        abbreviated: ["\u0441\u0442\u0443\u0434\u0437.", "\u043b\u044e\u0442.", "\u0441\u0430\u043a.", "\u043a\u0440\u0430\u0441.", "\u043c\u0430\u0439", "\u0447\u044d\u0440\u0432.", "\u043b\u0456\u043f.", "\u0436\u043d.", "\u0432\u0435\u0440.", "\u043a\u0430\u0441\u0442\u0440.", "\u043b\u0456\u0441\u0442.", "\u0441\u043d\u0435\u0436."],
                        wide: ["\u0441\u0442\u0443\u0434\u0437\u0435\u043d\u044c", "\u043b\u044e\u0442\u044b", "\u0441\u0430\u043a\u0430\u0432\u0456\u043a", "\u043a\u0440\u0430\u0441\u0430\u0432\u0456\u043a", "\u043c\u0430\u0439", "\u0447\u044d\u0440\u0432\u0435\u043d\u044c", "\u043b\u0456\u043f\u0435\u043d\u044c", "\u0436\u043d\u0456\u0432\u0435\u043d\u044c", "\u0432\u0435\u0440\u0430\u0441\u0435\u043d\u044c", "\u043a\u0430\u0441\u0442\u0440\u044b\u0447\u043d\u0456\u043a", "\u043b\u0456\u0441\u0442\u0430\u043f\u0430\u0434", "\u0441\u043d\u0435\u0436\u0430\u043d\u044c"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["\u0421", "\u041b", "\u0421", "\u041a", "\u041c", "\u0427", "\u041b", "\u0416", "\u0412", "\u041a", "\u041b", "\u0421"],
                        abbreviated: ["\u0441\u0442\u0443\u0434\u0437.", "\u043b\u044e\u0442.", "\u0441\u0430\u043a.", "\u043a\u0440\u0430\u0441.", "\u043c\u0430\u044f", "\u0447\u044d\u0440\u0432.", "\u043b\u0456\u043f.", "\u0436\u043d.", "\u0432\u0435\u0440.", "\u043a\u0430\u0441\u0442\u0440.", "\u043b\u0456\u0441\u0442.", "\u0441\u043d\u0435\u0436."],
                        wide: ["\u0441\u0442\u0443\u0434\u0437\u0435\u043d\u044f", "\u043b\u044e\u0442\u0430\u0433\u0430", "\u0441\u0430\u043a\u0430\u0432\u0456\u043a\u0430", "\u043a\u0440\u0430\u0441\u0430\u0432\u0456\u043a\u0430", "\u043c\u0430\u044f", "\u0447\u044d\u0440\u0432\u0435\u043d\u044f", "\u043b\u0456\u043f\u0435\u043d\u044f", "\u0436\u043d\u0456\u045e\u043d\u044f", "\u0432\u0435\u0440\u0430\u0441\u043d\u044f", "\u043a\u0430\u0441\u0442\u0440\u044b\u0447\u043d\u0456\u043a\u0430", "\u043b\u0456\u0441\u0442\u0430\u043f\u0430\u0434\u0430", "\u0441\u043d\u0435\u0436\u043d\u044f"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u041d", "\u041f", "\u0410", "\u0421", "\u0427", "\u041f", "\u0421"],
                        short: ["\u043d\u0434", "\u043f\u043d", "\u0430\u045e", "\u0441\u0440", "\u0447\u0446", "\u043f\u0442", "\u0441\u0431"],
                        abbreviated: ["\u043d\u044f\u0434\u0437", "\u043f\u0430\u043d", "\u0430\u045e\u0442", "\u0441\u0435\u0440", "\u0447\u0430\u0446", "\u043f\u044f\u0442", "\u0441\u0443\u0431"],
                        wide: ["\u043d\u044f\u0434\u0437\u0435\u043b\u044f", "\u043f\u0430\u043d\u044f\u0434\u0437\u0435\u043b\u0430\u043a", "\u0430\u045e\u0442\u043e\u0440\u0430\u043a", "\u0441\u0435\u0440\u0430\u0434\u0430", "\u0447\u0430\u0446\u0432\u0435\u0440", "\u043f\u044f\u0442\u043d\u0456\u0446\u0430", "\u0441\u0443\u0431\u043e\u0442\u0430"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u045e\u043d.",
                            noon: "\u043f\u043e\u045e\u0434.",
                            morning: "\u0440\u0430\u043d.",
                            afternoon: "\u0434\u0437\u0435\u043d\u044c",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u043e\u0447"
                        },
                        abbreviated: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u045e\u043d.",
                            noon: "\u043f\u043e\u045e\u0434.",
                            morning: "\u0440\u0430\u043d.",
                            afternoon: "\u0434\u0437\u0435\u043d\u044c",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u043e\u0447"
                        },
                        wide: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u045e\u043d\u0430\u0447",
                            noon: "\u043f\u043e\u045e\u0434\u0437\u0435\u043d\u044c",
                            morning: "\u0440\u0430\u043d\u0456\u0446\u0430",
                            afternoon: "\u0434\u0437\u0435\u043d\u044c",
                            evening: "\u0432\u0435\u0447\u0430\u0440",
                            night: "\u043d\u043e\u0447"
                        }
                    },
                    defaultWidth: "any",
                    formattingValues: {
                        narrow: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u045e\u043d.",
                            noon: "\u043f\u043e\u045e\u0434.",
                            morning: "\u0440\u0430\u043d.",
                            afternoon: "\u0434\u043d\u044f",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u043e\u0447\u044b"
                        },
                        abbreviated: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u045e\u043d.",
                            noon: "\u043f\u043e\u045e\u0434.",
                            morning: "\u0440\u0430\u043d.",
                            afternoon: "\u0434\u043d\u044f",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u043e\u0447\u044b"
                        },
                        wide: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u045e\u043d\u0430\u0447",
                            noon: "\u043f\u043e\u045e\u0434\u0437\u0435\u043d\u044c",
                            morning: "\u0440\u0430\u043d\u0456\u0446\u044b",
                            afternoon: "\u0434\u043d\u044f",
                            evening: "\u0432\u0435\u0447\u0430\u0440\u0430",
                            night: "\u043d\u043e\u0447\u044b"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(-?(\u0435|\u044f|\u0433\u0430|\u0456|\u044b|\u0430\u0435|\u0430\u044f|\u044f\u044f|\u0448\u044b|\u0433\u0456|\u0446\u0456|\u0442\u044b|\u043c\u044b))?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^((\u0434\u0430 )?\u043d\.?\s?\u044d\.?)/i,
                        abbreviated: /^((\u0434\u0430 )?\u043d\.?\s?\u044d\.?)/i,
                        wide: /^(\u0434\u0430 \u043d\u0430\u0448\u0430\u0439 \u044d\u0440\u044b|\u043d\u0430\u0448\u0430\u0439 \u044d\u0440\u044b|\u043d\u0430\u0448\u0430 \u044d\u0440\u0430)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u0434/i, /^\u043d/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234](-?[\u044b\u0456]?)? \u043a\u0432.?/i,
                        wide: /^[1234](-?[\u044b\u0456]?)? \u043a\u0432\u0430\u0440\u0442\u0430\u043b/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[\u0441\u043b\u043a\u043c\u0447\u0436\u0432]/i,
                        abbreviated: /^(\u0441\u0442\u0443\u0434\u0437|\u043b\u044e\u0442|\u0441\u0430\u043a|\u043a\u0440\u0430\u0441|\u043c\u0430[\u0439\u044f]|\u0447\u044d\u0440\u0432|\u043b\u0456\u043f|\u0436\u043d|\u0432\u0435\u0440|\u043a\u0430\u0441\u0442\u0440|\u043b\u0456\u0441\u0442|\u0441\u043d\u0435\u0436)\.?/i,
                        wide: /^(\u0441\u0442\u0443\u0434\u0437\u0435\u043d[\u044c\u044f]|\u043b\u044e\u0442(\u044b|\u0430\u0433\u0430)|\u0441\u0430\u043a\u0430\u0432\u0456\u043a\u0430?|\u043a\u0440\u0430\u0441\u0430\u0432\u0456\u043a\u0430?|\u043c\u0430[\u0439\u044f]|\u0447\u044d\u0440\u0432\u0435\u043d[\u044c\u044f]|\u043b\u0456\u043f\u0435\u043d[\u044c\u044f]|\u0436\u043d\u0456(\u0432\u0435\u043d\u044c|\u045e\u043d\u044f)|\u0432\u0435\u0440\u0430\u0441(\u0435\u043d\u044c|\u043d\u044f)|\u043a\u0430\u0441\u0442\u0440\u044b\u0447\u043d\u0456\u043a\u0430?|\u043b\u0456\u0441\u0442\u0430\u043f\u0430\u0434\u0430?|\u0441\u043d\u0435\u0436(\u0430\u043d\u044c|\u043d\u044f))/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0441/i, /^\u043b/i, /^\u0441/i, /^\u043a/i, /^\u043c/i, /^\u0447/i, /^\u043b/i, /^\u0436/i, /^\u0432/i, /^\u043a/i, /^\u043b/i, /^\u0441/i],
                        any: [/^\u0441\u0442/i, /^\u043b\u044e/i, /^\u0441\u0430/i, /^\u043a\u0440/i, /^\u043c\u0430/i, /^\u0447/i, /^\u043b\u0456\u043f/i, /^\u0436/i, /^\u0432/i, /^\u043a\u0430/i, /^\u043b\u0456\u0441/i, /^\u0441\u043d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u043d\u043f\u0430\u0441\u0447]/i,
                        short: /^(\u043d\u0434|\u043d\u044f|\u043f\u043d|\u043f\u0430|\u0430\u045e|\u0430\u0442|\u0441\u0440|\u0441\u0435|\u0447\u0446|\u0447\u0430|\u043f\u0442|\u043f\u044f|\u0441\u0431|\u0441\u0443)\.?/i,
                        abbreviated: /^(\u043d\u044f\u0434\u0437?|\u043d\u0434\u0437|\u043f\u043d\u0434|\u043f\u0430\u043d|\u0430\u045e\u0442|\u0441\u0440\u0434|\u0441\u0435\u0440|\u0447\u0446\u0432|\u0447\u0430\u0446|\u043f\u0442\u043d|\u043f\u044f\u0442|\u0441\u0443\u0431).?/i,
                        wide: /^(\u043d\u044f\u0434\u0437\u0435\u043b[\u044f\u0456]|\u043f\u0430\u043d\u044f\u0434\u0437\u0435\u043b(\u0430\u043a|\u043a\u0430)|\u0430\u045e\u0442\u043e\u0440(\u0430\u043a|\u043a\u0430)|\u0441\u0435\u0440\u0430\u0434[\u0430\u044b]|\u0447\u0430\u0446\u0432(\u0435\u0440|\u044f\u0440\u0433\u0430)|\u043f\u044f\u0442\u043d\u0456\u0446[\u0430\u044b]|\u0441\u0443\u0431\u043e\u0442[\u0430\u044b])/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u043d/i, /^\u043f/i, /^\u0430/i, /^\u0441/i, /^\u0447/i, /^\u043f/i, /^\u0441/i],
                        any: [/^\u043d/i, /^\u043f[\u0430\u043d]/i, /^\u0430/i, /^\u0441[\u0435\u0440]/i, /^\u0447/i, /^\u043f[\u044f\u0442]/i, /^\u0441[\u0443\u0431]/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^([\u0434\u043f]\u043f|\u043f\u043e\u045e\u043d\.?|\u043f\u043e\u045e\u0434\.?|\u0440\u0430\u043d\.?|\u0434\u0437\u0435\u043d\u044c|\u0434\u043d\u044f|\u0432\u0435\u0447\.?|\u043d\u043e\u0447\u044b?)/i,
                        abbreviated: /^([\u0434\u043f]\u043f|\u043f\u043e\u045e\u043d\.?|\u043f\u043e\u045e\u0434\.?|\u0440\u0430\u043d\.?|\u0434\u0437\u0435\u043d\u044c|\u0434\u043d\u044f|\u0432\u0435\u0447\.?|\u043d\u043e\u0447\u044b?)/i,
                        wide: /^([\u0434\u043f]\u043f|\u043f\u043e\u045e\u043d\u0430\u0447|\u043f\u043e\u045e\u0434\u0437\u0435\u043d\u044c|\u0440\u0430\u043d\u0456\u0446[\u0430\u044b]|\u0434\u0437\u0435\u043d\u044c|\u0434\u043d\u044f|\u0432\u0435\u0447\u0430\u0440\u0430?|\u043d\u043e\u0447\u044b?)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: {
                            am: /^\u0434\u043f/i,
                            pm: /^\u043f\u043f/i,
                            midnight: /^\u043f\u043e\u045e\u043d/i,
                            noon: /^\u043f\u043e\u045e\u0434/i,
                            morning: /^\u0440/i,
                            afternoon: /^\u0434[\u0437\u043d]/i,
                            evening: /^\u0432/i,
                            night: /^\u043d/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        function Z(e, t) {
            if (void 0 !== e.one && 1 === t)
                return e.one;
            const n = t % 10
              , a = t % 100;
            return 1 === n && 11 !== a ? e.singularNominative.replace("{{count}}", String(t)) : n >= 2 && n <= 4 && (a < 10 || a > 20) ? e.singularGenitive.replace("{{count}}", String(t)) : e.pluralGenitive.replace("{{count}}", String(t))
        }
        function ee(e) {
            return (t,n)=>n && n.addSuffix ? n.comparison && n.comparison > 0 ? e.future ? Z(e.future, t) : "\u043f\u0440\u0430\u0437 " + Z(e.regular, t) : e.past ? Z(e.past, t) : Z(e.regular, t) + " \u0442\u0430\u043c\u0443" : Z(e.regular, t)
        }
        const te = {
            lessThanXSeconds: ee({
                regular: {
                    one: "\u043c\u0435\u043d\u0448 \u0437\u0430 \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularNominative: "\u043c\u0435\u043d\u0448 \u0437\u0430 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularGenitive: "\u043c\u0435\u043d\u0448 \u0437\u0430 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",
                    pluralGenitive: "\u043c\u0435\u043d\u0448 \u0437\u0430 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                },
                future: {
                    one: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularNominative: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularGenitive: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",
                    pluralGenitive: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                }
            }),
            xSeconds: ee({
                regular: {
                    singularNominative: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0430",
                    singularGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",
                    pluralGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                },
                past: {
                    singularNominative: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0443 \u0442\u0430\u043c\u0443",
                    singularGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u044b \u0442\u0430\u043c\u0443",
                    pluralGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434 \u0442\u0430\u043c\u0443"
                },
                future: {
                    singularNominative: "\u043f\u0440\u0430\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularGenitive: "\u043f\u0440\u0430\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",
                    pluralGenitive: "\u043f\u0440\u0430\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                }
            }),
            halfAMinute: (e,t)=>t && t.addSuffix ? t.comparison && t.comparison > 0 ? "\u043f\u0440\u0430\u0437 \u043f\u0430\u045e\u0445\u0432\u0456\u043b\u0456\u043d\u044b" : "\u043f\u0430\u045e\u0445\u0432\u0456\u043b\u0456\u043d\u044b \u0442\u0430\u043c\u0443" : "\u043f\u0430\u045e\u0445\u0432\u0456\u043b\u0456\u043d\u044b",
            lessThanXMinutes: ee({
                regular: {
                    one: "\u043c\u0435\u043d\u0448 \u0437\u0430 \u0445\u0432\u0456\u043b\u0456\u043d\u0443",
                    singularNominative: "\u043c\u0435\u043d\u0448 \u0437\u0430 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u0443",
                    singularGenitive: "\u043c\u0435\u043d\u0448 \u0437\u0430 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u044b",
                    pluralGenitive: "\u043c\u0435\u043d\u0448 \u0437\u0430 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d"
                },
                future: {
                    one: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 \u0445\u0432\u0456\u043b\u0456\u043d\u0443",
                    singularNominative: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u0443",
                    singularGenitive: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u044b",
                    pluralGenitive: "\u043c\u0435\u043d\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d"
                }
            }),
            xMinutes: ee({
                regular: {
                    singularNominative: "{{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u0430",
                    singularGenitive: "{{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u044b",
                    pluralGenitive: "{{count}} \u0445\u0432\u0456\u043b\u0456\u043d"
                },
                past: {
                    singularNominative: "{{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u0443 \u0442\u0430\u043c\u0443",
                    singularGenitive: "{{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u044b \u0442\u0430\u043c\u0443",
                    pluralGenitive: "{{count}} \u0445\u0432\u0456\u043b\u0456\u043d \u0442\u0430\u043c\u0443"
                },
                future: {
                    singularNominative: "\u043f\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u0443",
                    singularGenitive: "\u043f\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d\u044b",
                    pluralGenitive: "\u043f\u0440\u0430\u0437 {{count}} \u0445\u0432\u0456\u043b\u0456\u043d"
                }
            }),
            aboutXHours: ee({
                regular: {
                    singularNominative: "\u043a\u0430\u043b\u044f {{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u044b",
                    singularGenitive: "\u043a\u0430\u043b\u044f {{count}} \u0433\u0430\u0434\u0437\u0456\u043d",
                    pluralGenitive: "\u043a\u0430\u043b\u044f {{count}} \u0433\u0430\u0434\u0437\u0456\u043d"
                },
                future: {
                    singularNominative: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u0443",
                    singularGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u044b",
                    pluralGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043d"
                }
            }),
            xHours: ee({
                regular: {
                    singularNominative: "{{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u0430",
                    singularGenitive: "{{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u044b",
                    pluralGenitive: "{{count}} \u0433\u0430\u0434\u0437\u0456\u043d"
                },
                past: {
                    singularNominative: "{{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u0443 \u0442\u0430\u043c\u0443",
                    singularGenitive: "{{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u044b \u0442\u0430\u043c\u0443",
                    pluralGenitive: "{{count}} \u0433\u0430\u0434\u0437\u0456\u043d \u0442\u0430\u043c\u0443"
                },
                future: {
                    singularNominative: "\u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u0443",
                    singularGenitive: "\u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043d\u044b",
                    pluralGenitive: "\u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u0437\u0456\u043d"
                }
            }),
            xDays: ee({
                regular: {
                    singularNominative: "{{count}} \u0434\u0437\u0435\u043d\u044c",
                    singularGenitive: "{{count}} \u0434\u043d\u0456",
                    pluralGenitive: "{{count}} \u0434\u0437\u0451\u043d"
                }
            }),
            aboutXWeeks: ee({
                regular: {
                    singularNominative: "\u043a\u0430\u043b\u044f {{count}} \u0442\u044b\u0434\u043d\u0456",
                    singularGenitive: "\u043a\u0430\u043b\u044f {{count}} \u0442\u044b\u0434\u043d\u044f\u045e",
                    pluralGenitive: "\u043a\u0430\u043b\u044f {{count}} \u0442\u044b\u0434\u043d\u044f\u045e"
                },
                future: {
                    singularNominative: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0442\u044b\u0434\u0437\u0435\u043d\u044c",
                    singularGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0442\u044b\u0434\u043d\u0456",
                    pluralGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0442\u044b\u0434\u043d\u044f\u045e"
                }
            }),
            xWeeks: ee({
                regular: {
                    singularNominative: "{{count}} \u0442\u044b\u0434\u0437\u0435\u043d\u044c",
                    singularGenitive: "{{count}} \u0442\u044b\u0434\u043d\u0456",
                    pluralGenitive: "{{count}} \u0442\u044b\u0434\u043d\u044f\u045e"
                }
            }),
            aboutXMonths: ee({
                regular: {
                    singularNominative: "\u043a\u0430\u043b\u044f {{count}} \u043c\u0435\u0441\u044f\u0446\u0430",
                    singularGenitive: "\u043a\u0430\u043b\u044f {{count}} \u043c\u0435\u0441\u044f\u0446\u0430\u045e",
                    pluralGenitive: "\u043a\u0430\u043b\u044f {{count}} \u043c\u0435\u0441\u044f\u0446\u0430\u045e"
                },
                future: {
                    singularNominative: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u043c\u0435\u0441\u044f\u0446",
                    singularGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u043c\u0435\u0441\u044f\u0446\u044b",
                    pluralGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u043c\u0435\u0441\u044f\u0446\u0430\u045e"
                }
            }),
            xMonths: ee({
                regular: {
                    singularNominative: "{{count}} \u043c\u0435\u0441\u044f\u0446",
                    singularGenitive: "{{count}} \u043c\u0435\u0441\u044f\u0446\u044b",
                    pluralGenitive: "{{count}} \u043c\u0435\u0441\u044f\u0446\u0430\u045e"
                }
            }),
            aboutXYears: ee({
                regular: {
                    singularNominative: "\u043a\u0430\u043b\u044f {{count}} \u0433\u043e\u0434\u0430",
                    singularGenitive: "\u043a\u0430\u043b\u044f {{count}} \u0433\u0430\u0434\u043e\u045e",
                    pluralGenitive: "\u043a\u0430\u043b\u044f {{count}} \u0433\u0430\u0434\u043e\u045e"
                },
                future: {
                    singularNominative: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0433\u043e\u0434",
                    singularGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u044b",
                    pluralGenitive: "\u043f\u0440\u044b\u0431\u043b\u0456\u0437\u043d\u0430 \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u043e\u045e"
                }
            }),
            xYears: ee({
                regular: {
                    singularNominative: "{{count}} \u0433\u043e\u0434",
                    singularGenitive: "{{count}} \u0433\u0430\u0434\u044b",
                    pluralGenitive: "{{count}} \u0433\u0430\u0434\u043e\u045e"
                }
            }),
            overXYears: ee({
                regular: {
                    singularNominative: "\u0431\u043e\u043b\u044c\u0448 \u0437\u0430 {{count}} \u0433\u043e\u0434",
                    singularGenitive: "\u0431\u043e\u043b\u044c\u0448 \u0437\u0430 {{count}} \u0433\u0430\u0434\u044b",
                    pluralGenitive: "\u0431\u043e\u043b\u044c\u0448 \u0437\u0430 {{count}} \u0433\u0430\u0434\u043e\u045e"
                },
                future: {
                    singularNominative: "\u0431\u043e\u043b\u044c\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0433\u043e\u0434",
                    singularGenitive: "\u0431\u043e\u043b\u044c\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u044b",
                    pluralGenitive: "\u0431\u043e\u043b\u044c\u0448, \u0447\u044b\u043c \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u043e\u045e"
                }
            }),
            almostXYears: ee({
                regular: {
                    singularNominative: "\u0430\u043c\u0430\u043b\u044c {{count}} \u0433\u043e\u0434",
                    singularGenitive: "\u0430\u043c\u0430\u043b\u044c {{count}} \u0433\u0430\u0434\u044b",
                    pluralGenitive: "\u0430\u043c\u0430\u043b\u044c {{count}} \u0433\u0430\u0434\u043e\u045e"
                },
                future: {
                    singularNominative: "\u0430\u043c\u0430\u043b\u044c \u043f\u0440\u0430\u0437 {{count}} \u0433\u043e\u0434",
                    singularGenitive: "\u0430\u043c\u0430\u043b\u044c \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u044b",
                    pluralGenitive: "\u0430\u043c\u0430\u043b\u044c \u043f\u0440\u0430\u0437 {{count}} \u0433\u0430\u0434\u043e\u045e"
                }
            })
        }
          , ne = {
            date: r({
                formats: {
                    full: "EEEE, d MMMM y '\u0433.'",
                    long: "d MMMM y '\u0433.'",
                    medium: "d MMM y '\u0433.'",
                    short: "dd.MM.y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "H:mm:ss zzzz",
                    long: "H:mm:ss z",
                    medium: "H:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    any: "{{date}}, {{time}}"
                },
                defaultWidth: "any"
            })
        }
          , ae = ["\u043d\u044f\u0434\u0437\u0435\u043b\u044e", "\u043f\u0430\u043d\u044f\u0434\u0437\u0435\u043b\u0430\u043a", "\u0430\u045e\u0442\u043e\u0440\u0430\u043a", "\u0441\u0435\u0440\u0430\u0434\u0443", "\u0447\u0430\u0446\u044c\u0432\u0435\u0440", "\u043f\u044f\u0442\u043d\u0456\u0446\u0443", "\u0441\u0443\u0431\u043e\u0442\u0443"];
        function re(e) {
            return "'\u0443 " + ae[e] + " \u0430' p"
        }
        const ie = {
            lastWeek: (e,t,n)=>{
                const a = q(e)
                  , r = a.getDay();
                return $(a, t, n) ? re(r) : function(e) {
                    const t = ae[e];
                    switch (e) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return "'\u0443 \u043c\u0456\u043d\u0443\u043b\u0443\u044e " + t + " \u0430' p";
                    case 1:
                    case 2:
                    case 4:
                        return "'\u0443 \u043c\u0456\u043d\u0443\u043b\u044b " + t + " \u0430' p"
                    }
                }(r)
            }
            ,
            yesterday: "'\u0443\u0447\u043e\u0440\u0430 \u0430' p",
            today: "'\u0441\u0451\u043d\u044c\u043d\u044f \u0430' p",
            tomorrow: "'\u0437\u0430\u045e\u0442\u0440\u0430 \u0430' p",
            nextWeek: (e,t,n)=>{
                const a = q(e)
                  , r = a.getDay();
                return $(a, t, n) ? re(r) : function(e) {
                    const t = ae[e];
                    switch (e) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return "'\u0443 \u043d\u0430\u0441\u0442\u0443\u043f\u043d\u0443\u044e " + t + " \u0430' p";
                    case 1:
                    case 2:
                    case 4:
                        return "'\u0443 \u043d\u0430\u0441\u0442\u0443\u043f\u043d\u044b " + t + " \u0430' p"
                    }
                }(r)
            }
            ,
            other: "P"
        }
          , oe = {
            code: "be-tarask",
            formatDistance: (e,t,n)=>(n = n || {},
            te[e](t, n)),
            formatLong: ne,
            formatRelative: (e,t,n,a)=>{
                const r = ie[e];
                return "function" === typeof r ? r(t, n, a) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = String(t?.unit)
                      , a = Number(e);
                    let r;
                    return r = "date" === n ? "-\u0433\u0430" : "hour" === n || "minute" === n || "second" === n ? "-\u044f" : a % 10 !== 2 && a % 10 !== 3 || a % 100 === 12 || a % 100 === 13 ? "-\u044b" : "-\u0456",
                    a + r
                }
                ,
                era: s({
                    values: {
                        narrow: ["\u0434\u0430 \u043d.\u044d.", "\u043d.\u044d."],
                        abbreviated: ["\u0434\u0430 \u043d. \u044d.", "\u043d. \u044d."],
                        wide: ["\u0434\u0430 \u043d\u0430\u0448\u0430\u0439 \u044d\u0440\u044b", "\u043d\u0430\u0448\u0430\u0439 \u044d\u0440\u044b"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1-\u044b \u043a\u0432.", "2-\u0456 \u043a\u0432.", "3-\u0456 \u043a\u0432.", "4-\u044b \u043a\u0432."],
                        wide: ["1-\u044b \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "2-\u0456 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "3-\u0456 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "4-\u044b \u043a\u0432\u0430\u0440\u0442\u0430\u043b"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u0421", "\u041b", "\u0421", "\u041a", "\u0422", "\u0427", "\u041b", "\u0416", "\u0412", "\u041a", "\u041b", "\u0421"],
                        abbreviated: ["\u0441\u0442\u0443\u0434\u0437.", "\u043b\u044e\u0442.", "\u0441\u0430\u043a.", "\u043a\u0440\u0430\u0441.", "\u0442\u0440\u0430\u0432.", "\u0447\u044d\u0440\u0432.", "\u043b\u0456\u043f.", "\u0436\u043d.", "\u0432\u0435\u0440.", "\u043a\u0430\u0441\u0442\u0440.", "\u043b\u0456\u0441\u0442.", "\u0441\u044c\u043d\u0435\u0436."],
                        wide: ["\u0441\u0442\u0443\u0434\u0437\u0435\u043d\u044c", "\u043b\u044e\u0442\u044b", "\u0441\u0430\u043a\u0430\u0432\u0456\u043a", "\u043a\u0440\u0430\u0441\u0430\u0432\u0456\u043a", "\u0442\u0440\u0430\u0432\u0435\u043d\u044c", "\u0447\u044d\u0440\u0432\u0435\u043d\u044c", "\u043b\u0456\u043f\u0435\u043d\u044c", "\u0436\u043d\u0456\u0432\u0435\u043d\u044c", "\u0432\u0435\u0440\u0430\u0441\u0435\u043d\u044c", "\u043a\u0430\u0441\u0442\u0440\u044b\u0447\u043d\u0456\u043a", "\u043b\u0456\u0441\u0442\u0430\u043f\u0430\u0434", "\u0441\u044c\u043d\u0435\u0436\u0430\u043d\u044c"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["\u0421", "\u041b", "\u0421", "\u041a", "\u0422", "\u0427", "\u041b", "\u0416", "\u0412", "\u041a", "\u041b", "\u0421"],
                        abbreviated: ["\u0441\u0442\u0443\u0434\u0437.", "\u043b\u044e\u0442.", "\u0441\u0430\u043a.", "\u043a\u0440\u0430\u0441.", "\u0442\u0440\u0430\u0432.", "\u0447\u044d\u0440\u0432.", "\u043b\u0456\u043f.", "\u0436\u043d.", "\u0432\u0435\u0440.", "\u043a\u0430\u0441\u0442\u0440.", "\u043b\u0456\u0441\u0442.", "\u0441\u044c\u043d\u0435\u0436."],
                        wide: ["\u0441\u0442\u0443\u0434\u0437\u0435\u043d\u044f", "\u043b\u044e\u0442\u0430\u0433\u0430", "\u0441\u0430\u043a\u0430\u0432\u0456\u043a\u0430", "\u043a\u0440\u0430\u0441\u0430\u0432\u0456\u043a\u0430", "\u0442\u0440\u0430\u045e\u043d\u044f", "\u0447\u044d\u0440\u0432\u0435\u043d\u044f", "\u043b\u0456\u043f\u0435\u043d\u044f", "\u0436\u043d\u0456\u045e\u043d\u044f", "\u0432\u0435\u0440\u0430\u0441\u043d\u044f", "\u043a\u0430\u0441\u0442\u0440\u044b\u0447\u043d\u0456\u043a\u0430", "\u043b\u0456\u0441\u0442\u0430\u043f\u0430\u0434\u0430", "\u0441\u044c\u043d\u0435\u0436\u043d\u044f"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u041d", "\u041f", "\u0410", "\u0421", "\u0427", "\u041f", "\u0421"],
                        short: ["\u043d\u0434", "\u043f\u043d", "\u0430\u045e", "\u0441\u0440", "\u0447\u0446", "\u043f\u0442", "\u0441\u0431"],
                        abbreviated: ["\u043d\u044f\u0434\u0437", "\u043f\u0430\u043d", "\u0430\u045e\u0442", "\u0441\u0435\u0440", "\u0447\u0430\u0446\u044c", "\u043f\u044f\u0442", "\u0441\u0443\u0431"],
                        wide: ["\u043d\u044f\u0434\u0437\u0435\u043b\u044f", "\u043f\u0430\u043d\u044f\u0434\u0437\u0435\u043b\u0430\u043a", "\u0430\u045e\u0442\u043e\u0440\u0430\u043a", "\u0441\u0435\u0440\u0430\u0434\u0430", "\u0447\u0430\u0446\u044c\u0432\u0435\u0440", "\u043f\u044f\u0442\u043d\u0456\u0446\u0430", "\u0441\u0443\u0431\u043e\u0442\u0430"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u045e\u043d.",
                            noon: "\u043f\u043e\u045e\u0434.",
                            morning: "\u0440\u0430\u043d.",
                            afternoon: "\u0434\u0437\u0435\u043d\u044c",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u043e\u0447"
                        },
                        abbreviated: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u045e\u043d.",
                            noon: "\u043f\u043e\u045e\u0434.",
                            morning: "\u0440\u0430\u043d.",
                            afternoon: "\u0434\u0437\u0435\u043d\u044c",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u043e\u0447"
                        },
                        wide: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u045e\u043d\u0430\u0447",
                            noon: "\u043f\u043e\u045e\u0434\u0437\u0435\u043d\u044c",
                            morning: "\u0440\u0430\u043d\u0456\u0446\u0430",
                            afternoon: "\u0434\u0437\u0435\u043d\u044c",
                            evening: "\u0432\u0435\u0447\u0430\u0440",
                            night: "\u043d\u043e\u0447"
                        }
                    },
                    defaultWidth: "any",
                    formattingValues: {
                        narrow: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u045e\u043d.",
                            noon: "\u043f\u043e\u045e\u0434.",
                            morning: "\u0440\u0430\u043d.",
                            afternoon: "\u0434\u043d\u044f",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u043e\u0447\u044b"
                        },
                        abbreviated: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u045e\u043d.",
                            noon: "\u043f\u043e\u045e\u0434.",
                            morning: "\u0440\u0430\u043d.",
                            afternoon: "\u0434\u043d\u044f",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u043e\u0447\u044b"
                        },
                        wide: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u045e\u043d\u0430\u0447",
                            noon: "\u043f\u043e\u045e\u0434\u0437\u0435\u043d\u044c",
                            morning: "\u0440\u0430\u043d\u0456\u0446\u044b",
                            afternoon: "\u0434\u043d\u044f",
                            evening: "\u0432\u0435\u0447\u0430\u0440\u0430",
                            night: "\u043d\u043e\u0447\u044b"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(-?(\u0435|\u044f|\u0433\u0430|\u0456|\u044b|\u0430\u0435|\u0430\u044f|\u044f\u044f|\u0448\u044b|\u0433\u0456|\u0446\u0456|\u0442\u044b|\u043c\u044b))?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^((\u0434\u0430 )?\u043d\.?\s?\u044d\.?)/i,
                        abbreviated: /^((\u0434\u0430 )?\u043d\.?\s?\u044d\.?)/i,
                        wide: /^(\u0434\u0430 \u043d\u0430\u0448\u0430\u0439 \u044d\u0440\u044b|\u043d\u0430\u0448\u0430\u0439 \u044d\u0440\u044b|\u043d\u0430\u0448\u0430 \u044d\u0440\u0430)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u0434/i, /^\u043d/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234](-?[\u044b\u0456]?)? \u043a\u0432.?/i,
                        wide: /^[1234](-?[\u044b\u0456]?)? \u043a\u0432\u0430\u0440\u0442\u0430\u043b/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[\u0441\u043b\u043a\u043c\u0447\u0436\u0432]/i,
                        abbreviated: /^(\u0441\u0442\u0443\u0434\u0437|\u043b\u044e\u0442|\u0441\u0430\u043a|\u043a\u0440\u0430\u0441|\u0442\u0440(\u0430\u0432)?|\u0447\u044d\u0440\u0432|\u043b\u0456\u043f|\u0436\u043d|\u0432\u0435\u0440|\u043a\u0430\u0441\u0442\u0440|\u043b\u0456\u0441\u0442|\u0441\u044c\u043d\u0435\u0436)\.?/i,
                        wide: /^(\u0441\u0442\u0443\u0434\u0437\u0435\u043d[\u044c\u044f]|\u043b\u044e\u0442(\u044b|\u0430\u0433\u0430)|\u0441\u0430\u043a\u0430\u0432\u0456\u043a\u0430?|\u043a\u0440\u0430\u0441\u0430\u0432\u0456\u043a\u0430?|\u0442\u0440\u0430(\u0432\u0435\u043d\u044c|\u045e\u043d\u044f)|\u0447\u044d\u0440\u0432\u0435\u043d[\u044c\u044f]|\u043b\u0456\u043f\u0435\u043d[\u044c\u044f]|\u0436\u043d\u0456(\u0432\u0435\u043d\u044c|\u045e\u043d\u044f)|\u0432\u0435\u0440\u0430\u0441(\u0435\u043d\u044c|\u043d\u044f)|\u043a\u0430\u0441\u0442\u0440\u044b\u0447\u043d\u0456\u043a\u0430?|\u043b\u0456\u0441\u0442\u0430\u043f\u0430\u0434\u0430?|\u0441\u044c\u043d\u0435\u0436(\u0430\u043d\u044c|\u043d\u044f))/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0441/i, /^\u043b/i, /^\u0441/i, /^\u043a/i, /^\u0442/i, /^\u0447/i, /^\u043b/i, /^\u0436/i, /^\u0432/i, /^\u043a/i, /^\u043b/i, /^\u0441/i],
                        any: [/^\u0441\u0442/i, /^\u043b\u044e/i, /^\u0441\u0430/i, /^\u043a\u0440/i, /^\u0442\u0440/i, /^\u0447/i, /^\u043b\u0456\u043f/i, /^\u0436/i, /^\u0432/i, /^\u043a\u0430/i, /^\u043b\u0456\u0441/i, /^\u0441\u043d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u043d\u043f\u0430\u0441\u0447]/i,
                        short: /^(\u043d\u0434|\u043d\u044f|\u043f\u043d|\u043f\u0430|\u0430\u045e|\u0430\u0442|\u0441\u0440|\u0441\u0435|\u0447\u0446|\u0447\u0430|\u043f\u0442|\u043f\u044f|\u0441\u0431|\u0441\u0443)\.?/i,
                        abbreviated: /^(\u043d\u044f\u0434\u0437?|\u043d\u0434\u0437|\u043f\u043d\u0434|\u043f\u0430\u043d|\u0430\u045e\u0442|\u0441\u0440\u0434|\u0441\u0435\u0440|\u0447\u0446\u044c\u0432|\u0447\u0430\u0446\u044c|\u043f\u0442\u043d|\u043f\u044f\u0442|\u0441\u0443\u0431).?/i,
                        wide: /^(\u043d\u044f\u0434\u0437\u0435\u043b[\u044f\u0456]|\u043f\u0430\u043d\u044f\u0434\u0437\u0435\u043b(\u0430\u043a|\u043a\u0430)|\u0430\u045e\u0442\u043e\u0440(\u0430\u043a|\u043a\u0430)|\u0441\u0435\u0440\u0430\u0434[\u0430\u044b]|\u0447\u0430\u0446\u044c\u0432(\u0435\u0440|\u044f\u0440\u0433\u0430)|\u043f\u044f\u0442\u043d\u0456\u0446[\u0430\u044b]|\u0441\u0443\u0431\u043e\u0442[\u0430\u044b])/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u043d/i, /^\u043f/i, /^\u0430/i, /^\u0441/i, /^\u0447/i, /^\u043f/i, /^\u0441/i],
                        any: [/^\u043d/i, /^\u043f[\u0430\u043d]/i, /^\u0430/i, /^\u0441[\u0435\u0440]/i, /^\u0447/i, /^\u043f[\u044f\u0442]/i, /^\u0441[\u0443\u0431]/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^([\u0434\u043f]\u043f|\u043f\u043e\u045e\u043d\.?|\u043f\u043e\u045e\u0434\.?|\u0440\u0430\u043d\.?|\u0434\u0437\u0435\u043d\u044c|\u0434\u043d\u044f|\u0432\u0435\u0447\.?|\u043d\u043e\u0447\u044b?)/i,
                        abbreviated: /^([\u0434\u043f]\u043f|\u043f\u043e\u045e\u043d\.?|\u043f\u043e\u045e\u0434\.?|\u0440\u0430\u043d\.?|\u0434\u0437\u0435\u043d\u044c|\u0434\u043d\u044f|\u0432\u0435\u0447\.?|\u043d\u043e\u0447\u044b?)/i,
                        wide: /^([\u0434\u043f]\u043f|\u043f\u043e\u045e\u043d\u0430\u0447|\u043f\u043e\u045e\u0434\u0437\u0435\u043d\u044c|\u0440\u0430\u043d\u0456\u0446[\u0430\u044b]|\u0434\u0437\u0435\u043d\u044c|\u0434\u043d\u044f|\u0432\u0435\u0447\u0430\u0440\u0430?|\u043d\u043e\u0447\u044b?)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: {
                            am: /^\u0434\u043f/i,
                            pm: /^\u043f\u043f/i,
                            midnight: /^\u043f\u043e\u045e\u043d/i,
                            noon: /^\u043f\u043e\u045e\u0434/i,
                            morning: /^\u0440/i,
                            afternoon: /^\u0434[\u0437\u043d]/i,
                            evening: /^\u0432/i,
                            night: /^\u043d/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const se = {
            lessThanXSeconds: {
                one: "\u043f\u043e-\u043c\u0430\u043b\u043a\u043e \u043e\u0442 \u0441\u0435\u043a\u0443\u043d\u0434\u0430",
                other: "\u043f\u043e-\u043c\u0430\u043b\u043a\u043e \u043e\u0442 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0438"
            },
            xSeconds: {
                one: "1 \u0441\u0435\u043a\u0443\u043d\u0434\u0430",
                other: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0438"
            },
            halfAMinute: "\u043f\u043e\u043b\u043e\u0432\u0438\u043d \u043c\u0438\u043d\u0443\u0442\u0430",
            lessThanXMinutes: {
                one: "\u043f\u043e-\u043c\u0430\u043b\u043a\u043e \u043e\u0442 \u043c\u0438\u043d\u0443\u0442\u0430",
                other: "\u043f\u043e-\u043c\u0430\u043b\u043a\u043e \u043e\u0442 {{count}} \u043c\u0438\u043d\u0443\u0442\u0438"
            },
            xMinutes: {
                one: "1 \u043c\u0438\u043d\u0443\u0442\u0430",
                other: "{{count}} \u043c\u0438\u043d\u0443\u0442\u0438"
            },
            aboutXHours: {
                one: "\u043e\u043a\u043e\u043b\u043e \u0447\u0430\u0441",
                other: "\u043e\u043a\u043e\u043b\u043e {{count}} \u0447\u0430\u0441\u0430"
            },
            xHours: {
                one: "1 \u0447\u0430\u0441",
                other: "{{count}} \u0447\u0430\u0441\u0430"
            },
            xDays: {
                one: "1 \u0434\u0435\u043d",
                other: "{{count}} \u0434\u043d\u0438"
            },
            aboutXWeeks: {
                one: "\u043e\u043a\u043e\u043b\u043e \u0441\u0435\u0434\u043c\u0438\u0446\u0430",
                other: "\u043e\u043a\u043e\u043b\u043e {{count}} \u0441\u0435\u0434\u043c\u0438\u0446\u0438"
            },
            xWeeks: {
                one: "1 \u0441\u0435\u0434\u043c\u0438\u0446\u0430",
                other: "{{count}} \u0441\u0435\u0434\u043c\u0438\u0446\u0438"
            },
            aboutXMonths: {
                one: "\u043e\u043a\u043e\u043b\u043e \u043c\u0435\u0441\u0435\u0446",
                other: "\u043e\u043a\u043e\u043b\u043e {{count}} \u043c\u0435\u0441\u0435\u0446\u0430"
            },
            xMonths: {
                one: "1 \u043c\u0435\u0441\u0435\u0446",
                other: "{{count}} \u043c\u0435\u0441\u0435\u0446\u0430"
            },
            aboutXYears: {
                one: "\u043e\u043a\u043e\u043b\u043e \u0433\u043e\u0434\u0438\u043d\u0430",
                other: "\u043e\u043a\u043e\u043b\u043e {{count}} \u0433\u043e\u0434\u0438\u043d\u0438"
            },
            xYears: {
                one: "1 \u0433\u043e\u0434\u0438\u043d\u0430",
                other: "{{count}} \u0433\u043e\u0434\u0438\u043d\u0438"
            },
            overXYears: {
                one: "\u043d\u0430\u0434 \u0433\u043e\u0434\u0438\u043d\u0430",
                other: "\u043d\u0430\u0434 {{count}} \u0433\u043e\u0434\u0438\u043d\u0438"
            },
            almostXYears: {
                one: "\u043f\u043e\u0447\u0442\u0438 \u0433\u043e\u0434\u0438\u043d\u0430",
                other: "\u043f\u043e\u0447\u0442\u0438 {{count}} \u0433\u043e\u0434\u0438\u043d\u0438"
            }
        }
          , ue = {
            date: r({
                formats: {
                    full: "EEEE, dd MMMM yyyy",
                    long: "dd MMMM yyyy",
                    medium: "dd MMM yyyy",
                    short: "dd/MM/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    any: "{{date}} {{time}}"
                },
                defaultWidth: "any"
            })
        }
          , de = ["\u043d\u0435\u0434\u0435\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", "\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"];
        function le(e) {
            const t = de[e];
            return 2 === e ? "'\u0432\u044a\u0432 " + t + " \u0432' p" : "'\u0432 " + t + " \u0432' p"
        }
        const ce = {
            lastWeek: (e,t,n)=>{
                const a = q(e)
                  , r = a.getDay();
                return $(a, t, n) ? le(r) : function(e) {
                    const t = de[e];
                    switch (e) {
                    case 0:
                    case 3:
                    case 6:
                        return "'\u043c\u0438\u043d\u0430\u043b\u0430\u0442\u0430 " + t + " \u0432' p";
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return "'\u043c\u0438\u043d\u0430\u043b\u0438\u044f " + t + " \u0432' p"
                    }
                }(r)
            }
            ,
            yesterday: "'\u0432\u0447\u0435\u0440\u0430 \u0432' p",
            today: "'\u0434\u043d\u0435\u0441 \u0432' p",
            tomorrow: "'\u0443\u0442\u0440\u0435 \u0432' p",
            nextWeek: (e,t,n)=>{
                const a = q(e)
                  , r = a.getDay();
                return $(a, t, n) ? le(r) : function(e) {
                    const t = de[e];
                    switch (e) {
                    case 0:
                    case 3:
                    case 6:
                        return "'\u0441\u043b\u0435\u0434\u0432\u0430\u0449\u0430\u0442\u0430 " + t + " \u0432' p";
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return "'\u0441\u043b\u0435\u0434\u0432\u0430\u0449\u0438\u044f " + t + " \u0432' p"
                    }
                }(r)
            }
            ,
            other: "P"
        };
        function me(e, t, n, a, r) {
            const i = function(e) {
                return "quarter" === e
            }(t) ? r : function(e) {
                return "year" === e || "week" === e || "minute" === e || "second" === e
            }(t) ? a : n;
            return e + "-" + i
        }
        const he = {
            code: "bg",
            formatDistance: (e,t,n)=>{
                let a;
                const r = se[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "\u0441\u043b\u0435\u0434 " + a : "\u043f\u0440\u0435\u0434\u0438 " + a : a
            }
            ,
            formatLong: ue,
            formatRelative: (e,t,n,a)=>{
                const r = ce[e];
                return "function" === typeof r ? r(t, n, a) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e)
                      , a = t?.unit;
                    if (0 === n)
                        return me(0, a, "\u0435\u0432", "\u0435\u0432\u0430", "\u0435\u0432\u043e");
                    if (n % 1e3 === 0)
                        return me(n, a, "\u0435\u043d", "\u043d\u0430", "\u043d\u043e");
                    if (n % 100 === 0)
                        return me(n, a, "\u0442\u0435\u043d", "\u0442\u043d\u0430", "\u0442\u043d\u043e");
                    const r = n % 100;
                    if (r > 20 || r < 10)
                        switch (r % 10) {
                        case 1:
                            return me(n, a, "\u0432\u0438", "\u0432\u0430", "\u0432\u043e");
                        case 2:
                            return me(n, a, "\u0440\u0438", "\u0440\u0430", "\u0440\u043e");
                        case 7:
                        case 8:
                            return me(n, a, "\u043c\u0438", "\u043c\u0430", "\u043c\u043e")
                        }
                    return me(n, a, "\u0442\u0438", "\u0442\u0430", "\u0442\u043e")
                }
                ,
                era: s({
                    values: {
                        narrow: ["\u043f\u0440.\u043d.\u0435.", "\u043d.\u0435."],
                        abbreviated: ["\u043f\u0440\u0435\u0434\u0438 \u043d. \u0435.", "\u043d. \u0435."],
                        wide: ["\u043f\u0440\u0435\u0434\u0438 \u043d\u043e\u0432\u0430\u0442\u0430 \u0435\u0440\u0430", "\u043d\u043e\u0432\u0430\u0442\u0430 \u0435\u0440\u0430"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1-\u0432\u043e \u0442\u0440\u0438\u043c\u0435\u0441.", "2-\u0440\u043e \u0442\u0440\u0438\u043c\u0435\u0441.", "3-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441.", "4-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441."],
                        wide: ["1-\u0432\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "2-\u0440\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "3-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "4-\u0442\u043e \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        abbreviated: ["\u044f\u043d\u0443", "\u0444\u0435\u0432", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0435", "\u0434\u0435\u043a"],
                        wide: ["\u044f\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"],
                        short: ["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"],
                        abbreviated: ["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0432\u0442\u043e", "\u0441\u0440\u044f", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u044a\u0431"],
                        wide: ["\u043d\u0435\u0434\u0435\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", "\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        wide: {
                            am: "\u043f\u0440\u0435\u0434\u0438 \u043e\u0431\u044f\u0434",
                            pm: "\u0441\u043b\u0435\u0434 \u043e\u0431\u044f\u0434",
                            midnight: "\u0432 \u043f\u043e\u043b\u0443\u043d\u043e\u0449",
                            noon: "\u043d\u0430 \u043e\u0431\u044f\u0434",
                            morning: "\u0441\u0443\u0442\u0440\u0438\u043d\u0442\u0430",
                            afternoon: "\u0441\u043b\u0435\u0434\u043e\u0431\u0435\u0434",
                            evening: "\u0432\u0435\u0447\u0435\u0440\u0442\u0430",
                            night: "\u043f\u0440\u0435\u0437 \u043d\u043e\u0449\u0442\u0430"
                        }
                    },
                    defaultWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(-?[\u0432\u0440\u043c\u0442][\u0430\u0438]|-?\u0442?(\u0435\u043d|\u043d\u0430)|-?(\u0435\u0432|\u0435\u0432\u0430))?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^((\u043f\u0440)?\u043d\.?\s?\u0435\.?)/i,
                        abbreviated: /^((\u043f\u0440)?\u043d\.?\s?\u0435\.?)/i,
                        wide: /^(\u043f\u0440\u0435\u0434\u0438 \u043d\u043e\u0432\u0430\u0442\u0430 \u0435\u0440\u0430|\u043d\u043e\u0432\u0430\u0442\u0430 \u0435\u0440\u0430|\u043d\u043e\u0432\u0430 \u0435\u0440\u0430)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u043f/i, /^\u043d/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234](-?[\u0432\u0440\u0442]?o?)? \u0442\u0440\u0438\u043c\u0435\u0441.?/i,
                        wide: /^[1234](-?[\u0432\u0440\u0442]?\u043e?)? \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        abbreviated: /^(\u044f\u043d\u0443|\u0444\u0435\u0432|\u043c\u0430\u0440|\u0430\u043f\u0440|\u043c\u0430\u0439|\u044e\u043d\u0438|\u044e\u043b\u0438|\u0430\u0432\u0433|\u0441\u0435\u043f|\u043e\u043a\u0442|\u043d\u043e\u0435|\u0434\u0435\u043a)/i,
                        wide: /^(\u044f\u043d\u0443\u0430\u0440\u0438|\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438|\u043c\u0430\u0440\u0442|\u0430\u043f\u0440\u0438\u043b|\u043c\u0430\u0439|\u044e\u043d\u0438|\u044e\u043b\u0438|\u0430\u0432\u0433\u0443\u0441\u0442|\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438|\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438|\u043d\u043e\u0435\u043c\u0432\u0440\u0438|\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u044f/i, /^\u0444/i, /^\u043c\u0430\u0440/i, /^\u0430\u043f/i, /^\u043c\u0430\u0439/i, /^\u044e\u043d/i, /^\u044e\u043b/i, /^\u0430\u0432/i, /^\u0441\u0435/i, /^\u043e\u043a\u0442/i, /^\u043d\u043e/i, /^\u0434\u0435/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u043d\u043f\u0432\u0441\u0447]/i,
                        short: /^(\u043d\u0434|\u043f\u043d|\u0432\u0442|\u0441\u0440|\u0447\u0442|\u043f\u0442|\u0441\u0431)/i,
                        abbreviated: /^(\u043d\u0435\u0434|\u043f\u043e\u043d|\u0432\u0442\u043e|\u0441\u0440\u044f|\u0447\u0435\u0442|\u043f\u0435\u0442|\u0441\u044a\u0431)/i,
                        wide: /^(\u043d\u0435\u0434\u0435\u043b\u044f|\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a|\u0432\u0442\u043e\u0440\u043d\u0438\u043a|\u0441\u0440\u044f\u0434\u0430|\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a|\u043f\u0435\u0442\u044a\u043a|\u0441\u044a\u0431\u043e\u0442\u0430)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u043d/i, /^\u043f/i, /^\u0432/i, /^\u0441/i, /^\u0447/i, /^\u043f/i, /^\u0441/i],
                        any: [/^\u043d[\u0435\u0434]/i, /^\u043f[\u043e\u043d]/i, /^\u0432\u0442/i, /^\u0441\u0440/i, /^\u0447[\u0435\u0442]/i, /^\u043f[\u0435\u0442]/i, /^\u0441[\u044a\u0431]/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(\u043f\u0440\u0435\u0434\u0438 \u043e|\u0441\u043b\u0435\u0434 \u043e|\u0432 \u043f\u043e|\u043d\u0430 \u043e|\u043f\u0440\u0435\u0437|\u0432\u0435\u0447|\u0441\u0443\u0442|\u0441\u043b\u0435\u0434\u043e)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u043f\u0440\u0435\u0434\u0438 \u043e/i,
                            pm: /^\u0441\u043b\u0435\u0434 \u043e/i,
                            midnight: /^\u0432 \u043f\u043e\u043b/i,
                            noon: /^\u043d\u0430 \u043e\u0431/i,
                            morning: /^\u0441\u0443\u0442/i,
                            afternoon: /^\u0441\u043b\u0435\u0434\u043e/i,
                            evening: /^\u0432\u0435\u0447/i,
                            night: /^\u043f\u0440\u0435\u0437 \u043d/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const fe = {
            locale: {
                1: "\u09e7",
                2: "\u09e8",
                3: "\u09e9",
                4: "\u09ea",
                5: "\u09eb",
                6: "\u09ec",
                7: "\u09ed",
                8: "\u09ee",
                9: "\u09ef",
                0: "\u09e6"
            },
            number: {
                "\u09e7": "1",
                "\u09e8": "2",
                "\u09e9": "3",
                "\u09ea": "4",
                "\u09eb": "5",
                "\u09ec": "6",
                "\u09ed": "7",
                "\u09ee": "8",
                "\u09ef": "9",
                "\u09e6": "0"
            }
        };
        function pe(e) {
            return e.toString().replace(/\d/g, (function(e) {
                return fe.locale[e]
            }
            ))
        }
        const ge = {
            ordinalNumber: (e,t)=>{
                const n = Number(e)
                  , a = pe(n)
                  , r = t?.unit;
                if ("date" === r)
                    return function(e, t) {
                        if (e > 18 && e <= 31)
                            return t + "\u09b6\u09c7";
                        switch (e) {
                        case 1:
                            return t + "\u09b2\u09be";
                        case 2:
                        case 3:
                            return t + "\u09b0\u09be";
                        case 4:
                            return t + "\u09a0\u09be";
                        default:
                            return t + "\u0987"
                        }
                    }(n, a);
                if (n > 10 || 0 === n)
                    return a + "\u09a4\u09ae";
                switch (n % 10) {
                case 2:
                case 3:
                    return a + "\u09df";
                case 4:
                    return a + "\u09b0\u09cd\u09a5";
                case 6:
                    return a + "\u09b7\u09cd\u09a0";
                default:
                    return a + "\u09ae"
                }
            }
            ,
            era: s({
                values: {
                    narrow: ["\u0996\u09cd\u09b0\u09bf\u0983\u09aa\u09c2\u0983", "\u0996\u09cd\u09b0\u09bf\u0983"],
                    abbreviated: ["\u0996\u09cd\u09b0\u09bf\u0983\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09cd\u09b0\u09bf\u0983"],
                    wide: ["\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09be\u09ac\u09cd\u09a6"]
                },
                defaultWidth: "wide"
            }),
            quarter: s({
                values: {
                    narrow: ["\u09e7", "\u09e8", "\u09e9", "\u09ea"],
                    abbreviated: ["\u09e7\u09a4\u09cd\u09b0\u09c8", "\u09e8\u09a4\u09cd\u09b0\u09c8", "\u09e9\u09a4\u09cd\u09b0\u09c8", "\u09ea\u09a4\u09cd\u09b0\u09c8"],
                    wide: ["\u09e7\u09ae \u09a4\u09cd\u09b0\u09c8\u09ae\u09be\u09b8\u09bf\u0995", "\u09e8\u09df \u09a4\u09cd\u09b0\u09c8\u09ae\u09be\u09b8\u09bf\u0995", "\u09e9\u09df \u09a4\u09cd\u09b0\u09c8\u09ae\u09be\u09b8\u09bf\u0995", "\u09ea\u09b0\u09cd\u09a5 \u09a4\u09cd\u09b0\u09c8\u09ae\u09be\u09b8\u09bf\u0995"]
                },
                defaultWidth: "wide",
                argumentCallback: e=>e - 1
            }),
            month: s({
                values: {
                    narrow: ["\u099c\u09be\u09a8\u09c1", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f", "\u0985\u0995\u09cd\u099f\u09cb", "\u09a8\u09ad\u09c7", "\u09a1\u09bf\u09b8\u09c7"],
                    abbreviated: ["\u099c\u09be\u09a8\u09c1", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f", "\u0985\u0995\u09cd\u099f\u09cb", "\u09a8\u09ad\u09c7", "\u09a1\u09bf\u09b8\u09c7"],
                    wide: ["\u099c\u09be\u09a8\u09c1\u09df\u09be\u09b0\u09bf", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09df\u09be\u09b0\u09bf", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"]
                },
                defaultWidth: "wide"
            }),
            day: s({
                values: {
                    narrow: ["\u09b0", "\u09b8\u09cb", "\u09ae", "\u09ac\u09c1", "\u09ac\u09c3", "\u09b6\u09c1", "\u09b6"],
                    short: ["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", "\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"],
                    abbreviated: ["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", "\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"],
                    wide: ["\u09b0\u09ac\u09bf\u09ac\u09be\u09b0", "\u09b8\u09cb\u09ae\u09ac\u09be\u09b0", "\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0", "\u09ac\u09c1\u09a7\u09ac\u09be\u09b0", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0 ", "\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0", "\u09b6\u09a8\u09bf\u09ac\u09be\u09b0"]
                },
                defaultWidth: "wide"
            }),
            dayPeriod: s({
                values: {
                    narrow: {
                        am: "\u09aa\u09c2",
                        pm: "\u0985\u09aa",
                        midnight: "\u09ae\u09a7\u09cd\u09af\u09b0\u09be\u09a4",
                        noon: "\u09ae\u09a7\u09cd\u09af\u09be\u09b9\u09cd\u09a8",
                        morning: "\u09b8\u0995\u09be\u09b2",
                        afternoon: "\u09ac\u09bf\u0995\u09be\u09b2",
                        evening: "\u09b8\u09a8\u09cd\u09a7\u09cd\u09af\u09be",
                        night: "\u09b0\u09be\u09a4"
                    },
                    abbreviated: {
                        am: "\u09aa\u09c2\u09b0\u09cd\u09ac\u09be\u09b9\u09cd\u09a8",
                        pm: "\u0985\u09aa\u09b0\u09be\u09b9\u09cd\u09a8",
                        midnight: "\u09ae\u09a7\u09cd\u09af\u09b0\u09be\u09a4",
                        noon: "\u09ae\u09a7\u09cd\u09af\u09be\u09b9\u09cd\u09a8",
                        morning: "\u09b8\u0995\u09be\u09b2",
                        afternoon: "\u09ac\u09bf\u0995\u09be\u09b2",
                        evening: "\u09b8\u09a8\u09cd\u09a7\u09cd\u09af\u09be",
                        night: "\u09b0\u09be\u09a4"
                    },
                    wide: {
                        am: "\u09aa\u09c2\u09b0\u09cd\u09ac\u09be\u09b9\u09cd\u09a8",
                        pm: "\u0985\u09aa\u09b0\u09be\u09b9\u09cd\u09a8",
                        midnight: "\u09ae\u09a7\u09cd\u09af\u09b0\u09be\u09a4",
                        noon: "\u09ae\u09a7\u09cd\u09af\u09be\u09b9\u09cd\u09a8",
                        morning: "\u09b8\u0995\u09be\u09b2",
                        afternoon: "\u09ac\u09bf\u0995\u09be\u09b2",
                        evening: "\u09b8\u09a8\u09cd\u09a7\u09cd\u09af\u09be",
                        night: "\u09b0\u09be\u09a4"
                    }
                },
                defaultWidth: "wide",
                formattingValues: {
                    narrow: {
                        am: "\u09aa\u09c2",
                        pm: "\u0985\u09aa",
                        midnight: "\u09ae\u09a7\u09cd\u09af\u09b0\u09be\u09a4",
                        noon: "\u09ae\u09a7\u09cd\u09af\u09be\u09b9\u09cd\u09a8",
                        morning: "\u09b8\u0995\u09be\u09b2",
                        afternoon: "\u09ac\u09bf\u0995\u09be\u09b2",
                        evening: "\u09b8\u09a8\u09cd\u09a7\u09cd\u09af\u09be",
                        night: "\u09b0\u09be\u09a4"
                    },
                    abbreviated: {
                        am: "\u09aa\u09c2\u09b0\u09cd\u09ac\u09be\u09b9\u09cd\u09a8",
                        pm: "\u0985\u09aa\u09b0\u09be\u09b9\u09cd\u09a8",
                        midnight: "\u09ae\u09a7\u09cd\u09af\u09b0\u09be\u09a4",
                        noon: "\u09ae\u09a7\u09cd\u09af\u09be\u09b9\u09cd\u09a8",
                        morning: "\u09b8\u0995\u09be\u09b2",
                        afternoon: "\u09ac\u09bf\u0995\u09be\u09b2",
                        evening: "\u09b8\u09a8\u09cd\u09a7\u09cd\u09af\u09be",
                        night: "\u09b0\u09be\u09a4"
                    },
                    wide: {
                        am: "\u09aa\u09c2\u09b0\u09cd\u09ac\u09be\u09b9\u09cd\u09a8",
                        pm: "\u0985\u09aa\u09b0\u09be\u09b9\u09cd\u09a8",
                        midnight: "\u09ae\u09a7\u09cd\u09af\u09b0\u09be\u09a4",
                        noon: "\u09ae\u09a7\u09cd\u09af\u09be\u09b9\u09cd\u09a8",
                        morning: "\u09b8\u0995\u09be\u09b2",
                        afternoon: "\u09ac\u09bf\u0995\u09be\u09b2",
                        evening: "\u09b8\u09a8\u09cd\u09a7\u09cd\u09af\u09be",
                        night: "\u09b0\u09be\u09a4"
                    }
                },
                defaultFormattingWidth: "wide"
            })
        }
          , ve = {
            lessThanXSeconds: {
                one: "\u09aa\u09cd\u09b0\u09be\u09df \u09e7 \u09b8\u09c7\u0995\u09c7\u09a8\u09cd\u09a1",
                other: "\u09aa\u09cd\u09b0\u09be\u09df {{count}} \u09b8\u09c7\u0995\u09c7\u09a8\u09cd\u09a1"
            },
            xSeconds: {
                one: "\u09e7 \u09b8\u09c7\u0995\u09c7\u09a8\u09cd\u09a1",
                other: "{{count}} \u09b8\u09c7\u0995\u09c7\u09a8\u09cd\u09a1"
            },
            halfAMinute: "\u0986\u09a7 \u09ae\u09bf\u09a8\u09bf\u099f",
            lessThanXMinutes: {
                one: "\u09aa\u09cd\u09b0\u09be\u09df \u09e7 \u09ae\u09bf\u09a8\u09bf\u099f",
                other: "\u09aa\u09cd\u09b0\u09be\u09df {{count}} \u09ae\u09bf\u09a8\u09bf\u099f"
            },
            xMinutes: {
                one: "\u09e7 \u09ae\u09bf\u09a8\u09bf\u099f",
                other: "{{count}} \u09ae\u09bf\u09a8\u09bf\u099f"
            },
            aboutXHours: {
                one: "\u09aa\u09cd\u09b0\u09be\u09df \u09e7 \u0998\u09a8\u09cd\u099f\u09be",
                other: "\u09aa\u09cd\u09b0\u09be\u09df {{count}} \u0998\u09a8\u09cd\u099f\u09be"
            },
            xHours: {
                one: "\u09e7 \u0998\u09a8\u09cd\u099f\u09be",
                other: "{{count}} \u0998\u09a8\u09cd\u099f\u09be"
            },
            xDays: {
                one: "\u09e7 \u09a6\u09bf\u09a8",
                other: "{{count}} \u09a6\u09bf\u09a8"
            },
            aboutXWeeks: {
                one: "\u09aa\u09cd\u09b0\u09be\u09df \u09e7 \u09b8\u09aa\u09cd\u09a4\u09be\u09b9",
                other: "\u09aa\u09cd\u09b0\u09be\u09df {{count}} \u09b8\u09aa\u09cd\u09a4\u09be\u09b9"
            },
            xWeeks: {
                one: "\u09e7 \u09b8\u09aa\u09cd\u09a4\u09be\u09b9",
                other: "{{count}} \u09b8\u09aa\u09cd\u09a4\u09be\u09b9"
            },
            aboutXMonths: {
                one: "\u09aa\u09cd\u09b0\u09be\u09df \u09e7 \u09ae\u09be\u09b8",
                other: "\u09aa\u09cd\u09b0\u09be\u09df {{count}} \u09ae\u09be\u09b8"
            },
            xMonths: {
                one: "\u09e7 \u09ae\u09be\u09b8",
                other: "{{count}} \u09ae\u09be\u09b8"
            },
            aboutXYears: {
                one: "\u09aa\u09cd\u09b0\u09be\u09df \u09e7 \u09ac\u099b\u09b0",
                other: "\u09aa\u09cd\u09b0\u09be\u09df {{count}} \u09ac\u099b\u09b0"
            },
            xYears: {
                one: "\u09e7 \u09ac\u099b\u09b0",
                other: "{{count}} \u09ac\u099b\u09b0"
            },
            overXYears: {
                one: "\u09e7 \u09ac\u099b\u09b0\u09c7\u09b0 \u09ac\u09c7\u09b6\u09bf",
                other: "{{count}} \u09ac\u099b\u09b0\u09c7\u09b0 \u09ac\u09c7\u09b6\u09bf"
            },
            almostXYears: {
                one: "\u09aa\u09cd\u09b0\u09be\u09df \u09e7 \u09ac\u099b\u09b0",
                other: "\u09aa\u09cd\u09b0\u09be\u09df {{count}} \u09ac\u099b\u09b0"
            }
        }
          , we = {
            date: r({
                formats: {
                    full: "EEEE, MMMM do, y",
                    long: "MMMM do, y",
                    medium: "MMM d, y",
                    short: "MM/dd/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}} '\u09b8\u09ae\u09df'",
                    long: "{{date}} {{time}} '\u09b8\u09ae\u09df'",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , be = {
            lastWeek: "'\u0997\u09a4' eeee '\u09b8\u09ae\u09df' p",
            yesterday: "'\u0997\u09a4\u0995\u09be\u09b2' '\u09b8\u09ae\u09df' p",
            today: "'\u0986\u099c' '\u09b8\u09ae\u09df' p",
            tomorrow: "'\u0986\u0997\u09be\u09ae\u09c0\u0995\u09be\u09b2' '\u09b8\u09ae\u09df' p",
            nextWeek: "eeee '\u09b8\u09ae\u09df' p",
            other: "P"
        }
          , ye = {
            code: "bn",
            formatDistance: (e,t,n)=>{
                let a;
                const r = ve[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", pe(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? a + " \u098f\u09b0 \u09ae\u09a7\u09cd\u09af\u09c7" : a + " \u0986\u0997\u09c7" : a
            }
            ,
            formatLong: we,
            formatRelative: (e,t,n,a)=>be[e],
            localize: ge,
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\u09ae|\u09df|\u09b0\u09cd\u09a5|\u09b7\u09cd\u09a0|\u09b6\u09c7|\u0987|\u09a4\u09ae)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u0996\u09cd\u09b0\u09bf\u0983\u09aa\u09c2\u0983|\u0996\u09cd\u09b0\u09bf\u0983)/i,
                        abbreviated: /^(\u0996\u09cd\u09b0\u09bf\u0983\u09aa\u09c2\u09b0\u09cd\u09ac|\u0996\u09cd\u09b0\u09bf\u0983)/i,
                        wide: /^(\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac|\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09be\u09ac\u09cd\u09a6)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0996\u09cd\u09b0\u09bf\u0983\u09aa\u09c2\u0983/i, /^\u0996\u09cd\u09b0\u09bf\u0983/i],
                        abbreviated: [/^\u0996\u09cd\u09b0\u09bf\u0983\u09aa\u09c2\u09b0\u09cd\u09ac/i, /^\u0996\u09cd\u09b0\u09bf\u0983/i],
                        wide: [/^\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac/i, /^\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09be\u09ac\u09cd\u09a6/i]
                    },
                    defaultParseWidth: "wide"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[\u09e7\u09e8\u09e9\u09ea]/i,
                        abbreviated: /^[\u09e7\u09e8\u09e9\u09ea]\u09a4\u09cd\u09b0\u09c8/i,
                        wide: /^[\u09e7\u09e8\u09e9\u09ea](\u09ae|\u09df|\u09b0\u09cd\u09a5)? \u09a4\u09cd\u09b0\u09c8\u09ae\u09be\u09b8\u09bf\u0995/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/\u09e7/i, /\u09e8/i, /\u09e9/i, /\u09ea/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(\u099c\u09be\u09a8\u09c1|\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1|\u09ae\u09be\u09b0\u09cd\u099a|\u098f\u09aa\u09cd\u09b0\u09bf\u09b2|\u09ae\u09c7|\u099c\u09c1\u09a8|\u099c\u09c1\u09b2\u09be\u0987|\u0986\u0997\u09b8\u09cd\u099f|\u09b8\u09c7\u09aa\u09cd\u099f|\u0985\u0995\u09cd\u099f\u09cb|\u09a8\u09ad\u09c7|\u09a1\u09bf\u09b8\u09c7)/i,
                        abbreviated: /^(\u099c\u09be\u09a8\u09c1|\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1|\u09ae\u09be\u09b0\u09cd\u099a|\u098f\u09aa\u09cd\u09b0\u09bf\u09b2|\u09ae\u09c7|\u099c\u09c1\u09a8|\u099c\u09c1\u09b2\u09be\u0987|\u0986\u0997\u09b8\u09cd\u099f|\u09b8\u09c7\u09aa\u09cd\u099f|\u0985\u0995\u09cd\u099f\u09cb|\u09a8\u09ad\u09c7|\u09a1\u09bf\u09b8\u09c7)/i,
                        wide: /^(\u099c\u09be\u09a8\u09c1\u09df\u09be\u09b0\u09bf|\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09df\u09be\u09b0\u09bf|\u09ae\u09be\u09b0\u09cd\u099a|\u098f\u09aa\u09cd\u09b0\u09bf\u09b2|\u09ae\u09c7|\u099c\u09c1\u09a8|\u099c\u09c1\u09b2\u09be\u0987|\u0986\u0997\u09b8\u09cd\u099f|\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0|\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0|\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0|\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u099c\u09be\u09a8\u09c1/i, /^\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1/i, /^\u09ae\u09be\u09b0\u09cd\u099a/i, /^\u098f\u09aa\u09cd\u09b0\u09bf\u09b2/i, /^\u09ae\u09c7/i, /^\u099c\u09c1\u09a8/i, /^\u099c\u09c1\u09b2\u09be\u0987/i, /^\u0986\u0997\u09b8\u09cd\u099f/i, /^\u09b8\u09c7\u09aa\u09cd\u099f/i, /^\u0985\u0995\u09cd\u099f\u09cb/i, /^\u09a8\u09ad\u09c7/i, /^\u09a1\u09bf\u09b8\u09c7/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(\u09b0|\u09b8\u09cb|\u09ae|\u09ac\u09c1|\u09ac\u09c3|\u09b6\u09c1|\u09b6)+/i,
                        short: /^(\u09b0\u09ac\u09bf|\u09b8\u09cb\u09ae|\u09ae\u0999\u09cd\u0997\u09b2|\u09ac\u09c1\u09a7|\u09ac\u09c3\u09b9|\u09b6\u09c1\u0995\u09cd\u09b0|\u09b6\u09a8\u09bf)+/i,
                        abbreviated: /^(\u09b0\u09ac\u09bf|\u09b8\u09cb\u09ae|\u09ae\u0999\u09cd\u0997\u09b2|\u09ac\u09c1\u09a7|\u09ac\u09c3\u09b9|\u09b6\u09c1\u0995\u09cd\u09b0|\u09b6\u09a8\u09bf)+/i,
                        wide: /^(\u09b0\u09ac\u09bf\u09ac\u09be\u09b0|\u09b8\u09cb\u09ae\u09ac\u09be\u09b0|\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0|\u09ac\u09c1\u09a7\u09ac\u09be\u09b0|\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0 |\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0|\u09b6\u09a8\u09bf\u09ac\u09be\u09b0)+/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u09b0/i, /^\u09b8\u09cb/i, /^\u09ae/i, /^\u09ac\u09c1/i, /^\u09ac\u09c3/i, /^\u09b6\u09c1/i, /^\u09b6/i],
                        short: [/^\u09b0\u09ac\u09bf/i, /^\u09b8\u09cb\u09ae/i, /^\u09ae\u0999\u09cd\u0997\u09b2/i, /^\u09ac\u09c1\u09a7/i, /^\u09ac\u09c3\u09b9/i, /^\u09b6\u09c1\u0995\u09cd\u09b0/i, /^\u09b6\u09a8\u09bf/i],
                        abbreviated: [/^\u09b0\u09ac\u09bf/i, /^\u09b8\u09cb\u09ae/i, /^\u09ae\u0999\u09cd\u0997\u09b2/i, /^\u09ac\u09c1\u09a7/i, /^\u09ac\u09c3\u09b9/i, /^\u09b6\u09c1\u0995\u09cd\u09b0/i, /^\u09b6\u09a8\u09bf/i],
                        wide: [/^\u09b0\u09ac\u09bf\u09ac\u09be\u09b0/i, /^\u09b8\u09cb\u09ae\u09ac\u09be\u09b0/i, /^\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0/i, /^\u09ac\u09c1\u09a7\u09ac\u09be\u09b0/i, /^\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0 /i, /^\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0/i, /^\u09b6\u09a8\u09bf\u09ac\u09be\u09b0/i]
                    },
                    defaultParseWidth: "wide"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(\u09aa\u09c2|\u0985\u09aa|\u09ae\u09a7\u09cd\u09af\u09b0\u09be\u09a4|\u09ae\u09a7\u09cd\u09af\u09be\u09b9\u09cd\u09a8|\u09b8\u0995\u09be\u09b2|\u09ac\u09bf\u0995\u09be\u09b2|\u09b8\u09a8\u09cd\u09a7\u09cd\u09af\u09be|\u09b0\u09be\u09a4)/i,
                        abbreviated: /^(\u09aa\u09c2\u09b0\u09cd\u09ac\u09be\u09b9\u09cd\u09a8|\u0985\u09aa\u09b0\u09be\u09b9\u09cd\u09a8|\u09ae\u09a7\u09cd\u09af\u09b0\u09be\u09a4|\u09ae\u09a7\u09cd\u09af\u09be\u09b9\u09cd\u09a8|\u09b8\u0995\u09be\u09b2|\u09ac\u09bf\u0995\u09be\u09b2|\u09b8\u09a8\u09cd\u09a7\u09cd\u09af\u09be|\u09b0\u09be\u09a4)/i,
                        wide: /^(\u09aa\u09c2\u09b0\u09cd\u09ac\u09be\u09b9\u09cd\u09a8|\u0985\u09aa\u09b0\u09be\u09b9\u09cd\u09a8|\u09ae\u09a7\u09cd\u09af\u09b0\u09be\u09a4|\u09ae\u09a7\u09cd\u09af\u09be\u09b9\u09cd\u09a8|\u09b8\u0995\u09be\u09b2|\u09ac\u09bf\u0995\u09be\u09b2|\u09b8\u09a8\u09cd\u09a7\u09cd\u09af\u09be|\u09b0\u09be\u09a4)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: {
                            am: /^\u09aa\u09c2/i,
                            pm: /^\u0985\u09aa/i,
                            midnight: /^\u09ae\u09a7\u09cd\u09af\u09b0\u09be\u09a4/i,
                            noon: /^\u09ae\u09a7\u09cd\u09af\u09be\u09b9\u09cd\u09a8/i,
                            morning: /\u09b8\u0995\u09be\u09b2/i,
                            afternoon: /\u09ac\u09bf\u0995\u09be\u09b2/i,
                            evening: /\u09b8\u09a8\u09cd\u09a7\u09cd\u09af\u09be/i,
                            night: /\u09b0\u09be\u09a4/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const ke = {
            lessThanXSeconds: {
                one: {
                    standalone: "manje od 1 sekunde",
                    withPrepositionAgo: "manje od 1 sekunde",
                    withPrepositionIn: "manje od 1 sekundu"
                },
                dual: "manje od {{count}} sekunde",
                other: "manje od {{count}} sekundi"
            },
            xSeconds: {
                one: {
                    standalone: "1 sekunda",
                    withPrepositionAgo: "1 sekunde",
                    withPrepositionIn: "1 sekundu"
                },
                dual: "{{count}} sekunde",
                other: "{{count}} sekundi"
            },
            halfAMinute: "pola minute",
            lessThanXMinutes: {
                one: {
                    standalone: "manje od 1 minute",
                    withPrepositionAgo: "manje od 1 minute",
                    withPrepositionIn: "manje od 1 minutu"
                },
                dual: "manje od {{count}} minute",
                other: "manje od {{count}} minuta"
            },
            xMinutes: {
                one: {
                    standalone: "1 minuta",
                    withPrepositionAgo: "1 minute",
                    withPrepositionIn: "1 minutu"
                },
                dual: "{{count}} minute",
                other: "{{count}} minuta"
            },
            aboutXHours: {
                one: {
                    standalone: "oko 1 sat",
                    withPrepositionAgo: "oko 1 sat",
                    withPrepositionIn: "oko 1 sat"
                },
                dual: "oko {{count}} sata",
                other: "oko {{count}} sati"
            },
            xHours: {
                one: {
                    standalone: "1 sat",
                    withPrepositionAgo: "1 sat",
                    withPrepositionIn: "1 sat"
                },
                dual: "{{count}} sata",
                other: "{{count}} sati"
            },
            xDays: {
                one: {
                    standalone: "1 dan",
                    withPrepositionAgo: "1 dan",
                    withPrepositionIn: "1 dan"
                },
                dual: "{{count}} dana",
                other: "{{count}} dana"
            },
            aboutXWeeks: {
                one: {
                    standalone: "oko 1 sedmicu",
                    withPrepositionAgo: "oko 1 sedmicu",
                    withPrepositionIn: "oko 1 sedmicu"
                },
                dual: "oko {{count}} sedmice",
                other: "oko {{count}} sedmice"
            },
            xWeeks: {
                one: {
                    standalone: "1 sedmicu",
                    withPrepositionAgo: "1 sedmicu",
                    withPrepositionIn: "1 sedmicu"
                },
                dual: "{{count}} sedmice",
                other: "{{count}} sedmice"
            },
            aboutXMonths: {
                one: {
                    standalone: "oko 1 mjesec",
                    withPrepositionAgo: "oko 1 mjesec",
                    withPrepositionIn: "oko 1 mjesec"
                },
                dual: "oko {{count}} mjeseca",
                other: "oko {{count}} mjeseci"
            },
            xMonths: {
                one: {
                    standalone: "1 mjesec",
                    withPrepositionAgo: "1 mjesec",
                    withPrepositionIn: "1 mjesec"
                },
                dual: "{{count}} mjeseca",
                other: "{{count}} mjeseci"
            },
            aboutXYears: {
                one: {
                    standalone: "oko 1 godinu",
                    withPrepositionAgo: "oko 1 godinu",
                    withPrepositionIn: "oko 1 godinu"
                },
                dual: "oko {{count}} godine",
                other: "oko {{count}} godina"
            },
            xYears: {
                one: {
                    standalone: "1 godina",
                    withPrepositionAgo: "1 godine",
                    withPrepositionIn: "1 godinu"
                },
                dual: "{{count}} godine",
                other: "{{count}} godina"
            },
            overXYears: {
                one: {
                    standalone: "preko 1 godinu",
                    withPrepositionAgo: "preko 1 godinu",
                    withPrepositionIn: "preko 1 godinu"
                },
                dual: "preko {{count}} godine",
                other: "preko {{count}} godina"
            },
            almostXYears: {
                one: {
                    standalone: "gotovo 1 godinu",
                    withPrepositionAgo: "gotovo 1 godinu",
                    withPrepositionIn: "gotovo 1 godinu"
                },
                dual: "gotovo {{count}} godine",
                other: "gotovo {{count}} godina"
            }
        }
          , Me = {
            date: r({
                formats: {
                    full: "EEEE, d. MMMM yyyy.",
                    long: "d. MMMM yyyy.",
                    medium: "d. MMM yy.",
                    short: "dd. MM. yy."
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss (zzzz)",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'u' {{time}}",
                    long: "{{date}} 'u' {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Pe = {
            lastWeek: e=>{
                switch (e.getDay()) {
                case 0:
                    return "'pro\u0161le nedjelje u' p";
                case 3:
                    return "'pro\u0161le srijede u' p";
                case 6:
                    return "'pro\u0161le subote u' p";
                default:
                    return "'pro\u0161li' EEEE 'u' p"
                }
            }
            ,
            yesterday: "'ju\u010de u' p",
            today: "'danas u' p",
            tomorrow: "'sutra u' p",
            nextWeek: e=>{
                switch (e.getDay()) {
                case 0:
                    return "'sljede\u0107e nedjelje u' p";
                case 3:
                    return "'sljede\u0107u srijedu u' p";
                case 6:
                    return "'sljede\u0107u subotu u' p";
                default:
                    return "'sljede\u0107i' EEEE 'u' p"
                }
            }
            ,
            other: "P"
        }
          , We = {
            code: "bs",
            formatDistance: (e,t,n)=>{
                let a;
                const r = ke[e];
                return a = "string" === typeof r ? r : 1 === t ? n?.addSuffix ? n.comparison && n.comparison > 0 ? r.one.withPrepositionIn : r.one.withPrepositionAgo : r.one.standalone : t % 10 > 1 && t % 10 < 5 && "1" !== String(t).substr(-2, 1) ? r.dual.replace("{{count}}", String(t)) : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "za " + a : "prije " + a : a
            }
            ,
            formatLong: Me,
            formatRelative: (e,t,n,a)=>{
                const r = Pe[e];
                return "function" === typeof r ? r(t) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e);
                    return String(n) + "."
                }
                ,
                era: s({
                    values: {
                        narrow: ["pr.n.e.", "AD"],
                        abbreviated: ["pr. Hr.", "po. Hr."],
                        wide: ["Prije Hrista", "Poslije Hrista"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1.", "2.", "3.", "4."],
                        abbreviated: ["1. kv.", "2. kv.", "3. kv.", "4. kv."],
                        wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."],
                        abbreviated: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"],
                        wide: ["januar", "februar", "mart", "april", "maj", "juni", "juli", "avgust", "septembar", "oktobar", "novembar", "decembar"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."],
                        abbreviated: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"],
                        wide: ["januar", "februar", "mart", "april", "maj", "juni", "juli", "avgust", "septembar", "oktobar", "novembar", "decembar"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["N", "P", "U", "S", "\u010c", "P", "S"],
                        short: ["ned", "pon", "uto", "sre", "\u010det", "pet", "sub"],
                        abbreviated: ["ned", "pon", "uto", "sre", "\u010det", "pet", "sub"],
                        wide: ["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", "petak", "subota"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutru",
                            afternoon: "popodne",
                            evening: "uve\u010de",
                            night: "no\u0107u"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutru",
                            afternoon: "popodne",
                            evening: "uve\u010de",
                            night: "no\u0107u"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutru",
                            afternoon: "poslije podne",
                            evening: "uve\u010de",
                            night: "no\u0107u"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutru",
                            afternoon: "popodne",
                            evening: "uve\u010de",
                            night: "no\u0107u"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutru",
                            afternoon: "popodne",
                            evening: "uve\u010de",
                            night: "no\u0107u"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutru",
                            afternoon: "poslije podne",
                            evening: "uve\u010de",
                            night: "no\u0107u"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)\./i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(pr\.n\.e\.|AD)/i,
                        abbreviated: /^(pr\.\s?Hr\.|po\.\s?Hr\.)/i,
                        wide: /^(Prije Hrista|prije nove ere|Poslije Hrista|nova era)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^pr/i, /^(po|nova)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234]\.\s?kv\.?/i,
                        wide: /^[1234]\. kvartal/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(10|11|12|[123456789])\./i,
                        abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|avg|sep|okt|nov|dec)/i,
                        wide: /^((januar|januara)|(februar|februara)|(mart|marta)|(april|aprila)|(maj|maja)|(juni|juna)|(juli|jula)|(avgust|avgusta)|(septembar|septembra)|(oktobar|oktobra)|(novembar|novembra)|(decembar|decembra))/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^1/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^7/i, /^8/i, /^9/i, /^10/i, /^11/i, /^12/i],
                        any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^maj/i, /^jun/i, /^jul/i, /^avg/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[npus\u010dc]/i,
                        short: /^(ned|pon|uto|sre|(\u010det|cet)|pet|sub)/i,
                        abbreviated: /^(ned|pon|uto|sre|(\u010det|cet)|pet|sub)/i,
                        wide: /^(nedjelja|ponedjeljak|utorak|srijeda|(\u010detvrtak|cetvrtak)|petak|subota)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
                        any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(am|pm|ponoc|pono\u0107|(po)?podne|uvece|uve\u010de|no\u0107u|poslije podne|ujutru)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^pono/i,
                            noon: /^pod/i,
                            morning: /jutro/i,
                            afternoon: /(poslije\s|po)+podne/i,
                            evening: /(uvece|uve\u010de)/i,
                            night: /(nocu|no\u0107u)/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const xe = {
            lessThanXSeconds: {
                one: "menys d'un segon",
                eleven: "menys d'onze segons",
                other: "menys de {{count}} segons"
            },
            xSeconds: {
                one: "1 segon",
                other: "{{count}} segons"
            },
            halfAMinute: "mig minut",
            lessThanXMinutes: {
                one: "menys d'un minut",
                eleven: "menys d'onze minuts",
                other: "menys de {{count}} minuts"
            },
            xMinutes: {
                one: "1 minut",
                other: "{{count}} minuts"
            },
            aboutXHours: {
                one: "aproximadament una hora",
                other: "aproximadament {{count}} hores"
            },
            xHours: {
                one: "1 hora",
                other: "{{count}} hores"
            },
            xDays: {
                one: "1 dia",
                other: "{{count}} dies"
            },
            aboutXWeeks: {
                one: "aproximadament una setmana",
                other: "aproximadament {{count}} setmanes"
            },
            xWeeks: {
                one: "1 setmana",
                other: "{{count}} setmanes"
            },
            aboutXMonths: {
                one: "aproximadament un mes",
                other: "aproximadament {{count}} mesos"
            },
            xMonths: {
                one: "1 mes",
                other: "{{count}} mesos"
            },
            aboutXYears: {
                one: "aproximadament un any",
                other: "aproximadament {{count}} anys"
            },
            xYears: {
                one: "1 any",
                other: "{{count}} anys"
            },
            overXYears: {
                one: "m\xe9s d'un any",
                eleven: "m\xe9s d'onze anys",
                other: "m\xe9s de {{count}} anys"
            },
            almostXYears: {
                one: "gaireb\xe9 un any",
                other: "gaireb\xe9 {{count}} anys"
            }
        }
          , Se = {
            date: r({
                formats: {
                    full: "EEEE, d 'de' MMMM y",
                    long: "d 'de' MMMM y",
                    medium: "d MMM y",
                    short: "dd/MM/y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'a les' {{time}}",
                    long: "{{date}} 'a les' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , De = {
            lastWeek: "'el' eeee 'passat a la' LT",
            yesterday: "'ahir a la' p",
            today: "'avui a la' p",
            tomorrow: "'dem\xe0 a la' p",
            nextWeek: "eeee 'a la' p",
            other: "P"
        }
          , je = {
            lastWeek: "'el' eeee 'passat a les' p",
            yesterday: "'ahir a les' p",
            today: "'avui a les' p",
            tomorrow: "'dem\xe0 a les' p",
            nextWeek: "eeee 'a les' p",
            other: "P"
        }
          , Ce = {
            code: "ca",
            formatDistance: (e,t,n)=>{
                let a;
                const r = xe[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : 11 === t && r.eleven ? r.eleven : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "en " + a : "fa " + a : a
            }
            ,
            formatLong: Se,
            formatRelative: (e,t,n,a)=>1 !== t.getHours() ? je[e] : De[e],
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e)
                      , a = n % 100;
                    if (a > 20 || a < 10)
                        switch (a % 10) {
                        case 1:
                        case 3:
                            return n + "r";
                        case 2:
                            return n + "n";
                        case 4:
                            return n + "t"
                        }
                    return n + "\xe8"
                }
                ,
                era: s({
                    values: {
                        narrow: ["aC", "dC"],
                        abbreviated: ["a. de C.", "d. de C."],
                        wide: ["abans de Crist", "despr\xe9s de Crist"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["T1", "T2", "T3", "T4"],
                        wide: ["1r trimestre", "2n trimestre", "3r trimestre", "4t trimestre"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["GN", "FB", "M\xc7", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS"],
                        abbreviated: ["gen.", "febr.", "mar\xe7", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."],
                        wide: ["gener", "febrer", "mar\xe7", "abril", "maig", "juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["dg.", "dl.", "dt.", "dm.", "dj.", "dv.", "ds."],
                        short: ["dg.", "dl.", "dt.", "dm.", "dj.", "dv.", "ds."],
                        abbreviated: ["dg.", "dl.", "dt.", "dm.", "dj.", "dv.", "ds."],
                        wide: ["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "am",
                            pm: "pm",
                            midnight: "mitjanit",
                            noon: "migdia",
                            morning: "mat\xed",
                            afternoon: "tarda",
                            evening: "vespre",
                            night: "nit"
                        },
                        abbreviated: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "mitjanit",
                            noon: "migdia",
                            morning: "mat\xed",
                            afternoon: "tarda",
                            evening: "vespre",
                            night: "nit"
                        },
                        wide: {
                            am: "ante meridiem",
                            pm: "post meridiem",
                            midnight: "mitjanit",
                            noon: "migdia",
                            morning: "mat\xed",
                            afternoon: "tarda",
                            evening: "vespre",
                            night: "nit"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "am",
                            pm: "pm",
                            midnight: "de la mitjanit",
                            noon: "del migdia",
                            morning: "del mat\xed",
                            afternoon: "de la tarda",
                            evening: "del vespre",
                            night: "de la nit"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "de la mitjanit",
                            noon: "del migdia",
                            morning: "del mat\xed",
                            afternoon: "de la tarda",
                            evening: "del vespre",
                            night: "de la nit"
                        },
                        wide: {
                            am: "ante meridiem",
                            pm: "post meridiem",
                            midnight: "de la mitjanit",
                            noon: "del migdia",
                            morning: "del mat\xed",
                            afternoon: "de la tarda",
                            evening: "del vespre",
                            night: "de la nit"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\xe8|r|n|r|t)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(aC|dC)/i,
                        abbreviated: /^(a. de C.|d. de C.)/i,
                        wide: /^(abans de Crist|despr[e\xe9]s de Crist)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^aC/i, /^dC/i],
                        abbreviated: [/^(a. de C.)/i, /^(d. de C.)/i],
                        wide: [/^(abans de Crist)/i, /^(despr[e\xe9]s de Crist)/i]
                    },
                    defaultParseWidth: "wide"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^T[1234]/i,
                        wide: /^[1234](\xe8|r|n|r|t)? trimestre/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(GN|FB|M\xc7|AB|MG|JN|JL|AG|ST|OC|NV|DS)/i,
                        abbreviated: /^(gen.|febr.|mar\xe7|abr.|maig|juny|jul.|ag.|set.|oct.|nov.|des.)/i,
                        wide: /^(gener|febrer|mar\xe7|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^GN/i, /^FB/i, /^M\xc7/i, /^AB/i, /^MG/i, /^JN/i, /^JL/i, /^AG/i, /^ST/i, /^OC/i, /^NV/i, /^DS/i],
                        abbreviated: [/^gen./i, /^febr./i, /^mar\xe7/i, /^abr./i, /^maig/i, /^juny/i, /^jul./i, /^ag./i, /^set./i, /^oct./i, /^nov./i, /^des./i],
                        wide: [/^gener/i, /^febrer/i, /^mar\xe7/i, /^abril/i, /^maig/i, /^juny/i, /^juliol/i, /^agost/i, /^setembre/i, /^octubre/i, /^novembre/i, /^desembre/i]
                    },
                    defaultParseWidth: "wide"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i,
                        short: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i,
                        abbreviated: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i,
                        wide: /^(diumenge|dilluns|dimarts|dimecres|dijous|divendres|dissabte)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^dg./i, /^dl./i, /^dt./i, /^dm./i, /^dj./i, /^dv./i, /^ds./i],
                        abbreviated: [/^dg./i, /^dl./i, /^dt./i, /^dm./i, /^dj./i, /^dv./i, /^ds./i],
                        wide: [/^diumenge/i, /^dilluns/i, /^dimarts/i, /^dimecres/i, /^dijous/i, /^divendres/i, /^disssabte/i]
                    },
                    defaultParseWidth: "wide"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|mn|md|(del|de la) (mat\xed|tarda|vespre|nit))/i,
                        abbreviated: /^([ap]\.?\s?m\.?|mitjanit|migdia|(del|de la) (mat\xed|tarda|vespre|nit))/i,
                        wide: /^(ante meridiem|post meridiem|mitjanit|migdia|(del|de la) (mat\xed|tarda|vespre|nit))/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^mitjanit/i,
                            noon: /^migdia/i,
                            morning: /mat\xed/i,
                            afternoon: /tarda/i,
                            evening: /vespre/i,
                            night: /nit/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Te = {
            lessThanXSeconds: {
                one: "\u06a9\u06d5\u0645\u062a\u0631 \u0644\u06d5 \u06cc\u06d5\u06a9 \u0686\u0631\u06a9\u06d5",
                other: "\u06a9\u06d5\u0645\u062a\u0631 \u0644\u06d5 {{count}} \u0686\u0631\u06a9\u06d5"
            },
            xSeconds: {
                one: "1 \u0686\u0631\u06a9\u06d5",
                other: "{{count}} \u0686\u0631\u06a9\u06d5"
            },
            halfAMinute: "\u0646\u06cc\u0648 \u06a9\u0627\u062a\u0698\u0645\u06ce\u0631",
            lessThanXMinutes: {
                one: "\u06a9\u06d5\u0645\u062a\u0631 \u0644\u06d5 \u06cc\u06d5\u06a9 \u062e\u0648\u0644\u06d5\u06a9",
                other: "\u06a9\u06d5\u0645\u062a\u0631 \u0644\u06d5 {{count}} \u062e\u0648\u0644\u06d5\u06a9"
            },
            xMinutes: {
                one: "1 \u062e\u0648\u0644\u06d5\u06a9",
                other: "{{count}} \u062e\u0648\u0644\u06d5\u06a9"
            },
            aboutXHours: {
                one: "\u062f\u06d5\u0648\u0631\u0648\u0628\u06d5\u0631\u06cc 1 \u06a9\u0627\u062a\u0698\u0645\u06ce\u0631",
                other: "\u062f\u06d5\u0648\u0631\u0648\u0628\u06d5\u0631\u06cc {{count}} \u06a9\u0627\u062a\u0698\u0645\u06ce\u0631"
            },
            xHours: {
                one: "1 \u06a9\u0627\u062a\u0698\u0645\u06ce\u0631",
                other: "{{count}} \u06a9\u0627\u062a\u0698\u0645\u06ce\u0631"
            },
            xDays: {
                one: "1 \u0695\u06c6\u0698",
                other: "{{count}} \u0698\u06c6\u0698"
            },
            aboutXWeeks: {
                one: "\u062f\u06d5\u0648\u0631\u0648\u0628\u06d5\u0631\u06cc 1 \u0647\u06d5\u0641\u062a\u06d5",
                other: "\u062f\u0648\u0631\u0648\u0628\u06d5\u0631\u06cc {{count}} \u0647\u06d5\u0641\u062a\u06d5"
            },
            xWeeks: {
                one: "1 \u0647\u06d5\u0641\u062a\u06d5",
                other: "{{count}} \u0647\u06d5\u0641\u062a\u06d5"
            },
            aboutXMonths: {
                one: "\u062f\u0627\u0648\u0631\u0648\u0628\u06d5\u0631\u06cc 1 \u0645\u0627\u0646\u06af",
                other: "\u062f\u06d5\u0648\u0631\u0648\u0628\u06d5\u0631\u06cc {{count}} \u0645\u0627\u0646\u06af"
            },
            xMonths: {
                one: "1 \u0645\u0627\u0646\u06af",
                other: "{{count}} \u0645\u0627\u0646\u06af"
            },
            aboutXYears: {
                one: "\u062f\u06d5\u0648\u0631\u0648\u0628\u06d5\u0631\u06cc  1 \u0633\u0627\u06b5",
                other: "\u062f\u06d5\u0648\u0631\u0648\u0628\u06d5\u0631\u06cc {{count}} \u0633\u0627\u06b5"
            },
            xYears: {
                one: "1 \u0633\u0627\u06b5",
                other: "{{count}} \u0633\u0627\u06b5"
            },
            overXYears: {
                one: "\u0632\u06cc\u0627\u062a\u0631 \u0644\u06d5 \u0633\u0627\u06b5\u06ce\u06a9",
                other: "\u0632\u06cc\u0627\u062a\u0631 \u0644\u06d5 {{count}} \u0633\u0627\u06b5"
            },
            almostXYears: {
                one: "\u0628\u06d5\u0646\u0632\u06cc\u06a9\u06d5\u06cc\u06cc \u0633\u0627\u06b5\u06ce\u06a9  ",
                other: "\u0628\u06d5\u0646\u0632\u06cc\u06a9\u06d5\u06cc\u06cc {{count}} \u0633\u0627\u06b5"
            }
        }
          , Ee = {
            date: r({
                formats: {
                    full: "EEEE, MMMM do, y",
                    long: "MMMM do, y",
                    medium: "MMM d, y",
                    short: "MM/dd/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u06a9\u0627\u062a\u0698\u0645\u06ce\u0631' {{time}}",
                    long: "{{date}} '\u06a9\u0627\u062a\u0698\u0645\u06ce\u0631' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Ne = {
            lastWeek: "'\u0647\u06d5\u0641\u062a\u06d5\u06cc \u0695\u0627\u0628\u0631\u062f\u0648\u0648' eeee '\u06a9\u0627\u062a\u0698\u0645\u06ce\u0631' p",
            yesterday: "'\u062f\u0648\u06ce\u0646\u06ce \u06a9\u0627\u062a\u0698\u0645\u06ce\u0631' p",
            today: "'\u0626\u06d5\u0645\u0695\u06c6 \u06a9\u0627\u062a\u0698\u0645\u06ce\u0631' p",
            tomorrow: "'\u0628\u06d5\u06cc\u0627\u0646\u06cc \u06a9\u0627\u062a\u0698\u0645\u06ce\u0631' p",
            nextWeek: "eeee '\u06a9\u0627\u062a\u0698\u0645\u06ce\u0631' p",
            other: "P"
        }
          , ze = {
            code: "ckb",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Te[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", t.toString()),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "\u0644\u06d5 \u0645\u0627\u0648\u06d5\u06cc " + a + "\u062f\u0627" : a + "\u067e\u06ce\u0634 \u0626\u06ce\u0633\u062a\u0627" : a
            }
            ,
            formatLong: Ee,
            formatRelative: (e,t,n,a)=>Ne[e],
            localize: {
                ordinalNumber: (e,t)=>String(e),
                era: s({
                    values: {
                        narrow: ["\u067e", "\u062f"],
                        abbreviated: ["\u067e-\u0632", "\u062f-\u0632"],
                        wide: ["\u067e\u06ce\u0634 \u0632\u0627\u06cc\u0646", "\u062f\u0648\u0627\u06cc \u0632\u0627\u06cc\u0646"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u06861\u0645", "\u06862\u0645", "\u06863\u0645", "\u06864\u0645"],
                        wide: ["\u0686\u0627\u0631\u06d5\u06af\u06cc \u06cc\u06d5\u06a9\u06d5\u0645", "\u0686\u0627\u0631\u06d5\u06af\u06cc \u062f\u0648\u0648\u06d5\u0645", "\u0686\u0627\u0631\u06d5\u06af\u06cc \u0633\u06ce\u06cc\u06d5\u0645", "\u0686\u0627\u0631\u06d5\u06af\u06cc \u0686\u0648\u0627\u0631\u06d5\u0645"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u06a9-\u062f", "\u0634", "\u0626\u0627", "\u0646", "\u0645", "\u062d", "\u062a", "\u0626\u0627", "\u0626\u06d5", "\u062a\u0634-\u06cc", "\u062a\u0634-\u062f", "\u06a9-\u06cc"],
                        abbreviated: ["\u06a9\u0627\u0646-\u062f\u0648\u0648", "\u0634\u0648\u0628", "\u0626\u0627\u062f", "\u0646\u06cc\u0633", "\u0645\u0627\u06cc\u0633", "\u062d\u0648\u0632", "\u062a\u06d5\u0645", "\u0626\u0627\u0628", "\u0626\u06d5\u0644", "\u062a\u0634-\u06cc\u06d5\u06a9", "\u062a\u0634-\u062f\u0648\u0648", "\u06a9\u0627\u0646-\u06cc\u06d5\u06a9"],
                        wide: ["\u06a9\u0627\u0646\u0648\u0648\u0646\u06cc \u062f\u0648\u0648\u06d5\u0645", "\u0634\u0648\u0628\u0627\u062a", "\u0626\u0627\u062f\u0627\u0631", "\u0646\u06cc\u0633\u0627\u0646", "\u0645\u0627\u06cc\u0633", "\u062d\u0648\u0632\u06d5\u06cc\u0631\u0627\u0646", "\u062a\u06d5\u0645\u0645\u0648\u0632", "\u0626\u0627\u0628", "\u0626\u06d5\u06cc\u0644\u0648\u0644", "\u062a\u0634\u0631\u06cc\u0646\u06cc \u06cc\u06d5\u06a9\u06d5\u0645", "\u062a\u0634\u0631\u06cc\u0646\u06cc \u062f\u0648\u0648\u06d5\u0645", "\u06a9\u0627\u0646\u0648\u0648\u0646\u06cc \u06cc\u06d5\u06a9\u06d5\u0645"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u06cc-\u0634", "\u062f-\u0634", "\u0633-\u0634", "\u0686-\u0634", "\u067e-\u0634", "\u0647\u06d5", "\u0634"],
                        short: ["\u06cc\u06d5-\u0634\u06d5", "\u062f\u0648\u0648-\u0634\u06d5", "\u0633\u06ce-\u0634\u06d5", "\u0686\u0648-\u0634\u06d5", "\u067e\u06ce-\u0634\u06d5", "\u0647\u06d5\u06cc", "\u0634\u06d5"],
                        abbreviated: ["\u06cc\u06d5\u06a9-\u0634\u06d5\u0645", "\u062f\u0648\u0648-\u0634\u06d5\u0645", "\u0633\u06ce-\u0634\u06d5\u0645", "\u0686\u0648\u0627\u0631-\u0634\u06d5\u0645", "\u067e\u06ce\u0646\u062c-\u0634\u06d5\u0645", "\u0647\u06d5\u06cc\u0646\u06cc", "\u0634\u06d5\u0645\u06d5"],
                        wide: ["\u06cc\u06d5\u06a9 \u0634\u06d5\u0645\u06d5", "\u062f\u0648\u0648 \u0634\u06d5\u0645\u06d5", "\u0633\u06ce \u0634\u06d5\u0645\u06d5", "\u0686\u0648\u0627\u0631 \u0634\u06d5\u0645\u06d5", "\u067e\u06ce\u0646\u062c \u0634\u06d5\u0645\u06d5", "\u0647\u06d5\u06cc\u0646\u06cc", "\u0634\u06d5\u0645\u06d5"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u067e",
                            pm: "\u062f",
                            midnight: "\u0646-\u0634",
                            noon: "\u0646",
                            morning: "\u0628\u06d5\u06cc\u0627\u0646\u06cc",
                            afternoon: "\u062f\u0648\u0627\u06cc \u0646\u06cc\u0648\u06d5\u0695\u06c6",
                            evening: "\u0626\u06ce\u0648\u0627\u0631\u06d5",
                            night: "\u0634\u06d5\u0648"
                        },
                        abbreviated: {
                            am: "\u067e-\u0646",
                            pm: "\u062f-\u0646",
                            midnight: "\u0646\u06cc\u0648\u06d5 \u0634\u06d5\u0648",
                            noon: "\u0646\u06cc\u0648\u06d5\u0695\u06c6",
                            morning: "\u0628\u06d5\u06cc\u0627\u0646\u06cc",
                            afternoon: "\u062f\u0648\u0627\u06cc \u0646\u06cc\u0648\u06d5\u0695\u06c6",
                            evening: "\u0626\u06ce\u0648\u0627\u0631\u06d5",
                            night: "\u0634\u06d5\u0648"
                        },
                        wide: {
                            am: "\u067e\u06ce\u0634 \u0646\u06cc\u0648\u06d5\u0695\u06c6",
                            pm: "\u062f\u0648\u0627\u06cc \u0646\u06cc\u0648\u06d5\u0695\u06c6",
                            midnight: "\u0646\u06cc\u0648\u06d5 \u0634\u06d5\u0648",
                            noon: "\u0646\u06cc\u0648\u06d5\u0695\u06c6",
                            morning: "\u0628\u06d5\u06cc\u0627\u0646\u06cc",
                            afternoon: "\u062f\u0648\u0627\u06cc \u0646\u06cc\u0648\u06d5\u0695\u06c6",
                            evening: "\u0626\u06ce\u0648\u0627\u0631\u06d5",
                            night: "\u0634\u06d5\u0648"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u067e",
                            pm: "\u062f",
                            midnight: "\u0646-\u0634",
                            noon: "\u0646",
                            morning: "\u0644\u06d5 \u0628\u06d5\u06cc\u0627\u0646\u06cc\u062f\u0627",
                            afternoon: "\u0644\u06d5 \u062f\u0648\u0627\u06cc \u0646\u06cc\u0648\u06d5\u0695\u06c6\u062f\u0627",
                            evening: "\u0644\u06d5 \u0626\u06ce\u0648\u0627\u0631\u06d5\u062f\u0627",
                            night: "\u0644\u06d5 \u0634\u06d5\u0648\u062f\u0627"
                        },
                        abbreviated: {
                            am: "\u067e-\u0646",
                            pm: "\u062f-\u0646",
                            midnight: "\u0646\u06cc\u0648\u06d5 \u0634\u06d5\u0648",
                            noon: "\u0646\u06cc\u0648\u06d5\u0695\u06c6",
                            morning: "\u0644\u06d5 \u0628\u06d5\u06cc\u0627\u0646\u06cc\u062f\u0627",
                            afternoon: "\u0644\u06d5 \u062f\u0648\u0627\u06cc \u0646\u06cc\u0648\u06d5\u0695\u06c6\u062f\u0627",
                            evening: "\u0644\u06d5 \u0626\u06ce\u0648\u0627\u0631\u06d5\u062f\u0627",
                            night: "\u0644\u06d5 \u0634\u06d5\u0648\u062f\u0627"
                        },
                        wide: {
                            am: "\u067e\u06ce\u0634 \u0646\u06cc\u0648\u06d5\u0695\u06c6",
                            pm: "\u062f\u0648\u0627\u06cc \u0646\u06cc\u0648\u06d5\u0695\u06c6",
                            midnight: "\u0646\u06cc\u0648\u06d5 \u0634\u06d5\u0648",
                            noon: "\u0646\u06cc\u0648\u06d5\u0695\u06c6",
                            morning: "\u0644\u06d5 \u0628\u06d5\u06cc\u0627\u0646\u06cc\u062f\u0627",
                            afternoon: "\u0644\u06d5 \u062f\u0648\u0627\u06cc \u0646\u06cc\u0648\u06d5\u0695\u06c6\u062f\u0627",
                            evening: "\u0644\u06d5 \u0626\u06ce\u0648\u0627\u0631\u06d5\u062f\u0627",
                            night: "\u0644\u06d5 \u0634\u06d5\u0648\u062f\u0627"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u067e|\u062f)/i,
                        abbreviated: /^(\u067e-\u0632|\u062f.\u0632)/i,
                        wide: /^(\u067e\u06ce\u0634 \u0632\u0627\u06cc\u0646| \u062f\u0648\u0627\u06cc \u0632\u0627\u06cc\u0646)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u062f/g, /^\u067e/g]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^\u0645[1234]\u0686/i,
                        wide: /^(\u06cc\u06d5\u06a9\u06d5\u0645|\u062f\u0648\u0648\u06d5\u0645|\u0633\u06ce\u06cc\u06d5\u0645| \u0686\u0648\u0627\u0631\u06d5\u0645) (\u0686\u0627\u0631\u06d5\u06af\u06cc)? quarter/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        wide: [/\u0686\u0627\u0631\u06d5\u06af\u06cc \u06cc\u06d5\u06a9\u06d5\u0645/, /\u0686\u0627\u0631\u06d5\u06af\u06cc \u062f\u0648\u0648\u06d5\u0645/, /\u0686\u0627\u0631\u06d5\u06af\u06cc \u0633\u064a\u06cc\u06d5\u0645/, /\u0686\u0627\u0631\u06d5\u06af\u06cc \u0686\u0648\u0627\u0631\u06d5\u0645/],
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(\u06a9-\u062f|\u0634|\u0626\u0627|\u0646|\u0645|\u062d|\u062a|\u0626\u06d5|\u062a\u0634-\u06cc|\u062a\u0634-\u062f|\u06a9-\u06cc)/i,
                        abbreviated: /^(\u06a9\u0627\u0646-\u062f\u0648\u0648|\u0634\u0648\u0628|\u0626\u0627\u062f|\u0646\u06cc\u0633|\u0645\u0627\u06cc\u0633|\u062d\u0648\u0632|\u062a\u06d5\u0645|\u0626\u0627\u0628|\u0626\u06d5\u0644|\u062a\u0634-\u06cc\u06d5\u06a9|\u062a\u0634-\u062f\u0648\u0648|\u06a9\u0627\u0646-\u06cc\u06d5\u06a9)/i,
                        wide: /^(\u06a9\u0627\u0646\u0648\u0648\u0646\u06cc \u062f\u0648\u0648\u06d5\u0645|\u0634\u0648\u0628\u0627\u062a|\u0626\u0627\u062f\u0627\u0631|\u0646\u06cc\u0633\u0627\u0646|\u0645\u0627\u06cc\u0633|\u062d\u0648\u0632\u06d5\u06cc\u0631\u0627\u0646|\u062a\u06d5\u0645\u0645\u0648\u0632|\u0626\u0627\u0628|\u0626\u06d5\u06cc\u0644\u0648\u0644|\u062a\u0634\u0631\u06cc\u0646\u06cc \u06cc\u06d5\u06a9\u06d5\u0645|\u062a\u0634\u0631\u06cc\u0646\u06cc \u062f\u0648\u0648\u06d5\u0645|\u06a9\u0627\u0646\u0648\u0648\u0646\u06cc \u06cc\u06d5\u06a9\u06d5\u0645)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u06a9-\u062f/i, /^\u0634/i, /^\u0626\u0627/i, /^\u0646/i, /^\u0645/i, /^\u062d/i, /^\u062a/i, /^\u0626\u0627/i, /^\u0626\u06d5/i, /^\u062a\u0634-\u06cc/i, /^\u062a\u0634-\u062f/i, /^\u06a9-\u06cc/i],
                        any: [/^\u06a9\u0627\u0646-\u062f\u0648\u0648/i, /^\u0634\u0648\u0628/i, /^\u0626\u0627\u062f/i, /^\u0646\u06cc\u0633/i, /^\u0645\u0627\u06cc\u0633/i, /^\u062d\u0648\u0632/i, /^\u062a\u06d5\u0645/i, /^\u0626\u0627\u0628/i, /^\u0626\u06d5\u0644/i, /^\u062a\u0634-\u06cc\u06d5\u06a9/i, /^\u062a\u0634-\u062f\u0648\u0648/i, /^|\u06a9\u0627\u0646-\u06cc\u06d5\u06a9/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(\u0634|\u06cc|\u062f|\u0633|\u0686|\u067e|\u0647\u06d5)/i,
                        short: /^(\u06cc\u06d5-\u0634\u06d5|\u062f\u0648\u0648-\u0634\u06d5|\u0633\u06ce-\u0634\u06d5|\u0686\u0648-\u0634\u06d5|\u067e\u06ce-\u0634\u06d5|\u0647\u06d5|\u0634\u06d5)/i,
                        abbreviated: /^(\u06cc\u06d5\u06a9-\u0634\u06d5\u0645|\u062f\u0648\u0648-\u0634\u06d5\u0645|\u0633\u06ce-\u0634\u06d5\u0645|\u0686\u0648\u0627\u0631-\u0634\u06d5\u0645|\u067e\u06ce\u0646\u062e-\u0634\u06d5\u0645|\u0647\u06d5\u06cc\u0646\u06cc|\u0634\u06d5\u0645\u06d5)/i,
                        wide: /^(\u06cc\u06d5\u06a9 \u0634\u06d5\u0645\u06d5|\u062f\u0648\u0648 \u0634\u06d5\u0645\u06d5|\u0633\u06ce \u0634\u06d5\u0645\u06d5|\u0686\u0648\u0627\u0631 \u0634\u06d5\u0645\u06d5|\u067e\u06ce\u0646\u062c \u0634\u06d5\u0645\u06d5|\u0647\u06d5\u06cc\u0646\u06cc|\u0634\u06d5\u0645\u06d5)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
                        any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(\u067e|\u062f|\u0646-\u0634|\u0646| (\u0628\u06d5\u06cc\u0627\u0646\u06cc|\u062f\u0648\u0627\u06cc \u0646\u06cc\u0648\u06d5\u0695\u06c6|\u0626\u06ce\u0648\u0627\u0631\u06d5|\u0634\u06d5\u0648))/i,
                        abbreviated: /^(\u067e-\u0646|\u062f-\u0646|\u0646\u06cc\u0648\u06d5 \u0634\u06d5\u0648|\u0646\u06cc\u0648\u06d5\u0695\u06c6|\u0628\u06d5\u06cc\u0627\u0646\u06cc|\u062f\u0648\u0627\u06cc \u0646\u06cc\u0648\u06d5\u0695\u06c6|\u0626\u06ce\u0648\u0627\u0631\u06d5|\u0634\u06d5\u0648)/,
                        wide: /^(\u067e\u06ce\u0634 \u0646\u06cc\u0648\u06d5\u0695\u06c6|\u062f\u0648\u0627\u06cc \u0646\u06cc\u0648\u06d5\u0695\u06c6|\u0646\u06cc\u0648\u06d5\u0695\u06c6|\u0646\u06cc\u0648\u06d5 \u0634\u06d5\u0648|\u0644\u06d5\u0628\u06d5\u06cc\u0627\u0646\u06cc\u062f\u0627|\u0644\u06d5\u062f\u0648\u0627\u06cc\u0646\u06cc\u0648\u06d5\u0695\u06c6\u062f\u0627|\u0644\u06d5 \u0626\u06ce\u0648\u0627\u0631\u06d5\u062f\u0627|\u0644\u06d5 \u0634\u06d5\u0648\u062f\u0627)/,
                        any: /^(\u067e|\u062f|\u0628\u06d5\u06cc\u0627\u0646\u06cc|\u0646\u06cc\u0648\u06d5\u0695\u06c6|\u0626\u06ce\u0648\u0627\u0631\u06d5|\u0634\u06d5\u0648)/
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u062f/i,
                            pm: /^\u067e/i,
                            midnight: /^\u0646-\u0634/i,
                            noon: /^\u0646/i,
                            morning: /\u0628\u06d5\u06cc\u0627\u0646\u06cc/i,
                            afternoon: /\u062f\u0648\u0627\u06cc\u0646\u06cc\u0648\u06d5\u0695\u06c6/i,
                            evening: /\u0626\u06ce\u0648\u0627\u0631\u06d5/i,
                            night: /\u0634\u06d5\u0648/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const Ie = {
            lessThanXSeconds: {
                one: {
                    regular: "m\xe9n\u011b ne\u017e 1 sekunda",
                    past: "p\u0159ed m\xe9n\u011b ne\u017e 1 sekundou",
                    future: "za m\xe9n\u011b ne\u017e 1 sekundu"
                },
                few: {
                    regular: "m\xe9n\u011b ne\u017e {{count}} sekundy",
                    past: "p\u0159ed m\xe9n\u011b ne\u017e {{count}} sekundami",
                    future: "za m\xe9n\u011b ne\u017e {{count}} sekundy"
                },
                many: {
                    regular: "m\xe9n\u011b ne\u017e {{count}} sekund",
                    past: "p\u0159ed m\xe9n\u011b ne\u017e {{count}} sekundami",
                    future: "za m\xe9n\u011b ne\u017e {{count}} sekund"
                }
            },
            xSeconds: {
                one: {
                    regular: "1 sekunda",
                    past: "p\u0159ed 1 sekundou",
                    future: "za 1 sekundu"
                },
                few: {
                    regular: "{{count}} sekundy",
                    past: "p\u0159ed {{count}} sekundami",
                    future: "za {{count}} sekundy"
                },
                many: {
                    regular: "{{count}} sekund",
                    past: "p\u0159ed {{count}} sekundami",
                    future: "za {{count}} sekund"
                }
            },
            halfAMinute: {
                type: "other",
                other: {
                    regular: "p\u016fl minuty",
                    past: "p\u0159ed p\u016fl minutou",
                    future: "za p\u016fl minuty"
                }
            },
            lessThanXMinutes: {
                one: {
                    regular: "m\xe9n\u011b ne\u017e 1 minuta",
                    past: "p\u0159ed m\xe9n\u011b ne\u017e 1 minutou",
                    future: "za m\xe9n\u011b ne\u017e 1 minutu"
                },
                few: {
                    regular: "m\xe9n\u011b ne\u017e {{count}} minuty",
                    past: "p\u0159ed m\xe9n\u011b ne\u017e {{count}} minutami",
                    future: "za m\xe9n\u011b ne\u017e {{count}} minuty"
                },
                many: {
                    regular: "m\xe9n\u011b ne\u017e {{count}} minut",
                    past: "p\u0159ed m\xe9n\u011b ne\u017e {{count}} minutami",
                    future: "za m\xe9n\u011b ne\u017e {{count}} minut"
                }
            },
            xMinutes: {
                one: {
                    regular: "1 minuta",
                    past: "p\u0159ed 1 minutou",
                    future: "za 1 minutu"
                },
                few: {
                    regular: "{{count}} minuty",
                    past: "p\u0159ed {{count}} minutami",
                    future: "za {{count}} minuty"
                },
                many: {
                    regular: "{{count}} minut",
                    past: "p\u0159ed {{count}} minutami",
                    future: "za {{count}} minut"
                }
            },
            aboutXHours: {
                one: {
                    regular: "p\u0159ibli\u017en\u011b 1 hodina",
                    past: "p\u0159ibli\u017en\u011b p\u0159ed 1 hodinou",
                    future: "p\u0159ibli\u017en\u011b za 1 hodinu"
                },
                few: {
                    regular: "p\u0159ibli\u017en\u011b {{count}} hodiny",
                    past: "p\u0159ibli\u017en\u011b p\u0159ed {{count}} hodinami",
                    future: "p\u0159ibli\u017en\u011b za {{count}} hodiny"
                },
                many: {
                    regular: "p\u0159ibli\u017en\u011b {{count}} hodin",
                    past: "p\u0159ibli\u017en\u011b p\u0159ed {{count}} hodinami",
                    future: "p\u0159ibli\u017en\u011b za {{count}} hodin"
                }
            },
            xHours: {
                one: {
                    regular: "1 hodina",
                    past: "p\u0159ed 1 hodinou",
                    future: "za 1 hodinu"
                },
                few: {
                    regular: "{{count}} hodiny",
                    past: "p\u0159ed {{count}} hodinami",
                    future: "za {{count}} hodiny"
                },
                many: {
                    regular: "{{count}} hodin",
                    past: "p\u0159ed {{count}} hodinami",
                    future: "za {{count}} hodin"
                }
            },
            xDays: {
                one: {
                    regular: "1 den",
                    past: "p\u0159ed 1 dnem",
                    future: "za 1 den"
                },
                few: {
                    regular: "{{count}} dny",
                    past: "p\u0159ed {{count}} dny",
                    future: "za {{count}} dny"
                },
                many: {
                    regular: "{{count}} dn\xed",
                    past: "p\u0159ed {{count}} dny",
                    future: "za {{count}} dn\xed"
                }
            },
            aboutXWeeks: {
                one: {
                    regular: "p\u0159ibli\u017en\u011b 1 t\xfdden",
                    past: "p\u0159ibli\u017en\u011b p\u0159ed 1 t\xfddnem",
                    future: "p\u0159ibli\u017en\u011b za 1 t\xfdden"
                },
                few: {
                    regular: "p\u0159ibli\u017en\u011b {{count}} t\xfddny",
                    past: "p\u0159ibli\u017en\u011b p\u0159ed {{count}} t\xfddny",
                    future: "p\u0159ibli\u017en\u011b za {{count}} t\xfddny"
                },
                many: {
                    regular: "p\u0159ibli\u017en\u011b {{count}} t\xfddn\u016f",
                    past: "p\u0159ibli\u017en\u011b p\u0159ed {{count}} t\xfddny",
                    future: "p\u0159ibli\u017en\u011b za {{count}} t\xfddn\u016f"
                }
            },
            xWeeks: {
                one: {
                    regular: "1 t\xfdden",
                    past: "p\u0159ed 1 t\xfddnem",
                    future: "za 1 t\xfdden"
                },
                few: {
                    regular: "{{count}} t\xfddny",
                    past: "p\u0159ed {{count}} t\xfddny",
                    future: "za {{count}} t\xfddny"
                },
                many: {
                    regular: "{{count}} t\xfddn\u016f",
                    past: "p\u0159ed {{count}} t\xfddny",
                    future: "za {{count}} t\xfddn\u016f"
                }
            },
            aboutXMonths: {
                one: {
                    regular: "p\u0159ibli\u017en\u011b 1 m\u011bs\xedc",
                    past: "p\u0159ibli\u017en\u011b p\u0159ed 1 m\u011bs\xedcem",
                    future: "p\u0159ibli\u017en\u011b za 1 m\u011bs\xedc"
                },
                few: {
                    regular: "p\u0159ibli\u017en\u011b {{count}} m\u011bs\xedce",
                    past: "p\u0159ibli\u017en\u011b p\u0159ed {{count}} m\u011bs\xedci",
                    future: "p\u0159ibli\u017en\u011b za {{count}} m\u011bs\xedce"
                },
                many: {
                    regular: "p\u0159ibli\u017en\u011b {{count}} m\u011bs\xedc\u016f",
                    past: "p\u0159ibli\u017en\u011b p\u0159ed {{count}} m\u011bs\xedci",
                    future: "p\u0159ibli\u017en\u011b za {{count}} m\u011bs\xedc\u016f"
                }
            },
            xMonths: {
                one: {
                    regular: "1 m\u011bs\xedc",
                    past: "p\u0159ed 1 m\u011bs\xedcem",
                    future: "za 1 m\u011bs\xedc"
                },
                few: {
                    regular: "{{count}} m\u011bs\xedce",
                    past: "p\u0159ed {{count}} m\u011bs\xedci",
                    future: "za {{count}} m\u011bs\xedce"
                },
                many: {
                    regular: "{{count}} m\u011bs\xedc\u016f",
                    past: "p\u0159ed {{count}} m\u011bs\xedci",
                    future: "za {{count}} m\u011bs\xedc\u016f"
                }
            },
            aboutXYears: {
                one: {
                    regular: "p\u0159ibli\u017en\u011b 1 rok",
                    past: "p\u0159ibli\u017en\u011b p\u0159ed 1 rokem",
                    future: "p\u0159ibli\u017en\u011b za 1 rok"
                },
                few: {
                    regular: "p\u0159ibli\u017en\u011b {{count}} roky",
                    past: "p\u0159ibli\u017en\u011b p\u0159ed {{count}} roky",
                    future: "p\u0159ibli\u017en\u011b za {{count}} roky"
                },
                many: {
                    regular: "p\u0159ibli\u017en\u011b {{count}} rok\u016f",
                    past: "p\u0159ibli\u017en\u011b p\u0159ed {{count}} roky",
                    future: "p\u0159ibli\u017en\u011b za {{count}} rok\u016f"
                }
            },
            xYears: {
                one: {
                    regular: "1 rok",
                    past: "p\u0159ed 1 rokem",
                    future: "za 1 rok"
                },
                few: {
                    regular: "{{count}} roky",
                    past: "p\u0159ed {{count}} roky",
                    future: "za {{count}} roky"
                },
                many: {
                    regular: "{{count}} rok\u016f",
                    past: "p\u0159ed {{count}} roky",
                    future: "za {{count}} rok\u016f"
                }
            },
            overXYears: {
                one: {
                    regular: "v\xedce ne\u017e 1 rok",
                    past: "p\u0159ed v\xedce ne\u017e 1 rokem",
                    future: "za v\xedce ne\u017e 1 rok"
                },
                few: {
                    regular: "v\xedce ne\u017e {{count}} roky",
                    past: "p\u0159ed v\xedce ne\u017e {{count}} roky",
                    future: "za v\xedce ne\u017e {{count}} roky"
                },
                many: {
                    regular: "v\xedce ne\u017e {{count}} rok\u016f",
                    past: "p\u0159ed v\xedce ne\u017e {{count}} roky",
                    future: "za v\xedce ne\u017e {{count}} rok\u016f"
                }
            },
            almostXYears: {
                one: {
                    regular: "skoro 1 rok",
                    past: "skoro p\u0159ed 1 rokem",
                    future: "skoro za 1 rok"
                },
                few: {
                    regular: "skoro {{count}} roky",
                    past: "skoro p\u0159ed {{count}} roky",
                    future: "skoro za {{count}} roky"
                },
                many: {
                    regular: "skoro {{count}} rok\u016f",
                    past: "skoro p\u0159ed {{count}} roky",
                    future: "skoro za {{count}} rok\u016f"
                }
            }
        }
          , Oe = {
            date: r({
                formats: {
                    full: "EEEE, d. MMMM yyyy",
                    long: "d. MMMM yyyy",
                    medium: "d. M. yyyy",
                    short: "dd.MM.yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "H:mm:ss zzzz",
                    long: "H:mm:ss z",
                    medium: "H:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'v' {{time}}",
                    long: "{{date}} 'v' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , He = ["ned\u011bli", "pond\u011bl\xed", "\xfater\xfd", "st\u0159edu", "\u010dtvrtek", "p\xe1tek", "sobotu"]
          , Ae = {
            lastWeek: "'posledn\xed' eeee 've' p",
            yesterday: "'v\u010dera v' p",
            today: "'dnes v' p",
            tomorrow: "'z\xedtra v' p",
            nextWeek: e=>{
                const t = e.getDay();
                return "'v " + He[t] + " o' p"
            }
            ,
            other: "P"
        }
          , Ye = {
            code: "cs",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Ie[e];
                a = "other" === r.type ? r.other : 1 === t ? r.one : t > 1 && t < 5 ? r.few : r.many;
                const i = !0 === n?.addSuffix
                  , o = n?.comparison;
                let s;
                return s = i && -1 === o ? a.past : i && 1 === o ? a.future : a.regular,
                s.replace("{{count}}", String(t))
            }
            ,
            formatLong: Oe,
            formatRelative: (e,t)=>{
                const n = Ae[e];
                return "function" === typeof n ? n(t) : n
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["p\u0159. n. l.", "n. l."],
                        abbreviated: ["p\u0159. n. l.", "n. l."],
                        wide: ["p\u0159ed na\u0161\xedm letopo\u010dtem", "na\u0161eho letopo\u010dtu"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1. \u010dtvrtlet\xed", "2. \u010dtvrtlet\xed", "3. \u010dtvrtlet\xed", "4. \u010dtvrtlet\xed"],
                        wide: ["1. \u010dtvrtlet\xed", "2. \u010dtvrtlet\xed", "3. \u010dtvrtlet\xed", "4. \u010dtvrtlet\xed"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["L", "\xda", "B", "D", "K", "\u010c", "\u010c", "S", "Z", "\u0158", "L", "P"],
                        abbreviated: ["led", "\xfano", "b\u0159e", "dub", "kv\u011b", "\u010dvn", "\u010dvc", "srp", "z\xe1\u0159", "\u0159\xedj", "lis", "pro"],
                        wide: ["leden", "\xfanor", "b\u0159ezen", "duben", "kv\u011bten", "\u010derven", "\u010dervenec", "srpen", "z\xe1\u0159\xed", "\u0159\xedjen", "listopad", "prosinec"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["L", "\xda", "B", "D", "K", "\u010c", "\u010c", "S", "Z", "\u0158", "L", "P"],
                        abbreviated: ["led", "\xfano", "b\u0159e", "dub", "kv\u011b", "\u010dvn", "\u010dvc", "srp", "z\xe1\u0159", "\u0159\xedj", "lis", "pro"],
                        wide: ["ledna", "\xfanora", "b\u0159ezna", "dubna", "kv\u011btna", "\u010dervna", "\u010dervence", "srpna", "z\xe1\u0159\xed", "\u0159\xedjna", "listopadu", "prosince"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["ne", "po", "\xfat", "st", "\u010dt", "p\xe1", "so"],
                        short: ["ne", "po", "\xfat", "st", "\u010dt", "p\xe1", "so"],
                        abbreviated: ["ned", "pon", "\xfate", "st\u0159", "\u010dtv", "p\xe1t", "sob"],
                        wide: ["ned\u011ble", "pond\u011bl\xed", "\xfater\xfd", "st\u0159eda", "\u010dtvrtek", "p\xe1tek", "sobota"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "dop.",
                            pm: "odp.",
                            midnight: "p\u016flnoc",
                            noon: "poledne",
                            morning: "r\xe1no",
                            afternoon: "odpoledne",
                            evening: "ve\u010der",
                            night: "noc"
                        },
                        abbreviated: {
                            am: "dop.",
                            pm: "odp.",
                            midnight: "p\u016flnoc",
                            noon: "poledne",
                            morning: "r\xe1no",
                            afternoon: "odpoledne",
                            evening: "ve\u010der",
                            night: "noc"
                        },
                        wide: {
                            am: "dopoledne",
                            pm: "odpoledne",
                            midnight: "p\u016flnoc",
                            noon: "poledne",
                            morning: "r\xe1no",
                            afternoon: "odpoledne",
                            evening: "ve\u010der",
                            night: "noc"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "dop.",
                            pm: "odp.",
                            midnight: "p\u016flnoc",
                            noon: "poledne",
                            morning: "r\xe1no",
                            afternoon: "odpoledne",
                            evening: "ve\u010der",
                            night: "noc"
                        },
                        abbreviated: {
                            am: "dop.",
                            pm: "odp.",
                            midnight: "p\u016flnoc",
                            noon: "poledne",
                            morning: "r\xe1no",
                            afternoon: "odpoledne",
                            evening: "ve\u010der",
                            night: "noc"
                        },
                        wide: {
                            am: "dopoledne",
                            pm: "odpoledne",
                            midnight: "p\u016flnoc",
                            noon: "poledne",
                            morning: "r\xe1no",
                            afternoon: "odpoledne",
                            evening: "ve\u010der",
                            night: "noc"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)\.?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(p[\u0159r](\.|ed) Kr\.|p[\u0159r](\.|ed) n\. l\.|po Kr\.|n\. l\.)/i,
                        abbreviated: /^(p[\u0159r](\.|ed) Kr\.|p[\u0159r](\.|ed) n\. l\.|po Kr\.|n\. l\.)/i,
                        wide: /^(p[\u0159r](\.|ed) Kristem|p[\u0159r](\.|ed) na[\u0161s][\xedi]m letopo[\u010dc]tem|po Kristu|na[\u0161s]eho letopo[\u010dc]tu)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^p[\u0159r]/i, /^(po|n)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234]\. [\u010dc]tvrtlet[\xedi]/i,
                        wide: /^[1234]\. [\u010dc]tvrtlet[\xedi]/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[l\xfaubdk\u010dcsz\u0159rlp]/i,
                        abbreviated: /^(led|[\xfau]no|b[\u0159r]e|dub|kv[\u011be]|[\u010dc]vn|[\u010dc]vc|srp|z[\xe1a][\u0159r]|[\u0159r][\xedi]j|lis|pro)/i,
                        wide: /^(leden|ledna|[\xfau]nora?|b[\u0159r]ezen|b[\u0159r]ezna|duben|dubna|kv[\u011be]ten|kv[\u011be]tna|[\u010dc]erven(ec|ce)?|[\u010dc]ervna|srpen|srpna|z[\xe1a][\u0159r][\xedi]|[\u0159r][\xedi]jen|[\u0159r][\xedi]jna|listopad(a|u)?|prosinec|prosince)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^l/i, /^[\xfau]/i, /^b/i, /^d/i, /^k/i, /^[\u010dc]/i, /^[\u010dc]/i, /^s/i, /^z/i, /^[\u0159r]/i, /^l/i, /^p/i],
                        any: [/^led/i, /^[\xfau]n/i, /^b[\u0159r]e/i, /^dub/i, /^kv[\u011be]/i, /^[\u010dc]vn|[\u010dc]erven(?!\w)|[\u010dc]ervna/i, /^[\u010dc]vc|[\u010dc]erven(ec|ce)/i, /^srp/i, /^z[\xe1a][\u0159r]/i, /^[\u0159r][\xedi]j/i, /^lis/i, /^pro/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[npu\xfas\u010dps]/i,
                        short: /^(ne|po|[\xfau]t|st|[\u010dc]t|p[\xe1a]|so)/i,
                        abbreviated: /^(ned|pon|[\xfau]te|st[r\u0159]|[\u010dc]tv|p[\xe1a]t|sob)/i,
                        wide: /^(ned[\u011be]le|pond[\u011be]l[\xedi]|[\xfau]ter[\xfdy]|st[\u0159r]eda|[\u010dc]tvrtek|p[\xe1a]tek|sobota)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^n/i, /^p/i, /^[\xfau]/i, /^s/i, /^[\u010dc]/i, /^p/i, /^s/i],
                        any: [/^ne/i, /^po/i, /^[\xfau]t/i, /^st/i, /^[\u010dc]t/i, /^p[\xe1a]/i, /^so/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^dopoledne|dop\.?|odpoledne|odp\.?|p[\u016fu]lnoc|poledne|r[\xe1a]no|odpoledne|ve[\u010dc]er|(v )?noci?/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^dop/i,
                            pm: /^odp/i,
                            midnight: /^p[\u016fu]lnoc/i,
                            noon: /^poledne/i,
                            morning: /r[\xe1a]no/i,
                            afternoon: /odpoledne/i,
                            evening: /ve[\u010dc]er/i,
                            night: /noc/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const _e = {
            lessThanXSeconds: {
                one: "llai na eiliad",
                other: "llai na {{count}} eiliad"
            },
            xSeconds: {
                one: "1 eiliad",
                other: "{{count}} eiliad"
            },
            halfAMinute: "hanner munud",
            lessThanXMinutes: {
                one: "llai na munud",
                two: "llai na 2 funud",
                other: "llai na {{count}} munud"
            },
            xMinutes: {
                one: "1 munud",
                two: "2 funud",
                other: "{{count}} munud"
            },
            aboutXHours: {
                one: "tua 1 awr",
                other: "tua {{count}} awr"
            },
            xHours: {
                one: "1 awr",
                other: "{{count}} awr"
            },
            xDays: {
                one: "1 diwrnod",
                two: "2 ddiwrnod",
                other: "{{count}} diwrnod"
            },
            aboutXWeeks: {
                one: "tua 1 wythnos",
                two: "tua pythefnos",
                other: "tua {{count}} wythnos"
            },
            xWeeks: {
                one: "1 wythnos",
                two: "pythefnos",
                other: "{{count}} wythnos"
            },
            aboutXMonths: {
                one: "tua 1 mis",
                two: "tua 2 fis",
                other: "tua {{count}} mis"
            },
            xMonths: {
                one: "1 mis",
                two: "2 fis",
                other: "{{count}} mis"
            },
            aboutXYears: {
                one: "tua 1 flwyddyn",
                two: "tua 2 flynedd",
                other: "tua {{count}} mlynedd"
            },
            xYears: {
                one: "1 flwyddyn",
                two: "2 flynedd",
                other: "{{count}} mlynedd"
            },
            overXYears: {
                one: "dros 1 flwyddyn",
                two: "dros 2 flynedd",
                other: "dros {{count}} mlynedd"
            },
            almostXYears: {
                one: "bron 1 flwyddyn",
                two: "bron 2 flynedd",
                other: "bron {{count}} mlynedd"
            }
        }
          , Xe = {
            date: r({
                formats: {
                    full: "EEEE, d MMMM yyyy",
                    long: "d MMMM yyyy",
                    medium: "d MMM yyyy",
                    short: "dd/MM/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'am' {{time}}",
                    long: "{{date}} 'am' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Re = {
            lastWeek: "eeee 'diwethaf am' p",
            yesterday: "'ddoe am' p",
            today: "'heddiw am' p",
            tomorrow: "'yfory am' p",
            nextWeek: "eeee 'am' p",
            other: "P"
        }
          , Le = {
            code: "cy",
            formatDistance: (e,t,n)=>{
                let a;
                const r = _e[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : 2 === t && r.two ? r.two : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "mewn " + a : a + " yn \xf4l" : a
            }
            ,
            formatLong: Xe,
            formatRelative: (e,t,n,a)=>Re[e],
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e);
                    if (n < 20)
                        switch (n) {
                        case 0:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 12:
                        case 15:
                        case 18:
                            return n + "fed";
                        case 1:
                            return n + "af";
                        case 2:
                            return n + "ail";
                        case 3:
                        case 4:
                            return n + "ydd";
                        case 5:
                        case 6:
                            return n + "ed";
                        case 11:
                        case 13:
                        case 14:
                        case 16:
                        case 17:
                        case 19:
                            return n + "eg"
                        }
                    else if (n >= 50 && n <= 60 || 80 === n || n >= 100)
                        return n + "fed";
                    return n + "ain"
                }
                ,
                era: s({
                    values: {
                        narrow: ["C", "O"],
                        abbreviated: ["CC", "OC"],
                        wide: ["Cyn Crist", "Ar \xf4l Crist"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Ch1", "Ch2", "Ch3", "Ch4"],
                        wide: ["Chwarter 1af", "2ail chwarter", "3ydd chwarter", "4ydd chwarter"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["I", "Ch", "Ma", "E", "Mi", "Me", "G", "A", "Md", "H", "T", "Rh"],
                        abbreviated: ["Ion", "Chwe", "Maw", "Ebr", "Mai", "Meh", "Gor", "Aws", "Med", "Hyd", "Tach", "Rhag"],
                        wide: ["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", "Tachwedd", "Rhagfyr"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["S", "Ll", "M", "M", "I", "G", "S"],
                        short: ["Su", "Ll", "Ma", "Me", "Ia", "Gw", "Sa"],
                        abbreviated: ["Sul", "Llun", "Maw", "Mer", "Iau", "Gwe", "Sad"],
                        wide: ["dydd Sul", "dydd Llun", "dydd Mawrth", "dydd Mercher", "dydd Iau", "dydd Gwener", "dydd Sadwrn"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "b",
                            pm: "h",
                            midnight: "hn",
                            noon: "hd",
                            morning: "bore",
                            afternoon: "prynhawn",
                            evening: "gyda'r nos",
                            night: "nos"
                        },
                        abbreviated: {
                            am: "yb",
                            pm: "yh",
                            midnight: "hanner nos",
                            noon: "hanner dydd",
                            morning: "bore",
                            afternoon: "prynhawn",
                            evening: "gyda'r nos",
                            night: "nos"
                        },
                        wide: {
                            am: "y.b.",
                            pm: "y.h.",
                            midnight: "hanner nos",
                            noon: "hanner dydd",
                            morning: "bore",
                            afternoon: "prynhawn",
                            evening: "gyda'r nos",
                            night: "nos"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "b",
                            pm: "h",
                            midnight: "hn",
                            noon: "hd",
                            morning: "yn y bore",
                            afternoon: "yn y prynhawn",
                            evening: "gyda'r nos",
                            night: "yn y nos"
                        },
                        abbreviated: {
                            am: "yb",
                            pm: "yh",
                            midnight: "hanner nos",
                            noon: "hanner dydd",
                            morning: "yn y bore",
                            afternoon: "yn y prynhawn",
                            evening: "gyda'r nos",
                            night: "yn y nos"
                        },
                        wide: {
                            am: "y.b.",
                            pm: "y.h.",
                            midnight: "hanner nos",
                            noon: "hanner dydd",
                            morning: "yn y bore",
                            afternoon: "yn y prynhawn",
                            evening: "gyda'r nos",
                            night: "yn y nos"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(af|ail|ydd|ed|fed|eg|ain)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(c|o)/i,
                        abbreviated: /^(c\.?\s?c\.?|o\.?\s?c\.?)/i,
                        wide: /^(cyn christ|ar \xf4l crist|ar ol crist)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        wide: [/^c/i, /^(ar \xf4l crist|ar ol crist)/i],
                        any: [/^c/i, /^o/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^ch[1234]/i,
                        wide: /^(chwarter 1af)|([234](ail|ydd)? chwarter)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(i|ch|m|e|g|a|h|t|rh)/i,
                        abbreviated: /^(ion|chwe|maw|ebr|mai|meh|gor|aws|med|hyd|tach|rhag)/i,
                        wide: /^(ionawr|chwefror|mawrth|ebrill|mai|mehefin|gorffennaf|awst|medi|hydref|tachwedd|rhagfyr)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^i/i, /^ch/i, /^m/i, /^e/i, /^m/i, /^m/i, /^g/i, /^a/i, /^m/i, /^h/i, /^t/i, /^rh/i],
                        any: [/^io/i, /^ch/i, /^maw/i, /^e/i, /^mai/i, /^meh/i, /^g/i, /^a/i, /^med/i, /^h/i, /^t/i, /^rh/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(s|ll|m|i|g)/i,
                        short: /^(su|ll|ma|me|ia|gw|sa)/i,
                        abbreviated: /^(sul|llun|maw|mer|iau|gwe|sad)/i,
                        wide: /^dydd (sul|llun|mawrth|mercher|iau|gwener|sadwrn)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^s/i, /^ll/i, /^m/i, /^m/i, /^i/i, /^g/i, /^s/i],
                        wide: [/^dydd su/i, /^dydd ll/i, /^dydd ma/i, /^dydd me/i, /^dydd i/i, /^dydd g/i, /^dydd sa/i],
                        any: [/^su/i, /^ll/i, /^ma/i, /^me/i, /^i/i, /^g/i, /^sa/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(b|h|hn|hd|(yn y|y|yr|gyda'r) (bore|prynhawn|nos|hwyr))/i,
                        any: /^(y\.?\s?[bh]\.?|hanner nos|hanner dydd|(yn y|y|yr|gyda'r) (bore|prynhawn|nos|hwyr))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^b|(y\.?\s?b\.?)/i,
                            pm: /^h|(y\.?\s?h\.?)|(yr hwyr)/i,
                            midnight: /^hn|hanner nos/i,
                            noon: /^hd|hanner dydd/i,
                            morning: /bore/i,
                            afternoon: /prynhawn/i,
                            evening: /^gyda'r nos$/i,
                            night: /blah/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const Fe = {
            lessThanXSeconds: {
                one: "mindre end \xe9t sekund",
                other: "mindre end {{count}} sekunder"
            },
            xSeconds: {
                one: "1 sekund",
                other: "{{count}} sekunder"
            },
            halfAMinute: "\xe9t halvt minut",
            lessThanXMinutes: {
                one: "mindre end \xe9t minut",
                other: "mindre end {{count}} minutter"
            },
            xMinutes: {
                one: "1 minut",
                other: "{{count}} minutter"
            },
            aboutXHours: {
                one: "cirka 1 time",
                other: "cirka {{count}} timer"
            },
            xHours: {
                one: "1 time",
                other: "{{count}} timer"
            },
            xDays: {
                one: "1 dag",
                other: "{{count}} dage"
            },
            aboutXWeeks: {
                one: "cirka 1 uge",
                other: "cirka {{count}} uger"
            },
            xWeeks: {
                one: "1 uge",
                other: "{{count}} uger"
            },
            aboutXMonths: {
                one: "cirka 1 m\xe5ned",
                other: "cirka {{count}} m\xe5neder"
            },
            xMonths: {
                one: "1 m\xe5ned",
                other: "{{count}} m\xe5neder"
            },
            aboutXYears: {
                one: "cirka 1 \xe5r",
                other: "cirka {{count}} \xe5r"
            },
            xYears: {
                one: "1 \xe5r",
                other: "{{count}} \xe5r"
            },
            overXYears: {
                one: "over 1 \xe5r",
                other: "over {{count}} \xe5r"
            },
            almostXYears: {
                one: "n\xe6sten 1 \xe5r",
                other: "n\xe6sten {{count}} \xe5r"
            }
        }
          , qe = {
            date: r({
                formats: {
                    full: "EEEE 'den' d. MMMM y",
                    long: "d. MMMM y",
                    medium: "d. MMM y",
                    short: "dd/MM/y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'kl'. {{time}}",
                    long: "{{date}} 'kl'. {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Ge = {
            lastWeek: "'sidste' eeee 'kl.' p",
            yesterday: "'i g\xe5r kl.' p",
            today: "'i dag kl.' p",
            tomorrow: "'i morgen kl.' p",
            nextWeek: "'p\xe5' eeee 'kl.' p",
            other: "P"
        }
          , Ke = {
            code: "da",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Fe[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "om " + a : a + " siden" : a
            }
            ,
            formatLong: qe,
            formatRelative: (e,t,n,a)=>Ge[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["fvt", "vt"],
                        abbreviated: ["f.v.t.", "v.t."],
                        wide: ["f\xf8r vesterlandsk tidsregning", "vesterlandsk tidsregning"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1. kvt.", "2. kvt.", "3. kvt.", "4. kvt."],
                        wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                        abbreviated: ["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."],
                        wide: ["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", "december"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["S", "M", "T", "O", "T", "F", "L"],
                        short: ["s\xf8", "ma", "ti", "on", "to", "fr", "l\xf8"],
                        abbreviated: ["s\xf8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\xf8r."],
                        wide: ["s\xf8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\xf8rdag"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "midnat",
                            noon: "middag",
                            morning: "morgen",
                            afternoon: "eftermiddag",
                            evening: "aften",
                            night: "nat"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "midnat",
                            noon: "middag",
                            morning: "morgen",
                            afternoon: "eftermiddag",
                            evening: "aften",
                            night: "nat"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "midnat",
                            noon: "middag",
                            morning: "morgen",
                            afternoon: "eftermiddag",
                            evening: "aften",
                            night: "nat"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "midnat",
                            noon: "middag",
                            morning: "om morgenen",
                            afternoon: "om eftermiddagen",
                            evening: "om aftenen",
                            night: "om natten"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "midnat",
                            noon: "middag",
                            morning: "om morgenen",
                            afternoon: "om eftermiddagen",
                            evening: "om aftenen",
                            night: "om natten"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "midnat",
                            noon: "middag",
                            morning: "om morgenen",
                            afternoon: "om eftermiddagen",
                            evening: "om aftenen",
                            night: "om natten"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\.)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(fKr|fvt|eKr|vt)/i,
                        abbreviated: /^(f\.Kr\.?|f\.v\.t\.?|e\.Kr\.?|v\.t\.)/i,
                        wide: /^(f.Kr.|f\xf8r vesterlandsk tidsregning|e.Kr.|vesterlandsk tidsregning)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^f/i, /^(v|e)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234]. kvt\./i,
                        wide: /^[1234]\.? kvartal/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(jan.|feb.|mar.|apr.|maj|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,
                        wide: /^(januar|februar|marts|april|maj|juni|juli|august|september|oktober|november|december)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^maj/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[smtofl]/i,
                        short: /^(s\xf8n.|man.|tir.|ons.|tor.|fre.|l\xf8r.)/i,
                        abbreviated: /^(s\xf8n|man|tir|ons|tor|fre|l\xf8r)/i,
                        wide: /^(s\xf8ndag|mandag|tirsdag|onsdag|torsdag|fredag|l\xf8rdag)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^s/i, /^m/i, /^t/i, /^o/i, /^t/i, /^f/i, /^l/i],
                        any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|midnat|middag|(om) (morgenen|eftermiddagen|aftenen|natten))/i,
                        any: /^([ap]\.?\s?m\.?|midnat|middag|(om) (morgenen|eftermiddagen|aftenen|natten))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /midnat/i,
                            noon: /middag/i,
                            morning: /morgen/i,
                            afternoon: /eftermiddag/i,
                            evening: /aften/i,
                            night: /nat/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Ve = {
            lessThanXSeconds: {
                standalone: {
                    one: "weniger als 1 Sekunde",
                    other: "weniger als {{count}} Sekunden"
                },
                withPreposition: {
                    one: "weniger als 1 Sekunde",
                    other: "weniger als {{count}} Sekunden"
                }
            },
            xSeconds: {
                standalone: {
                    one: "1 Sekunde",
                    other: "{{count}} Sekunden"
                },
                withPreposition: {
                    one: "1 Sekunde",
                    other: "{{count}} Sekunden"
                }
            },
            halfAMinute: {
                standalone: "eine halbe Minute",
                withPreposition: "einer halben Minute"
            },
            lessThanXMinutes: {
                standalone: {
                    one: "weniger als 1 Minute",
                    other: "weniger als {{count}} Minuten"
                },
                withPreposition: {
                    one: "weniger als 1 Minute",
                    other: "weniger als {{count}} Minuten"
                }
            },
            xMinutes: {
                standalone: {
                    one: "1 Minute",
                    other: "{{count}} Minuten"
                },
                withPreposition: {
                    one: "1 Minute",
                    other: "{{count}} Minuten"
                }
            },
            aboutXHours: {
                standalone: {
                    one: "etwa 1 Stunde",
                    other: "etwa {{count}} Stunden"
                },
                withPreposition: {
                    one: "etwa 1 Stunde",
                    other: "etwa {{count}} Stunden"
                }
            },
            xHours: {
                standalone: {
                    one: "1 Stunde",
                    other: "{{count}} Stunden"
                },
                withPreposition: {
                    one: "1 Stunde",
                    other: "{{count}} Stunden"
                }
            },
            xDays: {
                standalone: {
                    one: "1 Tag",
                    other: "{{count}} Tage"
                },
                withPreposition: {
                    one: "1 Tag",
                    other: "{{count}} Tagen"
                }
            },
            aboutXWeeks: {
                standalone: {
                    one: "etwa 1 Woche",
                    other: "etwa {{count}} Wochen"
                },
                withPreposition: {
                    one: "etwa 1 Woche",
                    other: "etwa {{count}} Wochen"
                }
            },
            xWeeks: {
                standalone: {
                    one: "1 Woche",
                    other: "{{count}} Wochen"
                },
                withPreposition: {
                    one: "1 Woche",
                    other: "{{count}} Wochen"
                }
            },
            aboutXMonths: {
                standalone: {
                    one: "etwa 1 Monat",
                    other: "etwa {{count}} Monate"
                },
                withPreposition: {
                    one: "etwa 1 Monat",
                    other: "etwa {{count}} Monaten"
                }
            },
            xMonths: {
                standalone: {
                    one: "1 Monat",
                    other: "{{count}} Monate"
                },
                withPreposition: {
                    one: "1 Monat",
                    other: "{{count}} Monaten"
                }
            },
            aboutXYears: {
                standalone: {
                    one: "etwa 1 Jahr",
                    other: "etwa {{count}} Jahre"
                },
                withPreposition: {
                    one: "etwa 1 Jahr",
                    other: "etwa {{count}} Jahren"
                }
            },
            xYears: {
                standalone: {
                    one: "1 Jahr",
                    other: "{{count}} Jahre"
                },
                withPreposition: {
                    one: "1 Jahr",
                    other: "{{count}} Jahren"
                }
            },
            overXYears: {
                standalone: {
                    one: "mehr als 1 Jahr",
                    other: "mehr als {{count}} Jahre"
                },
                withPreposition: {
                    one: "mehr als 1 Jahr",
                    other: "mehr als {{count}} Jahren"
                }
            },
            almostXYears: {
                standalone: {
                    one: "fast 1 Jahr",
                    other: "fast {{count}} Jahre"
                },
                withPreposition: {
                    one: "fast 1 Jahr",
                    other: "fast {{count}} Jahren"
                }
            }
        }
          , $e = (e,t,n)=>{
            let a;
            const r = n?.addSuffix ? Ve[e].withPreposition : Ve[e].standalone;
            return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
            n?.addSuffix ? n.comparison && n.comparison > 0 ? "in " + a : "vor " + a : a
        }
          , Be = {
            date: r({
                formats: {
                    full: "EEEE, do MMMM y",
                    long: "do MMMM y",
                    medium: "do MMM y",
                    short: "dd.MM.y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'um' {{time}}",
                    long: "{{date}} 'um' {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Je = {
            lastWeek: "'letzten' eeee 'um' p",
            yesterday: "'gestern um' p",
            today: "'heute um' p",
            tomorrow: "'morgen um' p",
            nextWeek: "eeee 'um' p",
            other: "P"
        }
          , Qe = (e,t,n,a)=>Je[e]
          , Ue = {
            narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
            abbreviated: ["Jan", "Feb", "M\xe4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"],
            wide: ["Januar", "Februar", "M\xe4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"]
        }
          , Ze = {
            narrow: Ue.narrow,
            abbreviated: ["Jan.", "Feb.", "M\xe4rz", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."],
            wide: Ue.wide
        }
          , et = {
            ordinalNumber: e=>Number(e) + ".",
            era: s({
                values: {
                    narrow: ["v.Chr.", "n.Chr."],
                    abbreviated: ["v.Chr.", "n.Chr."],
                    wide: ["vor Christus", "nach Christus"]
                },
                defaultWidth: "wide"
            }),
            quarter: s({
                values: {
                    narrow: ["1", "2", "3", "4"],
                    abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                    wide: ["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"]
                },
                defaultWidth: "wide",
                argumentCallback: e=>e - 1
            }),
            month: s({
                values: Ue,
                formattingValues: Ze,
                defaultWidth: "wide"
            }),
            day: s({
                values: {
                    narrow: ["S", "M", "D", "M", "D", "F", "S"],
                    short: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
                    abbreviated: ["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."],
                    wide: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"]
                },
                defaultWidth: "wide"
            }),
            dayPeriod: s({
                values: {
                    narrow: {
                        am: "vm.",
                        pm: "nm.",
                        midnight: "Mitternacht",
                        noon: "Mittag",
                        morning: "Morgen",
                        afternoon: "Nachm.",
                        evening: "Abend",
                        night: "Nacht"
                    },
                    abbreviated: {
                        am: "vorm.",
                        pm: "nachm.",
                        midnight: "Mitternacht",
                        noon: "Mittag",
                        morning: "Morgen",
                        afternoon: "Nachmittag",
                        evening: "Abend",
                        night: "Nacht"
                    },
                    wide: {
                        am: "vormittags",
                        pm: "nachmittags",
                        midnight: "Mitternacht",
                        noon: "Mittag",
                        morning: "Morgen",
                        afternoon: "Nachmittag",
                        evening: "Abend",
                        night: "Nacht"
                    }
                },
                defaultWidth: "wide",
                formattingValues: {
                    narrow: {
                        am: "vm.",
                        pm: "nm.",
                        midnight: "Mitternacht",
                        noon: "Mittag",
                        morning: "morgens",
                        afternoon: "nachm.",
                        evening: "abends",
                        night: "nachts"
                    },
                    abbreviated: {
                        am: "vorm.",
                        pm: "nachm.",
                        midnight: "Mitternacht",
                        noon: "Mittag",
                        morning: "morgens",
                        afternoon: "nachmittags",
                        evening: "abends",
                        night: "nachts"
                    },
                    wide: {
                        am: "vormittags",
                        pm: "nachmittags",
                        midnight: "Mitternacht",
                        noon: "Mittag",
                        morning: "morgens",
                        afternoon: "nachmittags",
                        evening: "abends",
                        night: "nachts"
                    }
                },
                defaultFormattingWidth: "wide"
            })
        }
          , tt = {
            ordinalNumber: d({
                matchPattern: /^(\d+)(\.)?/i,
                parsePattern: /\d+/i,
                valueCallback: e=>parseInt(e)
            }),
            era: u({
                matchPatterns: {
                    narrow: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
                    abbreviated: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
                    wide: /^(vor Christus|vor unserer Zeitrechnung|nach Christus|unserer Zeitrechnung)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    any: [/^v/i, /^n/i]
                },
                defaultParseWidth: "any"
            }),
            quarter: u({
                matchPatterns: {
                    narrow: /^[1234]/i,
                    abbreviated: /^q[1234]/i,
                    wide: /^[1234](\.)? Quartal/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    any: [/1/i, /2/i, /3/i, /4/i]
                },
                defaultParseWidth: "any",
                valueCallback: e=>e + 1
            }),
            month: u({
                matchPatterns: {
                    narrow: /^[jfmasond]/i,
                    abbreviated: /^(j[a\xe4]n|feb|m\xe4r[z]?|apr|mai|jun[i]?|jul[i]?|aug|sep|okt|nov|dez)\.?/i,
                    wide: /^(januar|februar|m\xe4rz|april|mai|juni|juli|august|september|oktober|november|dezember)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                    any: [/^j[a\xe4]/i, /^f/i, /^m\xe4r/i, /^ap/i, /^mai/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
                },
                defaultParseWidth: "any"
            }),
            day: u({
                matchPatterns: {
                    narrow: /^[smdmf]/i,
                    short: /^(so|mo|di|mi|do|fr|sa)/i,
                    abbreviated: /^(son?|mon?|die?|mit?|don?|fre?|sam?)\.?/i,
                    wide: /^(sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    any: [/^so/i, /^mo/i, /^di/i, /^mi/i, /^do/i, /^f/i, /^sa/i]
                },
                defaultParseWidth: "any"
            }),
            dayPeriod: u({
                matchPatterns: {
                    narrow: /^(vm\.?|nm\.?|Mitternacht|Mittag|morgens|nachm\.?|abends|nachts)/i,
                    abbreviated: /^(vorm\.?|nachm\.?|Mitternacht|Mittag|morgens|nachm\.?|abends|nachts)/i,
                    wide: /^(vormittags|nachmittags|Mitternacht|Mittag|morgens|nachmittags|abends|nachts)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    any: {
                        am: /^v/i,
                        pm: /^n/i,
                        midnight: /^Mitte/i,
                        noon: /^Mitta/i,
                        morning: /morgens/i,
                        afternoon: /nachmittags/i,
                        evening: /abends/i,
                        night: /nachts/i
                    }
                },
                defaultParseWidth: "any"
            })
        }
          , nt = {
            code: "de",
            formatDistance: $e,
            formatLong: Be,
            formatRelative: Qe,
            localize: et,
            match: tt,
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const at = {
            narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
            abbreviated: ["J\xe4n", "Feb", "M\xe4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"],
            wide: ["J\xe4nner", "Februar", "M\xe4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"]
        }
          , rt = {
            narrow: at.narrow,
            abbreviated: ["J\xe4n.", "Feb.", "M\xe4rz", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."],
            wide: at.wide
        }
          , it = {
            code: "de-AT",
            formatDistance: $e,
            formatLong: Be,
            formatRelative: Qe,
            localize: {
                ordinalNumber: e=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["v.Chr.", "n.Chr."],
                        abbreviated: ["v.Chr.", "n.Chr."],
                        wide: ["vor Christus", "nach Christus"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: at,
                    formattingValues: rt,
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["S", "M", "D", "M", "D", "F", "S"],
                        short: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
                        abbreviated: ["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."],
                        wide: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "vm.",
                            pm: "nm.",
                            midnight: "Mitternacht",
                            noon: "Mittag",
                            morning: "Morgen",
                            afternoon: "Nachm.",
                            evening: "Abend",
                            night: "Nacht"
                        },
                        abbreviated: {
                            am: "vorm.",
                            pm: "nachm.",
                            midnight: "Mitternacht",
                            noon: "Mittag",
                            morning: "Morgen",
                            afternoon: "Nachmittag",
                            evening: "Abend",
                            night: "Nacht"
                        },
                        wide: {
                            am: "vormittags",
                            pm: "nachmittags",
                            midnight: "Mitternacht",
                            noon: "Mittag",
                            morning: "Morgen",
                            afternoon: "Nachmittag",
                            evening: "Abend",
                            night: "Nacht"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "vm.",
                            pm: "nm.",
                            midnight: "Mitternacht",
                            noon: "Mittag",
                            morning: "morgens",
                            afternoon: "nachm.",
                            evening: "abends",
                            night: "nachts"
                        },
                        abbreviated: {
                            am: "vorm.",
                            pm: "nachm.",
                            midnight: "Mitternacht",
                            noon: "Mittag",
                            morning: "morgens",
                            afternoon: "nachmittags",
                            evening: "abends",
                            night: "nachts"
                        },
                        wide: {
                            am: "vormittags",
                            pm: "nachmittags",
                            midnight: "Mitternacht",
                            noon: "Mittag",
                            morning: "morgens",
                            afternoon: "nachmittags",
                            evening: "abends",
                            night: "nachts"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: tt,
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const ot = {
            lessThanXSeconds: {
                one: "\u03bb\u03b9\u03b3\u03cc\u03c4\u03b5\u03c1\u03bf \u03b1\u03c0\u03cc \u03ad\u03bd\u03b1 \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03cc\u03bb\u03b5\u03c0\u03c4\u03bf",
                other: "\u03bb\u03b9\u03b3\u03cc\u03c4\u03b5\u03c1\u03bf \u03b1\u03c0\u03cc {{count}} \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03cc\u03bb\u03b5\u03c0\u03c4\u03b1"
            },
            xSeconds: {
                one: "1 \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03cc\u03bb\u03b5\u03c0\u03c4\u03bf",
                other: "{{count}} \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03cc\u03bb\u03b5\u03c0\u03c4\u03b1"
            },
            halfAMinute: "\u03bc\u03b9\u03c3\u03cc \u03bb\u03b5\u03c0\u03c4\u03cc",
            lessThanXMinutes: {
                one: "\u03bb\u03b9\u03b3\u03cc\u03c4\u03b5\u03c1\u03bf \u03b1\u03c0\u03cc \u03ad\u03bd\u03b1 \u03bb\u03b5\u03c0\u03c4\u03cc",
                other: "\u03bb\u03b9\u03b3\u03cc\u03c4\u03b5\u03c1\u03bf \u03b1\u03c0\u03cc {{count}} \u03bb\u03b5\u03c0\u03c4\u03ac"
            },
            xMinutes: {
                one: "1 \u03bb\u03b5\u03c0\u03c4\u03cc",
                other: "{{count}} \u03bb\u03b5\u03c0\u03c4\u03ac"
            },
            aboutXHours: {
                one: "\u03c0\u03b5\u03c1\u03af\u03c0\u03bf\u03c5 1 \u03ce\u03c1\u03b1",
                other: "\u03c0\u03b5\u03c1\u03af\u03c0\u03bf\u03c5 {{count}} \u03ce\u03c1\u03b5\u03c2"
            },
            xHours: {
                one: "1 \u03ce\u03c1\u03b1",
                other: "{{count}} \u03ce\u03c1\u03b5\u03c2"
            },
            xDays: {
                one: "1 \u03b7\u03bc\u03ad\u03c1\u03b1",
                other: "{{count}} \u03b7\u03bc\u03ad\u03c1\u03b5\u03c2"
            },
            aboutXWeeks: {
                one: "\u03c0\u03b5\u03c1\u03af\u03c0\u03bf\u03c5 1 \u03b5\u03b2\u03b4\u03bf\u03bc\u03ac\u03b4\u03b1",
                other: "\u03c0\u03b5\u03c1\u03af\u03c0\u03bf\u03c5 {{count}} \u03b5\u03b2\u03b4\u03bf\u03bc\u03ac\u03b4\u03b5\u03c2"
            },
            xWeeks: {
                one: "1 \u03b5\u03b2\u03b4\u03bf\u03bc\u03ac\u03b4\u03b1",
                other: "{{count}} \u03b5\u03b2\u03b4\u03bf\u03bc\u03ac\u03b4\u03b5\u03c2"
            },
            aboutXMonths: {
                one: "\u03c0\u03b5\u03c1\u03af\u03c0\u03bf\u03c5 1 \u03bc\u03ae\u03bd\u03b1\u03c2",
                other: "\u03c0\u03b5\u03c1\u03af\u03c0\u03bf\u03c5 {{count}} \u03bc\u03ae\u03bd\u03b5\u03c2"
            },
            xMonths: {
                one: "1 \u03bc\u03ae\u03bd\u03b1\u03c2",
                other: "{{count}} \u03bc\u03ae\u03bd\u03b5\u03c2"
            },
            aboutXYears: {
                one: "\u03c0\u03b5\u03c1\u03af\u03c0\u03bf\u03c5 1 \u03c7\u03c1\u03cc\u03bd\u03bf",
                other: "\u03c0\u03b5\u03c1\u03af\u03c0\u03bf\u03c5 {{count}} \u03c7\u03c1\u03cc\u03bd\u03b9\u03b1"
            },
            xYears: {
                one: "1 \u03c7\u03c1\u03cc\u03bd\u03bf",
                other: "{{count}} \u03c7\u03c1\u03cc\u03bd\u03b9\u03b1"
            },
            overXYears: {
                one: "\u03c0\u03ac\u03bd\u03c9 \u03b1\u03c0\u03cc 1 \u03c7\u03c1\u03cc\u03bd\u03bf",
                other: "\u03c0\u03ac\u03bd\u03c9 \u03b1\u03c0\u03cc {{count}} \u03c7\u03c1\u03cc\u03bd\u03b9\u03b1"
            },
            almostXYears: {
                one: "\u03c0\u03b5\u03c1\u03af\u03c0\u03bf\u03c5 1 \u03c7\u03c1\u03cc\u03bd\u03bf",
                other: "\u03c0\u03b5\u03c1\u03af\u03c0\u03bf\u03c5 {{count}} \u03c7\u03c1\u03cc\u03bd\u03b9\u03b1"
            }
        }
          , st = {
            date: r({
                formats: {
                    full: "EEEE, d MMMM y",
                    long: "d MMMM y",
                    medium: "d MMM y",
                    short: "d/M/yy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} - {{time}}",
                    long: "{{date}} - {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , ut = {
            lastWeek: e=>6 === e.getDay() ? "'\u03c4\u03bf \u03c0\u03c1\u03bf\u03b7\u03b3\u03bf\u03cd\u03bc\u03b5\u03bd\u03bf' eeee '\u03c3\u03c4\u03b9\u03c2' p" : "'\u03c4\u03b7\u03bd \u03c0\u03c1\u03bf\u03b7\u03b3\u03bf\u03cd\u03bc\u03b5\u03bd\u03b7' eeee '\u03c3\u03c4\u03b9\u03c2' p",
            yesterday: "'\u03c7\u03b8\u03b5\u03c2 \u03c3\u03c4\u03b9\u03c2' p",
            today: "'\u03c3\u03ae\u03bc\u03b5\u03c1\u03b1 \u03c3\u03c4\u03b9\u03c2' p",
            tomorrow: "'\u03b1\u03cd\u03c1\u03b9\u03bf \u03c3\u03c4\u03b9\u03c2' p",
            nextWeek: "eeee '\u03c3\u03c4\u03b9\u03c2' p",
            other: "P"
        }
          , dt = {
            code: "el",
            formatDistance: (e,t,n)=>{
                let a;
                const r = ot[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "\u03c3\u03b5 " + a : a + " \u03c0\u03c1\u03b9\u03bd" : a
            }
            ,
            formatLong: st,
            formatRelative: (e,t)=>{
                const n = ut[e];
                return "function" === typeof n ? n(t) : n
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e)
                      , a = t?.unit;
                    let r;
                    return r = "year" === a || "month" === a ? "\u03bf\u03c2" : "week" === a || "dayOfYear" === a || "day" === a || "hour" === a || "date" === a ? "\u03b7" : "\u03bf",
                    n + r
                }
                ,
                era: s({
                    values: {
                        narrow: ["\u03c0\u03a7", "\u03bc\u03a7"],
                        abbreviated: ["\u03c0.\u03a7.", "\u03bc.\u03a7."],
                        wide: ["\u03c0\u03c1\u03bf \u03a7\u03c1\u03b9\u03c3\u03c4\u03bf\u03cd", "\u03bc\u03b5\u03c4\u03ac \u03a7\u03c1\u03b9\u03c3\u03c4\u03cc\u03bd"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u03a41", "\u03a42", "\u03a43", "\u03a44"],
                        wide: ["1\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "2\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "3\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "4\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"],
                        abbreviated: ["\u0399\u03b1\u03bd", "\u03a6\u03b5\u03b2", "\u039c\u03ac\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03ac\u03b9", "\u0399\u03bf\u03cd\u03bd", "\u0399\u03bf\u03cd\u03bb", "\u0391\u03cd\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03ad", "\u0394\u03b5\u03ba"],
                        wide: ["\u0399\u03b1\u03bd\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u039c\u03ac\u03c1\u03c4\u03b9\u03bf\u03c2", "\u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf\u03c2", "\u039c\u03ac\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bd\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bb\u03b9\u03bf\u03c2", "\u0391\u03cd\u03b3\u03bf\u03c5\u03c3\u03c4\u03bf\u03c2", "\u03a3\u03b5\u03c0\u03c4\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", "\u039f\u03ba\u03c4\u03ce\u03b2\u03c1\u03b9\u03bf\u03c2", "\u039d\u03bf\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", "\u0394\u03b5\u03ba\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"],
                        abbreviated: ["\u0399\u03b1\u03bd", "\u03a6\u03b5\u03b2", "\u039c\u03b1\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03b1\u0390", "\u0399\u03bf\u03c5\u03bd", "\u0399\u03bf\u03c5\u03bb", "\u0391\u03c5\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03b5", "\u0394\u03b5\u03ba"],
                        wide: ["\u0399\u03b1\u03bd\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", "\u039c\u03b1\u03c1\u03c4\u03af\u03bf\u03c5", "\u0391\u03c0\u03c1\u03b9\u03bb\u03af\u03bf\u03c5", "\u039c\u03b1\u0390\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bd\u03af\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bb\u03af\u03bf\u03c5", "\u0391\u03c5\u03b3\u03bf\u03cd\u03c3\u03c4\u03bf\u03c5", "\u03a3\u03b5\u03c0\u03c4\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u039f\u03ba\u03c4\u03c9\u03b2\u03c1\u03af\u03bf\u03c5", "\u039d\u03bf\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u0394\u03b5\u03ba\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u039a", "\u0394", "T", "\u03a4", "\u03a0", "\u03a0", "\u03a3"],
                        short: ["\u039a\u03c5", "\u0394\u03b5", "\u03a4\u03c1", "\u03a4\u03b5", "\u03a0\u03ad", "\u03a0\u03b1", "\u03a3\u03ac"],
                        abbreviated: ["\u039a\u03c5\u03c1", "\u0394\u03b5\u03c5", "\u03a4\u03c1\u03af", "\u03a4\u03b5\u03c4", "\u03a0\u03ad\u03bc", "\u03a0\u03b1\u03c1", "\u03a3\u03ac\u03b2"],
                        wide: ["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", "\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", "\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u03c0\u03bc",
                            pm: "\u03bc\u03bc",
                            midnight: "\u03bc\u03b5\u03c3\u03ac\u03bd\u03c5\u03c7\u03c4\u03b1",
                            noon: "\u03bc\u03b5\u03c3\u03b7\u03bc\u03ad\u03c1\u03b9",
                            morning: "\u03c0\u03c1\u03c9\u03af",
                            afternoon: "\u03b1\u03c0\u03cc\u03b3\u03b5\u03c5\u03bc\u03b1",
                            evening: "\u03b2\u03c1\u03ac\u03b4\u03c5",
                            night: "\u03bd\u03cd\u03c7\u03c4\u03b1"
                        },
                        abbreviated: {
                            am: "\u03c0.\u03bc.",
                            pm: "\u03bc.\u03bc.",
                            midnight: "\u03bc\u03b5\u03c3\u03ac\u03bd\u03c5\u03c7\u03c4\u03b1",
                            noon: "\u03bc\u03b5\u03c3\u03b7\u03bc\u03ad\u03c1\u03b9",
                            morning: "\u03c0\u03c1\u03c9\u03af",
                            afternoon: "\u03b1\u03c0\u03cc\u03b3\u03b5\u03c5\u03bc\u03b1",
                            evening: "\u03b2\u03c1\u03ac\u03b4\u03c5",
                            night: "\u03bd\u03cd\u03c7\u03c4\u03b1"
                        },
                        wide: {
                            am: "\u03c0.\u03bc.",
                            pm: "\u03bc.\u03bc.",
                            midnight: "\u03bc\u03b5\u03c3\u03ac\u03bd\u03c5\u03c7\u03c4\u03b1",
                            noon: "\u03bc\u03b5\u03c3\u03b7\u03bc\u03ad\u03c1\u03b9",
                            morning: "\u03c0\u03c1\u03c9\u03af",
                            afternoon: "\u03b1\u03c0\u03cc\u03b3\u03b5\u03c5\u03bc\u03b1",
                            evening: "\u03b2\u03c1\u03ac\u03b4\u03c5",
                            night: "\u03bd\u03cd\u03c7\u03c4\u03b1"
                        }
                    },
                    defaultWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\u03bf\u03c2|\u03b7|\u03bf)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u03c0\u03a7|\u03bc\u03a7)/i,
                        abbreviated: /^(\u03c0\.?\s?\u03c7\.?|\u03c0\.?\s?\u03ba\.?\s?\u03c7\.?|\u03bc\.?\s?\u03c7\.?|\u03ba\.?\s?\u03c7\.?)/i,
                        wide: /^(\u03c0\u03c1\u03bf \u03a7\u03c1\u03b9\u03c3\u03c4\u03bf(\u03cd|\u03c5)|\u03c0\u03c1\u03b9\u03bd \u03b1\u03c0(\u03cc|\u03bf) \u03c4\u03b7\u03bd \u039a\u03bf\u03b9\u03bd(\u03ae|\u03b7) \u03a7\u03c1\u03bf\u03bd\u03bf\u03bb\u03bf\u03b3(\u03af|\u03b9)\u03b1|\u03bc\u03b5\u03c4(\u03ac|\u03b1) \u03a7\u03c1\u03b9\u03c3\u03c4(\u03cc|\u03bf)\u03bd|\u039a\u03bf\u03b9\u03bd(\u03ae|\u03b7) \u03a7\u03c1\u03bf\u03bd\u03bf\u03bb\u03bf\u03b3(\u03af|\u03b9)\u03b1)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u03c0/i, /^(\u03bc|\u03ba)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^\u03c4[1234]/i,
                        wide: /^[1234]\u03bf? \u03c4\u03c1(\u03af|\u03b9)\u03bc\u03b7\u03bd\u03bf/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[\u03b9\u03c6\u03bc\u03b1\u03bc\u03b9\u03b9\u03b1\u03c3\u03bf\u03bd\u03b4]/i,
                        abbreviated: /^(\u03b9\u03b1\u03bd|\u03c6\u03b5\u03b2|\u03bc[\u03ac\u03b1]\u03c1|\u03b1\u03c0\u03c1|\u03bc[\u03ac\u03b1][\u03b9\u0390]|\u03b9\u03bf[\u03cd\u03c5]\u03bd|\u03b9\u03bf[\u03cd\u03c5]\u03bb|\u03b1[\u03cd\u03c5]\u03b3|\u03c3\u03b5\u03c0|\u03bf\u03ba\u03c4|\u03bd\u03bf[\u03ad\u03b5]|\u03b4\u03b5\u03ba)/i,
                        wide: /^(\u03bc[\u03ac\u03b1][\u03b9\u0390]|\u03b1[\u03cd\u03c5]\u03b3\u03bf[\u03c5\u03cd]\u03c3\u03c4)(\u03bf\u03c2|\u03bf\u03c5)|(\u03b9\u03b1\u03bd\u03bf\u03c5[\u03ac\u03b1]\u03c1|\u03c6\u03b5\u03b2\u03c1\u03bf\u03c5[\u03ac\u03b1]\u03c1|\u03bc[\u03ac\u03b1]\u03c1\u03c4|\u03b1\u03c0\u03c1[\u03af\u03b9]\u03bb|\u03b9\u03bf[\u03cd\u03c5]\u03bd|\u03b9\u03bf[\u03cd\u03c5]\u03bb|\u03c3\u03b5\u03c0\u03c4[\u03ad\u03b5]\u03bc\u03b2\u03c1|\u03bf\u03ba\u03c4[\u03ce\u03c9]\u03b2\u03c1|\u03bd\u03bf[\u03ad\u03b5]\u03bc\u03b2\u03c1|\u03b4\u03b5\u03ba[\u03ad\u03b5]\u03bc\u03b2\u03c1)(\u03b9\u03bf\u03c2|\u03af\u03bf\u03c5)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u03b9/i, /^\u03c6/i, /^\u03bc/i, /^\u03b1/i, /^\u03bc/i, /^\u03b9/i, /^\u03b9/i, /^\u03b1/i, /^\u03c3/i, /^\u03bf/i, /^\u03bd/i, /^\u03b4/i],
                        any: [/^\u03b9\u03b1/i, /^\u03c6/i, /^\u03bc[\u03ac\u03b1]\u03c1/i, /^\u03b1\u03c0/i, /^\u03bc[\u03ac\u03b1][\u03b9\u0390]/i, /^\u03b9\u03bf[\u03cd\u03c5]\u03bd/i, /^\u03b9\u03bf[\u03cd\u03c5]\u03bb/i, /^\u03b1[\u03cd\u03c5]/i, /^\u03c3/i, /^\u03bf/i, /^\u03bd/i, /^\u03b4/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u03ba\u03b4\u03c4\u03c0\u03c3]/i,
                        short: /^(\u03ba\u03c5|\u03b4\u03b5|\u03c4\u03c1|\u03c4\u03b5|\u03c0[\u03b5\u03ad]|\u03c0[\u03b1\u03ac]|\u03c3[\u03b1\u03ac])/i,
                        abbreviated: /^(\u03ba\u03c5\u03c1|\u03b4\u03b5\u03c5|\u03c4\u03c1\u03b9|\u03c4\u03b5\u03c4|\u03c0\u03b5\u03bc|\u03c0\u03b1\u03c1|\u03c3\u03b1\u03b2)/i,
                        wide: /^(\u03ba\u03c5\u03c1\u03b9\u03b1\u03ba(\u03ae|\u03b7)|\u03b4\u03b5\u03c5\u03c4(\u03ad|\u03b5)\u03c1\u03b1|\u03c4\u03c1(\u03af|\u03b9)\u03c4\u03b7|\u03c4\u03b5\u03c4(\u03ac|\u03b1)\u03c1\u03c4\u03b7|\u03c0(\u03ad|\u03b5)\u03bc\u03c0\u03c4\u03b7|\u03c0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5(\u03ae|\u03b7)|\u03c3(\u03ac|\u03b1)\u03b2\u03b2\u03b1\u03c4\u03bf)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u03ba/i, /^\u03b4/i, /^\u03c4/i, /^\u03c4/i, /^\u03c0/i, /^\u03c0/i, /^\u03c3/i],
                        any: [/^\u03ba/i, /^\u03b4/i, /^\u03c4\u03c1/i, /^\u03c4\u03b5/i, /^\u03c0[\u03b5\u03ad]/i, /^\u03c0[\u03b1\u03ac]/i, /^\u03c3/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(\u03c0\u03bc|\u03bc\u03bc|\u03bc\u03b5\u03c3(\u03ac|\u03b1)\u03bd\u03c5\u03c7\u03c4\u03b1|\u03bc\u03b5\u03c3\u03b7\u03bc(\u03ad|\u03b5)\u03c1\u03b9|\u03c0\u03c1\u03c9(\u03af|\u03b9)|\u03b1\u03c0(\u03cc|\u03bf)\u03b3\u03b5\u03c5\u03bc\u03b1|\u03b2\u03c1(\u03ac|\u03b1)\u03b4\u03c5|\u03bd(\u03cd|\u03c5)\u03c7\u03c4\u03b1)/i,
                        any: /^([\u03c0\u03bc]\.?\s?\u03bc\.?|\u03bc\u03b5\u03c3(\u03ac|\u03b1)\u03bd\u03c5\u03c7\u03c4\u03b1|\u03bc\u03b5\u03c3\u03b7\u03bc(\u03ad|\u03b5)\u03c1\u03b9|\u03c0\u03c1\u03c9(\u03af|\u03b9)|\u03b1\u03c0(\u03cc|\u03bf)\u03b3\u03b5\u03c5\u03bc\u03b1|\u03b2\u03c1(\u03ac|\u03b1)\u03b4\u03c5|\u03bd(\u03cd|\u03c5)\u03c7\u03c4\u03b1)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u03c0\u03bc|\u03c0\.\s?\u03bc\./i,
                            pm: /^\u03bc\u03bc|\u03bc\.\s?\u03bc\./i,
                            midnight: /^\u03bc\u03b5\u03c3\u03ac\u03bd/i,
                            noon: /^\u03bc\u03b5\u03c3\u03b7\u03bc(\u03ad|\u03b5)/i,
                            morning: /\u03c0\u03c1\u03c9(\u03af|\u03b9)/i,
                            afternoon: /\u03b1\u03c0(\u03cc|\u03bf)\u03b3\u03b5\u03c5\u03bc\u03b1/i,
                            evening: /\u03b2\u03c1(\u03ac|\u03b1)\u03b4\u03c5/i,
                            night: /\u03bd(\u03cd|\u03c5)\u03c7\u03c4\u03b1/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const lt = {
            lessThanXSeconds: {
                one: "less than a second",
                other: "less than {{count}} seconds"
            },
            xSeconds: {
                one: "1 second",
                other: "{{count}} seconds"
            },
            halfAMinute: "half a minute",
            lessThanXMinutes: {
                one: "less than a minute",
                other: "less than {{count}} minutes"
            },
            xMinutes: {
                one: "1 minute",
                other: "{{count}} minutes"
            },
            aboutXHours: {
                one: "about 1 hour",
                other: "about {{count}} hours"
            },
            xHours: {
                one: "1 hour",
                other: "{{count}} hours"
            },
            xDays: {
                one: "1 day",
                other: "{{count}} days"
            },
            aboutXWeeks: {
                one: "about 1 week",
                other: "about {{count}} weeks"
            },
            xWeeks: {
                one: "1 week",
                other: "{{count}} weeks"
            },
            aboutXMonths: {
                one: "about 1 month",
                other: "about {{count}} months"
            },
            xMonths: {
                one: "1 month",
                other: "{{count}} months"
            },
            aboutXYears: {
                one: "about 1 year",
                other: "about {{count}} years"
            },
            xYears: {
                one: "1 year",
                other: "{{count}} years"
            },
            overXYears: {
                one: "over 1 year",
                other: "over {{count}} years"
            },
            almostXYears: {
                one: "almost 1 year",
                other: "almost {{count}} years"
            }
        }
          , ct = (e,t,n)=>{
            let a;
            const r = lt[e];
            return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", t.toString()),
            n?.addSuffix ? n.comparison && n.comparison > 0 ? "in " + a : a + " ago" : a
        }
          , mt = {
            date: r({
                formats: {
                    full: "EEEE, d MMMM yyyy",
                    long: "d MMMM yyyy",
                    medium: "d MMM yyyy",
                    short: "dd/MM/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'at' {{time}}",
                    long: "{{date}} 'at' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , ht = {
            lastWeek: "'last' eeee 'at' p",
            yesterday: "'yesterday at' p",
            today: "'today at' p",
            tomorrow: "'tomorrow at' p",
            nextWeek: "eeee 'at' p",
            other: "P"
        }
          , ft = (e,t,n,a)=>ht[e]
          , pt = {
            ordinalNumber: (e,t)=>{
                const n = Number(e)
                  , a = n % 100;
                if (a > 20 || a < 10)
                    switch (a % 10) {
                    case 1:
                        return n + "st";
                    case 2:
                        return n + "nd";
                    case 3:
                        return n + "rd"
                    }
                return n + "th"
            }
            ,
            era: s({
                values: {
                    narrow: ["B", "A"],
                    abbreviated: ["BC", "AD"],
                    wide: ["Before Christ", "Anno Domini"]
                },
                defaultWidth: "wide"
            }),
            quarter: s({
                values: {
                    narrow: ["1", "2", "3", "4"],
                    abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                    wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
                },
                defaultWidth: "wide",
                argumentCallback: e=>e - 1
            }),
            month: s({
                values: {
                    narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                    abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
                },
                defaultWidth: "wide"
            }),
            day: s({
                values: {
                    narrow: ["S", "M", "T", "W", "T", "F", "S"],
                    short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
                    abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                    wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
                },
                defaultWidth: "wide"
            }),
            dayPeriod: s({
                values: {
                    narrow: {
                        am: "a",
                        pm: "p",
                        midnight: "mi",
                        noon: "n",
                        morning: "morning",
                        afternoon: "afternoon",
                        evening: "evening",
                        night: "night"
                    },
                    abbreviated: {
                        am: "AM",
                        pm: "PM",
                        midnight: "midnight",
                        noon: "noon",
                        morning: "morning",
                        afternoon: "afternoon",
                        evening: "evening",
                        night: "night"
                    },
                    wide: {
                        am: "a.m.",
                        pm: "p.m.",
                        midnight: "midnight",
                        noon: "noon",
                        morning: "morning",
                        afternoon: "afternoon",
                        evening: "evening",
                        night: "night"
                    }
                },
                defaultWidth: "wide",
                formattingValues: {
                    narrow: {
                        am: "a",
                        pm: "p",
                        midnight: "mi",
                        noon: "n",
                        morning: "in the morning",
                        afternoon: "in the afternoon",
                        evening: "in the evening",
                        night: "at night"
                    },
                    abbreviated: {
                        am: "AM",
                        pm: "PM",
                        midnight: "midnight",
                        noon: "noon",
                        morning: "in the morning",
                        afternoon: "in the afternoon",
                        evening: "in the evening",
                        night: "at night"
                    },
                    wide: {
                        am: "a.m.",
                        pm: "p.m.",
                        midnight: "midnight",
                        noon: "noon",
                        morning: "in the morning",
                        afternoon: "in the afternoon",
                        evening: "in the evening",
                        night: "at night"
                    }
                },
                defaultFormattingWidth: "wide"
            })
        }
          , gt = {
            ordinalNumber: d({
                matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                parsePattern: /\d+/i,
                valueCallback: e=>parseInt(e, 10)
            }),
            era: u({
                matchPatterns: {
                    narrow: /^(b|a)/i,
                    abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
                    wide: /^(before christ|before common era|anno domini|common era)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    any: [/^b/i, /^(a|c)/i]
                },
                defaultParseWidth: "any"
            }),
            quarter: u({
                matchPatterns: {
                    narrow: /^[1234]/i,
                    abbreviated: /^q[1234]/i,
                    wide: /^[1234](th|st|nd|rd)? quarter/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    any: [/1/i, /2/i, /3/i, /4/i]
                },
                defaultParseWidth: "any",
                valueCallback: e=>e + 1
            }),
            month: u({
                matchPatterns: {
                    narrow: /^[jfmasond]/i,
                    abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
                    wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                    any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
                },
                defaultParseWidth: "any"
            }),
            day: u({
                matchPatterns: {
                    narrow: /^[smtwf]/i,
                    short: /^(su|mo|tu|we|th|fr|sa)/i,
                    abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
                    wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
                    any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
                },
                defaultParseWidth: "any"
            }),
            dayPeriod: u({
                matchPatterns: {
                    narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
                    any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
                },
                defaultMatchWidth: "any",
                parsePatterns: {
                    any: {
                        am: /^a/i,
                        pm: /^p/i,
                        midnight: /^mi/i,
                        noon: /^no/i,
                        morning: /morning/i,
                        afternoon: /afternoon/i,
                        evening: /evening/i,
                        night: /night/i
                    }
                },
                defaultParseWidth: "any"
            })
        }
          , vt = {
            code: "en-AU",
            formatDistance: ct,
            formatLong: mt,
            formatRelative: ft,
            localize: pt,
            match: gt,
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const wt = {
            lessThanXSeconds: {
                one: "less than a second",
                other: "less than {{count}} seconds"
            },
            xSeconds: {
                one: "a second",
                other: "{{count}} seconds"
            },
            halfAMinute: "half a minute",
            lessThanXMinutes: {
                one: "less than a minute",
                other: "less than {{count}} minutes"
            },
            xMinutes: {
                one: "a minute",
                other: "{{count}} minutes"
            },
            aboutXHours: {
                one: "about an hour",
                other: "about {{count}} hours"
            },
            xHours: {
                one: "an hour",
                other: "{{count}} hours"
            },
            xDays: {
                one: "a day",
                other: "{{count}} days"
            },
            aboutXWeeks: {
                one: "about a week",
                other: "about {{count}} weeks"
            },
            xWeeks: {
                one: "a week",
                other: "{{count}} weeks"
            },
            aboutXMonths: {
                one: "about a month",
                other: "about {{count}} months"
            },
            xMonths: {
                one: "a month",
                other: "{{count}} months"
            },
            aboutXYears: {
                one: "about a year",
                other: "about {{count}} years"
            },
            xYears: {
                one: "a year",
                other: "{{count}} years"
            },
            overXYears: {
                one: "over a year",
                other: "over {{count}} years"
            },
            almostXYears: {
                one: "almost a year",
                other: "almost {{count}} years"
            }
        }
          , bt = {
            code: "en-CA",
            formatDistance: (e,t,n)=>{
                let a;
                const r = wt[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", t.toString()),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "in " + a : a + " ago" : a
            }
            ,
            formatLong: {
                date: r({
                    formats: {
                        full: "EEEE, MMMM do, yyyy",
                        long: "MMMM do, yyyy",
                        medium: "MMM d, yyyy",
                        short: "yyyy-MM-dd"
                    },
                    defaultWidth: "full"
                }),
                time: r({
                    formats: {
                        full: "h:mm:ss a zzzz",
                        long: "h:mm:ss a z",
                        medium: "h:mm:ss a",
                        short: "h:mm a"
                    },
                    defaultWidth: "full"
                }),
                dateTime: r({
                    formats: {
                        full: "{{date}} 'at' {{time}}",
                        long: "{{date}} 'at' {{time}}",
                        medium: "{{date}}, {{time}}",
                        short: "{{date}}, {{time}}"
                    },
                    defaultWidth: "full"
                })
            },
            formatRelative: ft,
            localize: pt,
            match: gt,
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const yt = {
            date: r({
                formats: {
                    full: "EEEE, d MMMM yyyy",
                    long: "d MMMM yyyy",
                    medium: "d MMM yyyy",
                    short: "dd/MM/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'at' {{time}}",
                    long: "{{date}} 'at' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , kt = {
            code: "en-GB",
            formatDistance: ct,
            formatLong: yt,
            formatRelative: ft,
            localize: pt,
            match: gt,
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Mt = {
            code: "en-IE",
            formatDistance: ct,
            formatLong: yt,
            formatRelative: ft,
            localize: pt,
            match: gt,
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Pt = {
            code: "en-IN",
            formatDistance: ct,
            formatLong: {
                date: r({
                    formats: {
                        full: "EEEE, d MMMM yyyy",
                        long: "d MMMM, yyyy",
                        medium: "d MMM, yyyy",
                        short: "dd/MM/yyyy"
                    },
                    defaultWidth: "full"
                }),
                time: r({
                    formats: {
                        full: "h:mm:ss a zzzz",
                        long: "h:mm:ss a z",
                        medium: "h:mm:ss a",
                        short: "h:mm a"
                    },
                    defaultWidth: "full"
                }),
                dateTime: r({
                    formats: {
                        full: "{{date}} 'at' {{time}}",
                        long: "{{date}} 'at' {{time}}",
                        medium: "{{date}}, {{time}}",
                        short: "{{date}}, {{time}}"
                    },
                    defaultWidth: "full"
                })
            },
            formatRelative: ft,
            localize: pt,
            match: gt,
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Wt = {
            code: "en-NZ",
            formatDistance: ct,
            formatLong: {
                date: r({
                    formats: {
                        full: "EEEE, d MMMM yyyy",
                        long: "d MMMM yyyy",
                        medium: "d MMM yyyy",
                        short: "dd/MM/yyyy"
                    },
                    defaultWidth: "full"
                }),
                time: r({
                    formats: {
                        full: "h:mm:ss a zzzz",
                        long: "h:mm:ss a z",
                        medium: "h:mm:ss a",
                        short: "h:mm a"
                    },
                    defaultWidth: "full"
                }),
                dateTime: r({
                    formats: {
                        full: "{{date}} 'at' {{time}}",
                        long: "{{date}} 'at' {{time}}",
                        medium: "{{date}}, {{time}}",
                        short: "{{date}}, {{time}}"
                    },
                    defaultWidth: "full"
                })
            },
            formatRelative: ft,
            localize: pt,
            match: gt,
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const xt = {
            code: "en-US",
            formatDistance: ct,
            formatLong: {
                date: r({
                    formats: {
                        full: "EEEE, MMMM do, y",
                        long: "MMMM do, y",
                        medium: "MMM d, y",
                        short: "MM/dd/yyyy"
                    },
                    defaultWidth: "full"
                }),
                time: r({
                    formats: {
                        full: "h:mm:ss a zzzz",
                        long: "h:mm:ss a z",
                        medium: "h:mm:ss a",
                        short: "h:mm a"
                    },
                    defaultWidth: "full"
                }),
                dateTime: r({
                    formats: {
                        full: "{{date}} 'at' {{time}}",
                        long: "{{date}} 'at' {{time}}",
                        medium: "{{date}}, {{time}}",
                        short: "{{date}}, {{time}}"
                    },
                    defaultWidth: "full"
                })
            },
            formatRelative: ft,
            localize: pt,
            match: gt,
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const St = {
            code: "en-ZA",
            formatDistance: ct,
            formatLong: {
                date: r({
                    formats: {
                        full: "EEEE, dd MMMM yyyy",
                        long: "dd MMMM yyyy",
                        medium: "dd MMM yyyy",
                        short: "yyyy/MM/dd"
                    },
                    defaultWidth: "full"
                }),
                time: r({
                    formats: {
                        full: "HH:mm:ss zzzz",
                        long: "HH:mm:ss z",
                        medium: "HH:mm:ss",
                        short: "HH:mm"
                    },
                    defaultWidth: "full"
                }),
                dateTime: r({
                    formats: {
                        full: "{{date}} 'at' {{time}}",
                        long: "{{date}} 'at' {{time}}",
                        medium: "{{date}}, {{time}}",
                        short: "{{date}}, {{time}}"
                    },
                    defaultWidth: "full"
                })
            },
            formatRelative: ft,
            localize: pt,
            match: gt,
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const Dt = {
            lessThanXSeconds: {
                one: "malpli ol sekundo",
                other: "malpli ol {{count}} sekundoj"
            },
            xSeconds: {
                one: "1 sekundo",
                other: "{{count}} sekundoj"
            },
            halfAMinute: "duonminuto",
            lessThanXMinutes: {
                one: "malpli ol minuto",
                other: "malpli ol {{count}} minutoj"
            },
            xMinutes: {
                one: "1 minuto",
                other: "{{count}} minutoj"
            },
            aboutXHours: {
                one: "proksimume 1 horo",
                other: "proksimume {{count}} horoj"
            },
            xHours: {
                one: "1 horo",
                other: "{{count}} horoj"
            },
            xDays: {
                one: "1 tago",
                other: "{{count}} tagoj"
            },
            aboutXMonths: {
                one: "proksimume 1 monato",
                other: "proksimume {{count}} monatoj"
            },
            xWeeks: {
                one: "1 semajno",
                other: "{{count}} semajnoj"
            },
            aboutXWeeks: {
                one: "proksimume 1 semajno",
                other: "proksimume {{count}} semajnoj"
            },
            xMonths: {
                one: "1 monato",
                other: "{{count}} monatoj"
            },
            aboutXYears: {
                one: "proksimume 1 jaro",
                other: "proksimume {{count}} jaroj"
            },
            xYears: {
                one: "1 jaro",
                other: "{{count}} jaroj"
            },
            overXYears: {
                one: "pli ol 1 jaro",
                other: "pli ol {{count}} jaroj"
            },
            almostXYears: {
                one: "preska\u016d 1 jaro",
                other: "preska\u016d {{count}} jaroj"
            }
        }
          , jt = {
            date: r({
                formats: {
                    full: "EEEE, do 'de' MMMM y",
                    long: "y-MMMM-dd",
                    medium: "y-MMM-dd",
                    short: "yyyy-MM-dd"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "Ho 'horo kaj' m:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    any: "{{date}} {{time}}"
                },
                defaultWidth: "any"
            })
        }
          , Ct = {
            lastWeek: "'pasinta' eeee 'je' p",
            yesterday: "'hiera\u016d je' p",
            today: "'hodia\u016d je' p",
            tomorrow: "'morga\u016d je' p",
            nextWeek: "eeee 'je' p",
            other: "P"
        }
          , Tt = {
            code: "eo",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Dt[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n?.comparison && n.comparison > 0 ? "post " + a : "anta\u016d " + a : a
            }
            ,
            formatLong: jt,
            formatRelative: (e,t,n,a)=>Ct[e],
            localize: {
                ordinalNumber: e=>Number(e) + "-a",
                era: s({
                    values: {
                        narrow: ["aK", "pK"],
                        abbreviated: ["a.K.E.", "p.K.E."],
                        wide: ["anta\u016d Komuna Erao", "Komuna Erao"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["K1", "K2", "K3", "K4"],
                        wide: ["1-a kvaronjaro", "2-a kvaronjaro", "3-a kvaronjaro", "4-a kvaronjaro"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: function(e) {
                        return Number(e) - 1
                    }
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                        abbreviated: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "a\u016dg", "sep", "okt", "nov", "dec"],
                        wide: ["januaro", "februaro", "marto", "aprilo", "majo", "junio", "julio", "a\u016dgusto", "septembro", "oktobro", "novembro", "decembro"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["D", "L", "M", "M", "\u0134", "V", "S"],
                        short: ["di", "lu", "ma", "me", "\u0135a", "ve", "sa"],
                        abbreviated: ["dim", "lun", "mar", "mer", "\u0135a\u016d", "ven", "sab"],
                        wide: ["diman\u0109o", "lundo", "mardo", "merkredo", "\u0135a\u016ddo", "vendredo", "sabato"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "noktomezo",
                            noon: "tagmezo",
                            morning: "matene",
                            afternoon: "posttagmeze",
                            evening: "vespere",
                            night: "nokte"
                        },
                        abbreviated: {
                            am: "a.t.m.",
                            pm: "p.t.m.",
                            midnight: "noktomezo",
                            noon: "tagmezo",
                            morning: "matene",
                            afternoon: "posttagmeze",
                            evening: "vespere",
                            night: "nokte"
                        },
                        wide: {
                            am: "anta\u016dtagmeze",
                            pm: "posttagmeze",
                            midnight: "noktomezo",
                            noon: "tagmezo",
                            morning: "matene",
                            afternoon: "posttagmeze",
                            evening: "vespere",
                            night: "nokte"
                        }
                    },
                    defaultWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(-?a)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: function(e) {
                        return parseInt(e, 10)
                    }
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^([ap]k)/i,
                        abbreviated: /^([ap]\.?\s?k\.?\s?e\.?)/i,
                        wide: /^((anta\u01d4 |post )?komuna erao)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^a/i, /^[kp]/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^k[1234]/i,
                        wide: /^[1234](-?a)? kvaronjaro/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: function(e) {
                        return e + 1
                    }
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|a(\u016d|ux|uh|u)g|sep|okt|nov|dec)/i,
                        wide: /^(januaro|februaro|marto|aprilo|majo|junio|julio|a(\u016d|ux|uh|u)gusto|septembro|oktobro|novembro|decembro)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^maj/i, /^jun/i, /^jul/i, /^a(u|\u016d)/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[dlm\u0135jvs]/i,
                        short: /^(di|lu|ma|me|(\u0135|jx|jh|j)a|ve|sa)/i,
                        abbreviated: /^(dim|lun|mar|mer|(\u0135|jx|jh|j)a(\u016d|ux|uh|u)|ven|sab)/i,
                        wide: /^(diman(\u0109|cx|ch|c)o|lundo|mardo|merkredo|(\u0135|jx|jh|j)a(\u016d|ux|uh|u)do|vendredo|sabato)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^(j|\u0135)/i, /^v/i, /^s/i],
                        any: [/^d/i, /^l/i, /^ma/i, /^me/i, /^(j|\u0135)/i, /^v/i, /^s/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^([ap]|(posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo])/i,
                        abbreviated: /^([ap][.\s]?t[.\s]?m[.\s]?|(posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo])/i,
                        wide: /^(anta(\u016d|ux)tagmez|posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo]/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^noktom/i,
                            noon: /^t/i,
                            morning: /^m/i,
                            afternoon: /^posttagmeze/i,
                            evening: /^v/i,
                            night: /^n/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Et = {
            lessThanXSeconds: {
                one: "menos de un segundo",
                other: "menos de {{count}} segundos"
            },
            xSeconds: {
                one: "1 segundo",
                other: "{{count}} segundos"
            },
            halfAMinute: "medio minuto",
            lessThanXMinutes: {
                one: "menos de un minuto",
                other: "menos de {{count}} minutos"
            },
            xMinutes: {
                one: "1 minuto",
                other: "{{count}} minutos"
            },
            aboutXHours: {
                one: "alrededor de 1 hora",
                other: "alrededor de {{count}} horas"
            },
            xHours: {
                one: "1 hora",
                other: "{{count}} horas"
            },
            xDays: {
                one: "1 d\xeda",
                other: "{{count}} d\xedas"
            },
            aboutXWeeks: {
                one: "alrededor de 1 semana",
                other: "alrededor de {{count}} semanas"
            },
            xWeeks: {
                one: "1 semana",
                other: "{{count}} semanas"
            },
            aboutXMonths: {
                one: "alrededor de 1 mes",
                other: "alrededor de {{count}} meses"
            },
            xMonths: {
                one: "1 mes",
                other: "{{count}} meses"
            },
            aboutXYears: {
                one: "alrededor de 1 a\xf1o",
                other: "alrededor de {{count}} a\xf1os"
            },
            xYears: {
                one: "1 a\xf1o",
                other: "{{count}} a\xf1os"
            },
            overXYears: {
                one: "m\xe1s de 1 a\xf1o",
                other: "m\xe1s de {{count}} a\xf1os"
            },
            almostXYears: {
                one: "casi 1 a\xf1o",
                other: "casi {{count}} a\xf1os"
            }
        }
          , Nt = {
            date: r({
                formats: {
                    full: "EEEE, d 'de' MMMM 'de' y",
                    long: "d 'de' MMMM 'de' y",
                    medium: "d MMM y",
                    short: "dd/MM/y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'a las' {{time}}",
                    long: "{{date}} 'a las' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , zt = {
            lastWeek: "'el' eeee 'pasado a la' p",
            yesterday: "'ayer a la' p",
            today: "'hoy a la' p",
            tomorrow: "'ma\xf1ana a la' p",
            nextWeek: "eeee 'a la' p",
            other: "P"
        }
          , It = {
            lastWeek: "'el' eeee 'pasado a las' p",
            yesterday: "'ayer a las' p",
            today: "'hoy a las' p",
            tomorrow: "'ma\xf1ana a las' p",
            nextWeek: "eeee 'a las' p",
            other: "P"
        }
          , Ot = {
            code: "es",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Et[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", t.toString()),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "en " + a : "hace " + a : a
            }
            ,
            formatLong: Nt,
            formatRelative: (e,t,n,a)=>1 !== t.getHours() ? It[e] : zt[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + "\xba",
                era: s({
                    values: {
                        narrow: ["AC", "DC"],
                        abbreviated: ["AC", "DC"],
                        wide: ["antes de cristo", "despu\xe9s de cristo"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["T1", "T2", "T3", "T4"],
                        wide: ["1\xba trimestre", "2\xba trimestre", "3\xba trimestre", "4\xba trimestre"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>Number(e) - 1
                }),
                month: s({
                    values: {
                        narrow: ["e", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
                        abbreviated: ["ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"],
                        wide: ["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["d", "l", "m", "m", "j", "v", "s"],
                        short: ["do", "lu", "ma", "mi", "ju", "vi", "s\xe1"],
                        abbreviated: ["dom", "lun", "mar", "mi\xe9", "jue", "vie", "s\xe1b"],
                        wide: ["domingo", "lunes", "martes", "mi\xe9rcoles", "jueves", "viernes", "s\xe1bado"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "mn",
                            noon: "md",
                            morning: "ma\xf1ana",
                            afternoon: "tarde",
                            evening: "tarde",
                            night: "noche"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "medianoche",
                            noon: "mediodia",
                            morning: "ma\xf1ana",
                            afternoon: "tarde",
                            evening: "tarde",
                            night: "noche"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "medianoche",
                            noon: "mediodia",
                            morning: "ma\xf1ana",
                            afternoon: "tarde",
                            evening: "tarde",
                            night: "noche"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "mn",
                            noon: "md",
                            morning: "de la ma\xf1ana",
                            afternoon: "de la tarde",
                            evening: "de la tarde",
                            night: "de la noche"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "medianoche",
                            noon: "mediodia",
                            morning: "de la ma\xf1ana",
                            afternoon: "de la tarde",
                            evening: "de la tarde",
                            night: "de la noche"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "medianoche",
                            noon: "mediodia",
                            morning: "de la ma\xf1ana",
                            afternoon: "de la tarde",
                            evening: "de la tarde",
                            night: "de la noche"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\xba)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: function(e) {
                        return parseInt(e, 10)
                    }
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(ac|dc|a|d)/i,
                        abbreviated: /^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i,
                        wide: /^(antes de cristo|antes de la era com[u\xfa]n|despu[e\xe9]s de cristo|era com[u\xfa]n)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^ac/i, /^dc/i],
                        wide: [/^(antes de cristo|antes de la era com[u\xfa]n)/i, /^(despu[e\xe9]s de cristo|era com[u\xfa]n)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^T[1234]/i,
                        wide: /^[1234](\xba)? trimestre/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[efmajsond]/i,
                        abbreviated: /^(ene|feb|mar|abr|may|jun|jul|ago|sep|oct|nov|dic)/i,
                        wide: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^e/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^en/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[dlmjvs]/i,
                        short: /^(do|lu|ma|mi|ju|vi|s[\xe1a])/i,
                        abbreviated: /^(dom|lun|mar|mi[\xe9e]|jue|vie|s[\xe1a]b)/i,
                        wide: /^(domingo|lunes|martes|mi[\xe9e]rcoles|jueves|viernes|s[\xe1a]bado)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],
                        any: [/^do/i, /^lu/i, /^ma/i, /^mi/i, /^ju/i, /^vi/i, /^sa/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|mn|md|(de la|a las) (ma\xf1ana|tarde|noche))/i,
                        any: /^([ap]\.?\s?m\.?|medianoche|mediodia|(de la|a las) (ma\xf1ana|tarde|noche))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^mn/i,
                            noon: /^md/i,
                            morning: /ma\xf1ana/i,
                            afternoon: /tarde/i,
                            evening: /tarde/i,
                            night: /noche/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const Ht = {
            lessThanXSeconds: {
                standalone: {
                    one: "v\xe4hem kui \xfcks sekund",
                    other: "v\xe4hem kui {{count}} sekundit"
                },
                withPreposition: {
                    one: "v\xe4hem kui \xfche sekundi",
                    other: "v\xe4hem kui {{count}} sekundi"
                }
            },
            xSeconds: {
                standalone: {
                    one: "\xfcks sekund",
                    other: "{{count}} sekundit"
                },
                withPreposition: {
                    one: "\xfche sekundi",
                    other: "{{count}} sekundi"
                }
            },
            halfAMinute: {
                standalone: "pool minutit",
                withPreposition: "poole minuti"
            },
            lessThanXMinutes: {
                standalone: {
                    one: "v\xe4hem kui \xfcks minut",
                    other: "v\xe4hem kui {{count}} minutit"
                },
                withPreposition: {
                    one: "v\xe4hem kui \xfche minuti",
                    other: "v\xe4hem kui {{count}} minuti"
                }
            },
            xMinutes: {
                standalone: {
                    one: "\xfcks minut",
                    other: "{{count}} minutit"
                },
                withPreposition: {
                    one: "\xfche minuti",
                    other: "{{count}} minuti"
                }
            },
            aboutXHours: {
                standalone: {
                    one: "umbes \xfcks tund",
                    other: "umbes {{count}} tundi"
                },
                withPreposition: {
                    one: "umbes \xfche tunni",
                    other: "umbes {{count}} tunni"
                }
            },
            xHours: {
                standalone: {
                    one: "\xfcks tund",
                    other: "{{count}} tundi"
                },
                withPreposition: {
                    one: "\xfche tunni",
                    other: "{{count}} tunni"
                }
            },
            xDays: {
                standalone: {
                    one: "\xfcks p\xe4ev",
                    other: "{{count}} p\xe4eva"
                },
                withPreposition: {
                    one: "\xfche p\xe4eva",
                    other: "{{count}} p\xe4eva"
                }
            },
            aboutXWeeks: {
                standalone: {
                    one: "umbes \xfcks n\xe4dal",
                    other: "umbes {{count}} n\xe4dalat"
                },
                withPreposition: {
                    one: "umbes \xfche n\xe4dala",
                    other: "umbes {{count}} n\xe4dala"
                }
            },
            xWeeks: {
                standalone: {
                    one: "\xfcks n\xe4dal",
                    other: "{{count}} n\xe4dalat"
                },
                withPreposition: {
                    one: "\xfche n\xe4dala",
                    other: "{{count}} n\xe4dala"
                }
            },
            aboutXMonths: {
                standalone: {
                    one: "umbes \xfcks kuu",
                    other: "umbes {{count}} kuud"
                },
                withPreposition: {
                    one: "umbes \xfche kuu",
                    other: "umbes {{count}} kuu"
                }
            },
            xMonths: {
                standalone: {
                    one: "\xfcks kuu",
                    other: "{{count}} kuud"
                },
                withPreposition: {
                    one: "\xfche kuu",
                    other: "{{count}} kuu"
                }
            },
            aboutXYears: {
                standalone: {
                    one: "umbes \xfcks aasta",
                    other: "umbes {{count}} aastat"
                },
                withPreposition: {
                    one: "umbes \xfche aasta",
                    other: "umbes {{count}} aasta"
                }
            },
            xYears: {
                standalone: {
                    one: "\xfcks aasta",
                    other: "{{count}} aastat"
                },
                withPreposition: {
                    one: "\xfche aasta",
                    other: "{{count}} aasta"
                }
            },
            overXYears: {
                standalone: {
                    one: "rohkem kui \xfcks aasta",
                    other: "rohkem kui {{count}} aastat"
                },
                withPreposition: {
                    one: "rohkem kui \xfche aasta",
                    other: "rohkem kui {{count}} aasta"
                }
            },
            almostXYears: {
                standalone: {
                    one: "peaaegu \xfcks aasta",
                    other: "peaaegu {{count}} aastat"
                },
                withPreposition: {
                    one: "peaaegu \xfche aasta",
                    other: "peaaegu {{count}} aasta"
                }
            }
        }
          , At = {
            date: r({
                formats: {
                    full: "EEEE, d. MMMM y",
                    long: "d. MMMM y",
                    medium: "d. MMM y",
                    short: "dd.MM.y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'kell' {{time}}",
                    long: "{{date}} 'kell' {{time}}",
                    medium: "{{date}}. {{time}}",
                    short: "{{date}}. {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Yt = {
            lastWeek: "'eelmine' eeee 'kell' p",
            yesterday: "'eile kell' p",
            today: "'t\xe4na kell' p",
            tomorrow: "'homme kell' p",
            nextWeek: "'j\xe4rgmine' eeee 'kell' p",
            other: "P"
        }
          , _t = {
            narrow: ["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
            abbreviated: ["jaan", "veebr", "m\xe4rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"],
            wide: ["jaanuar", "veebruar", "m\xe4rts", "aprill", "mai", "juuni", "juuli", "august", "september", "oktoober", "november", "detsember"]
        }
          , Xt = {
            narrow: ["P", "E", "T", "K", "N", "R", "L"],
            short: ["P", "E", "T", "K", "N", "R", "L"],
            abbreviated: ["p\xfchap.", "esmasp.", "teisip.", "kolmap.", "neljap.", "reede.", "laup."],
            wide: ["p\xfchap\xe4ev", "esmasp\xe4ev", "teisip\xe4ev", "kolmap\xe4ev", "neljap\xe4ev", "reede", "laup\xe4ev"]
        }
          , Rt = {
            code: "et",
            formatDistance: (e,t,n)=>{
                const a = n?.addSuffix ? Ht[e].withPreposition : Ht[e].standalone;
                let r;
                return r = "string" === typeof a ? a : 1 === t ? a.one : a.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? r + " p\xe4rast" : r + " eest" : r
            }
            ,
            formatLong: At,
            formatRelative: (e,t,n,a)=>Yt[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["e.m.a", "m.a.j"],
                        abbreviated: ["e.m.a", "m.a.j"],
                        wide: ["enne meie ajaarvamist", "meie ajaarvamise j\xe4rgi"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["K1", "K2", "K3", "K4"],
                        wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: _t,
                    defaultWidth: "wide",
                    formattingValues: _t,
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: Xt,
                    defaultWidth: "wide",
                    formattingValues: Xt,
                    defaultFormattingWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "kesk\xf6\xf6",
                            noon: "keskp\xe4ev",
                            morning: "hommik",
                            afternoon: "p\xe4rastl\xf5una",
                            evening: "\xf5htu",
                            night: "\xf6\xf6"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "kesk\xf6\xf6",
                            noon: "keskp\xe4ev",
                            morning: "hommik",
                            afternoon: "p\xe4rastl\xf5una",
                            evening: "\xf5htu",
                            night: "\xf6\xf6"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "kesk\xf6\xf6",
                            noon: "keskp\xe4ev",
                            morning: "hommik",
                            afternoon: "p\xe4rastl\xf5una",
                            evening: "\xf5htu",
                            night: "\xf6\xf6"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "kesk\xf6\xf6l",
                            noon: "keskp\xe4eval",
                            morning: "hommikul",
                            afternoon: "p\xe4rastl\xf5unal",
                            evening: "\xf5htul",
                            night: "\xf6\xf6sel"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "kesk\xf6\xf6l",
                            noon: "keskp\xe4eval",
                            morning: "hommikul",
                            afternoon: "p\xe4rastl\xf5unal",
                            evening: "\xf5htul",
                            night: "\xf6\xf6sel"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "kesk\xf6\xf6l",
                            noon: "keskp\xe4eval",
                            morning: "hommikul",
                            afternoon: "p\xe4rastl\xf5unal",
                            evening: "\xf5htul",
                            night: "\xf6\xf6sel"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^\d+\./i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(e\.m\.a|m\.a\.j|eKr|pKr)/i,
                        abbreviated: /^(e\.m\.a|m\.a\.j|eKr|pKr)/i,
                        wide: /^(enne meie ajaarvamist|meie ajaarvamise j\xe4rgi|enne Kristust|p\xe4rast Kristust)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^e/i, /^(m|p)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^K[1234]/i,
                        wide: /^[1234](\.)? kvartal/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jvmasond]/i,
                        abbreviated: /^(jaan|veebr|m\xe4rts|apr|mai|juuni|juuli|aug|sept|okt|nov|dets)/i,
                        wide: /^(jaanuar|veebruar|m\xe4rts|aprill|mai|juuni|juuli|august|september|oktoober|november|detsember)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^v/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^v/i, /^m\xe4r/i, /^ap/i, /^mai/i, /^juun/i, /^juul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[petknrl]/i,
                        short: /^[petknrl]/i,
                        abbreviated: /^(p\xfch?|esm?|tei?|kolm?|nel?|ree?|laup?)\.?/i,
                        wide: /^(p\xfchap\xe4ev|esmasp\xe4ev|teisip\xe4ev|kolmap\xe4ev|neljap\xe4ev|reede|laup\xe4ev)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^p/i, /^e/i, /^t/i, /^k/i, /^n/i, /^r/i, /^l/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(am|pm|kesk\xf6\xf6l?|keskp\xe4ev(al)?|hommik(ul)?|p\xe4rastl\xf5unal?|\xf5htul?|\xf6\xf6(sel)?)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^kesk\xf6/i,
                            noon: /^keskp/i,
                            morning: /hommik/i,
                            afternoon: /p\xe4rastl\xf5una/i,
                            evening: /\xf5htu/i,
                            night: /\xf6\xf6/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Lt = {
            lessThanXSeconds: {
                one: "segundo bat baino gutxiago",
                other: "{{count}} segundo baino gutxiago"
            },
            xSeconds: {
                one: "1 segundo",
                other: "{{count}} segundo"
            },
            halfAMinute: "minutu erdi",
            lessThanXMinutes: {
                one: "minutu bat baino gutxiago",
                other: "{{count}} minutu baino gutxiago"
            },
            xMinutes: {
                one: "1 minutu",
                other: "{{count}} minutu"
            },
            aboutXHours: {
                one: "1 ordu gutxi gorabehera",
                other: "{{count}} ordu gutxi gorabehera"
            },
            xHours: {
                one: "1 ordu",
                other: "{{count}} ordu"
            },
            xDays: {
                one: "1 egun",
                other: "{{count}} egun"
            },
            aboutXWeeks: {
                one: "aste 1 inguru",
                other: "{{count}} aste inguru"
            },
            xWeeks: {
                one: "1 aste",
                other: "{{count}} astean"
            },
            aboutXMonths: {
                one: "1 hilabete gutxi gorabehera",
                other: "{{count}} hilabete gutxi gorabehera"
            },
            xMonths: {
                one: "1 hilabete",
                other: "{{count}} hilabete"
            },
            aboutXYears: {
                one: "1 urte gutxi gorabehera",
                other: "{{count}} urte gutxi gorabehera"
            },
            xYears: {
                one: "1 urte",
                other: "{{count}} urte"
            },
            overXYears: {
                one: "1 urte baino gehiago",
                other: "{{count}} urte baino gehiago"
            },
            almostXYears: {
                one: "ia 1 urte",
                other: "ia {{count}} urte"
            }
        }
          , Ft = {
            date: r({
                formats: {
                    full: "EEEE, y'ko' MMMM'ren' d'a' y'ren'",
                    long: "y'ko' MMMM'ren' d'a'",
                    medium: "y MMM d",
                    short: "yy/MM/dd"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'tan' {{time}}",
                    long: "{{date}} 'tan' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , qt = {
            lastWeek: "'joan den' eeee, LT",
            yesterday: "'atzo,' p",
            today: "'gaur,' p",
            tomorrow: "'bihar,' p",
            nextWeek: "eeee, p",
            other: "P"
        }
          , Gt = {
            lastWeek: "'joan den' eeee, p",
            yesterday: "'atzo,' p",
            today: "'gaur,' p",
            tomorrow: "'bihar,' p",
            nextWeek: "eeee, p",
            other: "P"
        }
          , Kt = {
            code: "eu",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Lt[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "en " + a : "duela " + a : a
            }
            ,
            formatLong: Ft,
            formatRelative: (e,t)=>1 !== t.getHours() ? Gt[e] : qt[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["k.a.", "k.o."],
                        abbreviated: ["k.a.", "k.o."],
                        wide: ["kristo aurretik", "kristo ondoren"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1H", "2H", "3H", "4H"],
                        wide: ["1. hiruhilekoa", "2. hiruhilekoa", "3. hiruhilekoa", "4. hiruhilekoa"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["u", "o", "m", "a", "m", "e", "u", "a", "i", "u", "a", "a"],
                        abbreviated: ["urt", "ots", "mar", "api", "mai", "eka", "uzt", "abu", "ira", "urr", "aza", "abe"],
                        wide: ["urtarrila", "otsaila", "martxoa", "apirila", "maiatza", "ekaina", "uztaila", "abuztua", "iraila", "urria", "azaroa", "abendua"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["i", "a", "a", "a", "o", "o", "l"],
                        short: ["ig", "al", "as", "az", "og", "or", "lr"],
                        abbreviated: ["iga", "ast", "ast", "ast", "ost", "ost", "lar"],
                        wide: ["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "ge",
                            noon: "eg",
                            morning: "goiza",
                            afternoon: "arratsaldea",
                            evening: "arratsaldea",
                            night: "gaua"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "gauerdia",
                            noon: "eguerdia",
                            morning: "goiza",
                            afternoon: "arratsaldea",
                            evening: "arratsaldea",
                            night: "gaua"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "gauerdia",
                            noon: "eguerdia",
                            morning: "goiza",
                            afternoon: "arratsaldea",
                            evening: "arratsaldea",
                            night: "gaua"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "ge",
                            noon: "eg",
                            morning: "goizean",
                            afternoon: "arratsaldean",
                            evening: "arratsaldean",
                            night: "gauean"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "gauerdia",
                            noon: "eguerdia",
                            morning: "goizean",
                            afternoon: "arratsaldean",
                            evening: "arratsaldean",
                            night: "gauean"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "gauerdia",
                            noon: "eguerdia",
                            morning: "goizean",
                            afternoon: "arratsaldean",
                            evening: "arratsaldean",
                            night: "gauean"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(.)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(k.a.|k.o.)/i,
                        abbreviated: /^(k.a.|k.o.)/i,
                        wide: /^(kristo aurretik|kristo ondoren)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^k.a./i, /^k.o./i],
                        abbreviated: [/^(k.a.)/i, /^(k.o.)/i],
                        wide: [/^(kristo aurretik)/i, /^(kristo ondoren)/i]
                    },
                    defaultParseWidth: "wide"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234]H/i,
                        wide: /^[1234](.)? hiruhilekoa/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[uomaei]/i,
                        abbreviated: /^(urt|ots|mar|api|mai|eka|uzt|abu|ira|urr|aza|abe)/i,
                        wide: /^(urtarrila|otsaila|martxoa|apirila|maiatza|ekaina|uztaila|abuztua|iraila|urria|azaroa|abendua)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^u/i, /^o/i, /^m/i, /^a/i, /^m/i, /^e/i, /^u/i, /^a/i, /^i/i, /^u/i, /^a/i, /^a/i],
                        any: [/^urt/i, /^ots/i, /^mar/i, /^api/i, /^mai/i, /^eka/i, /^uzt/i, /^abu/i, /^ira/i, /^urr/i, /^aza/i, /^abe/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[iaol]/i,
                        short: /^(ig|al|as|az|og|or|lr)/i,
                        abbreviated: /^(iga|ast|ast|ast|ost|ost|lar)/i,
                        wide: /^(igandea|astelehena|asteartea|asteazkena|osteguna|ostirala|larunbata)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^i/i, /^a/i, /^a/i, /^a/i, /^o/i, /^o/i, /^l/i],
                        short: [/^ig/i, /^al/i, /^as/i, /^az/i, /^og/i, /^or/i, /^lr/i],
                        abbreviated: [/^iga/i, /^ast/i, /^ast/i, /^ast/i, /^ost/i, /^ost/i, /^lar/i],
                        wide: [/^igandea/i, /^astelehena/i, /^asteartea/i, /^asteazkena/i, /^osteguna/i, /^ostirala/i, /^larunbata/i]
                    },
                    defaultParseWidth: "wide"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|ge|eg|((goiza|goizean)|arratsaldea|(gaua|gauean)))/i,
                        any: /^([ap]\.?\s?m\.?|gauerdia|eguerdia|((goiza|goizean)|arratsaldea|(gaua|gauean)))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        narrow: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^ge/i,
                            noon: /^eg/i,
                            morning: /goiz/i,
                            afternoon: /arratsaldea/i,
                            evening: /arratsaldea/i,
                            night: /gau/i
                        },
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^gauerdia/i,
                            noon: /^eguerdia/i,
                            morning: /goiz/i,
                            afternoon: /arratsaldea/i,
                            evening: /arratsaldea/i,
                            night: /gau/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const Vt = {
            lessThanXSeconds: {
                one: "\u06a9\u0645\u062a\u0631 \u0627\u0632 \u06cc\u06a9 \u062b\u0627\u0646\u06cc\u0647",
                other: "\u06a9\u0645\u062a\u0631 \u0627\u0632 {{count}} \u062b\u0627\u0646\u06cc\u0647"
            },
            xSeconds: {
                one: "1 \u062b\u0627\u0646\u06cc\u0647",
                other: "{{count}} \u062b\u0627\u0646\u06cc\u0647"
            },
            halfAMinute: "\u0646\u06cc\u0645 \u062f\u0642\u06cc\u0642\u0647",
            lessThanXMinutes: {
                one: "\u06a9\u0645\u062a\u0631 \u0627\u0632 \u06cc\u06a9 \u062f\u0642\u06cc\u0642\u0647",
                other: "\u06a9\u0645\u062a\u0631 \u0627\u0632 {{count}} \u062f\u0642\u06cc\u0642\u0647"
            },
            xMinutes: {
                one: "1 \u062f\u0642\u06cc\u0642\u0647",
                other: "{{count}} \u062f\u0642\u06cc\u0642\u0647"
            },
            aboutXHours: {
                one: "\u062d\u062f\u0648\u062f 1 \u0633\u0627\u0639\u062a",
                other: "\u062d\u062f\u0648\u062f {{count}} \u0633\u0627\u0639\u062a"
            },
            xHours: {
                one: "1 \u0633\u0627\u0639\u062a",
                other: "{{count}} \u0633\u0627\u0639\u062a"
            },
            xDays: {
                one: "1 \u0631\u0648\u0632",
                other: "{{count}} \u0631\u0648\u0632"
            },
            aboutXWeeks: {
                one: "\u062d\u062f\u0648\u062f 1 \u0647\u0641\u062a\u0647",
                other: "\u062d\u062f\u0648\u062f {{count}} \u0647\u0641\u062a\u0647"
            },
            xWeeks: {
                one: "1 \u0647\u0641\u062a\u0647",
                other: "{{count}} \u0647\u0641\u062a\u0647"
            },
            aboutXMonths: {
                one: "\u062d\u062f\u0648\u062f 1 \u0645\u0627\u0647",
                other: "\u062d\u062f\u0648\u062f {{count}} \u0645\u0627\u0647"
            },
            xMonths: {
                one: "1 \u0645\u0627\u0647",
                other: "{{count}} \u0645\u0627\u0647"
            },
            aboutXYears: {
                one: "\u062d\u062f\u0648\u062f 1 \u0633\u0627\u0644",
                other: "\u062d\u062f\u0648\u062f {{count}} \u0633\u0627\u0644"
            },
            xYears: {
                one: "1 \u0633\u0627\u0644",
                other: "{{count}} \u0633\u0627\u0644"
            },
            overXYears: {
                one: "\u0628\u06cc\u0634\u062a\u0631 \u0627\u0632 1 \u0633\u0627\u0644",
                other: "\u0628\u06cc\u0634\u062a\u0631 \u0627\u0632 {{count}} \u0633\u0627\u0644"
            },
            almostXYears: {
                one: "\u0646\u0632\u062f\u06cc\u06a9 1 \u0633\u0627\u0644",
                other: "\u0646\u0632\u062f\u06cc\u06a9 {{count}} \u0633\u0627\u0644"
            }
        }
          , $t = {
            date: r({
                formats: {
                    full: "EEEE do MMMM y",
                    long: "do MMMM y",
                    medium: "d MMM y",
                    short: "yyyy/MM/dd"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u062f\u0631' {{time}}",
                    long: "{{date}} '\u062f\u0631' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Bt = {
            lastWeek: "eeee '\u06af\u0630\u0634\u062a\u0647 \u062f\u0631' p",
            yesterday: "'\u062f\u06cc\u0631\u0648\u0632 \u062f\u0631' p",
            today: "'\u0627\u0645\u0631\u0648\u0632 \u062f\u0631' p",
            tomorrow: "'\u0641\u0631\u062f\u0627 \u062f\u0631' p",
            nextWeek: "eeee '\u062f\u0631' p",
            other: "P"
        }
          , Jt = {
            code: "fa-IR",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Vt[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "\u062f\u0631 " + a : a + " \u0642\u0628\u0644" : a
            }
            ,
            formatLong: $t,
            formatRelative: (e,t,n,a)=>Bt[e],
            localize: {
                ordinalNumber: (e,t)=>String(e),
                era: s({
                    values: {
                        narrow: ["\u0642", "\u0628"],
                        abbreviated: ["\u0642.\u0645.", "\u0628.\u0645."],
                        wide: ["\u0642\u0628\u0644 \u0627\u0632 \u0645\u06cc\u0644\u0627\u062f", "\u0628\u0639\u062f \u0627\u0632 \u0645\u06cc\u0644\u0627\u062f"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u0633\u200c\u06451", "\u0633\u200c\u06452", "\u0633\u200c\u06453", "\u0633\u200c\u06454"],
                        wide: ["\u0633\u0647\u200c\u0645\u0627\u0647\u0647 1", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647 2", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647 3", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647 4"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u0698", "\u0641", "\u0645", "\u0622", "\u0645", "\u062c", "\u062c", "\u0622", "\u0633", "\u0627", "\u0646", "\u062f"],
                        abbreviated: ["\u0698\u0627\u0646\u0640", "\u0641\u0648\u0631", "\u0645\u0627\u0631\u0633", "\u0622\u067e\u0631", "\u0645\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0640", "\u0622\u06af\u0648", "\u0633\u067e\u062a\u0640", "\u0627\u06a9\u062a\u0640", "\u0646\u0648\u0627\u0645\u0640", "\u062f\u0633\u0627\u0645\u0640"],
                        wide: ["\u0698\u0627\u0646\u0648\u06cc\u0647", "\u0641\u0648\u0631\u06cc\u0647", "\u0645\u0627\u0631\u0633", "\u0622\u067e\u0631\u06cc\u0644", "\u0645\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u06cc", "\u0622\u06af\u0648\u0633\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u06cc", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"],
                        short: ["1\u0634", "2\u0634", "3\u0634", "4\u0634", "5\u0634", "\u062c", "\u0634"],
                        abbreviated: ["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"],
                        wide: ["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0642",
                            pm: "\u0628",
                            midnight: "\u0646",
                            noon: "\u0638",
                            morning: "\u0635",
                            afternoon: "\u0628.\u0638.",
                            evening: "\u0639",
                            night: "\u0634"
                        },
                        abbreviated: {
                            am: "\u0642.\u0638.",
                            pm: "\u0628.\u0638.",
                            midnight: "\u0646\u06cc\u0645\u0647\u200c\u0634\u0628",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0635\u0628\u062d",
                            afternoon: "\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631",
                            evening: "\u0639\u0635\u0631",
                            night: "\u0634\u0628"
                        },
                        wide: {
                            am: "\u0642\u0628\u0644\u200c\u0627\u0632\u0638\u0647\u0631",
                            pm: "\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631",
                            midnight: "\u0646\u06cc\u0645\u0647\u200c\u0634\u0628",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0635\u0628\u062d",
                            afternoon: "\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631",
                            evening: "\u0639\u0635\u0631",
                            night: "\u0634\u0628"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u0642",
                            pm: "\u0628",
                            midnight: "\u0646",
                            noon: "\u0638",
                            morning: "\u0635",
                            afternoon: "\u0628.\u0638.",
                            evening: "\u0639",
                            night: "\u0634"
                        },
                        abbreviated: {
                            am: "\u0642.\u0638.",
                            pm: "\u0628.\u0638.",
                            midnight: "\u0646\u06cc\u0645\u0647\u200c\u0634\u0628",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0635\u0628\u062d",
                            afternoon: "\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631",
                            evening: "\u0639\u0635\u0631",
                            night: "\u0634\u0628"
                        },
                        wide: {
                            am: "\u0642\u0628\u0644\u200c\u0627\u0632\u0638\u0647\u0631",
                            pm: "\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631",
                            midnight: "\u0646\u06cc\u0645\u0647\u200c\u0634\u0628",
                            noon: "\u0638\u0647\u0631",
                            morning: "\u0635\u0628\u062d",
                            afternoon: "\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631",
                            evening: "\u0639\u0635\u0631",
                            night: "\u0634\u0628"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u0642|\u0628)/i,
                        abbreviated: /^(\u0642\.?\s?\u0645\.?|\u0642\.?\s?\u062f\.?\s?\u0645\.?|\u0645\.?\s?|\u062f\.?\s?\u0645\.?)/i,
                        wide: /^(\u0642\u0628\u0644 \u0627\u0632 \u0645\u06cc\u0644\u0627\u062f|\u0642\u0628\u0644 \u0627\u0632 \u062f\u0648\u0631\u0627\u0646 \u0645\u0634\u062a\u0631\u06a9|\u0645\u06cc\u0644\u0627\u062f\u06cc|\u062f\u0648\u0631\u0627\u0646 \u0645\u0634\u062a\u0631\u06a9|\u0628\u0639\u062f \u0627\u0632 \u0645\u06cc\u0644\u0627\u062f)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u0642\u0628\u0644/i, /^\u0628\u0639\u062f/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^\u0633\u200c\u0645[1234]/i,
                        wide: /^\u0633\u0647\u200c\u0645\u0627\u0647\u0647 [1234]/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[\u062c\u0698\u0641\u0645\u0622\u0627\u0645\u0627\u0633\u0646\u062f]/i,
                        abbreviated: /^(\u062c\u0646\u0648|\u0698\u0627\u0646\u0640|\u0698\u0627\u0646\u0648\u06cc\u0647|\u0641\u0648\u0631\u06cc\u0647|\u0641\u0648\u0631|\u0645\u0627\u0631\u0633|\u0622\u0648\u0631\u06cc\u0644|\u0622\u067e\u0631|\u0645\u0647|\u0645\u06cc|\u0698\u0648\u0626\u0646|\u062c\u0648\u0646|\u062c\u0648\u0644|\u062c\u0648\u0644\u0640|\u0698\u0648\u0626\u06cc\u0647|\u0627\u0648\u062a|\u0622\u06af\u0648|\u0633\u067e\u062a\u0645\u0628\u0631|\u0633\u067e\u062a\u0627\u0645\u0628\u0631|\u0627\u06a9\u062a\u0628\u0631|\u0627\u06a9\u062a\u0648\u0628\u0631|\u0646\u0648\u0627\u0645\u0628\u0631|\u0646\u0648\u0627\u0645\u0640|\u062f\u0633\u0627\u0645\u0628\u0631|\u062f\u0633\u0627\u0645\u0640|\u062f\u0633\u0645)/i,
                        wide: /^(\u0698\u0627\u0646\u0648\u06cc\u0647|\u062c\u0646\u0648\u0631\u06cc|\u0641\u0628\u0631\u0648\u0631\u06cc|\u0641\u0648\u0631\u06cc\u0647|\u0645\u0627\u0631\u0686|\u0645\u0627\u0631\u0633|\u0622\u067e\u0631\u06cc\u0644|\u0627\u067e\u0631\u06cc\u0644|\u0627\u06cc\u067e\u0631\u06cc\u0644|\u0622\u0648\u0631\u06cc\u0644|\u0645\u0647|\u0645\u06cc|\u0698\u0648\u0626\u0646|\u062c\u0648\u0646|\u062c\u0648\u0644\u0627\u06cc|\u0698\u0648\u0626\u06cc\u0647|\u0622\u06af\u0633\u062a|\u0627\u06af\u0633\u062a|\u0622\u06af\u0648\u0633\u062a|\u0627\u0648\u062a|\u0633\u067e\u062a\u0645\u0628\u0631|\u0633\u067e\u062a\u0627\u0645\u0628\u0631|\u0627\u06a9\u062a\u0628\u0631|\u0627\u06a9\u062a\u0648\u0628\u0631|\u0646\u0648\u0627\u0645\u0628\u0631|\u0646\u0648\u0645\u0628\u0631|\u062f\u0633\u0627\u0645\u0628\u0631|\u062f\u0633\u0645\u0628\u0631)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^(\u0698|\u062c)/i, /^\u0641/i, /^\u0645/i, /^(\u0622|\u0627)/i, /^\u0645/i, /^(\u0698|\u062c)/i, /^(\u062c|\u0698)/i, /^(\u0622|\u0627)/i, /^\u0633/i, /^\u0627/i, /^\u0646/i, /^\u062f/i],
                        any: [/^\u0698\u0627/i, /^\u0641/i, /^\u0645\u0627/i, /^\u0622\u067e/i, /^(\u0645\u06cc|\u0645\u0647)/i, /^(\u0698\u0648\u0626\u0646|\u062c\u0648\u0646)/i, /^(\u0698\u0648\u0626\u06cc|\u062c\u0648\u0644)/i, /^(\u0627\u0648\u062a|\u0622\u06af)/i, /^\u0633/i, /^(\u0627\u0648\u06a9|\u0627\u06a9)/i, /^\u0646/i, /^\u062f/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u0634\u06cc\u062f\u0633\u0686\u067e\u062c]/i,
                        short: /^(\u0634|\u062c|1\u0634|2\u0634|3\u0634|4\u0634|5\u0634)/i,
                        abbreviated: /^(\u06cc\u06a9\u0634\u0646\u0628\u0647|\u062f\u0648\u0634\u0646\u0628\u0647|\u0633\u0647\u200c\u0634\u0646\u0628\u0647|\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647|\u067e\u0646\u062c\u200c\u0634\u0646\u0628\u0647|\u062c\u0645\u0639\u0647|\u0634\u0646\u0628\u0647)/i,
                        wide: /^(\u06cc\u06a9\u0634\u0646\u0628\u0647|\u062f\u0648\u0634\u0646\u0628\u0647|\u0633\u0647\u200c\u0634\u0646\u0628\u0647|\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647|\u067e\u0646\u062c\u200c\u0634\u0646\u0628\u0647|\u062c\u0645\u0639\u0647|\u0634\u0646\u0628\u0647)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u06cc/i, /^\u062f\u0648/i, /^\u0633/i, /^\u0686/i, /^\u067e/i, /^\u062c/i, /^\u0634/i],
                        any: [/^(\u06cc|1\u0634|\u06cc\u06a9\u0634\u0646\u0628\u0647)/i, /^(\u062f|2\u0634|\u062f\u0648\u0634\u0646\u0628\u0647)/i, /^(\u0633|3\u0634|\u0633\u0647\u200c\u0634\u0646\u0628\u0647)/i, /^(\u0686|4\u0634|\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647)/i, /^(\u067e|5\u0634|\u067e\u0646\u062c\u0634\u0646\u0628\u0647)/i, /^(\u062c|\u062c\u0645\u0639\u0647)/i, /^(\u0634|\u0634\u0646\u0628\u0647)/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(\u0628|\u0642|\u0646|\u0638|\u0635|\u0628.\u0638.|\u0639|\u0634)/i,
                        abbreviated: /^(\u0642.\u0638.|\u0628.\u0638.|\u0646\u06cc\u0645\u0647\u200c\u0634\u0628|\u0638\u0647\u0631|\u0635\u0628\u062d|\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631|\u0639\u0635\u0631|\u0634\u0628)/i,
                        wide: /^(\u0642\u0628\u0644\u200c\u0627\u0632\u0638\u0647\u0631|\u0646\u06cc\u0645\u0647\u200c\u0634\u0628|\u0638\u0647\u0631|\u0635\u0628\u062d|\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631|\u0639\u0635\u0631|\u0634\u0628)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: {
                            am: /^(\u0642|\u0642.\u0638.|\u0642\u0628\u0644\u200c\u0627\u0632\u0638\u0647\u0631)/i,
                            pm: /^(\u0628|\u0628.\u0638.|\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631)/i,
                            midnight: /^(\u200c\u0646\u06cc\u0645\u0647\u200c\u0634\u0628|\u0646)/i,
                            noon: /^(\u0638|\u0638\u0647\u0631)/i,
                            morning: /(\u0635|\u0635\u0628\u062d)/i,
                            afternoon: /(\u0628|\u0628.\u0638.|\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631)/i,
                            evening: /(\u0639|\u0639\u0635\u0631)/i,
                            night: /(\u0634|\u0634\u0628)/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 6,
                firstWeekContainsDate: 1
            }
        };
        function Qt(e) {
            return e.replace(/sekuntia?/, "sekunnin")
        }
        function Ut(e) {
            return e.replace(/minuuttia?/, "minuutin")
        }
        function Zt(e) {
            return e.replace(/tuntia?/, "tunnin")
        }
        function en(e) {
            return e.replace(/(viikko|viikkoa)/, "viikon")
        }
        function tn(e) {
            return e.replace(/(kuukausi|kuukautta)/, "kuukauden")
        }
        function nn(e) {
            return e.replace(/(vuosi|vuotta)/, "vuoden")
        }
        const an = {
            lessThanXSeconds: {
                one: "alle sekunti",
                other: "alle {{count}} sekuntia",
                futureTense: Qt
            },
            xSeconds: {
                one: "sekunti",
                other: "{{count}} sekuntia",
                futureTense: Qt
            },
            halfAMinute: {
                one: "puoli minuuttia",
                other: "puoli minuuttia",
                futureTense: e=>"puolen minuutin"
            },
            lessThanXMinutes: {
                one: "alle minuutti",
                other: "alle {{count}} minuuttia",
                futureTense: Ut
            },
            xMinutes: {
                one: "minuutti",
                other: "{{count}} minuuttia",
                futureTense: Ut
            },
            aboutXHours: {
                one: "noin tunti",
                other: "noin {{count}} tuntia",
                futureTense: Zt
            },
            xHours: {
                one: "tunti",
                other: "{{count}} tuntia",
                futureTense: Zt
            },
            xDays: {
                one: "p\xe4iv\xe4",
                other: "{{count}} p\xe4iv\xe4\xe4",
                futureTense: function(e) {
                    return e.replace(/p\xe4iv\xe4\xe4?/, "p\xe4iv\xe4n")
                }
            },
            aboutXWeeks: {
                one: "noin viikko",
                other: "noin {{count}} viikkoa",
                futureTense: en
            },
            xWeeks: {
                one: "viikko",
                other: "{{count}} viikkoa",
                futureTense: en
            },
            aboutXMonths: {
                one: "noin kuukausi",
                other: "noin {{count}} kuukautta",
                futureTense: tn
            },
            xMonths: {
                one: "kuukausi",
                other: "{{count}} kuukautta",
                futureTense: tn
            },
            aboutXYears: {
                one: "noin vuosi",
                other: "noin {{count}} vuotta",
                futureTense: nn
            },
            xYears: {
                one: "vuosi",
                other: "{{count}} vuotta",
                futureTense: nn
            },
            overXYears: {
                one: "yli vuosi",
                other: "yli {{count}} vuotta",
                futureTense: nn
            },
            almostXYears: {
                one: "l\xe4hes vuosi",
                other: "l\xe4hes {{count}} vuotta",
                futureTense: nn
            }
        }
          , rn = {
            date: r({
                formats: {
                    full: "eeee d. MMMM y",
                    long: "d. MMMM y",
                    medium: "d. MMM y",
                    short: "d.M.y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH.mm.ss zzzz",
                    long: "HH.mm.ss z",
                    medium: "HH.mm.ss",
                    short: "HH.mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'klo' {{time}}",
                    long: "{{date}} 'klo' {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , on = {
            lastWeek: "'viime' eeee 'klo' p",
            yesterday: "'eilen klo' p",
            today: "'t\xe4n\xe4\xe4n klo' p",
            tomorrow: "'huomenna klo' p",
            nextWeek: "'ensi' eeee 'klo' p",
            other: "P"
        }
          , sn = {
            narrow: ["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"],
            abbreviated: ["tammi", "helmi", "maalis", "huhti", "touko", "kes\xe4", "hein\xe4", "elo", "syys", "loka", "marras", "joulu"],
            wide: ["tammikuu", "helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kes\xe4kuu", "hein\xe4kuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"]
        }
          , un = {
            narrow: sn.narrow,
            abbreviated: sn.abbreviated,
            wide: ["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kes\xe4kuuta", "hein\xe4kuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"]
        }
          , dn = {
            narrow: ["S", "M", "T", "K", "T", "P", "L"],
            short: ["su", "ma", "ti", "ke", "to", "pe", "la"],
            abbreviated: ["sunn.", "maan.", "tiis.", "kesk.", "torst.", "perj.", "la"],
            wide: ["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"]
        }
          , ln = {
            narrow: dn.narrow,
            short: dn.short,
            abbreviated: dn.abbreviated,
            wide: ["sunnuntaina", "maanantaina", "tiistaina", "keskiviikkona", "torstaina", "perjantaina", "lauantaina"]
        }
          , cn = {
            code: "fi",
            formatDistance: (e,t,n)=>{
                const a = an[e]
                  , r = 1 === t ? a.one : a.other.replace("{{count}}", String(t));
                return n?.addSuffix ? n.comparison && n.comparison > 0 ? a.futureTense(r) + " kuluttua" : r + " sitten" : r
            }
            ,
            formatLong: rn,
            formatRelative: (e,t,n,a)=>on[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["eaa.", "jaa."],
                        abbreviated: ["eaa.", "jaa."],
                        wide: ["ennen ajanlaskun alkua", "j\xe4lkeen ajanlaskun alun"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["1. kvartaali", "2. kvartaali", "3. kvartaali", "4. kvartaali"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: sn,
                    defaultWidth: "wide",
                    formattingValues: un,
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: dn,
                    defaultWidth: "wide",
                    formattingValues: ln,
                    defaultFormattingWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "ap",
                            pm: "ip",
                            midnight: "keskiy\xf6",
                            noon: "keskip\xe4iv\xe4",
                            morning: "ap",
                            afternoon: "ip",
                            evening: "illalla",
                            night: "y\xf6ll\xe4"
                        },
                        abbreviated: {
                            am: "ap",
                            pm: "ip",
                            midnight: "keskiy\xf6",
                            noon: "keskip\xe4iv\xe4",
                            morning: "ap",
                            afternoon: "ip",
                            evening: "illalla",
                            night: "y\xf6ll\xe4"
                        },
                        wide: {
                            am: "ap",
                            pm: "ip",
                            midnight: "keskiy\xf6ll\xe4",
                            noon: "keskip\xe4iv\xe4ll\xe4",
                            morning: "aamup\xe4iv\xe4ll\xe4",
                            afternoon: "iltap\xe4iv\xe4ll\xe4",
                            evening: "illalla",
                            night: "y\xf6ll\xe4"
                        }
                    },
                    defaultWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\.)/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(e|j)/i,
                        abbreviated: /^(eaa.|jaa.)/i,
                        wide: /^(ennen ajanlaskun alkua|j\xe4lkeen ajanlaskun alun)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^e/i, /^j/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^q[1234]/i,
                        wide: /^[1234]\.? kvartaali/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[thmkeslj]/i,
                        abbreviated: /^(tammi|helmi|maalis|huhti|touko|kes\xe4|hein\xe4|elo|syys|loka|marras|joulu)/i,
                        wide: /^(tammikuu|helmikuu|maaliskuu|huhtikuu|toukokuu|kes\xe4kuu|hein\xe4kuu|elokuu|syyskuu|lokakuu|marraskuu|joulukuu)(ta)?/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^t/i, /^h/i, /^m/i, /^h/i, /^t/i, /^k/i, /^h/i, /^e/i, /^s/i, /^l/i, /^m/i, /^j/i],
                        any: [/^ta/i, /^hel/i, /^maa/i, /^hu/i, /^to/i, /^k/i, /^hei/i, /^e/i, /^s/i, /^l/i, /^mar/i, /^j/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[smtkpl]/i,
                        short: /^(su|ma|ti|ke|to|pe|la)/i,
                        abbreviated: /^(sunn.|maan.|tiis.|kesk.|torst.|perj.|la)/i,
                        wide: /^(sunnuntai|maanantai|tiistai|keskiviikko|torstai|perjantai|lauantai)(na)?/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^s/i, /^m/i, /^t/i, /^k/i, /^t/i, /^p/i, /^l/i],
                        any: [/^s/i, /^m/i, /^ti/i, /^k/i, /^to/i, /^p/i, /^l/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(ap|ip|keskiy\xf6|keskip\xe4iv\xe4|aamup\xe4iv\xe4ll\xe4|iltap\xe4iv\xe4ll\xe4|illalla|y\xf6ll\xe4)/i,
                        any: /^(ap|ip|keskiy\xf6ll\xe4|keskip\xe4iv\xe4ll\xe4|aamup\xe4iv\xe4ll\xe4|iltap\xe4iv\xe4ll\xe4|illalla|y\xf6ll\xe4)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^ap/i,
                            pm: /^ip/i,
                            midnight: /^keskiy\xf6/i,
                            noon: /^keskip\xe4iv\xe4/i,
                            morning: /aamup\xe4iv\xe4ll\xe4/i,
                            afternoon: /iltap\xe4iv\xe4ll\xe4/i,
                            evening: /illalla/i,
                            night: /y\xf6ll\xe4/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const mn = {
            lessThanXSeconds: {
                one: "moins d\u2019une seconde",
                other: "moins de {{count}} secondes"
            },
            xSeconds: {
                one: "1 seconde",
                other: "{{count}} secondes"
            },
            halfAMinute: "30 secondes",
            lessThanXMinutes: {
                one: "moins d\u2019une minute",
                other: "moins de {{count}} minutes"
            },
            xMinutes: {
                one: "1 minute",
                other: "{{count}} minutes"
            },
            aboutXHours: {
                one: "environ 1 heure",
                other: "environ {{count}} heures"
            },
            xHours: {
                one: "1 heure",
                other: "{{count}} heures"
            },
            xDays: {
                one: "1 jour",
                other: "{{count}} jours"
            },
            aboutXWeeks: {
                one: "environ 1 semaine",
                other: "environ {{count}} semaines"
            },
            xWeeks: {
                one: "1 semaine",
                other: "{{count}} semaines"
            },
            aboutXMonths: {
                one: "environ 1 mois",
                other: "environ {{count}} mois"
            },
            xMonths: {
                one: "1 mois",
                other: "{{count}} mois"
            },
            aboutXYears: {
                one: "environ 1 an",
                other: "environ {{count}} ans"
            },
            xYears: {
                one: "1 an",
                other: "{{count}} ans"
            },
            overXYears: {
                one: "plus d\u2019un an",
                other: "plus de {{count}} ans"
            },
            almostXYears: {
                one: "presqu\u2019un an",
                other: "presque {{count}} ans"
            }
        }
          , hn = (e,t,n)=>{
            let a;
            const r = mn[e];
            return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
            n?.addSuffix ? n.comparison && n.comparison > 0 ? "dans " + a : "il y a " + a : a
        }
          , fn = {
            date: r({
                formats: {
                    full: "EEEE d MMMM y",
                    long: "d MMMM y",
                    medium: "d MMM y",
                    short: "dd/MM/y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\xe0' {{time}}",
                    long: "{{date}} '\xe0' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , pn = {
            lastWeek: "eeee 'dernier \xe0' p",
            yesterday: "'hier \xe0' p",
            today: "'aujourd\u2019hui \xe0' p",
            tomorrow: "'demain \xe0' p'",
            nextWeek: "eeee 'prochain \xe0' p",
            other: "P"
        }
          , gn = (e,t,n,a)=>pn[e]
          , vn = ["MMM", "MMMM"]
          , wn = {
            preprocessor: (e,t)=>{
                if (1 === e.getDate())
                    return t;
                return t.some((e=>e.isToken && vn.includes(e.value))) ? t.map((e=>e.isToken && "do" === e.value ? {
                    isToken: !0,
                    value: "d"
                } : e)) : t
            }
            ,
            ordinalNumber: (e,t)=>{
                const n = Number(e)
                  , a = t?.unit;
                if (0 === n)
                    return "0";
                let r;
                return r = 1 === n ? a && ["year", "week", "hour", "minute", "second"].includes(a) ? "\xe8re" : "er" : "\xe8me",
                n + r
            }
            ,
            era: s({
                values: {
                    narrow: ["av. J.-C", "ap. J.-C"],
                    abbreviated: ["av. J.-C", "ap. J.-C"],
                    wide: ["avant J\xe9sus-Christ", "apr\xe8s J\xe9sus-Christ"]
                },
                defaultWidth: "wide"
            }),
            quarter: s({
                values: {
                    narrow: ["T1", "T2", "T3", "T4"],
                    abbreviated: ["1er trim.", "2\xe8me trim.", "3\xe8me trim.", "4\xe8me trim."],
                    wide: ["1er trimestre", "2\xe8me trimestre", "3\xe8me trimestre", "4\xe8me trimestre"]
                },
                defaultWidth: "wide",
                argumentCallback: e=>e - 1
            }),
            month: s({
                values: {
                    narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                    abbreviated: ["janv.", "f\xe9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\xfbt", "sept.", "oct.", "nov.", "d\xe9c."],
                    wide: ["janvier", "f\xe9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\xfbt", "septembre", "octobre", "novembre", "d\xe9cembre"]
                },
                defaultWidth: "wide"
            }),
            day: s({
                values: {
                    narrow: ["D", "L", "M", "M", "J", "V", "S"],
                    short: ["di", "lu", "ma", "me", "je", "ve", "sa"],
                    abbreviated: ["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."],
                    wide: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"]
                },
                defaultWidth: "wide"
            }),
            dayPeriod: s({
                values: {
                    narrow: {
                        am: "AM",
                        pm: "PM",
                        midnight: "minuit",
                        noon: "midi",
                        morning: "mat.",
                        afternoon: "ap.m.",
                        evening: "soir",
                        night: "mat."
                    },
                    abbreviated: {
                        am: "AM",
                        pm: "PM",
                        midnight: "minuit",
                        noon: "midi",
                        morning: "matin",
                        afternoon: "apr\xe8s-midi",
                        evening: "soir",
                        night: "matin"
                    },
                    wide: {
                        am: "AM",
                        pm: "PM",
                        midnight: "minuit",
                        noon: "midi",
                        morning: "du matin",
                        afternoon: "de l\u2019apr\xe8s-midi",
                        evening: "du soir",
                        night: "du matin"
                    }
                },
                defaultWidth: "wide"
            })
        }
          , bn = {
            ordinalNumber: d({
                matchPattern: /^(\d+)(i\xe8me|\xe8re|\xe8me|er|e)?/i,
                parsePattern: /\d+/i,
                valueCallback: e=>parseInt(e)
            }),
            era: u({
                matchPatterns: {
                    narrow: /^(av\.J\.C|ap\.J\.C|ap\.J\.-C)/i,
                    abbreviated: /^(av\.J\.-C|av\.J-C|apr\.J\.-C|apr\.J-C|ap\.J-C)/i,
                    wide: /^(avant J\xe9sus-Christ|apr\xe8s J\xe9sus-Christ)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    any: [/^av/i, /^ap/i]
                },
                defaultParseWidth: "any"
            }),
            quarter: u({
                matchPatterns: {
                    narrow: /^T?[1234]/i,
                    abbreviated: /^[1234](er|\xe8me|e)? trim\.?/i,
                    wide: /^[1234](er|\xe8me|e)? trimestre/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    any: [/1/i, /2/i, /3/i, /4/i]
                },
                defaultParseWidth: "any",
                valueCallback: e=>e + 1
            }),
            month: u({
                matchPatterns: {
                    narrow: /^[jfmasond]/i,
                    abbreviated: /^(janv|f\xe9vr|mars|avr|mai|juin|juill|juil|ao\xfbt|sept|oct|nov|d\xe9c)\.?/i,
                    wide: /^(janvier|f\xe9vrier|mars|avril|mai|juin|juillet|ao\xfbt|septembre|octobre|novembre|d\xe9cembre)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                    any: [/^ja/i, /^f/i, /^mar/i, /^av/i, /^ma/i, /^juin/i, /^juil/i, /^ao/i, /^s/i, /^o/i, /^n/i, /^d/i]
                },
                defaultParseWidth: "any"
            }),
            day: u({
                matchPatterns: {
                    narrow: /^[lmjvsd]/i,
                    short: /^(di|lu|ma|me|je|ve|sa)/i,
                    abbreviated: /^(dim|lun|mar|mer|jeu|ven|sam)\.?/i,
                    wide: /^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],
                    any: [/^di/i, /^lu/i, /^ma/i, /^me/i, /^je/i, /^ve/i, /^sa/i]
                },
                defaultParseWidth: "any"
            }),
            dayPeriod: u({
                matchPatterns: {
                    narrow: /^(a|p|minuit|midi|mat\.?|ap\.?m\.?|soir|nuit)/i,
                    any: /^([ap]\.?\s?m\.?|du matin|de l'apr\xe8s[-\s]midi|du soir|de la nuit)/i
                },
                defaultMatchWidth: "any",
                parsePatterns: {
                    any: {
                        am: /^a/i,
                        pm: /^p/i,
                        midnight: /^min/i,
                        noon: /^mid/i,
                        morning: /mat/i,
                        afternoon: /ap/i,
                        evening: /soir/i,
                        night: /nuit/i
                    }
                },
                defaultParseWidth: "any"
            })
        }
          , yn = {
            code: "fr",
            formatDistance: hn,
            formatLong: fn,
            formatRelative: gn,
            localize: wn,
            match: bn,
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const kn = {
            code: "fr-CA",
            formatDistance: hn,
            formatLong: {
                date: r({
                    formats: {
                        full: "EEEE d MMMM y",
                        long: "d MMMM y",
                        medium: "d MMM y",
                        short: "yy-MM-dd"
                    },
                    defaultWidth: "full"
                }),
                time: r({
                    formats: {
                        full: "HH:mm:ss zzzz",
                        long: "HH:mm:ss z",
                        medium: "HH:mm:ss",
                        short: "HH:mm"
                    },
                    defaultWidth: "full"
                }),
                dateTime: r({
                    formats: {
                        full: "{{date}} '\xe0' {{time}}",
                        long: "{{date}} '\xe0' {{time}}",
                        medium: "{{date}}, {{time}}",
                        short: "{{date}}, {{time}}"
                    },
                    defaultWidth: "full"
                })
            },
            formatRelative: gn,
            localize: wn,
            match: bn,
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const Mn = {
            date: r({
                formats: {
                    full: "EEEE d MMMM y",
                    long: "d MMMM y",
                    medium: "d MMM y",
                    short: "dd.MM.y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\xe0' {{time}}",
                    long: "{{date}} '\xe0' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Pn = {
            lastWeek: "eeee 'la semaine derni\xe8re \xe0' p",
            yesterday: "'hier \xe0' p",
            today: "'aujourd\u2019hui \xe0' p",
            tomorrow: "'demain \xe0' p'",
            nextWeek: "eeee 'la semaine prochaine \xe0' p",
            other: "P"
        }
          , Wn = {
            code: "fr-CH",
            formatDistance: hn,
            formatLong: Mn,
            formatRelative: (e,t,n,a)=>Pn[e],
            localize: wn,
            match: bn,
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const xn = {
            lessThanXSeconds: {
                one: "minder as 1 sekonde",
                other: "minder as {{count}} sekonden"
            },
            xSeconds: {
                one: "1 sekonde",
                other: "{{count}} sekonden"
            },
            halfAMinute: "oardel min\xfat",
            lessThanXMinutes: {
                one: "minder as 1 min\xfat",
                other: "minder as {{count}} minuten"
            },
            xMinutes: {
                one: "1 min\xfat",
                other: "{{count}} minuten"
            },
            aboutXHours: {
                one: "sawat 1 oere",
                other: "sawat {{count}} oere"
            },
            xHours: {
                one: "1 oere",
                other: "{{count}} oere"
            },
            xDays: {
                one: "1 dei",
                other: "{{count}} dagen"
            },
            aboutXWeeks: {
                one: "sawat 1 wike",
                other: "sawat {{count}} wiken"
            },
            xWeeks: {
                one: "1 wike",
                other: "{{count}} wiken"
            },
            aboutXMonths: {
                one: "sawat 1 moanne",
                other: "sawat {{count}} moannen"
            },
            xMonths: {
                one: "1 moanne",
                other: "{{count}} moannen"
            },
            aboutXYears: {
                one: "sawat 1 jier",
                other: "sawat {{count}} jier"
            },
            xYears: {
                one: "1 jier",
                other: "{{count}} jier"
            },
            overXYears: {
                one: "mear as 1 jier",
                other: "mear as {{count}}s jier"
            },
            almostXYears: {
                one: "hast 1 jier",
                other: "hast {{count}} jier"
            }
        }
          , Sn = {
            date: r({
                formats: {
                    full: "EEEE d MMMM y",
                    long: "d MMMM y",
                    medium: "d MMM y",
                    short: "dd-MM-y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'om' {{time}}",
                    long: "{{date}} 'om' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Dn = {
            lastWeek: "'\xf4fr\xfbne' eeee 'om' p",
            yesterday: "'juster om' p",
            today: "'hjoed om' p",
            tomorrow: "'moarn om' p",
            nextWeek: "eeee 'om' p",
            other: "P"
        }
          , jn = {
            code: "fy",
            formatDistance: (e,t,n)=>{
                let a;
                const r = xn[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "oer " + a : a + " lyn" : a
            }
            ,
            formatLong: Sn,
            formatRelative: (e,t,n,a)=>Dn[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + "e",
                era: s({
                    values: {
                        narrow: ["f.K.", "n.K."],
                        abbreviated: ["f.Kr.", "n.Kr."],
                        wide: ["foar Kristus", "nei Kristus"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["K1", "K2", "K3", "K4"],
                        wide: ["1e fearnsjier", "2e fearnsjier", "3e fearnsjier", "4e fearnsjier"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
                        abbreviated: ["jan.", "feb.", "mrt.", "apr.", "mai.", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des."],
                        wide: ["jannewaris", "febrewaris", "maart", "april", "maaie", "juny", "july", "augustus", "septimber", "oktober", "novimber", "desimber"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["s", "m", "t", "w", "t", "f", "s"],
                        short: ["si", "mo", "ti", "wo", "to", "fr", "so"],
                        abbreviated: ["snein", "moa", "tii", "woa", "ton", "fre", "sneon"],
                        wide: ["snein", "moandei", "tiisdei", "woansdei", "tongersdei", "freed", "sneon"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "middernacht",
                            noon: "middei",
                            morning: "moarns",
                            afternoon: "middeis",
                            evening: "j\xfbns",
                            night: "nachts"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "middernacht",
                            noon: "middei",
                            morning: "moarns",
                            afternoon: "middeis",
                            evening: "j\xfbns",
                            night: "nachts"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "middernacht",
                            noon: "middei",
                            morning: "moarns",
                            afternoon: "middeis",
                            evening: "j\xfbns",
                            night: "nachts"
                        }
                    },
                    defaultWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)e?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^([fn]\.? ?K\.?)/,
                        abbreviated: /^([fn]\. ?Kr\.?)/,
                        wide: /^((foar|nei) Kristus)/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^f/, /^n/]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^K[1234]/i,
                        wide: /^[1234]e fearnsjier/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(jan.|feb.|mrt.|apr.|mai.|jun.|jul.|aug.|sep.|okt.|nov.|des.)/i,
                        wide: /^(jannewaris|febrewaris|maart|april|maaie|juny|july|augustus|septimber|oktober|novimber|desimber)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^jan/i, /^feb/i, /^m(r|a)/i, /^apr/i, /^mai/i, /^jun/i, /^jul/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^des/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[smtwf]/i,
                        short: /^(si|mo|ti|wo|to|fr|so)/i,
                        abbreviated: /^(snein|moa|tii|woa|ton|fre|sneon)/i,
                        wide: /^(snein|moandei|tiisdei|woansdei|tongersdei|freed|sneon)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
                        any: [/^sn/i, /^mo/i, /^ti/i, /^wo/i, /^to/i, /^fr/i, /^sn/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(am|pm|middernacht|middeis|moarns|middei|j\xfbns|nachts)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^am/i,
                            pm: /^pm/i,
                            midnight: /^middernacht/i,
                            noon: /^middei/i,
                            morning: /moarns/i,
                            afternoon: /^middeis/i,
                            evening: /j\xfbns/i,
                            night: /nachts/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Cn = {
            lessThanXSeconds: {
                one: "nas lugha na diog",
                other: "nas lugha na {{count}} diogan"
            },
            xSeconds: {
                one: "1 diog",
                two: "2 dhiog",
                twenty: "20 diog",
                other: "{{count}} diogan"
            },
            halfAMinute: "leth mhionaid",
            lessThanXMinutes: {
                one: "nas lugha na mionaid",
                other: "nas lugha na {{count}} mionaidean"
            },
            xMinutes: {
                one: "1 mionaid",
                two: "2 mhionaid",
                twenty: "20 mionaid",
                other: "{{count}} mionaidean"
            },
            aboutXHours: {
                one: "mu uair de th\xecde",
                other: "mu {{count}} uairean de th\xecde"
            },
            xHours: {
                one: "1 uair de th\xecde",
                two: "2 uair de th\xecde",
                twenty: "20 uair de th\xecde",
                other: "{{count}} uairean de th\xecde"
            },
            xDays: {
                one: "1 l\xe0",
                other: "{{count}} l\xe0"
            },
            aboutXWeeks: {
                one: "mu 1 seachdain",
                other: "mu {{count}} seachdainean"
            },
            xWeeks: {
                one: "1 seachdain",
                other: "{{count}} seachdainean"
            },
            aboutXMonths: {
                one: "mu mh\xecos",
                other: "mu {{count}} m\xecosan"
            },
            xMonths: {
                one: "1 m\xecos",
                other: "{{count}} m\xecosan"
            },
            aboutXYears: {
                one: "mu bhliadhna",
                other: "mu {{count}} bliadhnaichean"
            },
            xYears: {
                one: "1 bhliadhna",
                other: "{{count}} bliadhna"
            },
            overXYears: {
                one: "c\xf2rr is bliadhna",
                other: "c\xf2rr is {{count}} bliadhnaichean"
            },
            almostXYears: {
                one: "cha mh\xf2r bliadhna",
                other: "cha mh\xf2r {{count}} bliadhnaichean"
            }
        }
          , Tn = {
            date: r({
                formats: {
                    full: "EEEE, MMMM do, y",
                    long: "MMMM do, y",
                    medium: "MMM d, y",
                    short: "MM/dd/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'aig' {{time}}",
                    long: "{{date}} 'aig' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , En = {
            lastWeek: "'mu dheireadh' eeee 'aig' p",
            yesterday: "'an-d\xe8 aig' p",
            today: "'an-diugh aig' p",
            tomorrow: "'a-m\xe0ireach aig' p",
            nextWeek: "eeee 'aig' p",
            other: "P"
        }
          , Nn = {
            code: "gd",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Cn[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : 2 === t && r.two ? r.two : 20 === t && r.twenty ? r.twenty : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "ann an " + a : "o chionn " + a : a
            }
            ,
            formatLong: Tn,
            formatRelative: (e,t,n,a)=>En[e],
            localize: {
                ordinalNumber: e=>{
                    const t = Number(e)
                      , n = t % 100;
                    if (n > 20 || n < 10)
                        switch (n % 10) {
                        case 1:
                            return t + "d";
                        case 2:
                            return t + "na"
                        }
                    return 12 === n ? t + "na" : t + "mh"
                }
                ,
                era: s({
                    values: {
                        narrow: ["R", "A"],
                        abbreviated: ["RC", "AD"],
                        wide: ["ro Chr\xecosta", "anno domini"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["C1", "C2", "C3", "C4"],
                        wide: ["a' chiad chairteal", "an d\xe0rna cairteal", "an treas cairteal", "an ceathramh cairteal"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["F", "G", "M", "G", "C", "\xd2", "I", "L", "S", "D", "S", "D"],
                        abbreviated: ["Faoi", "Gear", "M\xe0rt", "Gibl", "C\xe8it", "\xd2gmh", "Iuch", "L\xf9n", "Sult", "D\xe0mh", "Samh", "D\xf9bh"],
                        wide: ["Am Faoilleach", "An Gearran", "Am M\xe0rt", "An Giblean", "An C\xe8itean", "An t-\xd2gmhios", "An t-Iuchar", "An L\xf9nastal", "An t-Sultain", "An D\xe0mhair", "An t-Samhain", "An D\xf9bhlachd"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["D", "L", "M", "C", "A", "H", "S"],
                        short: ["D\xf2", "Lu", "M\xe0", "Ci", "Ar", "Ha", "Sa"],
                        abbreviated: ["Did", "Dil", "Dim", "Dic", "Dia", "Dih", "Dis"],
                        wide: ["Did\xf2mhnaich", "Diluain", "Dim\xe0irt", "Diciadain", "Diardaoin", "Dihaoine", "Disathairne"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "m",
                            pm: "f",
                            midnight: "m.o.",
                            noon: "m.l.",
                            morning: "madainn",
                            afternoon: "feasgar",
                            evening: "feasgar",
                            night: "oidhche"
                        },
                        abbreviated: {
                            am: "M.",
                            pm: "F.",
                            midnight: "meadhan oidhche",
                            noon: "meadhan l\xe0",
                            morning: "madainn",
                            afternoon: "feasgar",
                            evening: "feasgar",
                            night: "oidhche"
                        },
                        wide: {
                            am: "m.",
                            pm: "f.",
                            midnight: "meadhan oidhche",
                            noon: "meadhan l\xe0",
                            morning: "madainn",
                            afternoon: "feasgar",
                            evening: "feasgar",
                            night: "oidhche"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "m",
                            pm: "f",
                            midnight: "m.o.",
                            noon: "m.l.",
                            morning: "sa mhadainn",
                            afternoon: "feasgar",
                            evening: "feasgar",
                            night: "air an oidhche"
                        },
                        abbreviated: {
                            am: "M.",
                            pm: "F.",
                            midnight: "meadhan oidhche",
                            noon: "meadhan l\xe0",
                            morning: "sa mhadainn",
                            afternoon: "feasgar",
                            evening: "feasgar",
                            night: "air an oidhche"
                        },
                        wide: {
                            am: "m.",
                            pm: "f.",
                            midnight: "meadhan oidhche",
                            noon: "meadhan l\xe0",
                            morning: "sa mhadainn",
                            afternoon: "feasgar",
                            evening: "feasgar",
                            night: "air an oidhche"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(d|na|tr|mh)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(r|a)/i,
                        abbreviated: /^(r\.?\s?c\.?|r\.?\s?a\.?\s?c\.?|a\.?\s?d\.?|a\.?\s?c\.?)/i,
                        wide: /^(ro Chr\xecosta|ron aois choitchinn|anno domini|aois choitcheann)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^b/i, /^(a|c)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^c[1234]/i,
                        wide: /^[1234](cd|na|tr|mh)? cairteal/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[fgmc\xf2ilsd]/i,
                        abbreviated: /^(faoi|gear|m\xe0rt|gibl|c\xe8it|\xf2gmh|iuch|l\xf9n|sult|d\xe0mh|samh|d\xf9bh)/i,
                        wide: /^(am faoilleach|an gearran|am m\xe0rt|an giblean|an c\xe8itean|an t-\xd2gmhios|an t-Iuchar|an l\xf9nastal|an t-Sultain|an d\xe0mhair|an t-Samhain|an d\xf9bhlachd)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^f/i, /^g/i, /^m/i, /^g/i, /^c/i, /^\xf2/i, /^i/i, /^l/i, /^s/i, /^d/i, /^s/i, /^d/i],
                        any: [/^fa/i, /^ge/i, /^m\xe0/i, /^gi/i, /^c/i, /^\xf2/i, /^i/i, /^l/i, /^su/i, /^d/i, /^sa/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[dlmcahs]/i,
                        short: /^(d\xf2|lu|m\xe0|ci|ar|ha|sa)/i,
                        abbreviated: /^(did|dil|dim|dic|dia|dih|dis)/i,
                        wide: /^(did\xf2mhnaich|diluain|dim\xe0irt|diciadain|diardaoin|dihaoine|disathairne)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^d/i, /^l/i, /^m/i, /^c/i, /^a/i, /^h/i, /^s/i],
                        any: [/^d/i, /^l/i, /^m/i, /^c/i, /^a/i, /^h/i, /^s/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|mi|n|(san|aig) (madainn|feasgar|feasgar|oidhche))/i,
                        any: /^([ap]\.?\s?m\.?|meadhan oidhche|meadhan l\xe0|(san|aig) (madainn|feasgar|feasgar|oidhche))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^m/i,
                            pm: /^f/i,
                            midnight: /^meadhan oidhche/i,
                            noon: /^meadhan l\xe0/i,
                            morning: /sa mhadainn/i,
                            afternoon: /feasgar/i,
                            evening: /feasgar/i,
                            night: /air an oidhche/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const zn = {
            lessThanXSeconds: {
                one: "menos dun segundo",
                other: "menos de {{count}} segundos"
            },
            xSeconds: {
                one: "1 segundo",
                other: "{{count}} segundos"
            },
            halfAMinute: "medio minuto",
            lessThanXMinutes: {
                one: "menos dun minuto",
                other: "menos de {{count}} minutos"
            },
            xMinutes: {
                one: "1 minuto",
                other: "{{count}} minutos"
            },
            aboutXHours: {
                one: "arredor dunha hora",
                other: "arredor de {{count}} horas"
            },
            xHours: {
                one: "1 hora",
                other: "{{count}} horas"
            },
            xDays: {
                one: "1 d\xeda",
                other: "{{count}} d\xedas"
            },
            aboutXWeeks: {
                one: "arredor dunha semana",
                other: "arredor de {{count}} semanas"
            },
            xWeeks: {
                one: "1 semana",
                other: "{{count}} semanas"
            },
            aboutXMonths: {
                one: "arredor de 1 mes",
                other: "arredor de {{count}} meses"
            },
            xMonths: {
                one: "1 mes",
                other: "{{count}} meses"
            },
            aboutXYears: {
                one: "arredor dun ano",
                other: "arredor de {{count}} anos"
            },
            xYears: {
                one: "1 ano",
                other: "{{count}} anos"
            },
            overXYears: {
                one: "m\xe1is dun ano",
                other: "m\xe1is de {{count}} anos"
            },
            almostXYears: {
                one: "case un ano",
                other: "case {{count}} anos"
            }
        }
          , In = {
            date: r({
                formats: {
                    full: "EEEE, d 'de' MMMM y",
                    long: "d 'de' MMMM y",
                    medium: "d MMM y",
                    short: "dd/MM/y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\xe1s' {{time}}",
                    long: "{{date}} '\xe1s' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , On = {
            lastWeek: "'o' eeee 'pasado \xe1' LT",
            yesterday: "'onte \xe1' p",
            today: "'hoxe \xe1' p",
            tomorrow: "'ma\xf1\xe1 \xe1' p",
            nextWeek: "eeee '\xe1' p",
            other: "P"
        }
          , Hn = {
            lastWeek: "'o' eeee 'pasado \xe1s' p",
            yesterday: "'onte \xe1s' p",
            today: "'hoxe \xe1s' p",
            tomorrow: "'ma\xf1\xe1 \xe1s' p",
            nextWeek: "eeee '\xe1s' p",
            other: "P"
        }
          , An = {
            code: "gl",
            formatDistance: (e,t,n)=>{
                let a;
                const r = zn[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "en " + a : "hai " + a : a
            }
            ,
            formatLong: In,
            formatRelative: (e,t,n,a)=>1 !== t.getHours() ? Hn[e] : On[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + "\xba",
                era: s({
                    values: {
                        narrow: ["AC", "DC"],
                        abbreviated: ["AC", "DC"],
                        wide: ["antes de cristo", "despois de cristo"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["T1", "T2", "T3", "T4"],
                        wide: ["1\xba trimestre", "2\xba trimestre", "3\xba trimestre", "4\xba trimestre"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["e", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
                        abbreviated: ["xan", "feb", "mar", "abr", "mai", "xun", "xul", "ago", "set", "out", "nov", "dec"],
                        wide: ["xaneiro", "febreiro", "marzo", "abril", "maio", "xu\xf1o", "xullo", "agosto", "setembro", "outubro", "novembro", "decembro"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["d", "l", "m", "m", "j", "v", "s"],
                        short: ["do", "lu", "ma", "me", "xo", "ve", "sa"],
                        abbreviated: ["dom", "lun", "mar", "mer", "xov", "ven", "sab"],
                        wide: ["domingo", "luns", "martes", "m\xe9rcores", "xoves", "venres", "s\xe1bado"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "mn",
                            noon: "md",
                            morning: "ma\xf1\xe1",
                            afternoon: "tarde",
                            evening: "tarde",
                            night: "noite"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "medianoite",
                            noon: "mediod\xeda",
                            morning: "ma\xf1\xe1",
                            afternoon: "tarde",
                            evening: "tardi\xf1a",
                            night: "noite"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "medianoite",
                            noon: "mediod\xeda",
                            morning: "ma\xf1\xe1",
                            afternoon: "tarde",
                            evening: "tardi\xf1a",
                            night: "noite"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "mn",
                            noon: "md",
                            morning: "da ma\xf1\xe1",
                            afternoon: "da tarde",
                            evening: "da tardi\xf1a",
                            night: "da noite"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "medianoite",
                            noon: "mediod\xeda",
                            morning: "da ma\xf1\xe1",
                            afternoon: "da tarde",
                            evening: "da tardi\xf1a",
                            night: "da noite"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "medianoite",
                            noon: "mediod\xeda",
                            morning: "da ma\xf1\xe1",
                            afternoon: "da tarde",
                            evening: "da tardi\xf1a",
                            night: "da noite"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\xba)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(ac|dc|a|d)/i,
                        abbreviated: /^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i,
                        wide: /^(antes de cristo|antes da era com[u\xfa]n|despois de cristo|era com[u\xfa]n)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^ac/i, /^dc/i],
                        wide: [/^(antes de cristo|antes da era com[u\xfa]n)/i, /^(despois de cristo|era com[u\xfa]n)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^T[1234]/i,
                        wide: /^[1234](\xba)? trimestre/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[xfmasond]/i,
                        abbreviated: /^(xan|feb|mar|abr|mai|xun|xul|ago|set|out|nov|dec)/i,
                        wide: /^(xaneiro|febreiro|marzo|abril|maio|xu\xf1o|xullo|agosto|setembro|outubro|novembro|decembro)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^x/i, /^f/i, /^m/i, /^a/i, /^m/i, /^x/i, /^x/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xun/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[dlmxvs]/i,
                        short: /^(do|lu|ma|me|xo|ve|sa)/i,
                        abbreviated: /^(dom|lun|mar|mer|xov|ven|sab)/i,
                        wide: /^(domingo|luns|martes|m[e\xe9]rcores|xoves|venres|s[\xe1a]bado)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^x/i, /^v/i, /^s/i],
                        any: [/^do/i, /^lu/i, /^ma/i, /^me/i, /^xo/i, /^ve/i, /^sa/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|mn|md|(da|[a\xe1]s) (ma\xf1[a\xe1]|tarde|noite))/i,
                        any: /^([ap]\.?\s?m\.?|medianoite|mediod[i\xed]a|(da|[a\xe1]s) (ma\xf1[a\xe1]|tarde|noite))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^mn/i,
                            noon: /^md/i,
                            morning: /ma\xf1[a\xe1]/i,
                            afternoon: /tarde/i,
                            evening: /tardi\xf1a/i,
                            night: /noite/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const Yn = {
            lessThanXSeconds: {
                one: "\u0ab9\u0aae\u0aa3\u0abe\u0a82",
                other: "\u200b\u0a86\u0ab6\u0ab0\u0ac7 {{count}} \u0ab8\u0ac7\u0a95\u0a82\u0aa1"
            },
            xSeconds: {
                one: "1 \u0ab8\u0ac7\u0a95\u0a82\u0aa1",
                other: "{{count}} \u0ab8\u0ac7\u0a95\u0a82\u0aa1"
            },
            halfAMinute: "\u0a85\u0aa1\u0aa7\u0ac0 \u0aae\u0abf\u0aa8\u0abf\u0a9f",
            lessThanXMinutes: {
                one: "\u0a86 \u0aae\u0abf\u0aa8\u0abf\u0a9f",
                other: "\u200b\u0a86\u0ab6\u0ab0\u0ac7 {{count}} \u0aae\u0abf\u0aa8\u0abf\u0a9f"
            },
            xMinutes: {
                one: "1 \u0aae\u0abf\u0aa8\u0abf\u0a9f",
                other: "{{count}} \u0aae\u0abf\u0aa8\u0abf\u0a9f"
            },
            aboutXHours: {
                one: "\u200b\u0a86\u0ab6\u0ab0\u0ac7 1 \u0a95\u0ab2\u0abe\u0a95",
                other: "\u200b\u0a86\u0ab6\u0ab0\u0ac7 {{count}} \u0a95\u0ab2\u0abe\u0a95"
            },
            xHours: {
                one: "1 \u0a95\u0ab2\u0abe\u0a95",
                other: "{{count}} \u0a95\u0ab2\u0abe\u0a95"
            },
            xDays: {
                one: "1 \u0aa6\u0abf\u0ab5\u0ab8",
                other: "{{count}} \u0aa6\u0abf\u0ab5\u0ab8"
            },
            aboutXWeeks: {
                one: "\u0a86\u0ab6\u0ab0\u0ac7 1 \u0a85\u0aa0\u0ab5\u0abe\u0aa1\u0abf\u0aaf\u0ac1\u0a82",
                other: "\u0a86\u0ab6\u0ab0\u0ac7 {{count}} \u0a85\u0aa0\u0ab5\u0abe\u0aa1\u0abf\u0aaf\u0abe"
            },
            xWeeks: {
                one: "1 \u0a85\u0aa0\u0ab5\u0abe\u0aa1\u0abf\u0aaf\u0ac1\u0a82",
                other: "{{count}} \u0a85\u0aa0\u0ab5\u0abe\u0aa1\u0abf\u0aaf\u0abe"
            },
            aboutXMonths: {
                one: "\u0a86\u0ab6\u0ab0\u0ac7 1 \u0aae\u0ab9\u0abf\u0aa8\u0acb",
                other: "\u0a86\u0ab6\u0ab0\u0ac7 {{count}} \u0aae\u0ab9\u0abf\u0aa8\u0abe"
            },
            xMonths: {
                one: "1 \u0aae\u0ab9\u0abf\u0aa8\u0acb",
                other: "{{count}} \u0aae\u0ab9\u0abf\u0aa8\u0abe"
            },
            aboutXYears: {
                one: "\u0a86\u0ab6\u0ab0\u0ac7 1 \u0ab5\u0ab0\u0acd\u0ab7",
                other: "\u0a86\u0ab6\u0ab0\u0ac7 {{count}} \u0ab5\u0ab0\u0acd\u0ab7"
            },
            xYears: {
                one: "1 \u0ab5\u0ab0\u0acd\u0ab7",
                other: "{{count}} \u0ab5\u0ab0\u0acd\u0ab7"
            },
            overXYears: {
                one: "1 \u0ab5\u0ab0\u0acd\u0ab7\u0aa5\u0ac0 \u0ab5\u0aa7\u0ac1",
                other: "{{count}} \u0ab5\u0ab0\u0acd\u0ab7\u0aa5\u0ac0 \u0ab5\u0aa7\u0ac1"
            },
            almostXYears: {
                one: "\u0ab2\u0a97\u0aad\u0a97 1 \u0ab5\u0ab0\u0acd\u0ab7",
                other: "\u0ab2\u0a97\u0aad\u0a97 {{count}} \u0ab5\u0ab0\u0acd\u0ab7"
            }
        }
          , _n = {
            date: r({
                formats: {
                    full: "EEEE, d MMMM, y",
                    long: "d MMMM, y",
                    medium: "d MMM, y",
                    short: "d/M/yy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "hh:mm:ss a zzzz",
                    long: "hh:mm:ss a z",
                    medium: "hh:mm:ss a",
                    short: "hh:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Xn = {
            lastWeek: "'\u0aaa\u0abe\u0a9b\u0ab2\u0abe' eeee p",
            yesterday: "'\u0a97\u0a88\u0a95\u0abe\u0ab2\u0ac7' p",
            today: "'\u0a86\u0a9c\u0ac7' p",
            tomorrow: "'\u0a86\u0ab5\u0aa4\u0ac0\u0a95\u0abe\u0ab2\u0ac7' p",
            nextWeek: "eeee p",
            other: "P"
        }
          , Rn = {
            code: "gu",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Yn[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? a + "\u0aae\u0abe\u0a82" : a + " \u0aaa\u0ab9\u0ac7\u0ab2\u0abe\u0a82" : a
            }
            ,
            formatLong: _n,
            formatRelative: (e,t,n,a)=>Xn[e],
            localize: {
                ordinalNumber: (e,t)=>String(e),
                era: s({
                    values: {
                        narrow: ["\u0a88\u0ab8\u0aaa\u0ac2", "\u0a88\u0ab8"],
                        abbreviated: ["\u0a88.\u0ab8.\u0aaa\u0ac2\u0ab0\u0acd\u0ab5\u0ac7", "\u0a88.\u0ab8."],
                        wide: ["\u0a88\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8 \u0aaa\u0ac2\u0ab0\u0acd\u0ab5\u0ac7", "\u0a88\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["1\u0ab2\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "2\u0a9c\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "3\u0a9c\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "4\u0aa5\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u0a9c\u0abe", "\u0aab\u0ac7", "\u0aae\u0abe", "\u0a8f", "\u0aae\u0ac7", "\u0a9c\u0ac2", "\u0a9c\u0ac1", "\u0a93", "\u0ab8", "\u0a93", "\u0aa8", "\u0aa1\u0abf"],
                        abbreviated: ["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7", "\u0a93\u0a95\u0acd\u0a9f\u0acb", "\u0aa8\u0ab5\u0ac7", "\u0aa1\u0abf\u0ab8\u0ac7"],
                        wide: ["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a87", "\u0a93\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0a93\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0", "\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", "\u0a97\u0ac1", "\u0ab6\u0ac1", "\u0ab6"],
                        short: ["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", "\u0a97\u0ac1", "\u0ab6\u0ac1", "\u0ab6"],
                        abbreviated: ["\u0ab0\u0ab5\u0abf", "\u0ab8\u0acb\u0aae", "\u0aae\u0a82\u0a97\u0ab3", "\u0aac\u0ac1\u0aa7", "\u0a97\u0ac1\u0ab0\u0ac1", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0", "\u0ab6\u0aa8\u0abf"],
                        wide: ["\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0", "\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0", "\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0", "\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0", "\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0", "\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "\u0aae.\u0ab0\u0abe\u0aa4\u0acd\u0ab0\u0abf",
                            noon: "\u0aac.",
                            morning: "\u0ab8\u0ab5\u0abe\u0ab0\u0ac7",
                            afternoon: "\u0aac\u0aaa\u0acb\u0ab0\u0ac7",
                            evening: "\u0ab8\u0abe\u0a82\u0a9c\u0ac7",
                            night: "\u0ab0\u0abe\u0aa4\u0acd\u0ab0\u0ac7"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "\u200b\u0aae\u0aa7\u0acd\u0aaf\u0ab0\u0abe\u0aa4\u0acd\u0ab0\u0abf",
                            noon: "\u0aac\u0aaa\u0acb\u0ab0\u0ac7",
                            morning: "\u0ab8\u0ab5\u0abe\u0ab0\u0ac7",
                            afternoon: "\u0aac\u0aaa\u0acb\u0ab0\u0ac7",
                            evening: "\u0ab8\u0abe\u0a82\u0a9c\u0ac7",
                            night: "\u0ab0\u0abe\u0aa4\u0acd\u0ab0\u0ac7"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "\u200b\u0aae\u0aa7\u0acd\u0aaf\u0ab0\u0abe\u0aa4\u0acd\u0ab0\u0abf",
                            noon: "\u0aac\u0aaa\u0acb\u0ab0\u0ac7",
                            morning: "\u0ab8\u0ab5\u0abe\u0ab0\u0ac7",
                            afternoon: "\u0aac\u0aaa\u0acb\u0ab0\u0ac7",
                            evening: "\u0ab8\u0abe\u0a82\u0a9c\u0ac7",
                            night: "\u0ab0\u0abe\u0aa4\u0acd\u0ab0\u0ac7"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "\u0aae.\u0ab0\u0abe\u0aa4\u0acd\u0ab0\u0abf",
                            noon: "\u0aac\u0aaa\u0acb\u0ab0\u0ac7",
                            morning: "\u0ab8\u0ab5\u0abe\u0ab0\u0ac7",
                            afternoon: "\u0aac\u0aaa\u0acb\u0ab0\u0ac7",
                            evening: "\u0ab8\u0abe\u0a82\u0a9c\u0ac7",
                            night: "\u0ab0\u0abe\u0aa4\u0acd\u0ab0\u0ac7"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "\u0aae\u0aa7\u0acd\u0aaf\u0ab0\u0abe\u0aa4\u0acd\u0ab0\u0abf",
                            noon: "\u0aac\u0aaa\u0acb\u0ab0\u0ac7",
                            morning: "\u0ab8\u0ab5\u0abe\u0ab0\u0ac7",
                            afternoon: "\u0aac\u0aaa\u0acb\u0ab0\u0ac7",
                            evening: "\u0ab8\u0abe\u0a82\u0a9c\u0ac7",
                            night: "\u0ab0\u0abe\u0aa4\u0acd\u0ab0\u0ac7"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "\u200b\u0aae\u0aa7\u0acd\u0aaf\u0ab0\u0abe\u0aa4\u0acd\u0ab0\u0abf",
                            noon: "\u0aac\u0aaa\u0acb\u0ab0\u0ac7",
                            morning: "\u0ab8\u0ab5\u0abe\u0ab0\u0ac7",
                            afternoon: "\u0aac\u0aaa\u0acb\u0ab0\u0ac7",
                            evening: "\u0ab8\u0abe\u0a82\u0a9c\u0ac7",
                            night: "\u0ab0\u0abe\u0aa4\u0acd\u0ab0\u0ac7"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\u0ab2|\u0a9c|\u0aa5|\u0aa0\u0acd\u0aa0|\u0aae)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u0a88\u0ab8\u0aaa\u0ac2|\u0a88\u0ab8)/i,
                        abbreviated: /^(\u0a88\.\u0ab8\.\u0aaa\u0ac2\u0ab0\u0acd\u0ab5\u0ac7|\u0a88\.\u0ab8\.)/i,
                        wide: /^(\u0a88\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8\s\u0aaa\u0ac2\u0ab0\u0acd\u0ab5\u0ac7|\u0a88\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u0a88\u0ab8\u0aaa\u0ac2/i, /^\u0a88\u0ab8/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^q[1234]/i,
                        wide: /^[1234](\u0ab2\u0acb|\u0a9c\u0acb|\u0aa5\u0acb)? \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[\u0a9c\u0abe\u0aab\u0ac7\u0aae\u0abe\u0a8f\u0aae\u0ac7\u0a9c\u0ac2\u0a9c\u0ac1\u0a93\u0ab8\u0a93\u0aa8\u0aa1\u0abf]/i,
                        abbreviated: /^(\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1|\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1|\u0aae\u0abe\u0ab0\u0acd\u0a9a|\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2|\u0aae\u0ac7|\u0a9c\u0ac2\u0aa8|\u0a9c\u0ac1\u0ab2\u0abe\u0a88|\u0a91\u0a97\u0ab8\u0acd\u0a9f|\u0ab8\u0aaa\u0acd\u0a9f\u0ac7|\u0a93\u0a95\u0acd\u0a9f\u0acb|\u0aa8\u0ab5\u0ac7|\u0aa1\u0abf\u0ab8\u0ac7)/i,
                        wide: /^(\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0|\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0|\u0aae\u0abe\u0ab0\u0acd\u0a9a|\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2|\u0aae\u0ac7|\u0a9c\u0ac2\u0aa8|\u0a9c\u0ac1\u0ab2\u0abe\u0a87|\u0a93\u0a97\u0ab8\u0acd\u0a9f|\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0|\u0a93\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0|\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0|\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0a9c\u0abe/i, /^\u0aab\u0ac7/i, /^\u0aae\u0abe/i, /^\u0a8f/i, /^\u0aae\u0ac7/i, /^\u0a9c\u0ac2/i, /^\u0a9c\u0ac1/i, /^\u0a91\u0a97/i, /^\u0ab8/i, /^\u0a93\u0a95\u0acd\u0a9f\u0acb/i, /^\u0aa8/i, /^\u0aa1\u0abf/i],
                        any: [/^\u0a9c\u0abe/i, /^\u0aab\u0ac7/i, /^\u0aae\u0abe/i, /^\u0a8f/i, /^\u0aae\u0ac7/i, /^\u0a9c\u0ac2/i, /^\u0a9c\u0ac1/i, /^\u0a91\u0a97/i, /^\u0ab8/i, /^\u0a93\u0a95\u0acd\u0a9f\u0acb/i, /^\u0aa8/i, /^\u0aa1\u0abf/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(\u0ab0|\u0ab8\u0acb|\u0aae\u0a82|\u0aac\u0ac1|\u0a97\u0ac1|\u0ab6\u0ac1|\u0ab6)/i,
                        short: /^(\u0ab0|\u0ab8\u0acb|\u0aae\u0a82|\u0aac\u0ac1|\u0a97\u0ac1|\u0ab6\u0ac1|\u0ab6)/i,
                        abbreviated: /^(\u0ab0\u0ab5\u0abf|\u0ab8\u0acb\u0aae|\u0aae\u0a82\u0a97\u0ab3|\u0aac\u0ac1\u0aa7|\u0a97\u0ac1\u0ab0\u0ac1|\u0ab6\u0ac1\u0a95\u0acd\u0ab0|\u0ab6\u0aa8\u0abf)/i,
                        wide: /^(\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0|\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0|\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0|\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0|\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0|\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0|\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0ab0/i, /^\u0ab8\u0acb/i, /^\u0aae\u0a82/i, /^\u0aac\u0ac1/i, /^\u0a97\u0ac1/i, /^\u0ab6\u0ac1/i, /^\u0ab6/i],
                        any: [/^\u0ab0/i, /^\u0ab8\u0acb/i, /^\u0aae\u0a82/i, /^\u0aac\u0ac1/i, /^\u0a97\u0ac1/i, /^\u0ab6\u0ac1/i, /^\u0ab6/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|\u0aae\.?|\u0ab8|\u0aac|\u0ab8\u0abe\u0a82|\u0ab0\u0abe)/i,
                        any: /^(a|p|\u0aae\.?|\u0ab8|\u0aac|\u0ab8\u0abe\u0a82|\u0ab0\u0abe)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^\u0aae\.?/i,
                            noon: /^\u0aac/i,
                            morning: /\u0ab8/i,
                            afternoon: /\u0aac/i,
                            evening: /\u0ab8\u0abe\u0a82/i,
                            night: /\u0ab0\u0abe/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Ln = {
            lessThanXSeconds: {
                one: "\u05e4\u05d7\u05d5\u05ea \u05de\u05e9\u05e0\u05d9\u05d9\u05d4",
                two: "\u05e4\u05d7\u05d5\u05ea \u05de\u05e9\u05ea\u05d9 \u05e9\u05e0\u05d9\u05d5\u05ea",
                other: "\u05e4\u05d7\u05d5\u05ea \u05de\u05be{{count}} \u05e9\u05e0\u05d9\u05d5\u05ea"
            },
            xSeconds: {
                one: "\u05e9\u05e0\u05d9\u05d9\u05d4",
                two: "\u05e9\u05ea\u05d9 \u05e9\u05e0\u05d9\u05d5\u05ea",
                other: "{{count}} \u05e9\u05e0\u05d9\u05d5\u05ea"
            },
            halfAMinute: "\u05d7\u05e6\u05d9 \u05d3\u05e7\u05d4",
            lessThanXMinutes: {
                one: "\u05e4\u05d7\u05d5\u05ea \u05de\u05d3\u05e7\u05d4",
                two: "\u05e4\u05d7\u05d5\u05ea \u05de\u05e9\u05ea\u05d9 \u05d3\u05e7\u05d5\u05ea",
                other: "\u05e4\u05d7\u05d5\u05ea \u05de\u05be{{count}} \u05d3\u05e7\u05d5\u05ea"
            },
            xMinutes: {
                one: "\u05d3\u05e7\u05d4",
                two: "\u05e9\u05ea\u05d9 \u05d3\u05e7\u05d5\u05ea",
                other: "{{count}} \u05d3\u05e7\u05d5\u05ea"
            },
            aboutXHours: {
                one: "\u05db\u05e9\u05e2\u05d4",
                two: "\u05db\u05e9\u05e2\u05ea\u05d9\u05d9\u05dd",
                other: "\u05db\u05be{{count}} \u05e9\u05e2\u05d5\u05ea"
            },
            xHours: {
                one: "\u05e9\u05e2\u05d4",
                two: "\u05e9\u05e2\u05ea\u05d9\u05d9\u05dd",
                other: "{{count}} \u05e9\u05e2\u05d5\u05ea"
            },
            xDays: {
                one: "\u05d9\u05d5\u05dd",
                two: "\u05d9\u05d5\u05de\u05d9\u05d9\u05dd",
                other: "{{count}} \u05d9\u05de\u05d9\u05dd"
            },
            aboutXWeeks: {
                one: "\u05db\u05e9\u05d1\u05d5\u05e2",
                two: "\u05db\u05e9\u05d1\u05d5\u05e2\u05d9\u05d9\u05dd",
                other: "\u05db\u05be{{count}} \u05e9\u05d1\u05d5\u05e2\u05d5\u05ea"
            },
            xWeeks: {
                one: "\u05e9\u05d1\u05d5\u05e2",
                two: "\u05e9\u05d1\u05d5\u05e2\u05d9\u05d9\u05dd",
                other: "{{count}} \u05e9\u05d1\u05d5\u05e2\u05d5\u05ea"
            },
            aboutXMonths: {
                one: "\u05db\u05d7\u05d5\u05d3\u05e9",
                two: "\u05db\u05d7\u05d5\u05d3\u05e9\u05d9\u05d9\u05dd",
                other: "\u05db\u05be{{count}} \u05d7\u05d5\u05d3\u05e9\u05d9\u05dd"
            },
            xMonths: {
                one: "\u05d7\u05d5\u05d3\u05e9",
                two: "\u05d7\u05d5\u05d3\u05e9\u05d9\u05d9\u05dd",
                other: "{{count}} \u05d7\u05d5\u05d3\u05e9\u05d9\u05dd"
            },
            aboutXYears: {
                one: "\u05db\u05e9\u05e0\u05d4",
                two: "\u05db\u05e9\u05e0\u05ea\u05d9\u05d9\u05dd",
                other: "\u05db\u05be{{count}} \u05e9\u05e0\u05d9\u05dd"
            },
            xYears: {
                one: "\u05e9\u05e0\u05d4",
                two: "\u05e9\u05e0\u05ea\u05d9\u05d9\u05dd",
                other: "{{count}} \u05e9\u05e0\u05d9\u05dd"
            },
            overXYears: {
                one: "\u05d9\u05d5\u05ea\u05e8 \u05de\u05e9\u05e0\u05d4",
                two: "\u05d9\u05d5\u05ea\u05e8 \u05de\u05e9\u05e0\u05ea\u05d9\u05d9\u05dd",
                other: "\u05d9\u05d5\u05ea\u05e8 \u05de\u05be{{count}} \u05e9\u05e0\u05d9\u05dd"
            },
            almostXYears: {
                one: "\u05db\u05de\u05e2\u05d8 \u05e9\u05e0\u05d4",
                two: "\u05db\u05de\u05e2\u05d8 \u05e9\u05e0\u05ea\u05d9\u05d9\u05dd",
                other: "\u05db\u05de\u05e2\u05d8 {{count}} \u05e9\u05e0\u05d9\u05dd"
            }
        }
          , Fn = {
            date: r({
                formats: {
                    full: "EEEE, d \u05d1MMMM y",
                    long: "d \u05d1MMMM y",
                    medium: "d \u05d1MMM y",
                    short: "d.M.y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "H:mm:ss zzzz",
                    long: "H:mm:ss z",
                    medium: "H:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u05d1\u05e9\u05e2\u05d4' {{time}}",
                    long: "{{date}} '\u05d1\u05e9\u05e2\u05d4' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , qn = {
            lastWeek: "eeee '\u05e9\u05e2\u05d1\u05e8 \u05d1\u05e9\u05e2\u05d4' p",
            yesterday: "'\u05d0\u05ea\u05de\u05d5\u05dc \u05d1\u05e9\u05e2\u05d4' p",
            today: "'\u05d4\u05d9\u05d5\u05dd \u05d1\u05e9\u05e2\u05d4' p",
            tomorrow: "'\u05de\u05d7\u05e8 \u05d1\u05e9\u05e2\u05d4' p",
            nextWeek: "eeee '\u05d1\u05e9\u05e2\u05d4' p",
            other: "P"
        }
          , Gn = {
            ordinalNumber: (e,t)=>{
                const n = Number(e);
                if (n <= 0 || n > 10)
                    return String(n);
                const a = String(t?.unit)
                  , r = n - 1;
                return ["year", "hour", "minute", "second"].indexOf(a) >= 0 ? ["\u05e8\u05d0\u05e9\u05d5\u05e0\u05d4", "\u05e9\u05e0\u05d9\u05d9\u05d4", "\u05e9\u05dc\u05d9\u05e9\u05d9\u05ea", "\u05e8\u05d1\u05d9\u05e2\u05d9\u05ea", "\u05d7\u05de\u05d9\u05e9\u05d9\u05ea", "\u05e9\u05d9\u05e9\u05d9\u05ea", "\u05e9\u05d1\u05d9\u05e2\u05d9\u05ea", "\u05e9\u05de\u05d9\u05e0\u05d9\u05ea", "\u05ea\u05e9\u05d9\u05e2\u05d9\u05ea", "\u05e2\u05e9\u05d9\u05e8\u05d9\u05ea"][r] : ["\u05e8\u05d0\u05e9\u05d5\u05df", "\u05e9\u05e0\u05d9", "\u05e9\u05dc\u05d9\u05e9\u05d9", "\u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d7\u05de\u05d9\u05e9\u05d9", "\u05e9\u05d9\u05e9\u05d9", "\u05e9\u05d1\u05d9\u05e2\u05d9", "\u05e9\u05de\u05d9\u05e0\u05d9", "\u05ea\u05e9\u05d9\u05e2\u05d9", "\u05e2\u05e9\u05d9\u05e8\u05d9"][r]
            }
            ,
            era: s({
                values: {
                    narrow: ["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"],
                    abbreviated: ["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"],
                    wide: ["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"]
                },
                defaultWidth: "wide"
            }),
            quarter: s({
                values: {
                    narrow: ["1", "2", "3", "4"],
                    abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                    wide: ["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"]
                },
                defaultWidth: "wide",
                argumentCallback: e=>e - 1
            }),
            month: s({
                values: {
                    narrow: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],
                    abbreviated: ["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"],
                    wide: ["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"]
                },
                defaultWidth: "wide"
            }),
            day: s({
                values: {
                    narrow: ["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"],
                    short: ["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"],
                    abbreviated: ["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"],
                    wide: ["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"]
                },
                defaultWidth: "wide"
            }),
            dayPeriod: s({
                values: {
                    narrow: {
                        am: "\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6",
                        pm: "\u05d0\u05d7\u05d4\u05f4\u05e6",
                        midnight: "\u05d7\u05e6\u05d5\u05ea",
                        noon: "\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd",
                        morning: "\u05d1\u05d5\u05e7\u05e8",
                        afternoon: "\u05d0\u05d7\u05e8 \u05d4\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd",
                        evening: "\u05e2\u05e8\u05d1",
                        night: "\u05dc\u05d9\u05dc\u05d4"
                    },
                    abbreviated: {
                        am: "\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6",
                        pm: "\u05d0\u05d7\u05d4\u05f4\u05e6",
                        midnight: "\u05d7\u05e6\u05d5\u05ea",
                        noon: "\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd",
                        morning: "\u05d1\u05d5\u05e7\u05e8",
                        afternoon: "\u05d0\u05d7\u05e8 \u05d4\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd",
                        evening: "\u05e2\u05e8\u05d1",
                        night: "\u05dc\u05d9\u05dc\u05d4"
                    },
                    wide: {
                        am: "\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6",
                        pm: "\u05d0\u05d7\u05d4\u05f4\u05e6",
                        midnight: "\u05d7\u05e6\u05d5\u05ea",
                        noon: "\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd",
                        morning: "\u05d1\u05d5\u05e7\u05e8",
                        afternoon: "\u05d0\u05d7\u05e8 \u05d4\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd",
                        evening: "\u05e2\u05e8\u05d1",
                        night: "\u05dc\u05d9\u05dc\u05d4"
                    }
                },
                defaultWidth: "wide",
                formattingValues: {
                    narrow: {
                        am: "\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6",
                        pm: "\u05d0\u05d7\u05d4\u05f4\u05e6",
                        midnight: "\u05d7\u05e6\u05d5\u05ea",
                        noon: "\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd",
                        morning: "\u05d1\u05d1\u05d5\u05e7\u05e8",
                        afternoon: "\u05d1\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd",
                        evening: "\u05d1\u05e2\u05e8\u05d1",
                        night: "\u05d1\u05dc\u05d9\u05dc\u05d4"
                    },
                    abbreviated: {
                        am: "\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6",
                        pm: "\u05d0\u05d7\u05d4\u05f4\u05e6",
                        midnight: "\u05d7\u05e6\u05d5\u05ea",
                        noon: "\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd",
                        morning: "\u05d1\u05d1\u05d5\u05e7\u05e8",
                        afternoon: "\u05d0\u05d7\u05e8 \u05d4\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd",
                        evening: "\u05d1\u05e2\u05e8\u05d1",
                        night: "\u05d1\u05dc\u05d9\u05dc\u05d4"
                    },
                    wide: {
                        am: "\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6",
                        pm: "\u05d0\u05d7\u05d4\u05f4\u05e6",
                        midnight: "\u05d7\u05e6\u05d5\u05ea",
                        noon: "\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd",
                        morning: "\u05d1\u05d1\u05d5\u05e7\u05e8",
                        afternoon: "\u05d0\u05d7\u05e8 \u05d4\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd",
                        evening: "\u05d1\u05e2\u05e8\u05d1",
                        night: "\u05d1\u05dc\u05d9\u05dc\u05d4"
                    }
                },
                defaultFormattingWidth: "wide"
            })
        }
          , Kn = ["\u05e8\u05d0", "\u05e9\u05e0", "\u05e9\u05dc", "\u05e8\u05d1", "\u05d7", "\u05e9\u05d9", "\u05e9\u05d1", "\u05e9\u05de", "\u05ea", "\u05e2"]
          , Vn = {
            code: "he",
            formatDistance: (e,t,n)=>{
                if ("xDays" === e && n?.addSuffix && t <= 2)
                    return n.comparison && n.comparison > 0 ? 1 === t ? "\u05de\u05d7\u05e8" : "\u05de\u05d7\u05e8\u05ea\u05d9\u05d9\u05dd" : 1 === t ? "\u05d0\u05ea\u05de\u05d5\u05dc" : "\u05e9\u05dc\u05e9\u05d5\u05dd";
                let a;
                const r = Ln[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : 2 === t ? r.two : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "\u05d1\u05e2\u05d5\u05d3 " + a : "\u05dc\u05e4\u05e0\u05d9 " + a : a
            }
            ,
            formatLong: Fn,
            formatRelative: (e,t,n,a)=>qn[e],
            localize: Gn,
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+|(\u05e8\u05d0\u05e9\u05d5\u05df|\u05e9\u05e0\u05d9|\u05e9\u05dc\u05d9\u05e9\u05d9|\u05e8\u05d1\u05d9\u05e2\u05d9|\u05d7\u05de\u05d9\u05e9\u05d9|\u05e9\u05d9\u05e9\u05d9|\u05e9\u05d1\u05d9\u05e2\u05d9|\u05e9\u05de\u05d9\u05e0\u05d9|\u05ea\u05e9\u05d9\u05e2\u05d9|\u05e2\u05e9\u05d9\u05e8\u05d9|\u05e8\u05d0\u05e9\u05d5\u05e0\u05d4|\u05e9\u05e0\u05d9\u05d9\u05d4|\u05e9\u05dc\u05d9\u05e9\u05d9\u05ea|\u05e8\u05d1\u05d9\u05e2\u05d9\u05ea|\u05d7\u05de\u05d9\u05e9\u05d9\u05ea|\u05e9\u05d9\u05e9\u05d9\u05ea|\u05e9\u05d1\u05d9\u05e2\u05d9\u05ea|\u05e9\u05de\u05d9\u05e0\u05d9\u05ea|\u05ea\u05e9\u05d9\u05e2\u05d9\u05ea|\u05e2\u05e9\u05d9\u05e8\u05d9\u05ea))/i,
                    parsePattern: /^(\d+|\u05e8\u05d0|\u05e9\u05e0|\u05e9\u05dc|\u05e8\u05d1|\u05d7|\u05e9\u05d9|\u05e9\u05d1|\u05e9\u05de|\u05ea|\u05e2)/i,
                    valueCallback: e=>{
                        const t = parseInt(e, 10);
                        return isNaN(t) ? Kn.indexOf(e) + 1 : t
                    }
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^\u05dc(\u05e1\u05e4\u05d9\u05e8\u05d4|\u05e4\u05e0\u05d4\u05f4\u05e1)/i,
                        abbreviated: /^\u05dc(\u05e1\u05e4\u05d9\u05e8\u05d4|\u05e4\u05e0\u05d4\u05f4\u05e1)/i,
                        wide: /^\u05dc(\u05e4\u05e0\u05d9 \u05d4)?\u05e1\u05e4\u05d9\u05e8\u05d4/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u05dc\u05e4/i, /^\u05dc\u05e1/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^q[1234]/i,
                        wide: /^\u05e8\u05d1\u05e2\u05d5\u05df [1234]/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^\d+/i,
                        abbreviated: /^(\u05d9\u05e0\u05d5|\u05e4\u05d1\u05e8|\u05de\u05e8\u05e5|\u05d0\u05e4\u05e8|\u05de\u05d0\u05d9|\u05d9\u05d5\u05e0\u05d9|\u05d9\u05d5\u05dc\u05d9|\u05d0\u05d5\u05d2|\u05e1\u05e4\u05d8|\u05d0\u05d5\u05e7|\u05e0\u05d5\u05d1|\u05d3\u05e6\u05de)\u05f3?/i,
                        wide: /^(\u05d9\u05e0\u05d5\u05d0\u05e8|\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8|\u05de\u05e8\u05e5|\u05d0\u05e4\u05e8\u05d9\u05dc|\u05de\u05d0\u05d9|\u05d9\u05d5\u05e0\u05d9|\u05d9\u05d5\u05dc\u05d9|\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8|\u05e1\u05e4\u05d8\u05de\u05d1\u05e8|\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8|\u05e0\u05d5\u05d1\u05de\u05d1\u05e8|\u05d3\u05e6\u05de\u05d1\u05e8)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^1$/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^7/i, /^8/i, /^9/i, /^10/i, /^11/i, /^12/i],
                        any: [/^\u05d9\u05e0/i, /^\u05e4/i, /^\u05de\u05e8/i, /^\u05d0\u05e4/i, /^\u05de\u05d0/i, /^\u05d9\u05d5\u05e0/i, /^\u05d9\u05d5\u05dc/i, /^\u05d0\u05d5\u05d2/i, /^\u05e1/i, /^\u05d0\u05d5\u05e7/i, /^\u05e0/i, /^\u05d3/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u05d0\u05d1\u05d2\u05d3\u05d4\u05d5\u05e9]\u05f3/i,
                        short: /^[\u05d0\u05d1\u05d2\u05d3\u05d4\u05d5\u05e9]\u05f3/i,
                        abbreviated: /^(\u05e9\u05d1\u05ea|\u05d9\u05d5\u05dd (\u05d0|\u05d1|\u05d2|\u05d3|\u05d4|\u05d5)\u05f3)/i,
                        wide: /^\u05d9\u05d5\u05dd (\u05e8\u05d0\u05e9\u05d5\u05df|\u05e9\u05e0\u05d9|\u05e9\u05dc\u05d9\u05e9\u05d9|\u05e8\u05d1\u05d9\u05e2\u05d9|\u05d7\u05de\u05d9\u05e9\u05d9|\u05e9\u05d9\u05e9\u05d9|\u05e9\u05d1\u05ea)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        abbreviated: [/\u05d0\u05f3$/i, /\u05d1\u05f3$/i, /\u05d2\u05f3$/i, /\u05d3\u05f3$/i, /\u05d4\u05f3$/i, /\u05d5\u05f3$/i, /^\u05e9/i],
                        wide: [/\u05df$/i, /\u05e0\u05d9$/i, /\u05dc\u05d9\u05e9\u05d9$/i, /\u05e2\u05d9$/i, /\u05de\u05d9\u05e9\u05d9$/i, /\u05e9\u05d9\u05e9\u05d9$/i, /\u05ea$/i],
                        any: [/^\u05d0/i, /^\u05d1/i, /^\u05d2/i, /^\u05d3/i, /^\u05d4/i, /^\u05d5/i, /^\u05e9/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(\u05d0\u05d7\u05e8 \u05d4|\u05d1)?(\u05d7\u05e6\u05d5\u05ea|\u05e6\u05d4\u05e8\u05d9\u05d9\u05dd|\u05d1\u05d5\u05e7\u05e8|\u05e2\u05e8\u05d1|\u05dc\u05d9\u05dc\u05d4|\u05d0\u05d7\u05d4\u05f4\u05e6|\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u05dc\u05e4/i,
                            pm: /^\u05d0\u05d7\u05d4/i,
                            midnight: /^\u05d7/i,
                            noon: /^\u05e6/i,
                            morning: /\u05d1\u05d5\u05e7\u05e8/i,
                            afternoon: /\u05d1\u05e6|\u05d0\u05d7\u05e8/i,
                            evening: /\u05e2\u05e8\u05d1/i,
                            night: /\u05dc\u05d9\u05dc\u05d4/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const $n = {
            locale: {
                1: "\u0967",
                2: "\u0968",
                3: "\u0969",
                4: "\u096a",
                5: "\u096b",
                6: "\u096c",
                7: "\u096d",
                8: "\u096e",
                9: "\u096f",
                0: "\u0966"
            },
            number: {
                "\u0967": "1",
                "\u0968": "2",
                "\u0969": "3",
                "\u096a": "4",
                "\u096b": "5",
                "\u096c": "6",
                "\u096d": "7",
                "\u096e": "8",
                "\u096f": "9",
                "\u0966": "0"
            }
        };
        function Bn(e) {
            return e.toString().replace(/\d/g, (function(e) {
                return $n.locale[e]
            }
            ))
        }
        const Jn = {
            ordinalNumber: (e,t)=>Bn(Number(e)),
            era: s({
                values: {
                    narrow: ["\u0908\u0938\u093e-\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u094d\u0935\u0940"],
                    abbreviated: ["\u0908\u0938\u093e-\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u094d\u0935\u0940"],
                    wide: ["\u0908\u0938\u093e-\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u0935\u0940 \u0938\u0928"]
                },
                defaultWidth: "wide"
            }),
            quarter: s({
                values: {
                    narrow: ["1", "2", "3", "4"],
                    abbreviated: ["\u0924\u093f1", "\u0924\u093f2", "\u0924\u093f3", "\u0924\u093f4"],
                    wide: ["\u092a\u0939\u0932\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u0942\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0940\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u091a\u094c\u0925\u0940 \u0924\u093f\u092e\u093e\u0939\u0940"]
                },
                defaultWidth: "wide",
                argumentCallback: e=>e - 1
            }),
            month: s({
                values: {
                    narrow: ["\u091c", "\u092b\u093c", "\u092e\u093e", "\u0905", "\u092e\u0908", "\u091c\u0942", "\u091c\u0941", "\u0905\u0917", "\u0938\u093f", "\u0905\u0915\u094d\u091f\u0942", "\u0928", "\u0926\u093f"],
                    abbreviated: ["\u091c\u0928", "\u092b\u093c\u0930", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932", "\u0905\u0917", "\u0938\u093f\u0924", "\u0905\u0915\u094d\u091f\u0942", "\u0928\u0935", "\u0926\u093f\u0938"],
                    wide: ["\u091c\u0928\u0935\u0930\u0940", "\u092b\u093c\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u0902\u092c\u0930", "\u0905\u0915\u094d\u091f\u0942\u092c\u0930", "\u0928\u0935\u0902\u092c\u0930", "\u0926\u093f\u0938\u0902\u092c\u0930"]
                },
                defaultWidth: "wide"
            }),
            day: s({
                values: {
                    narrow: ["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"],
                    short: ["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"],
                    abbreviated: ["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0932", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"],
                    wide: ["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0932\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"]
                },
                defaultWidth: "wide"
            }),
            dayPeriod: s({
                values: {
                    narrow: {
                        am: "\u092a\u0942\u0930\u094d\u0935\u093e\u0939\u094d\u0928",
                        pm: "\u0905\u092a\u0930\u093e\u0939\u094d\u0928",
                        midnight: "\u092e\u0927\u094d\u092f\u0930\u093e\u0924\u094d\u0930\u093f",
                        noon: "\u0926\u094b\u092a\u0939\u0930",
                        morning: "\u0938\u0941\u092c\u0939",
                        afternoon: "\u0926\u094b\u092a\u0939\u0930",
                        evening: "\u0936\u093e\u092e",
                        night: "\u0930\u093e\u0924"
                    },
                    abbreviated: {
                        am: "\u092a\u0942\u0930\u094d\u0935\u093e\u0939\u094d\u0928",
                        pm: "\u0905\u092a\u0930\u093e\u0939\u094d\u0928",
                        midnight: "\u092e\u0927\u094d\u092f\u0930\u093e\u0924\u094d\u0930\u093f",
                        noon: "\u0926\u094b\u092a\u0939\u0930",
                        morning: "\u0938\u0941\u092c\u0939",
                        afternoon: "\u0926\u094b\u092a\u0939\u0930",
                        evening: "\u0936\u093e\u092e",
                        night: "\u0930\u093e\u0924"
                    },
                    wide: {
                        am: "\u092a\u0942\u0930\u094d\u0935\u093e\u0939\u094d\u0928",
                        pm: "\u0905\u092a\u0930\u093e\u0939\u094d\u0928",
                        midnight: "\u092e\u0927\u094d\u092f\u0930\u093e\u0924\u094d\u0930\u093f",
                        noon: "\u0926\u094b\u092a\u0939\u0930",
                        morning: "\u0938\u0941\u092c\u0939",
                        afternoon: "\u0926\u094b\u092a\u0939\u0930",
                        evening: "\u0936\u093e\u092e",
                        night: "\u0930\u093e\u0924"
                    }
                },
                defaultWidth: "wide",
                formattingValues: {
                    narrow: {
                        am: "\u092a\u0942\u0930\u094d\u0935\u093e\u0939\u094d\u0928",
                        pm: "\u0905\u092a\u0930\u093e\u0939\u094d\u0928",
                        midnight: "\u092e\u0927\u094d\u092f\u0930\u093e\u0924\u094d\u0930\u093f",
                        noon: "\u0926\u094b\u092a\u0939\u0930",
                        morning: "\u0938\u0941\u092c\u0939",
                        afternoon: "\u0926\u094b\u092a\u0939\u0930",
                        evening: "\u0936\u093e\u092e",
                        night: "\u0930\u093e\u0924"
                    },
                    abbreviated: {
                        am: "\u092a\u0942\u0930\u094d\u0935\u093e\u0939\u094d\u0928",
                        pm: "\u0905\u092a\u0930\u093e\u0939\u094d\u0928",
                        midnight: "\u092e\u0927\u094d\u092f\u0930\u093e\u0924\u094d\u0930\u093f",
                        noon: "\u0926\u094b\u092a\u0939\u0930",
                        morning: "\u0938\u0941\u092c\u0939",
                        afternoon: "\u0926\u094b\u092a\u0939\u0930",
                        evening: "\u0936\u093e\u092e",
                        night: "\u0930\u093e\u0924"
                    },
                    wide: {
                        am: "\u092a\u0942\u0930\u094d\u0935\u093e\u0939\u094d\u0928",
                        pm: "\u0905\u092a\u0930\u093e\u0939\u094d\u0928",
                        midnight: "\u092e\u0927\u094d\u092f\u0930\u093e\u0924\u094d\u0930\u093f",
                        noon: "\u0926\u094b\u092a\u0939\u0930",
                        morning: "\u0938\u0941\u092c\u0939",
                        afternoon: "\u0926\u094b\u092a\u0939\u0930",
                        evening: "\u0936\u093e\u092e",
                        night: "\u0930\u093e\u0924"
                    }
                },
                defaultFormattingWidth: "wide"
            })
        }
          , Qn = {
            lessThanXSeconds: {
                one: "\u0967 \u0938\u0947\u0915\u0902\u0921 \u0938\u0947 \u0915\u092e",
                other: "{{count}} \u0938\u0947\u0915\u0902\u0921 \u0938\u0947 \u0915\u092e"
            },
            xSeconds: {
                one: "\u0967 \u0938\u0947\u0915\u0902\u0921",
                other: "{{count}} \u0938\u0947\u0915\u0902\u0921"
            },
            halfAMinute: "\u0906\u0927\u093e \u092e\u093f\u0928\u091f",
            lessThanXMinutes: {
                one: "\u0967 \u092e\u093f\u0928\u091f \u0938\u0947 \u0915\u092e",
                other: "{{count}} \u092e\u093f\u0928\u091f \u0938\u0947 \u0915\u092e"
            },
            xMinutes: {
                one: "\u0967 \u092e\u093f\u0928\u091f",
                other: "{{count}} \u092e\u093f\u0928\u091f"
            },
            aboutXHours: {
                one: "\u0932\u0917\u092d\u0917 \u0967 \u0918\u0902\u091f\u093e",
                other: "\u0932\u0917\u092d\u0917 {{count}} \u0918\u0902\u091f\u0947"
            },
            xHours: {
                one: "\u0967 \u0918\u0902\u091f\u093e",
                other: "{{count}} \u0918\u0902\u091f\u0947"
            },
            xDays: {
                one: "\u0967 \u0926\u093f\u0928",
                other: "{{count}} \u0926\u093f\u0928"
            },
            aboutXWeeks: {
                one: "\u0932\u0917\u092d\u0917 \u0967 \u0938\u092a\u094d\u0924\u093e\u0939",
                other: "\u0932\u0917\u092d\u0917 {{count}} \u0938\u092a\u094d\u0924\u093e\u0939"
            },
            xWeeks: {
                one: "\u0967 \u0938\u092a\u094d\u0924\u093e\u0939",
                other: "{{count}} \u0938\u092a\u094d\u0924\u093e\u0939"
            },
            aboutXMonths: {
                one: "\u0932\u0917\u092d\u0917 \u0967 \u092e\u0939\u0940\u0928\u093e",
                other: "\u0932\u0917\u092d\u0917 {{count}} \u092e\u0939\u0940\u0928\u0947"
            },
            xMonths: {
                one: "\u0967 \u092e\u0939\u0940\u0928\u093e",
                other: "{{count}} \u092e\u0939\u0940\u0928\u0947"
            },
            aboutXYears: {
                one: "\u0932\u0917\u092d\u0917 \u0967 \u0935\u0930\u094d\u0937",
                other: "\u0932\u0917\u092d\u0917 {{count}} \u0935\u0930\u094d\u0937"
            },
            xYears: {
                one: "\u0967 \u0935\u0930\u094d\u0937",
                other: "{{count}} \u0935\u0930\u094d\u0937"
            },
            overXYears: {
                one: "\u0967 \u0935\u0930\u094d\u0937 \u0938\u0947 \u0905\u0927\u093f\u0915",
                other: "{{count}} \u0935\u0930\u094d\u0937 \u0938\u0947 \u0905\u0927\u093f\u0915"
            },
            almostXYears: {
                one: "\u0932\u0917\u092d\u0917 \u0967 \u0935\u0930\u094d\u0937",
                other: "\u0932\u0917\u092d\u0917 {{count}} \u0935\u0930\u094d\u0937"
            }
        }
          , Un = {
            date: r({
                formats: {
                    full: "EEEE, do MMMM, y",
                    long: "do MMMM, y",
                    medium: "d MMM, y",
                    short: "dd/MM/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u0915\u094b' {{time}}",
                    long: "{{date}} '\u0915\u094b' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Zn = {
            lastWeek: "'\u092a\u093f\u091b\u0932\u0947' eeee p",
            yesterday: "'\u0915\u0932' p",
            today: "'\u0906\u091c' p",
            tomorrow: "'\u0915\u0932' p",
            nextWeek: "eeee '\u0915\u094b' p",
            other: "P"
        }
          , ea = {
            ordinalNumber: d({
                matchPattern: /^[\u0966\u0967\u0968\u0969\u096a\u096b\u096c\u096d\u096e\u096f]+/i,
                parsePattern: /^[\u0966\u0967\u0968\u0969\u096a\u096b\u096c\u096d\u096e\u096f]+/i,
                valueCallback: function(e) {
                    const t = e.toString().replace(/[\u0967\u0968\u0969\u096a\u096b\u096c\u096d\u096e\u096f\u0966]/g, (function(e) {
                        return $n.number[e]
                    }
                    ));
                    return Number(t)
                }
            }),
            era: u({
                matchPatterns: {
                    narrow: /^(\u0908\u0938\u093e-\u092a\u0942\u0930\u094d\u0935|\u0908\u0938\u094d\u0935\u0940)/i,
                    abbreviated: /^(\u0908\u0938\u093e\.?\s?\u092a\u0942\u0930\u094d\u0935\.?|\u0908\u0938\u093e\.?)/i,
                    wide: /^(\u0908\u0938\u093e-\u092a\u0942\u0930\u094d\u0935|\u0908\u0938\u0935\u0940 \u092a\u0942\u0930\u094d\u0935|\u0908\u0938\u0935\u0940 \u0938\u0928|\u0908\u0938\u0935\u0940)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    any: [/^b/i, /^(a|c)/i]
                },
                defaultParseWidth: "any"
            }),
            quarter: u({
                matchPatterns: {
                    narrow: /^[1234]/i,
                    abbreviated: /^\u0924\u093f[1234]/i,
                    wide: /^[1234](\u092a\u0939\u0932\u0940|\u0926\u0942\u0938\u0930\u0940|\u0924\u0940\u0938\u0930\u0940|\u091a\u094c\u0925\u0940)? \u0924\u093f\u092e\u093e\u0939\u0940/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    any: [/1/i, /2/i, /3/i, /4/i]
                },
                defaultParseWidth: "any",
                valueCallback: e=>e + 1
            }),
            month: u({
                matchPatterns: {
                    narrow: /^[\u091c\u092b\u093c\u092e\u093e\u0905\u092a\u094d\u092e\u0908\u091c\u0942\u0928\u091c\u0941\u0905\u0917\u0938\u093f\u0905\u0915\u094d\u0924\u0928\u0926\u093f]/i,
                    abbreviated: /^(\u091c\u0928|\u092b\u093c\u0930|\u092e\u093e\u0930\u094d\u091a|\u0905\u092a\u094d|\u092e\u0908|\u091c\u0942\u0928|\u091c\u0941\u0932|\u0905\u0917|\u0938\u093f\u0924|\u0905\u0915\u094d\u0924\u0942|\u0928\u0935|\u0926\u093f\u0938)/i,
                    wide: /^(\u091c\u0928\u0935\u0930\u0940|\u092b\u093c\u0930\u0935\u0930\u0940|\u092e\u093e\u0930\u094d\u091a|\u0905\u092a\u094d\u0930\u0948\u0932|\u092e\u0908|\u091c\u0942\u0928|\u091c\u0941\u0932\u093e\u0908|\u0905\u0917\u0938\u094d\u0924|\u0938\u093f\u0924\u0902\u092c\u0930|\u0905\u0915\u094d\u0924\u0942\u092c\u0930|\u0928\u0935\u0902\u092c\u0930|\u0926\u093f\u0938\u0902\u092c\u0930)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    narrow: [/^\u091c/i, /^\u092b\u093c/i, /^\u092e\u093e/i, /^\u0905\u092a\u094d/i, /^\u092e\u0908/i, /^\u091c\u0942/i, /^\u091c\u0941/i, /^\u0905\u0917/i, /^\u0938\u093f/i, /^\u0905\u0915\u094d\u0924\u0942/i, /^\u0928/i, /^\u0926\u093f/i],
                    any: [/^\u091c\u0928/i, /^\u092b\u093c/i, /^\u092e\u093e/i, /^\u0905\u092a\u094d/i, /^\u092e\u0908/i, /^\u091c\u0942/i, /^\u091c\u0941/i, /^\u0905\u0917/i, /^\u0938\u093f/i, /^\u0905\u0915\u094d\u0924\u0942/i, /^\u0928\u0935/i, /^\u0926\u093f\u0938/i]
                },
                defaultParseWidth: "any"
            }),
            day: u({
                matchPatterns: {
                    narrow: /^[\u0930\u0935\u093f\u0938\u094b\u092e\u092e\u0902\u0917\u0932\u092c\u0941\u0927\u0917\u0941\u0930\u0941\u0936\u0941\u0915\u094d\u0930\u0936\u0928\u093f]/i,
                    short: /^(\u0930\u0935\u093f|\u0938\u094b\u092e|\u092e\u0902\u0917\u0932|\u092c\u0941\u0927|\u0917\u0941\u0930\u0941|\u0936\u0941\u0915\u094d\u0930|\u0936\u0928\u093f)/i,
                    abbreviated: /^(\u0930\u0935\u093f|\u0938\u094b\u092e|\u092e\u0902\u0917\u0932|\u092c\u0941\u0927|\u0917\u0941\u0930\u0941|\u0936\u0941\u0915\u094d\u0930|\u0936\u0928\u093f)/i,
                    wide: /^(\u0930\u0935\u093f\u0935\u093e\u0930|\u0938\u094b\u092e\u0935\u093e\u0930|\u092e\u0902\u0917\u0932\u0935\u093e\u0930|\u092c\u0941\u0927\u0935\u093e\u0930|\u0917\u0941\u0930\u0941\u0935\u093e\u0930|\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930|\u0936\u0928\u093f\u0935\u093e\u0930)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    narrow: [/^\u0930\u0935\u093f/i, /^\u0938\u094b\u092e/i, /^\u092e\u0902\u0917\u0932/i, /^\u092c\u0941\u0927/i, /^\u0917\u0941\u0930\u0941/i, /^\u0936\u0941\u0915\u094d\u0930/i, /^\u0936\u0928\u093f/i],
                    any: [/^\u0930\u0935\u093f/i, /^\u0938\u094b\u092e/i, /^\u092e\u0902\u0917\u0932/i, /^\u092c\u0941\u0927/i, /^\u0917\u0941\u0930\u0941/i, /^\u0936\u0941\u0915\u094d\u0930/i, /^\u0936\u0928\u093f/i]
                },
                defaultParseWidth: "any"
            }),
            dayPeriod: u({
                matchPatterns: {
                    narrow: /^(\u092a\u0942|\u0905|\u092e|\u0926.\?|\u0938\u0941|\u0926\u094b|\u0936\u093e|\u0930\u093e)/i,
                    any: /^(\u092a\u0942\u0930\u094d\u0935\u093e\u0939\u094d\u0928|\u0905\u092a\u0930\u093e\u0939\u094d\u0928|\u092e|\u0926.\?|\u0938\u0941|\u0926\u094b|\u0936\u093e|\u0930\u093e)/i
                },
                defaultMatchWidth: "any",
                parsePatterns: {
                    any: {
                        am: /^\u092a\u0942\u0930\u094d\u0935\u093e\u0939\u094d\u0928/i,
                        pm: /^\u0905\u092a\u0930\u093e\u0939\u094d\u0928/i,
                        midnight: /^\u092e\u0927\u094d\u092f/i,
                        noon: /^\u0926\u094b/i,
                        morning: /\u0938\u0941/i,
                        afternoon: /\u0926\u094b/i,
                        evening: /\u0936\u093e/i,
                        night: /\u0930\u093e/i
                    }
                },
                defaultParseWidth: "any"
            })
        }
          , ta = {
            code: "hi",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Qn[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", Bn(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? a + "\u092e\u0947 " : a + " \u092a\u0939\u0932\u0947" : a
            }
            ,
            formatLong: Un,
            formatRelative: (e,t,n,a)=>Zn[e],
            localize: Jn,
            match: ea,
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 4
            }
        };
        const na = {
            lessThanXSeconds: {
                one: {
                    standalone: "manje od 1 sekunde",
                    withPrepositionAgo: "manje od 1 sekunde",
                    withPrepositionIn: "manje od 1 sekundu"
                },
                dual: "manje od {{count}} sekunde",
                other: "manje od {{count}} sekundi"
            },
            xSeconds: {
                one: {
                    standalone: "1 sekunda",
                    withPrepositionAgo: "1 sekunde",
                    withPrepositionIn: "1 sekundu"
                },
                dual: "{{count}} sekunde",
                other: "{{count}} sekundi"
            },
            halfAMinute: "pola minute",
            lessThanXMinutes: {
                one: {
                    standalone: "manje od 1 minute",
                    withPrepositionAgo: "manje od 1 minute",
                    withPrepositionIn: "manje od 1 minutu"
                },
                dual: "manje od {{count}} minute",
                other: "manje od {{count}} minuta"
            },
            xMinutes: {
                one: {
                    standalone: "1 minuta",
                    withPrepositionAgo: "1 minute",
                    withPrepositionIn: "1 minutu"
                },
                dual: "{{count}} minute",
                other: "{{count}} minuta"
            },
            aboutXHours: {
                one: {
                    standalone: "oko 1 sat",
                    withPrepositionAgo: "oko 1 sat",
                    withPrepositionIn: "oko 1 sat"
                },
                dual: "oko {{count}} sata",
                other: "oko {{count}} sati"
            },
            xHours: {
                one: {
                    standalone: "1 sat",
                    withPrepositionAgo: "1 sat",
                    withPrepositionIn: "1 sat"
                },
                dual: "{{count}} sata",
                other: "{{count}} sati"
            },
            xDays: {
                one: {
                    standalone: "1 dan",
                    withPrepositionAgo: "1 dan",
                    withPrepositionIn: "1 dan"
                },
                dual: "{{count}} dana",
                other: "{{count}} dana"
            },
            aboutXWeeks: {
                one: {
                    standalone: "oko 1 tjedan",
                    withPrepositionAgo: "oko 1 tjedan",
                    withPrepositionIn: "oko 1 tjedan"
                },
                dual: "oko {{count}} tjedna",
                other: "oko {{count}} tjedana"
            },
            xWeeks: {
                one: {
                    standalone: "1 tjedan",
                    withPrepositionAgo: "1 tjedan",
                    withPrepositionIn: "1 tjedan"
                },
                dual: "{{count}} tjedna",
                other: "{{count}} tjedana"
            },
            aboutXMonths: {
                one: {
                    standalone: "oko 1 mjesec",
                    withPrepositionAgo: "oko 1 mjesec",
                    withPrepositionIn: "oko 1 mjesec"
                },
                dual: "oko {{count}} mjeseca",
                other: "oko {{count}} mjeseci"
            },
            xMonths: {
                one: {
                    standalone: "1 mjesec",
                    withPrepositionAgo: "1 mjesec",
                    withPrepositionIn: "1 mjesec"
                },
                dual: "{{count}} mjeseca",
                other: "{{count}} mjeseci"
            },
            aboutXYears: {
                one: {
                    standalone: "oko 1 godinu",
                    withPrepositionAgo: "oko 1 godinu",
                    withPrepositionIn: "oko 1 godinu"
                },
                dual: "oko {{count}} godine",
                other: "oko {{count}} godina"
            },
            xYears: {
                one: {
                    standalone: "1 godina",
                    withPrepositionAgo: "1 godine",
                    withPrepositionIn: "1 godinu"
                },
                dual: "{{count}} godine",
                other: "{{count}} godina"
            },
            overXYears: {
                one: {
                    standalone: "preko 1 godinu",
                    withPrepositionAgo: "preko 1 godinu",
                    withPrepositionIn: "preko 1 godinu"
                },
                dual: "preko {{count}} godine",
                other: "preko {{count}} godina"
            },
            almostXYears: {
                one: {
                    standalone: "gotovo 1 godinu",
                    withPrepositionAgo: "gotovo 1 godinu",
                    withPrepositionIn: "gotovo 1 godinu"
                },
                dual: "gotovo {{count}} godine",
                other: "gotovo {{count}} godina"
            }
        }
          , aa = {
            date: r({
                formats: {
                    full: "EEEE, d. MMMM y.",
                    long: "d. MMMM y.",
                    medium: "d. MMM y.",
                    short: "dd. MM. y."
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss (zzzz)",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'u' {{time}}",
                    long: "{{date}} 'u' {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , ra = {
            lastWeek: e=>{
                switch (e.getDay()) {
                case 0:
                    return "'pro\u0161lu nedjelju u' p";
                case 3:
                    return "'pro\u0161lu srijedu u' p";
                case 6:
                    return "'pro\u0161lu subotu u' p";
                default:
                    return "'pro\u0161li' EEEE 'u' p"
                }
            }
            ,
            yesterday: "'ju\u010der u' p",
            today: "'danas u' p",
            tomorrow: "'sutra u' p",
            nextWeek: e=>{
                switch (e.getDay()) {
                case 0:
                    return "'idu\u0107u nedjelju u' p";
                case 3:
                    return "'idu\u0107u srijedu u' p";
                case 6:
                    return "'idu\u0107u subotu u' p";
                default:
                    return "'pro\u0161li' EEEE 'u' p"
                }
            }
            ,
            other: "P"
        }
          , ia = {
            code: "hr",
            formatDistance: (e,t,n)=>{
                let a;
                const r = na[e];
                return a = "string" === typeof r ? r : 1 === t ? n?.addSuffix ? n.comparison && n.comparison > 0 ? r.one.withPrepositionIn : r.one.withPrepositionAgo : r.one.standalone : t % 10 > 1 && t % 10 < 5 && "1" !== String(t).substr(-2, 1) ? r.dual.replace("{{count}}", String(t)) : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "za " + a : "prije " + a : a
            }
            ,
            formatLong: aa,
            formatRelative: (e,t,n,a)=>{
                const r = ra[e];
                return "function" === typeof r ? r(t) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["pr.n.e.", "AD"],
                        abbreviated: ["pr. Kr.", "po. Kr."],
                        wide: ["Prije Krista", "Poslije Krista"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1.", "2.", "3.", "4."],
                        abbreviated: ["1. kv.", "2. kv.", "3. kv.", "4. kv."],
                        wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."],
                        abbreviated: ["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"],
                        wide: ["sije\u010danj", "velja\u010da", "o\u017eujak", "travanj", "svibanj", "lipanj", "srpanj", "kolovoz", "rujan", "listopad", "studeni", "prosinac"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."],
                        abbreviated: ["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"],
                        wide: ["sije\u010dnja", "velja\u010de", "o\u017eujka", "travnja", "svibnja", "lipnja", "srpnja", "kolovoza", "rujna", "listopada", "studenog", "prosinca"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["N", "P", "U", "S", "\u010c", "P", "S"],
                        short: ["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"],
                        abbreviated: ["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"],
                        wide: ["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", "petak", "subota"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutro",
                            afternoon: "popodne",
                            evening: "nave\u010der",
                            night: "no\u0107u"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutro",
                            afternoon: "popodne",
                            evening: "nave\u010der",
                            night: "no\u0107u"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutro",
                            afternoon: "poslije podne",
                            evening: "nave\u010der",
                            night: "no\u0107u"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutro",
                            afternoon: "popodne",
                            evening: "nave\u010der",
                            night: "no\u0107u"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutro",
                            afternoon: "popodne",
                            evening: "nave\u010der",
                            night: "no\u0107u"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutro",
                            afternoon: "poslije podne",
                            evening: "nave\u010der",
                            night: "no\u0107u"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)\./i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(pr\.n\.e\.|AD)/i,
                        abbreviated: /^(pr\.\s?Kr\.|po\.\s?Kr\.)/i,
                        wide: /^(Prije Krista|prije nove ere|Poslije Krista|nova era)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^pr/i, /^(po|nova)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234]\.\s?kv\.?/i,
                        wide: /^[1234]\. kvartal/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(10|11|12|[123456789])\./i,
                        abbreviated: /^(sij|velj|(o\u017eu|ozu)|tra|svi|lip|srp|kol|ruj|lis|stu|pro)/i,
                        wide: /^((sije\u010danj|sije\u010dnja|sijecanj|sijecnja)|(velja\u010da|velja\u010de|veljaca|veljace)|(o\u017eujak|o\u017eujka|ozujak|ozujka)|(travanj|travnja)|(svibanj|svibnja)|(lipanj|lipnja)|(srpanj|srpnja)|(kolovoz|kolovoza)|(rujan|rujna)|(listopad|listopada)|(studeni|studenog)|(prosinac|prosinca))/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/1/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i, /8/i, /9/i, /10/i, /11/i, /12/i],
                        abbreviated: [/^sij/i, /^velj/i, /^(o\u017eu|ozu)/i, /^tra/i, /^svi/i, /^lip/i, /^srp/i, /^kol/i, /^ruj/i, /^lis/i, /^stu/i, /^pro/i],
                        wide: [/^sij/i, /^velj/i, /^(o\u017eu|ozu)/i, /^tra/i, /^svi/i, /^lip/i, /^srp/i, /^kol/i, /^ruj/i, /^lis/i, /^stu/i, /^pro/i]
                    },
                    defaultParseWidth: "wide"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[npus\u010dc]/i,
                        short: /^(ned|pon|uto|sri|(\u010det|cet)|pet|sub)/i,
                        abbreviated: /^(ned|pon|uto|sri|(\u010det|cet)|pet|sub)/i,
                        wide: /^(nedjelja|ponedjeljak|utorak|srijeda|(\u010detvrtak|cetvrtak)|petak|subota)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
                        any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(am|pm|ponoc|pono\u0107|(po)?podne|navecer|nave\u010der|no\u0107u|poslije podne|ujutro)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^pono/i,
                            noon: /^pod/i,
                            morning: /jutro/i,
                            afternoon: /(poslije\s|po)+podne/i,
                            evening: /(navece|nave\u010de)/i,
                            night: /(nocu|no\u0107u)/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const oa = {
            lessThanXSeconds: {
                one: "mwens pase yon segond",
                other: "mwens pase {{count}} segond"
            },
            xSeconds: {
                one: "1 segond",
                other: "{{count}} segond"
            },
            halfAMinute: "30 segond",
            lessThanXMinutes: {
                one: "mwens pase yon minit",
                other: "mwens pase {{count}} minit"
            },
            xMinutes: {
                one: "1 minit",
                other: "{{count}} minit"
            },
            aboutXHours: {
                one: "anviwon in\xe8",
                other: "anviwon {{count}} \xe8"
            },
            xHours: {
                one: "1 l\xe8",
                other: "{{count}} l\xe8"
            },
            xDays: {
                one: "1 jou",
                other: "{{count}} jou"
            },
            aboutXWeeks: {
                one: "anviwon 1 sem\xe8n",
                other: "anviwon {{count}} sem\xe8n"
            },
            xWeeks: {
                one: "1 sem\xe8n",
                other: "{{count}} sem\xe8n"
            },
            aboutXMonths: {
                one: "anviwon 1 mwa",
                other: "anviwon {{count}} mwa"
            },
            xMonths: {
                one: "1 mwa",
                other: "{{count}} mwa"
            },
            aboutXYears: {
                one: "anviwon 1 an",
                other: "anviwon {{count}} an"
            },
            xYears: {
                one: "1 an",
                other: "{{count}} an"
            },
            overXYears: {
                one: "plis pase 1 an",
                other: "plis pase {{count}} an"
            },
            almostXYears: {
                one: "pr\xe8ske 1 an",
                other: "pr\xe8ske {{count}} an"
            }
        }
          , sa = {
            date: r({
                formats: {
                    full: "EEEE d MMMM y",
                    long: "d MMMM y",
                    medium: "d MMM y",
                    short: "dd/MM/y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'nan l\xe8' {{time}}",
                    long: "{{date}} 'nan l\xe8' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , ua = {
            lastWeek: "eeee 'pase nan l\xe8' p",
            yesterday: "'y\xe8 nan l\xe8' p",
            today: "'jodi a' p",
            tomorrow: "'demen nan l\xe8' p'",
            nextWeek: "eeee 'pwochen nan l\xe8' p",
            other: "P"
        }
          , da = {
            code: "ht",
            formatDistance: (e,t,n)=>{
                let a;
                const r = oa[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "nan " + a : "sa f\xe8 " + a : a
            }
            ,
            formatLong: sa,
            formatRelative: (e,t,n,a)=>ua[e],
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e);
                    if (0 === n)
                        return String(n);
                    return n + (1 === n ? "ye" : "y\xe8m")
                }
                ,
                era: s({
                    values: {
                        narrow: ["av. J.-K", "ap. J.-K"],
                        abbreviated: ["av. J.-K", "ap. J.-K"],
                        wide: ["anvan Jezi Kris", "apre Jezi Kris"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["T1", "T2", "T3", "T4"],
                        abbreviated: ["1ye trim.", "2y\xe8m trim.", "3y\xe8m trim.", "4y\xe8m trim."],
                        wide: ["1ye trim\xe8s", "2y\xe8m trim\xe8s", "3y\xe8m trim\xe8s", "4y\xe8m trim\xe8s"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"],
                        abbreviated: ["janv.", "fevr.", "mas", "avr.", "me", "jen", "jiy\xe8", "out", "sept.", "okt.", "nov.", "des."],
                        wide: ["janvye", "fevrye", "mas", "avril", "me", "jen", "jiy\xe8", "out", "septanm", "okt\xf2b", "novanm", "desanm"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["D", "L", "M", "M", "J", "V", "S"],
                        short: ["di", "le", "ma", "m\xe8", "je", "va", "sa"],
                        abbreviated: ["dim.", "len.", "mad.", "m\xe8k.", "jed.", "van.", "sam."],
                        wide: ["dimanch", "lendi", "madi", "m\xe8kredi", "jedi", "vandredi", "samdi"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "minwit",
                            noon: "midi",
                            morning: "mat.",
                            afternoon: "ap.m.",
                            evening: "swa",
                            night: "mat."
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "minwit",
                            noon: "midi",
                            morning: "maten",
                            afternoon: "apr\xe8midi",
                            evening: "swa",
                            night: "maten"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "minwit",
                            noon: "midi",
                            morning: "nan maten",
                            afternoon: "nan apr\xe8midi",
                            evening: "nan asw\xe8",
                            night: "nan maten"
                        }
                    },
                    defaultWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(ye|y\xe8m)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(av\.J\.K|ap\.J\.K|ap\.J\.-K)/i,
                        abbreviated: /^(av\.J\.-K|av\.J-K|apr\.J\.-K|apr\.J-K|ap\.J-K)/i,
                        wide: /^(avan Jezi Kris|apre Jezi Kris)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^av/i, /^ap/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^t[1234]/i,
                        wide: /^[1234](ye|y\xe8m)? trim\xe8s/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(janv|fevr|mas|avr|me|jen|jiy\xe8|out|sept|okt|nov|des)\.?/i,
                        wide: /^(janvye|fevrye|mas|avril|me|jen|jiy\xe8|out|septanm|okt\xf2b|novanm|desanm)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^o/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^f/i, /^ma/i, /^av/i, /^me/i, /^je/i, /^ji/i, /^ou/i, /^s/i, /^ok/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[lmjvsd]/i,
                        short: /^(di|le|ma|me|je|va|sa)/i,
                        abbreviated: /^(dim|len|mad|m\xe8k|jed|van|sam)\.?/i,
                        wide: /^(dimanch|lendi|madi|m\xe8kredi|jedi|vandredi|samdi)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],
                        any: [/^di/i, /^le/i, /^ma/i, /^m\xe8/i, /^je/i, /^va/i, /^sa/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|minwit|midi|mat\.?|ap\.?m\.?|swa)/i,
                        any: /^([ap]\.?\s?m\.?|nan maten|nan apr\xe8midi|nan asw\xe8)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^min/i,
                            noon: /^mid/i,
                            morning: /mat/i,
                            afternoon: /ap/i,
                            evening: /sw/i,
                            night: /nwit/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const la = {
            about: "k\xf6r\xfclbel\xfcl",
            over: "t\xf6bb mint",
            almost: "majdnem",
            lessthan: "kevesebb mint"
        }
          , ca = {
            xseconds: " m\xe1sodperc",
            halfaminute: "f\xe9l perc",
            xminutes: " perc",
            xhours: " \xf3ra",
            xdays: " nap",
            xweeks: " h\xe9t",
            xmonths: " h\xf3nap",
            xyears: " \xe9v"
        }
          , ma = {
            xseconds: {
                "-1": " m\xe1sodperccel ezel\u0151tt",
                1: " m\xe1sodperc m\xfalva",
                0: " m\xe1sodperce"
            },
            halfaminute: {
                "-1": "f\xe9l perccel ezel\u0151tt",
                1: "f\xe9l perc m\xfalva",
                0: "f\xe9l perce"
            },
            xminutes: {
                "-1": " perccel ezel\u0151tt",
                1: " perc m\xfalva",
                0: " perce"
            },
            xhours: {
                "-1": " \xf3r\xe1val ezel\u0151tt",
                1: " \xf3ra m\xfalva",
                0: " \xf3r\xe1ja"
            },
            xdays: {
                "-1": " nappal ezel\u0151tt",
                1: " nap m\xfalva",
                0: " napja"
            },
            xweeks: {
                "-1": " h\xe9ttel ezel\u0151tt",
                1: " h\xe9t m\xfalva",
                0: " hete"
            },
            xmonths: {
                "-1": " h\xf3nappal ezel\u0151tt",
                1: " h\xf3nap m\xfalva",
                0: " h\xf3napja"
            },
            xyears: {
                "-1": " \xe9vvel ezel\u0151tt",
                1: " \xe9v m\xfalva",
                0: " \xe9ve"
            }
        }
          , ha = {
            date: r({
                formats: {
                    full: "y. MMMM d., EEEE",
                    long: "y. MMMM d.",
                    medium: "y. MMM d.",
                    short: "y. MM. dd."
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "H:mm:ss zzzz",
                    long: "H:mm:ss z",
                    medium: "H:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , fa = ["vas\xe1rnap", "h\xe9tf\u0151n", "kedden", "szerd\xe1n", "cs\xfct\xf6rt\xf6k\xf6n", "p\xe9nteken", "szombaton"];
        function pa(e) {
            return t=>{
                const n = fa[t.getDay()];
                return `${e ? "" : "'m\xfalt' "}'${n}' p'-kor'`
            }
        }
        const ga = {
            lastWeek: pa(!1),
            yesterday: "'tegnap' p'-kor'",
            today: "'ma' p'-kor'",
            tomorrow: "'holnap' p'-kor'",
            nextWeek: pa(!0),
            other: "P"
        }
          , va = {
            code: "hu",
            formatDistance: (e,t,n)=>{
                const a = e.match(/about|over|almost|lessthan/i)
                  , r = a ? e.replace(a[0], "") : e
                  , i = !0 === n?.addSuffix
                  , o = r.toLowerCase()
                  , s = i ? ma[o][n?.comparison || 0] : ca[o];
                let u = "halfaminute" === o ? s : t + s;
                if (a) {
                    const e = a[0].toLowerCase();
                    u = la[e] + " " + u
                }
                return u
            }
            ,
            formatLong: ha,
            formatRelative: (e,t)=>{
                const n = ga[e];
                return "function" === typeof n ? n(t) : n
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["ie.", "isz."],
                        abbreviated: ["i. e.", "i. sz."],
                        wide: ["Krisztus el\u0151tt", "id\u0151sz\xe1m\xedt\xe1sunk szerint"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1.", "2.", "3.", "4."],
                        abbreviated: ["1. n.\xe9v", "2. n.\xe9v", "3. n.\xe9v", "4. n.\xe9v"],
                        wide: ["1. negyed\xe9v", "2. negyed\xe9v", "3. negyed\xe9v", "4. negyed\xe9v"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1,
                    formattingValues: {
                        narrow: ["I.", "II.", "III.", "IV."],
                        abbreviated: ["I. n.\xe9v", "II. n.\xe9v", "III. n.\xe9v", "IV. n.\xe9v"],
                        wide: ["I. negyed\xe9v", "II. negyed\xe9v", "III. negyed\xe9v", "IV. negyed\xe9v"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "\xc1", "M", "J", "J", "A", "Sz", "O", "N", "D"],
                        abbreviated: ["jan.", "febr.", "m\xe1rc.", "\xe1pr.", "m\xe1j.", "j\xfan.", "j\xfal.", "aug.", "szept.", "okt.", "nov.", "dec."],
                        wide: ["janu\xe1r", "febru\xe1r", "m\xe1rcius", "\xe1prilis", "m\xe1jus", "j\xfanius", "j\xfalius", "augusztus", "szeptember", "okt\xf3ber", "november", "december"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["V", "H", "K", "Sz", "Cs", "P", "Sz"],
                        short: ["V", "H", "K", "Sze", "Cs", "P", "Szo"],
                        abbreviated: ["V", "H", "K", "Sze", "Cs", "P", "Szo"],
                        wide: ["vas\xe1rnap", "h\xe9tf\u0151", "kedd", "szerda", "cs\xfct\xf6rt\xf6k", "p\xe9ntek", "szombat"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "de.",
                            pm: "du.",
                            midnight: "\xe9jf\xe9l",
                            noon: "d\xe9l",
                            morning: "reggel",
                            afternoon: "du.",
                            evening: "este",
                            night: "\xe9jjel"
                        },
                        abbreviated: {
                            am: "de.",
                            pm: "du.",
                            midnight: "\xe9jf\xe9l",
                            noon: "d\xe9l",
                            morning: "reggel",
                            afternoon: "du.",
                            evening: "este",
                            night: "\xe9jjel"
                        },
                        wide: {
                            am: "de.",
                            pm: "du.",
                            midnight: "\xe9jf\xe9l",
                            noon: "d\xe9l",
                            morning: "reggel",
                            afternoon: "d\xe9lut\xe1n",
                            evening: "este",
                            night: "\xe9jjel"
                        }
                    },
                    defaultWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)\.?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(ie\.|isz\.)/i,
                        abbreviated: /^(i\.\s?e\.?|b?\s?c\s?e|i\.\s?sz\.?)/i,
                        wide: /^(Krisztus el\u0151tt|id\u0151sz\xe1m\xedt\xe1sunk el\u0151tt|id\u0151sz\xe1m\xedt\xe1sunk szerint|i\. sz\.)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/ie/i, /isz/i],
                        abbreviated: [/^(i\.?\s?e\.?|b\s?ce)/i, /^(i\.?\s?sz\.?|c\s?e)/i],
                        any: [/el\u0151tt/i, /(szerint|i. sz.)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]\.?/i,
                        abbreviated: /^[1234]?\.?\s?n\.\xe9v/i,
                        wide: /^([1234]|I|II|III|IV)?\.?\s?negyed\xe9v/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1|I$/i, /2|II$/i, /3|III/i, /4|IV/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfma\xe1sond]|sz/i,
                        abbreviated: /^(jan\.?|febr\.?|m\xe1rc\.?|\xe1pr\.?|m\xe1j\.?|j\xfan\.?|j\xfal\.?|aug\.?|szept\.?|okt\.?|nov\.?|dec\.?)/i,
                        wide: /^(janu\xe1r|febru\xe1r|m\xe1rcius|\xe1prilis|m\xe1jus|j\xfanius|j\xfalius|augusztus|szeptember|okt\xf3ber|november|december)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a|\xe1/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s|sz/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^f/i, /^m\xe1r/i, /^\xe1p/i, /^m\xe1j/i, /^j\xfan/i, /^j\xfal/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^([vhkpc]|sz|cs|sz)/i,
                        short: /^([vhkp]|sze|cs|szo)/i,
                        abbreviated: /^([vhkp]|sze|cs|szo)/i,
                        wide: /^(vas\xe1rnap|h\xe9tf\u0151|kedd|szerda|cs\xfct\xf6rt\xf6k|p\xe9ntek|szombat)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^v/i, /^h/i, /^k/i, /^sz/i, /^c/i, /^p/i, /^sz/i],
                        any: [/^v/i, /^h/i, /^k/i, /^sze/i, /^c/i, /^p/i, /^szo/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^((de|du)\.?|\xe9jf\xe9l|d\xe9lut\xe1n|d\xe9l|reggel|este|\xe9jjel)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^de\.?/i,
                            pm: /^du\.?/i,
                            midnight: /^\xe9jf/i,
                            noon: /^d\xe9/i,
                            morning: /reg/i,
                            afternoon: /^d\xe9lu\.?/i,
                            evening: /es/i,
                            night: /\xe9jj/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const wa = {
            lessThanXSeconds: {
                one: "\u0561\u057e\u0565\u056c\u056b \u0584\u056b\u0579 \u0584\u0561\u0576 1 \u057e\u0561\u0575\u0580\u056f\u0575\u0561\u0576",
                other: "\u0561\u057e\u0565\u056c\u056b \u0584\u056b\u0579 \u0584\u0561\u0576 {{count}} \u057e\u0561\u0575\u0580\u056f\u0575\u0561\u0576"
            },
            xSeconds: {
                one: "1 \u057e\u0561\u0575\u0580\u056f\u0575\u0561\u0576",
                other: "{{count}} \u057e\u0561\u0575\u0580\u056f\u0575\u0561\u0576"
            },
            halfAMinute: "\u056f\u0565\u057d \u0580\u0578\u057a\u0565",
            lessThanXMinutes: {
                one: "\u0561\u057e\u0565\u056c\u056b \u0584\u056b\u0579 \u0584\u0561\u0576 1 \u0580\u0578\u057a\u0565",
                other: "\u0561\u057e\u0565\u056c\u056b \u0584\u056b\u0579 \u0584\u0561\u0576 {{count}} \u0580\u0578\u057a\u0565"
            },
            xMinutes: {
                one: "1 \u0580\u0578\u057a\u0565",
                other: "{{count}} \u0580\u0578\u057a\u0565"
            },
            aboutXHours: {
                one: "\u0574\u0578\u057f 1 \u056a\u0561\u0574",
                other: "\u0574\u0578\u057f {{count}} \u056a\u0561\u0574"
            },
            xHours: {
                one: "1 \u056a\u0561\u0574",
                other: "{{count}} \u056a\u0561\u0574"
            },
            xDays: {
                one: "1 \u0585\u0580",
                other: "{{count}} \u0585\u0580"
            },
            aboutXWeeks: {
                one: "\u0574\u0578\u057f 1 \u0577\u0561\u0562\u0561\u0569",
                other: "\u0574\u0578\u057f {{count}} \u0577\u0561\u0562\u0561\u0569"
            },
            xWeeks: {
                one: "1 \u0577\u0561\u0562\u0561\u0569",
                other: "{{count}} \u0577\u0561\u0562\u0561\u0569"
            },
            aboutXMonths: {
                one: "\u0574\u0578\u057f 1 \u0561\u0574\u056b\u057d",
                other: "\u0574\u0578\u057f {{count}} \u0561\u0574\u056b\u057d"
            },
            xMonths: {
                one: "1 \u0561\u0574\u056b\u057d",
                other: "{{count}} \u0561\u0574\u056b\u057d"
            },
            aboutXYears: {
                one: "\u0574\u0578\u057f 1 \u057f\u0561\u0580\u056b",
                other: "\u0574\u0578\u057f {{count}} \u057f\u0561\u0580\u056b"
            },
            xYears: {
                one: "1 \u057f\u0561\u0580\u056b",
                other: "{{count}} \u057f\u0561\u0580\u056b"
            },
            overXYears: {
                one: "\u0561\u057e\u0565\u056c\u056b \u0584\u0561\u0576 1 \u057f\u0561\u0580\u056b",
                other: "\u0561\u057e\u0565\u056c\u056b \u0584\u0561\u0576 {{count}} \u057f\u0561\u0580\u056b"
            },
            almostXYears: {
                one: "\u0570\u0561\u0574\u0561\u0580\u0575\u0561 1 \u057f\u0561\u0580\u056b",
                other: "\u0570\u0561\u0574\u0561\u0580\u0575\u0561 {{count}} \u057f\u0561\u0580\u056b"
            }
        }
          , ba = {
            date: r({
                formats: {
                    full: "d MMMM, y, EEEE",
                    long: "d MMMM, y",
                    medium: "d MMM, y",
                    short: "dd.MM.yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u056a\u2024'{{time}}",
                    long: "{{date}} '\u056a\u2024'{{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , ya = {
            lastWeek: "'\u0576\u0561\u056d\u0578\u0580\u0564' eeee p'\u058a\u056b\u0576'",
            yesterday: "'\u0565\u0580\u0565\u056f' p'\u058a\u056b\u0576'",
            today: "'\u0561\u0575\u057d\u0585\u0580' p'\u058a\u056b\u0576'",
            tomorrow: "'\u057e\u0561\u0572\u0568' p'\u058a\u056b\u0576'",
            nextWeek: "'\u0570\u0561\u057b\u0578\u0580\u0564' eeee p'\u058a\u056b\u0576'",
            other: "P"
        }
          , ka = {
            code: "hy",
            formatDistance: (e,t,n)=>{
                let a;
                const r = wa[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? a + " \u0570\u0565\u057f\u0578" : a + " \u0561\u057c\u0561\u057b" : a
            }
            ,
            formatLong: ba,
            formatRelative: (e,t,n,a)=>ya[e],
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e)
                      , a = n % 100;
                    return a < 10 && a % 10 === 1 ? n + "\u058a\u056b\u0576" : n + "\u058a\u0580\u0564"
                }
                ,
                era: s({
                    values: {
                        narrow: ["\u0554", "\u0544"],
                        abbreviated: ["\u0554\u0531", "\u0544\u0539"],
                        wide: ["\u0554\u0580\u056b\u057d\u057f\u0578\u057d\u056b\u0581 \u0561\u057c\u0561\u057b", "\u0544\u0565\u0580 \u0569\u057e\u0561\u0580\u056f\u0578\u0582\u0569\u0575\u0561\u0576"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u05541", "\u05542", "\u05543", "\u05544"],
                        wide: ["1\u058a\u056b\u0576 \u0584\u0561\u057c\u0578\u0580\u0564", "2\u058a\u0580\u0564 \u0584\u0561\u057c\u0578\u0580\u0564", "3\u058a\u0580\u0564 \u0584\u0561\u057c\u0578\u0580\u0564", "4\u058a\u0580\u0564 \u0584\u0561\u057c\u0578\u0580\u0564"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u0540", "\u0553", "\u0544", "\u0531", "\u0544", "\u0540", "\u0540", "\u0555", "\u054d", "\u0540", "\u0546", "\u0534"],
                        abbreviated: ["\u0570\u0578\u0582\u0576", "\u0583\u0565\u057f", "\u0574\u0561\u0580", "\u0561\u057a\u0580", "\u0574\u0561\u0575", "\u0570\u0578\u0582\u0576", "\u0570\u0578\u0582\u056c", "\u0585\u0563\u057d", "\u057d\u0565\u057a", "\u0570\u0578\u056f", "\u0576\u0578\u0575", "\u0564\u0565\u056f"],
                        wide: ["\u0570\u0578\u0582\u0576\u057e\u0561\u0580", "\u0583\u0565\u057f\u0580\u057e\u0561\u0580", "\u0574\u0561\u0580\u057f", "\u0561\u057a\u0580\u056b\u056c", "\u0574\u0561\u0575\u056b\u057d", "\u0570\u0578\u0582\u0576\u056b\u057d", "\u0570\u0578\u0582\u056c\u056b\u057d", "\u0585\u0563\u0578\u057d\u057f\u0578\u057d", "\u057d\u0565\u057a\u057f\u0565\u0574\u0562\u0565\u0580", "\u0570\u0578\u056f\u057f\u0565\u0574\u0562\u0565\u0580", "\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580", "\u0564\u0565\u056f\u057f\u0565\u0574\u0562\u0565\u0580"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u053f", "\u0535", "\u0535", "\u0549", "\u0540", "\u0548", "\u0547"],
                        short: ["\u056f\u0580", "\u0565\u0580", "\u0565\u0584", "\u0579\u0584", "\u0570\u0563", "\u0578\u0582\u0580", "\u0577\u0562"],
                        abbreviated: ["\u056f\u056b\u0580", "\u0565\u0580\u056f", "\u0565\u0580\u0584", "\u0579\u0578\u0580", "\u0570\u0576\u0563", "\u0578\u0582\u0580\u0562", "\u0577\u0561\u0562"],
                        wide: ["\u056f\u056b\u0580\u0561\u056f\u056b", "\u0565\u0580\u056f\u0578\u0582\u0577\u0561\u0562\u0569\u056b", "\u0565\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0579\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0570\u056b\u0576\u0563\u0577\u0561\u0562\u0569\u056b", "\u0578\u0582\u0580\u0562\u0561\u0569", "\u0577\u0561\u0562\u0561\u0569"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "\u056f\u0565\u057d\u0563\u0577",
                            noon: "\u056f\u0565\u057d\u0585\u0580",
                            morning: "\u0561\u057c\u0561\u057e\u0578\u057f",
                            afternoon: "\u0581\u0565\u0580\u0565\u056f",
                            evening: "\u0565\u0580\u0565\u056f\u0578",
                            night: "\u0563\u056b\u0577\u0565\u0580"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "\u056f\u0565\u057d\u0563\u056b\u0577\u0565\u0580",
                            noon: "\u056f\u0565\u057d\u0585\u0580",
                            morning: "\u0561\u057c\u0561\u057e\u0578\u057f",
                            afternoon: "\u0581\u0565\u0580\u0565\u056f",
                            evening: "\u0565\u0580\u0565\u056f\u0578",
                            night: "\u0563\u056b\u0577\u0565\u0580"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "\u056f\u0565\u057d\u0563\u056b\u0577\u0565\u0580",
                            noon: "\u056f\u0565\u057d\u0585\u0580",
                            morning: "\u0561\u057c\u0561\u057e\u0578\u057f",
                            afternoon: "\u0581\u0565\u0580\u0565\u056f",
                            evening: "\u0565\u0580\u0565\u056f\u0578",
                            night: "\u0563\u056b\u0577\u0565\u0580"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "\u056f\u0565\u057d\u0563\u0577",
                            noon: "\u056f\u0565\u057d\u0585\u0580",
                            morning: "\u0561\u057c\u0561\u057e\u0578\u057f\u0568",
                            afternoon: "\u0581\u0565\u0580\u0565\u056f\u0568",
                            evening: "\u0565\u0580\u0565\u056f\u0578\u0575\u0561\u0576",
                            night: "\u0563\u056b\u0577\u0565\u0580\u0568"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "\u056f\u0565\u057d\u0563\u056b\u0577\u0565\u0580\u056b\u0576",
                            noon: "\u056f\u0565\u057d\u0585\u0580\u056b\u0576",
                            morning: "\u0561\u057c\u0561\u057e\u0578\u057f\u0568",
                            afternoon: "\u0581\u0565\u0580\u0565\u056f\u0568",
                            evening: "\u0565\u0580\u0565\u056f\u0578\u0575\u0561\u0576",
                            night: "\u0563\u056b\u0577\u0565\u0580\u0568"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "\u056f\u0565\u057d\u0563\u056b\u0577\u0565\u0580\u056b\u0576",
                            noon: "\u056f\u0565\u057d\u0585\u0580\u056b\u0576",
                            morning: "\u0561\u057c\u0561\u057e\u0578\u057f\u0568",
                            afternoon: "\u0581\u0565\u0580\u0565\u056f\u0568",
                            evening: "\u0565\u0580\u0565\u056f\u0578\u0575\u0561\u0576",
                            night: "\u0563\u056b\u0577\u0565\u0580\u0568"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)((-|\u058a)?(\u056b\u0576|\u0580\u0564))?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u0554|\u0544)/i,
                        abbreviated: /^(\u0554\.?\s?\u0531\.?|\u0544\.?\s?\u0539\.?\s?\u0531\.?|\u0544\.?\s?\u0539\.?|\u0554\.?\s?\u0540\.?)/i,
                        wide: /^(\u0584\u0580\u056b\u057d\u057f\u0578\u057d\u056b\u0581 \u0561\u057c\u0561\u057b|\u0574\u0565\u0580 \u0569\u057e\u0561\u0580\u056f\u0578\u0582\u0569\u0575\u0578\u0582\u0576\u056b\u0581 \u0561\u057c\u0561\u057b|\u0574\u0565\u0580 \u0569\u057e\u0561\u0580\u056f\u0578\u0582\u0569\u0575\u0561\u0576|\u0584\u0580\u056b\u057d\u057f\u0578\u057d\u056b\u0581 \u0570\u0565\u057f\u0578)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u0584/i, /^\u0574/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^\u0584[1234]/i,
                        wide: /^[1234]((-|\u058a)?(\u056b\u0576|\u0580\u0564)) \u0584\u0561\u057c\u0578\u0580\u0564/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[\u0570\u0583\u0574\u0561\u0585\u057d\u0576\u0564]/i,
                        abbreviated: /^(\u0570\u0578\u0582\u0576|\u0583\u0565\u057f|\u0574\u0561\u0580|\u0561\u057a\u0580|\u0574\u0561\u0575|\u0570\u0578\u0582\u0576|\u0570\u0578\u0582\u056c|\u0585\u0563\u057d|\u057d\u0565\u057a|\u0570\u0578\u056f|\u0576\u0578\u0575|\u0564\u0565\u056f)/i,
                        wide: /^(\u0570\u0578\u0582\u0576\u057e\u0561\u0580|\u0583\u0565\u057f\u0580\u057e\u0561\u0580|\u0574\u0561\u0580\u057f|\u0561\u057a\u0580\u056b\u056c|\u0574\u0561\u0575\u056b\u057d|\u0570\u0578\u0582\u0576\u056b\u057d|\u0570\u0578\u0582\u056c\u056b\u057d|\u0585\u0563\u0578\u057d\u057f\u0578\u057d|\u057d\u0565\u057a\u057f\u0565\u0574\u0562\u0565\u0580|\u0570\u0578\u056f\u057f\u0565\u0574\u0562\u0565\u0580|\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580|\u0564\u0565\u056f\u057f\u0565\u0574\u0562\u0565\u0580)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0570/i, /^\u0583/i, /^\u0574/i, /^\u0561/i, /^\u0574/i, /^\u0570/i, /^\u0570/i, /^\u0585/i, /^\u057d/i, /^\u0570/i, /^\u0576/i, /^\u0564/i],
                        any: [/^\u0570\u0578\u0582/i, /^\u0583/i, /^\u0574\u0561\u0580/i, /^\u0561/i, /^\u0574\u0561\u0575/i, /^\u0570\u0578\u0582\u0576/i, /^\u0570\u0578\u0582\u056c/i, /^\u0585/i, /^\u057d/i, /^\u0570\u0578\u056f/i, /^\u0576/i, /^\u0564/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u0565\u0579\u0570\u0578\u0577\u056f]/i,
                        short: /^(\u056f\u0580|\u0565\u0580|\u0565\u0584|\u0579\u0584|\u0570\u0563|\u0578\u0582\u0580|\u0577\u0562)/i,
                        abbreviated: /^(\u056f\u056b\u0580|\u0565\u0580\u056f|\u0565\u0580\u0584|\u0579\u0578\u0580|\u0570\u0576\u0563|\u0578\u0582\u0580\u0562|\u0577\u0561\u0562)/i,
                        wide: /^(\u056f\u056b\u0580\u0561\u056f\u056b|\u0565\u0580\u056f\u0578\u0582\u0577\u0561\u0562\u0569\u056b|\u0565\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b|\u0579\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b|\u0570\u056b\u0576\u0563\u0577\u0561\u0562\u0569\u056b|\u0578\u0582\u0580\u0562\u0561\u0569|\u0577\u0561\u0562\u0561\u0569)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u056f/i, /^\u0565/i, /^\u0565/i, /^\u0579/i, /^\u0570/i, /^(\u0578|\u0548)/, /^\u0577/i],
                        short: [/^\u056f/i, /^\u0565\u0580/i, /^\u0565\u0584/i, /^\u0579/i, /^\u0570/i, /^(\u0578|\u0548)/, /^\u0577/i],
                        abbreviated: [/^\u056f/i, /^\u0565\u0580\u056f/i, /^\u0565\u0580\u0584/i, /^\u0579/i, /^\u0570/i, /^(\u0578|\u0548)/, /^\u0577/i],
                        wide: [/^\u056f/i, /^\u0565\u0580\u056f/i, /^\u0565\u0580\u0565/i, /^\u0579/i, /^\u0570/i, /^(\u0578|\u0548)/, /^\u0577/i]
                    },
                    defaultParseWidth: "wide"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^([ap]|\u056f\u0565\u057d\u0563\u0577|\u056f\u0565\u057d\u0585\u0580|(\u0561\u057c\u0561\u057e\u0578\u057f\u0568?|\u0581\u0565\u0580\u0565\u056f\u0568?|\u0565\u0580\u0565\u056f\u0578(\u0575\u0561\u0576)?|\u0563\u056b\u0577\u0565\u0580\u0568?))/i,
                        any: /^([ap]\.?\s?m\.?|\u056f\u0565\u057d\u0563\u056b\u0577\u0565\u0580(\u056b\u0576)?|\u056f\u0565\u057d\u0585\u0580(\u056b\u0576)?|(\u0561\u057c\u0561\u057e\u0578\u057f\u0568?|\u0581\u0565\u0580\u0565\u056f\u0568?|\u0565\u0580\u0565\u056f\u0578(\u0575\u0561\u0576)?|\u0563\u056b\u0577\u0565\u0580\u0568?))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /\u056f\u0565\u057d\u0563\u056b\u0577\u0565\u0580/i,
                            noon: /\u056f\u0565\u057d\u0585\u0580/i,
                            morning: /\u0561\u057c\u0561\u057e\u0578\u057f/i,
                            afternoon: /\u0581\u0565\u0580\u0565\u056f/i,
                            evening: /\u0565\u0580\u0565\u056f\u0578/i,
                            night: /\u0563\u056b\u0577\u0565\u0580/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const Ma = {
            lessThanXSeconds: {
                one: "kurang dari 1 detik",
                other: "kurang dari {{count}} detik"
            },
            xSeconds: {
                one: "1 detik",
                other: "{{count}} detik"
            },
            halfAMinute: "setengah menit",
            lessThanXMinutes: {
                one: "kurang dari 1 menit",
                other: "kurang dari {{count}} menit"
            },
            xMinutes: {
                one: "1 menit",
                other: "{{count}} menit"
            },
            aboutXHours: {
                one: "sekitar 1 jam",
                other: "sekitar {{count}} jam"
            },
            xHours: {
                one: "1 jam",
                other: "{{count}} jam"
            },
            xDays: {
                one: "1 hari",
                other: "{{count}} hari"
            },
            aboutXWeeks: {
                one: "sekitar 1 minggu",
                other: "sekitar {{count}} minggu"
            },
            xWeeks: {
                one: "1 minggu",
                other: "{{count}} minggu"
            },
            aboutXMonths: {
                one: "sekitar 1 bulan",
                other: "sekitar {{count}} bulan"
            },
            xMonths: {
                one: "1 bulan",
                other: "{{count}} bulan"
            },
            aboutXYears: {
                one: "sekitar 1 tahun",
                other: "sekitar {{count}} tahun"
            },
            xYears: {
                one: "1 tahun",
                other: "{{count}} tahun"
            },
            overXYears: {
                one: "lebih dari 1 tahun",
                other: "lebih dari {{count}} tahun"
            },
            almostXYears: {
                one: "hampir 1 tahun",
                other: "hampir {{count}} tahun"
            }
        }
          , Pa = {
            date: r({
                formats: {
                    full: "EEEE, d MMMM yyyy",
                    long: "d MMMM yyyy",
                    medium: "d MMM yyyy",
                    short: "d/M/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH.mm.ss",
                    long: "HH.mm.ss",
                    medium: "HH.mm",
                    short: "HH.mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'pukul' {{time}}",
                    long: "{{date}} 'pukul' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Wa = {
            lastWeek: "eeee 'lalu pukul' p",
            yesterday: "'Kemarin pukul' p",
            today: "'Hari ini pukul' p",
            tomorrow: "'Besok pukul' p",
            nextWeek: "eeee 'pukul' p",
            other: "P"
        }
          , xa = {
            code: "id",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Ma[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", t.toString()),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "dalam waktu " + a : a + " yang lalu" : a
            }
            ,
            formatLong: Pa,
            formatRelative: (e,t,n,a)=>Wa[e],
            localize: {
                ordinalNumber: (e,t)=>"ke-" + Number(e),
                era: s({
                    values: {
                        narrow: ["SM", "M"],
                        abbreviated: ["SM", "M"],
                        wide: ["Sebelum Masehi", "Masehi"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["K1", "K2", "K3", "K4"],
                        wide: ["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                        abbreviated: ["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"],
                        wide: ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["M", "S", "S", "R", "K", "J", "S"],
                        short: ["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"],
                        abbreviated: ["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"],
                        wide: ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "tengah malam",
                            noon: "tengah hari",
                            morning: "pagi",
                            afternoon: "siang",
                            evening: "sore",
                            night: "malam"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "tengah malam",
                            noon: "tengah hari",
                            morning: "pagi",
                            afternoon: "siang",
                            evening: "sore",
                            night: "malam"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "tengah malam",
                            noon: "tengah hari",
                            morning: "pagi",
                            afternoon: "siang",
                            evening: "sore",
                            night: "malam"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "tengah malam",
                            noon: "tengah hari",
                            morning: "pagi",
                            afternoon: "siang",
                            evening: "sore",
                            night: "malam"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "tengah malam",
                            noon: "tengah hari",
                            morning: "pagi",
                            afternoon: "siang",
                            evening: "sore",
                            night: "malam"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "tengah malam",
                            noon: "tengah hari",
                            morning: "pagi",
                            afternoon: "siang",
                            evening: "sore",
                            night: "malam"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^ke-(\d+)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(sm|m)/i,
                        abbreviated: /^(s\.?\s?m\.?|s\.?\s?e\.?\s?u\.?|m\.?|e\.?\s?u\.?)/i,
                        wide: /^(sebelum masehi|sebelum era umum|masehi|era umum)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^s/i, /^(m|e)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^K-?\s[1234]/i,
                        wide: /^Kuartal ke-?\s?[1234]/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(jan|feb|mar|apr|mei|jun|jul|agt|sep|okt|nov|des)/i,
                        wide: /^(januari|februari|maret|april|mei|juni|juli|agustus|september|oktober|november|desember)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^f/i, /^ma/i, /^ap/i, /^me/i, /^jun/i, /^jul/i, /^ag/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[srkjm]/i,
                        short: /^(min|sen|sel|rab|kam|jum|sab)/i,
                        abbreviated: /^(min|sen|sel|rab|kam|jum|sab)/i,
                        wide: /^(minggu|senin|selasa|rabu|kamis|jumat|sabtu)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^m/i, /^s/i, /^s/i, /^r/i, /^k/i, /^j/i, /^s/i],
                        any: [/^m/i, /^sen/i, /^sel/i, /^r/i, /^k/i, /^j/i, /^sa/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|tengah m|tengah h|(di(\swaktu)?) (pagi|siang|sore|malam))/i,
                        any: /^([ap]\.?\s?m\.?|tengah malam|tengah hari|(di(\swaktu)?) (pagi|siang|sore|malam))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^pm/i,
                            midnight: /^tengah m/i,
                            noon: /^tengah h/i,
                            morning: /pagi/i,
                            afternoon: /siang/i,
                            evening: /sore/i,
                            night: /malam/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const Sa = {
            lessThanXSeconds: {
                one: "minna en 1 sek\xfanda",
                other: "minna en {{count}} sek\xfandur"
            },
            xSeconds: {
                one: "1 sek\xfanda",
                other: "{{count}} sek\xfandur"
            },
            halfAMinute: "h\xe1lf m\xedn\xfata",
            lessThanXMinutes: {
                one: "minna en 1 m\xedn\xfata",
                other: "minna en {{count}} m\xedn\xfatur"
            },
            xMinutes: {
                one: "1 m\xedn\xfata",
                other: "{{count}} m\xedn\xfatur"
            },
            aboutXHours: {
                one: "u.\xfe.b. 1 klukkustund",
                other: "u.\xfe.b. {{count}} klukkustundir"
            },
            xHours: {
                one: "1 klukkustund",
                other: "{{count}} klukkustundir"
            },
            xDays: {
                one: "1 dagur",
                other: "{{count}} dagar"
            },
            aboutXWeeks: {
                one: "um viku",
                other: "um {{count}} vikur"
            },
            xWeeks: {
                one: "1 viku",
                other: "{{count}} vikur"
            },
            aboutXMonths: {
                one: "u.\xfe.b. 1 m\xe1nu\xf0ur",
                other: "u.\xfe.b. {{count}} m\xe1nu\xf0ir"
            },
            xMonths: {
                one: "1 m\xe1nu\xf0ur",
                other: "{{count}} m\xe1nu\xf0ir"
            },
            aboutXYears: {
                one: "u.\xfe.b. 1 \xe1r",
                other: "u.\xfe.b. {{count}} \xe1r"
            },
            xYears: {
                one: "1 \xe1r",
                other: "{{count}} \xe1r"
            },
            overXYears: {
                one: "meira en 1 \xe1r",
                other: "meira en {{count}} \xe1r"
            },
            almostXYears: {
                one: "n\xe6stum 1 \xe1r",
                other: "n\xe6stum {{count}} \xe1r"
            }
        }
          , Da = {
            date: r({
                formats: {
                    full: "EEEE, do MMMM y",
                    long: "do MMMM y",
                    medium: "do MMM y",
                    short: "d.MM.y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "'kl'. HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'kl.' {{time}}",
                    long: "{{date}} 'kl.' {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , ja = {
            lastWeek: "'s\xed\xf0asta' dddd 'kl.' p",
            yesterday: "'\xed g\xe6r kl.' p",
            today: "'\xed dag kl.' p",
            tomorrow: "'\xe1 morgun kl.' p",
            nextWeek: "dddd 'kl.' p",
            other: "P"
        }
          , Ca = {
            code: "is",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Sa[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", t.toString()),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "\xed " + a : a + " s\xed\xf0an" : a
            }
            ,
            formatLong: Da,
            formatRelative: (e,t,n,a)=>ja[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["f.Kr.", "e.Kr."],
                        abbreviated: ["f.Kr.", "e.Kr."],
                        wide: ["fyrir Krist", "eftir Krist"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1F", "2F", "3F", "4F"],
                        wide: ["1. fj\xf3r\xf0ungur", "2. fj\xf3r\xf0ungur", "3. fj\xf3r\xf0ungur", "4. fj\xf3r\xf0ungur"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "A", "M", "J", "J", "\xc1", "S", "\xd3", "N", "D"],
                        abbreviated: ["jan.", "feb.", "mars", "apr\xedl", "ma\xed", "j\xfan\xed", "j\xfal\xed", "\xe1g\xfast", "sept.", "okt.", "n\xf3v.", "des."],
                        wide: ["jan\xfaar", "febr\xfaar", "mars", "apr\xedl", "ma\xed", "j\xfan\xed", "j\xfal\xed", "\xe1g\xfast", "september", "okt\xf3ber", "n\xf3vember", "desember"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["S", "M", "\xde", "M", "F", "F", "L"],
                        short: ["Su", "M\xe1", "\xder", "Mi", "Fi", "F\xf6", "La"],
                        abbreviated: ["sun.", "m\xe1n.", "\xferi.", "mi\xf0.", "fim.", "f\xf6s.", "lau."],
                        wide: ["sunnudagur", "m\xe1nudagur", "\xferi\xf0judagur", "mi\xf0vikudagur", "fimmtudagur", "f\xf6studagur", "laugardagur"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "f",
                            pm: "e",
                            midnight: "mi\xf0n\xe6tti",
                            noon: "h\xe1degi",
                            morning: "morgunn",
                            afternoon: "s\xed\xf0degi",
                            evening: "kv\xf6ld",
                            night: "n\xf3tt"
                        },
                        abbreviated: {
                            am: "f.h.",
                            pm: "e.h.",
                            midnight: "mi\xf0n\xe6tti",
                            noon: "h\xe1degi",
                            morning: "morgunn",
                            afternoon: "s\xed\xf0degi",
                            evening: "kv\xf6ld",
                            night: "n\xf3tt"
                        },
                        wide: {
                            am: "fyrir h\xe1degi",
                            pm: "eftir h\xe1degi",
                            midnight: "mi\xf0n\xe6tti",
                            noon: "h\xe1degi",
                            morning: "morgunn",
                            afternoon: "s\xed\xf0degi",
                            evening: "kv\xf6ld",
                            night: "n\xf3tt"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "f",
                            pm: "e",
                            midnight: "\xe1 mi\xf0n\xe6tti",
                            noon: "\xe1 h\xe1degi",
                            morning: "a\xf0 morgni",
                            afternoon: "s\xed\xf0degis",
                            evening: "um kv\xf6ld",
                            night: "um n\xf3tt"
                        },
                        abbreviated: {
                            am: "f.h.",
                            pm: "e.h.",
                            midnight: "\xe1 mi\xf0n\xe6tti",
                            noon: "\xe1 h\xe1degi",
                            morning: "a\xf0 morgni",
                            afternoon: "s\xed\xf0degis",
                            evening: "um kv\xf6ld",
                            night: "um n\xf3tt"
                        },
                        wide: {
                            am: "fyrir h\xe1degi",
                            pm: "eftir h\xe1degi",
                            midnight: "\xe1 mi\xf0n\xe6tti",
                            noon: "\xe1 h\xe1degi",
                            morning: "a\xf0 morgni",
                            afternoon: "s\xed\xf0degis",
                            evening: "um kv\xf6ld",
                            night: "um n\xf3tt"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\.)?/i,
                    parsePattern: /\d+(\.)?/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(f\.Kr\.|e\.Kr\.)/i,
                        abbreviated: /^(f\.Kr\.|e\.Kr\.)/i,
                        wide: /^(fyrir Krist|eftir Krist)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^(f\.Kr\.)/i, /^(e\.Kr\.)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]\.?/i,
                        abbreviated: /^q[1234]\.?/i,
                        wide: /^[1234]\.? fj\xf3r\xf0ungur/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1\.?/i, /2\.?/i, /3\.?/i, /4\.?/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfm\xe1s\xf3nd]/i,
                        abbreviated: /^(jan\.|feb\.|mars\.|apr\xedl\.|ma\xed|j\xfan\xed|j\xfal\xed|\xe1gust|sep\.|oct\.|nov\.|dec\.)/i,
                        wide: /^(januar|febr\xfaar|mars|apr\xedl|ma\xed|j\xfan\xed|j\xfal\xed|\xe1gust|september|okt\xf3ber|n\xf3vember|desember)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^\xe1/i, /^s/i, /^\xf3/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^ma\xed/i, /^j\xfan/i, /^j\xfal/i, /^\xe1u/i, /^s/i, /^\xf3/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[smtwf]/i,
                        short: /^(su|m\xe1|\xfer|mi|fi|f\xf6|la)/i,
                        abbreviated: /^(sun|m\xe1n|\xferi|mi\xf0|fim|f\xf6s|lau)\.?/i,
                        wide: /^(sunnudagur|m\xe1nudagur|\xferi\xf0judagur|mi\xf0vikudagur|fimmtudagur|f\xf6studagur|laugardagur)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^s/i, /^m/i, /^\xfe/i, /^m/i, /^f/i, /^f/i, /^l/i],
                        any: [/^su/i, /^m\xe1/i, /^\xfer/i, /^mi/i, /^fi/i, /^f\xf6/i, /^la/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(f|e|s\xed\xf0degis|(\xe1|a\xf0|um) (morgni|kv\xf6ld|n\xf3tt|mi\xf0n\xe6tti))/i,
                        any: /^(fyrir h\xe1degi|eftir h\xe1degi|[ef]\.?h\.?|s\xed\xf0degis|morgunn|(\xe1|a\xf0|um) (morgni|kv\xf6ld|n\xf3tt|mi\xf0n\xe6tti))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^f/i,
                            pm: /^e/i,
                            midnight: /^mi/i,
                            noon: /^h\xe1/i,
                            morning: /morgunn/i,
                            afternoon: /s\xed\xf0degi/i,
                            evening: /kv\xf6ld/i,
                            night: /n\xf3tt/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Ta = {
            lessThanXSeconds: {
                one: "meno di un secondo",
                other: "meno di {{count}} secondi"
            },
            xSeconds: {
                one: "un secondo",
                other: "{{count}} secondi"
            },
            halfAMinute: "alcuni secondi",
            lessThanXMinutes: {
                one: "meno di un minuto",
                other: "meno di {{count}} minuti"
            },
            xMinutes: {
                one: "un minuto",
                other: "{{count}} minuti"
            },
            aboutXHours: {
                one: "circa un'ora",
                other: "circa {{count}} ore"
            },
            xHours: {
                one: "un'ora",
                other: "{{count}} ore"
            },
            xDays: {
                one: "un giorno",
                other: "{{count}} giorni"
            },
            aboutXWeeks: {
                one: "circa una settimana",
                other: "circa {{count}} settimane"
            },
            xWeeks: {
                one: "una settimana",
                other: "{{count}} settimane"
            },
            aboutXMonths: {
                one: "circa un mese",
                other: "circa {{count}} mesi"
            },
            xMonths: {
                one: "un mese",
                other: "{{count}} mesi"
            },
            aboutXYears: {
                one: "circa un anno",
                other: "circa {{count}} anni"
            },
            xYears: {
                one: "un anno",
                other: "{{count}} anni"
            },
            overXYears: {
                one: "pi\xf9 di un anno",
                other: "pi\xf9 di {{count}} anni"
            },
            almostXYears: {
                one: "quasi un anno",
                other: "quasi {{count}} anni"
            }
        }
          , Ea = (e,t,n)=>{
            let a;
            const r = Ta[e];
            return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", t.toString()),
            n?.addSuffix ? n.comparison && n.comparison > 0 ? "tra " + a : a + " fa" : a
        }
          , Na = {
            date: r({
                formats: {
                    full: "EEEE d MMMM y",
                    long: "d MMMM y",
                    medium: "d MMM y",
                    short: "dd/MM/y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , za = ["domenica", "luned\xec", "marted\xec", "mercoled\xec", "gioved\xec", "venerd\xec", "sabato"];
        function Ia(e) {
            return "'" + za[e] + " alle' p"
        }
        const Oa = {
            lastWeek: (e,t,n)=>{
                const a = e.getDay();
                return $(e, t, n) ? Ia(a) : function(e) {
                    return 0 === e ? "'domenica scorsa alle' p" : "'" + za[e] + " scorso alle' p"
                }(a)
            }
            ,
            yesterday: "'ieri alle' p",
            today: "'oggi alle' p",
            tomorrow: "'domani alle' p",
            nextWeek: (e,t,n)=>{
                const a = e.getDay();
                return $(e, t, n) ? Ia(a) : function(e) {
                    return 0 === e ? "'domenica prossima alle' p" : "'" + za[e] + " prossimo alle' p"
                }(a)
            }
            ,
            other: "P"
        }
          , Ha = (e,t,n,a)=>{
            const r = Oa[e];
            return "function" === typeof r ? r(t, n, a) : r
        }
          , Aa = {
            ordinalNumber: (e,t)=>{
                const n = Number(e);
                return String(n)
            }
            ,
            era: s({
                values: {
                    narrow: ["aC", "dC"],
                    abbreviated: ["a.C.", "d.C."],
                    wide: ["avanti Cristo", "dopo Cristo"]
                },
                defaultWidth: "wide"
            }),
            quarter: s({
                values: {
                    narrow: ["1", "2", "3", "4"],
                    abbreviated: ["T1", "T2", "T3", "T4"],
                    wide: ["1\xba trimestre", "2\xba trimestre", "3\xba trimestre", "4\xba trimestre"]
                },
                defaultWidth: "wide",
                argumentCallback: e=>e - 1
            }),
            month: s({
                values: {
                    narrow: ["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"],
                    abbreviated: ["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"],
                    wide: ["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"]
                },
                defaultWidth: "wide"
            }),
            day: s({
                values: {
                    narrow: ["D", "L", "M", "M", "G", "V", "S"],
                    short: ["dom", "lun", "mar", "mer", "gio", "ven", "sab"],
                    abbreviated: ["dom", "lun", "mar", "mer", "gio", "ven", "sab"],
                    wide: ["domenica", "luned\xec", "marted\xec", "mercoled\xec", "gioved\xec", "venerd\xec", "sabato"]
                },
                defaultWidth: "wide"
            }),
            dayPeriod: s({
                values: {
                    narrow: {
                        am: "m.",
                        pm: "p.",
                        midnight: "mezzanotte",
                        noon: "mezzogiorno",
                        morning: "mattina",
                        afternoon: "pomeriggio",
                        evening: "sera",
                        night: "notte"
                    },
                    abbreviated: {
                        am: "AM",
                        pm: "PM",
                        midnight: "mezzanotte",
                        noon: "mezzogiorno",
                        morning: "mattina",
                        afternoon: "pomeriggio",
                        evening: "sera",
                        night: "notte"
                    },
                    wide: {
                        am: "AM",
                        pm: "PM",
                        midnight: "mezzanotte",
                        noon: "mezzogiorno",
                        morning: "mattina",
                        afternoon: "pomeriggio",
                        evening: "sera",
                        night: "notte"
                    }
                },
                defaultWidth: "wide",
                formattingValues: {
                    narrow: {
                        am: "m.",
                        pm: "p.",
                        midnight: "mezzanotte",
                        noon: "mezzogiorno",
                        morning: "di mattina",
                        afternoon: "del pomeriggio",
                        evening: "di sera",
                        night: "di notte"
                    },
                    abbreviated: {
                        am: "AM",
                        pm: "PM",
                        midnight: "mezzanotte",
                        noon: "mezzogiorno",
                        morning: "di mattina",
                        afternoon: "del pomeriggio",
                        evening: "di sera",
                        night: "di notte"
                    },
                    wide: {
                        am: "AM",
                        pm: "PM",
                        midnight: "mezzanotte",
                        noon: "mezzogiorno",
                        morning: "di mattina",
                        afternoon: "del pomeriggio",
                        evening: "di sera",
                        night: "di notte"
                    }
                },
                defaultFormattingWidth: "wide"
            })
        }
          , Ya = {
            ordinalNumber: d({
                matchPattern: /^(\d+)(\xba)?/i,
                parsePattern: /\d+/i,
                valueCallback: e=>parseInt(e, 10)
            }),
            era: u({
                matchPatterns: {
                    narrow: /^(aC|dC)/i,
                    abbreviated: /^(a\.?\s?C\.?|a\.?\s?e\.?\s?v\.?|d\.?\s?C\.?|e\.?\s?v\.?)/i,
                    wide: /^(avanti Cristo|avanti Era Volgare|dopo Cristo|Era Volgare)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    any: [/^a/i, /^(d|e)/i]
                },
                defaultParseWidth: "any"
            }),
            quarter: u({
                matchPatterns: {
                    narrow: /^[1234]/i,
                    abbreviated: /^t[1234]/i,
                    wide: /^[1234](\xba)? trimestre/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    any: [/1/i, /2/i, /3/i, /4/i]
                },
                defaultParseWidth: "any",
                valueCallback: e=>e + 1
            }),
            month: u({
                matchPatterns: {
                    narrow: /^[gfmalsond]/i,
                    abbreviated: /^(gen|feb|mar|apr|mag|giu|lug|ago|set|ott|nov|dic)/i,
                    wide: /^(gennaio|febbraio|marzo|aprile|maggio|giugno|luglio|agosto|settembre|ottobre|novembre|dicembre)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    narrow: [/^g/i, /^f/i, /^m/i, /^a/i, /^m/i, /^g/i, /^l/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                    any: [/^ge/i, /^f/i, /^mar/i, /^ap/i, /^mag/i, /^gi/i, /^l/i, /^ag/i, /^s/i, /^o/i, /^n/i, /^d/i]
                },
                defaultParseWidth: "any"
            }),
            day: u({
                matchPatterns: {
                    narrow: /^[dlmgvs]/i,
                    short: /^(do|lu|ma|me|gi|ve|sa)/i,
                    abbreviated: /^(dom|lun|mar|mer|gio|ven|sab)/i,
                    wide: /^(domenica|luned[i|\xec]|marted[i|\xec]|mercoled[i|\xec]|gioved[i|\xec]|venerd[i|\xec]|sabato)/i
                },
                defaultMatchWidth: "wide",
                parsePatterns: {
                    narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^g/i, /^v/i, /^s/i],
                    any: [/^d/i, /^l/i, /^ma/i, /^me/i, /^g/i, /^v/i, /^s/i]
                },
                defaultParseWidth: "any"
            }),
            dayPeriod: u({
                matchPatterns: {
                    narrow: /^(a|m\.|p|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i,
                    any: /^([ap]\.?\s?m\.?|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i
                },
                defaultMatchWidth: "any",
                parsePatterns: {
                    any: {
                        am: /^a/i,
                        pm: /^p/i,
                        midnight: /^mezza/i,
                        noon: /^mezzo/i,
                        morning: /mattina/i,
                        afternoon: /pomeriggio/i,
                        evening: /sera/i,
                        night: /notte/i
                    }
                },
                defaultParseWidth: "any"
            })
        }
          , _a = {
            code: "it",
            formatDistance: Ea,
            formatLong: Na,
            formatRelative: Ha,
            localize: Aa,
            match: Ya,
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Xa = {
            code: "it-CH",
            formatDistance: Ea,
            formatLong: {
                date: r({
                    formats: {
                        full: "EEEE d MMMM y",
                        long: "d MMMM y",
                        medium: "d MMM y",
                        short: "dd.MM.y"
                    },
                    defaultWidth: "full"
                }),
                time: r({
                    formats: {
                        full: "HH:mm:ss zzzz",
                        long: "HH:mm:ss z",
                        medium: "HH:mm:ss",
                        short: "HH:mm"
                    },
                    defaultWidth: "full"
                }),
                dateTime: r({
                    formats: {
                        full: "{{date}} {{time}}",
                        long: "{{date}} {{time}}",
                        medium: "{{date}} {{time}}",
                        short: "{{date}} {{time}}"
                    },
                    defaultWidth: "full"
                })
            },
            formatRelative: Ha,
            localize: Aa,
            match: Ya,
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Ra = {
            lessThanXSeconds: {
                one: "1\u79d2\u672a\u6e80",
                other: "{{count}}\u79d2\u672a\u6e80",
                oneWithSuffix: "\u7d041\u79d2",
                otherWithSuffix: "\u7d04{{count}}\u79d2"
            },
            xSeconds: {
                one: "1\u79d2",
                other: "{{count}}\u79d2"
            },
            halfAMinute: "30\u79d2",
            lessThanXMinutes: {
                one: "1\u5206\u672a\u6e80",
                other: "{{count}}\u5206\u672a\u6e80",
                oneWithSuffix: "\u7d041\u5206",
                otherWithSuffix: "\u7d04{{count}}\u5206"
            },
            xMinutes: {
                one: "1\u5206",
                other: "{{count}}\u5206"
            },
            aboutXHours: {
                one: "\u7d041\u6642\u9593",
                other: "\u7d04{{count}}\u6642\u9593"
            },
            xHours: {
                one: "1\u6642\u9593",
                other: "{{count}}\u6642\u9593"
            },
            xDays: {
                one: "1\u65e5",
                other: "{{count}}\u65e5"
            },
            aboutXWeeks: {
                one: "\u7d041\u9031\u9593",
                other: "\u7d04{{count}}\u9031\u9593"
            },
            xWeeks: {
                one: "1\u9031\u9593",
                other: "{{count}}\u9031\u9593"
            },
            aboutXMonths: {
                one: "\u7d041\u304b\u6708",
                other: "\u7d04{{count}}\u304b\u6708"
            },
            xMonths: {
                one: "1\u304b\u6708",
                other: "{{count}}\u304b\u6708"
            },
            aboutXYears: {
                one: "\u7d041\u5e74",
                other: "\u7d04{{count}}\u5e74"
            },
            xYears: {
                one: "1\u5e74",
                other: "{{count}}\u5e74"
            },
            overXYears: {
                one: "1\u5e74\u4ee5\u4e0a",
                other: "{{count}}\u5e74\u4ee5\u4e0a"
            },
            almostXYears: {
                one: "1\u5e74\u8fd1\u304f",
                other: "{{count}}\u5e74\u8fd1\u304f"
            }
        }
          , La = {
            date: r({
                formats: {
                    full: "y\u5e74M\u6708d\u65e5EEEE",
                    long: "y\u5e74M\u6708d\u65e5",
                    medium: "y/MM/dd",
                    short: "y/MM/dd"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "H\u6642mm\u5206ss\u79d2 zzzz",
                    long: "H:mm:ss z",
                    medium: "H:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Fa = {
            lastWeek: "\u5148\u9031\u306eeeee\u306ep",
            yesterday: "\u6628\u65e5\u306ep",
            today: "\u4eca\u65e5\u306ep",
            tomorrow: "\u660e\u65e5\u306ep",
            nextWeek: "\u7fcc\u9031\u306eeeee\u306ep",
            other: "P"
        }
          , qa = {
            code: "ja",
            formatDistance: (e,t,n)=>{
                let a;
                n = n || {};
                const r = Ra[e];
                return a = "string" === typeof r ? r : 1 === t ? n.addSuffix && r.oneWithSuffix ? r.oneWithSuffix : r.one : n.addSuffix && r.otherWithSuffix ? r.otherWithSuffix.replace("{{count}}", String(t)) : r.other.replace("{{count}}", String(t)),
                n.addSuffix ? n.comparison && n.comparison > 0 ? a + "\u5f8c" : a + "\u524d" : a
            }
            ,
            formatLong: La,
            formatRelative: (e,t,n,a)=>Fa[e],
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e);
                    switch (String(t?.unit)) {
                    case "year":
                        return `${n}\u5e74`;
                    case "quarter":
                        return `\u7b2c${n}\u56db\u534a\u671f`;
                    case "month":
                        return `${n}\u6708`;
                    case "week":
                        return `\u7b2c${n}\u9031`;
                    case "date":
                        return `${n}\u65e5`;
                    case "hour":
                        return `${n}\u6642`;
                    case "minute":
                        return `${n}\u5206`;
                    case "second":
                        return `${n}\u79d2`;
                    default:
                        return `${n}`
                    }
                }
                ,
                era: s({
                    values: {
                        narrow: ["BC", "AC"],
                        abbreviated: ["\u7d00\u5143\u524d", "\u897f\u66a6"],
                        wide: ["\u7d00\u5143\u524d", "\u897f\u66a6"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["\u7b2c1\u56db\u534a\u671f", "\u7b2c2\u56db\u534a\u671f", "\u7b2c3\u56db\u534a\u671f", "\u7b2c4\u56db\u534a\u671f"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>Number(e) - 1
                }),
                month: s({
                    values: {
                        narrow: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],
                        abbreviated: ["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"],
                        wide: ["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"],
                        short: ["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"],
                        abbreviated: ["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"],
                        wide: ["\u65e5\u66dc\u65e5", "\u6708\u66dc\u65e5", "\u706b\u66dc\u65e5", "\u6c34\u66dc\u65e5", "\u6728\u66dc\u65e5", "\u91d1\u66dc\u65e5", "\u571f\u66dc\u65e5"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u5348\u524d",
                            pm: "\u5348\u5f8c",
                            midnight: "\u6df1\u591c",
                            noon: "\u6b63\u5348",
                            morning: "\u671d",
                            afternoon: "\u5348\u5f8c",
                            evening: "\u591c",
                            night: "\u6df1\u591c"
                        },
                        abbreviated: {
                            am: "\u5348\u524d",
                            pm: "\u5348\u5f8c",
                            midnight: "\u6df1\u591c",
                            noon: "\u6b63\u5348",
                            morning: "\u671d",
                            afternoon: "\u5348\u5f8c",
                            evening: "\u591c",
                            night: "\u6df1\u591c"
                        },
                        wide: {
                            am: "\u5348\u524d",
                            pm: "\u5348\u5f8c",
                            midnight: "\u6df1\u591c",
                            noon: "\u6b63\u5348",
                            morning: "\u671d",
                            afternoon: "\u5348\u5f8c",
                            evening: "\u591c",
                            night: "\u6df1\u591c"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u5348\u524d",
                            pm: "\u5348\u5f8c",
                            midnight: "\u6df1\u591c",
                            noon: "\u6b63\u5348",
                            morning: "\u671d",
                            afternoon: "\u5348\u5f8c",
                            evening: "\u591c",
                            night: "\u6df1\u591c"
                        },
                        abbreviated: {
                            am: "\u5348\u524d",
                            pm: "\u5348\u5f8c",
                            midnight: "\u6df1\u591c",
                            noon: "\u6b63\u5348",
                            morning: "\u671d",
                            afternoon: "\u5348\u5f8c",
                            evening: "\u591c",
                            night: "\u6df1\u591c"
                        },
                        wide: {
                            am: "\u5348\u524d",
                            pm: "\u5348\u5f8c",
                            midnight: "\u6df1\u591c",
                            noon: "\u6b63\u5348",
                            morning: "\u671d",
                            afternoon: "\u5348\u5f8c",
                            evening: "\u591c",
                            night: "\u6df1\u591c"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^\u7b2c?\d+(\u5e74|\u56db\u534a\u671f|\u6708|\u9031|\u65e5|\u6642|\u5206|\u79d2)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: function(e) {
                        return parseInt(e, 10)
                    }
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(B\.?C\.?|A\.?D\.?)/i,
                        abbreviated: /^(\u7d00\u5143[\u524d\u5f8c]|\u897f\u66a6)/i,
                        wide: /^(\u7d00\u5143[\u524d\u5f8c]|\u897f\u66a6)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^B/i, /^A/i],
                        any: [/^(\u7d00\u5143\u524d)/i, /^(\u897f\u66a6|\u7d00\u5143\u5f8c)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^Q[1234]/i,
                        wide: /^\u7b2c[1234\u4e00\u4e8c\u4e09\u56db\uff11\uff12\uff13\uff14]\u56db\u534a\u671f/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/(1|\u4e00|\uff11)/i, /(2|\u4e8c|\uff12)/i, /(3|\u4e09|\uff13)/i, /(4|\u56db|\uff14)/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^([123456789]|1[012])/,
                        abbreviated: /^([123456789]|1[012])\u6708/i,
                        wide: /^([123456789]|1[012])\u6708/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^1\D/, /^2/, /^3/, /^4/, /^5/, /^6/, /^7/, /^8/, /^9/, /^10/, /^11/, /^12/]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u65e5\u6708\u706b\u6c34\u6728\u91d1\u571f]/,
                        short: /^[\u65e5\u6708\u706b\u6c34\u6728\u91d1\u571f]/,
                        abbreviated: /^[\u65e5\u6708\u706b\u6c34\u6728\u91d1\u571f]/,
                        wide: /^[\u65e5\u6708\u706b\u6c34\u6728\u91d1\u571f]\u66dc\u65e5/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u65e5/, /^\u6708/, /^\u706b/, /^\u6c34/, /^\u6728/, /^\u91d1/, /^\u571f/]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(AM|PM|\u5348\u524d|\u5348\u5f8c|\u6b63\u5348|\u6df1\u591c|\u771f\u591c\u4e2d|\u591c|\u671d)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^(A|\u5348\u524d)/i,
                            pm: /^(P|\u5348\u5f8c)/i,
                            midnight: /^\u6df1\u591c|\u771f\u591c\u4e2d/i,
                            noon: /^\u6b63\u5348/i,
                            morning: /^\u671d/i,
                            afternoon: /^\u5348\u5f8c/i,
                            evening: /^\u591c/i,
                            night: /^\u6df1\u591c/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const Ga = {
            lessThanXSeconds: {
                one: "1\u3073\u3087\u3046\u307f\u307e\u3093",
                other: "{{count}}\u3073\u3087\u3046\u307f\u307e\u3093",
                oneWithSuffix: "\u3084\u304f1\u3073\u3087\u3046",
                otherWithSuffix: "\u3084\u304f{{count}}\u3073\u3087\u3046"
            },
            xSeconds: {
                one: "1\u3073\u3087\u3046",
                other: "{{count}}\u3073\u3087\u3046"
            },
            halfAMinute: "30\u3073\u3087\u3046",
            lessThanXMinutes: {
                one: "1\u3077\u3093\u307f\u307e\u3093",
                other: "{{count}}\u3075\u3093\u307f\u307e\u3093",
                oneWithSuffix: "\u3084\u304f1\u3077\u3093",
                otherWithSuffix: "\u3084\u304f{{count}}\u3075\u3093"
            },
            xMinutes: {
                one: "1\u3077\u3093",
                other: "{{count}}\u3075\u3093"
            },
            aboutXHours: {
                one: "\u3084\u304f1\u3058\u304b\u3093",
                other: "\u3084\u304f{{count}}\u3058\u304b\u3093"
            },
            xHours: {
                one: "1\u3058\u304b\u3093",
                other: "{{count}}\u3058\u304b\u3093"
            },
            xDays: {
                one: "1\u306b\u3061",
                other: "{{count}}\u306b\u3061"
            },
            aboutXWeeks: {
                one: "\u3084\u304f1\u3057\u3085\u3046\u304b\u3093",
                other: "\u3084\u304f{{count}}\u3057\u3085\u3046\u304b\u3093"
            },
            xWeeks: {
                one: "1\u3057\u3085\u3046\u304b\u3093",
                other: "{{count}}\u3057\u3085\u3046\u304b\u3093"
            },
            aboutXMonths: {
                one: "\u3084\u304f1\u304b\u3052\u3064",
                other: "\u3084\u304f{{count}}\u304b\u3052\u3064"
            },
            xMonths: {
                one: "1\u304b\u3052\u3064",
                other: "{{count}}\u304b\u3052\u3064"
            },
            aboutXYears: {
                one: "\u3084\u304f1\u306d\u3093",
                other: "\u3084\u304f{{count}}\u306d\u3093"
            },
            xYears: {
                one: "1\u306d\u3093",
                other: "{{count}}\u306d\u3093"
            },
            overXYears: {
                one: "1\u306d\u3093\u3044\u3058\u3087\u3046",
                other: "{{count}}\u306d\u3093\u3044\u3058\u3087\u3046"
            },
            almostXYears: {
                one: "1\u306d\u3093\u3061\u304b\u304f",
                other: "{{count}}\u306d\u3093\u3061\u304b\u304f"
            }
        }
          , Ka = {
            date: r({
                formats: {
                    full: "y\u306d\u3093M\u304c\u3064d\u306b\u3061EEEE",
                    long: "y\u306d\u3093M\u304c\u3064d\u306b\u3061",
                    medium: "y/MM/dd",
                    short: "y/MM/dd"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "H\u3058mm\u3075\u3093ss\u3073\u3087\u3046 zzzz",
                    long: "H:mm:ss z",
                    medium: "H:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Va = {
            lastWeek: "\u305b\u3093\u3057\u3085\u3046\u306eeeee\u306ep",
            yesterday: "\u304d\u306e\u3046\u306ep",
            today: "\u304d\u3087\u3046\u306ep",
            tomorrow: "\u3042\u3057\u305f\u306ep",
            nextWeek: "\u3088\u304f\u3057\u3085\u3046\u306eeeee\u306ep",
            other: "P"
        }
          , $a = {
            code: "ja-Hira",
            formatDistance: (e,t,n)=>{
                let a;
                n = n || {};
                const r = Ga[e];
                return a = "string" === typeof r ? r : 1 === t ? n.addSuffix && r.oneWithSuffix ? r.oneWithSuffix : r.one : n.addSuffix && r.otherWithSuffix ? r.otherWithSuffix.replace("{{count}}", String(t)) : r.other.replace("{{count}}", String(t)),
                n.addSuffix ? n.comparison && n.comparison > 0 ? a + "\u3042\u3068" : a + "\u307e\u3048" : a
            }
            ,
            formatLong: Ka,
            formatRelative: (e,t,n,a)=>Va[e],
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e);
                    switch (String(t?.unit)) {
                    case "year":
                        return `${n}\u306d\u3093`;
                    case "quarter":
                        return `\u3060\u3044${n}\u3057\u306f\u3093\u304d`;
                    case "month":
                        return `${n}\u304c\u3064`;
                    case "week":
                        return `\u3060\u3044${n}\u3057\u3085\u3046`;
                    case "date":
                        return `${n}\u306b\u3061`;
                    case "hour":
                        return `${n}\u3058`;
                    case "minute":
                        return `${n}\u3075\u3093`;
                    case "second":
                        return `${n}\u3073\u3087\u3046`;
                    default:
                        return `${n}`
                    }
                }
                ,
                era: s({
                    values: {
                        narrow: ["BC", "AC"],
                        abbreviated: ["\u304d\u3052\u3093\u305c\u3093", "\u305b\u3044\u308c\u304d"],
                        wide: ["\u304d\u3052\u3093\u305c\u3093", "\u305b\u3044\u308c\u304d"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["\u3060\u30441\u3057\u306f\u3093\u304d", "\u3060\u30442\u3057\u306f\u3093\u304d", "\u3060\u30443\u3057\u306f\u3093\u304d", "\u3060\u30444\u3057\u306f\u3093\u304d"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>Number(e) - 1
                }),
                month: s({
                    values: {
                        narrow: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],
                        abbreviated: ["1\u304c\u3064", "2\u304c\u3064", "3\u304c\u3064", "4\u304c\u3064", "5\u304c\u3064", "6\u304c\u3064", "7\u304c\u3064", "8\u304c\u3064", "9\u304c\u3064", "10\u304c\u3064", "11\u304c\u3064", "12\u304c\u3064"],
                        wide: ["1\u304c\u3064", "2\u304c\u3064", "3\u304c\u3064", "4\u304c\u3064", "5\u304c\u3064", "6\u304c\u3064", "7\u304c\u3064", "8\u304c\u3064", "9\u304c\u3064", "10\u304c\u3064", "11\u304c\u3064", "12\u304c\u3064"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u306b\u3061", "\u3052\u3064", "\u304b", "\u3059\u3044", "\u3082\u304f", "\u304d\u3093", "\u3069"],
                        short: ["\u306b\u3061", "\u3052\u3064", "\u304b", "\u3059\u3044", "\u3082\u304f", "\u304d\u3093", "\u3069"],
                        abbreviated: ["\u306b\u3061", "\u3052\u3064", "\u304b", "\u3059\u3044", "\u3082\u304f", "\u304d\u3093", "\u3069"],
                        wide: ["\u306b\u3061\u3088\u3046\u3073", "\u3052\u3064\u3088\u3046\u3073", "\u304b\u3088\u3046\u3073", "\u3059\u3044\u3088\u3046\u3073", "\u3082\u304f\u3088\u3046\u3073", "\u304d\u3093\u3088\u3046\u3073", "\u3069\u3088\u3046\u3073"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u3054\u305c\u3093",
                            pm: "\u3054\u3054",
                            midnight: "\u3057\u3093\u3084",
                            noon: "\u3057\u3087\u3046\u3054",
                            morning: "\u3042\u3055",
                            afternoon: "\u3054\u3054",
                            evening: "\u3088\u308b",
                            night: "\u3057\u3093\u3084"
                        },
                        abbreviated: {
                            am: "\u3054\u305c\u3093",
                            pm: "\u3054\u3054",
                            midnight: "\u3057\u3093\u3084",
                            noon: "\u3057\u3087\u3046\u3054",
                            morning: "\u3042\u3055",
                            afternoon: "\u3054\u3054",
                            evening: "\u3088\u308b",
                            night: "\u3057\u3093\u3084"
                        },
                        wide: {
                            am: "\u3054\u305c\u3093",
                            pm: "\u3054\u3054",
                            midnight: "\u3057\u3093\u3084",
                            noon: "\u3057\u3087\u3046\u3054",
                            morning: "\u3042\u3055",
                            afternoon: "\u3054\u3054",
                            evening: "\u3088\u308b",
                            night: "\u3057\u3093\u3084"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u3054\u305c\u3093",
                            pm: "\u3054\u3054",
                            midnight: "\u3057\u3093\u3084",
                            noon: "\u3057\u3087\u3046\u3054",
                            morning: "\u3042\u3055",
                            afternoon: "\u3054\u3054",
                            evening: "\u3088\u308b",
                            night: "\u3057\u3093\u3084"
                        },
                        abbreviated: {
                            am: "\u3054\u305c\u3093",
                            pm: "\u3054\u3054",
                            midnight: "\u3057\u3093\u3084",
                            noon: "\u3057\u3087\u3046\u3054",
                            morning: "\u3042\u3055",
                            afternoon: "\u3054\u3054",
                            evening: "\u3088\u308b",
                            night: "\u3057\u3093\u3084"
                        },
                        wide: {
                            am: "\u3054\u305c\u3093",
                            pm: "\u3054\u3054",
                            midnight: "\u3057\u3093\u3084",
                            noon: "\u3057\u3087\u3046\u3054",
                            morning: "\u3042\u3055",
                            afternoon: "\u3054\u3054",
                            evening: "\u3088\u308b",
                            night: "\u3057\u3093\u3084"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^\u3060?\u3044?\d+(\u306d\u3093|\u3057\u306f\u3093\u304d|\u304c\u3064|\u3057\u3085\u3046|\u306b\u3061|\u3058|\u3075\u3093|\u3073\u3087\u3046)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: function(e) {
                        return parseInt(e, 10)
                    }
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(B\.?C\.?|A\.?D\.?)/i,
                        abbreviated: /^(\u304d\u3052\u3093[\u524d\u5f8c]|\u305b\u3044\u308c\u304d)/i,
                        wide: /^(\u304d\u3052\u3093[\u524d\u5f8c]|\u305b\u3044\u308c\u304d)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^B/i, /^A/i],
                        any: [/^(\u304d\u3052\u3093\u305c\u3093)/i, /^(\u305b\u3044\u308c\u304d|\u304d\u3052\u3093\u3054)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^Q[1234]/i,
                        wide: /^\u3060\u3044[1234\u4e00\u4e8c\u4e09\u56db\uff11\uff12\uff13\uff14]\u3057\u306f\u3093\u304d/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/(1|\u4e00|\uff11)/i, /(2|\u4e8c|\uff12)/i, /(3|\u4e09|\uff13)/i, /(4|\u56db|\uff14)/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^([123456789]|1[012])/,
                        abbreviated: /^([123456789]|1[012])\u304c\u3064/i,
                        wide: /^([123456789]|1[012])\u304c\u3064/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^1\D/, /^2/, /^3/, /^4/, /^5/, /^6/, /^7/, /^8/, /^9/, /^10/, /^11/, /^12/]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(\u306b\u3061|\u3052\u3064|\u304b|\u3059\u3044|\u3082\u304f|\u304d\u3093|\u3069)/,
                        short: /^(\u306b\u3061|\u3052\u3064|\u304b|\u3059\u3044|\u3082\u304f|\u304d\u3093|\u3069)/,
                        abbreviated: /^(\u306b\u3061|\u3052\u3064|\u304b|\u3059\u3044|\u3082\u304f|\u304d\u3093|\u3069)/,
                        wide: /^(\u306b\u3061|\u3052\u3064|\u304b|\u3059\u3044|\u3082\u304f|\u304d\u3093|\u3069)\u3088\u3046\u3073/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u306b\u3061/, /^\u3052\u3064/, /^\u304b/, /^\u3059\u3044/, /^\u3082\u304f/, /^\u304d\u3093/, /^\u3069/]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(AM|PM|\u3054\u305c\u3093|\u3054\u3054|\u3057\u3087\u3046\u3054|\u3057\u3093\u3084|\u307e\u3088\u306a\u304b|\u3088\u308b|\u3042\u3055)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^(A|\u3054\u305c\u3093)/i,
                            pm: /^(P|\u3054\u3054)/i,
                            midnight: /^\u3057\u3093\u3084|\u307e\u3088\u306a\u304b/i,
                            noon: /^\u3057\u3087\u3046\u3054/i,
                            morning: /^\u3042\u3055/i,
                            afternoon: /^\u3054\u3054/i,
                            evening: /^\u3088\u308b/i,
                            night: /^\u3057\u3093\u3084/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const Ba = {
            lessThanXSeconds: {
                past: "{{count}} \u10ec\u10d0\u10db\u10d6\u10d4 \u10dc\u10d0\u10d9\u10da\u10d4\u10d1\u10d8 \u10ee\u10dc\u10d8\u10e1 \u10ec\u10d8\u10dc",
                present: "{{count}} \u10ec\u10d0\u10db\u10d6\u10d4 \u10dc\u10d0\u10d9\u10da\u10d4\u10d1\u10d8",
                future: "{{count}} \u10ec\u10d0\u10db\u10d6\u10d4 \u10dc\u10d0\u10d9\u10da\u10d4\u10d1\u10e8\u10d8"
            },
            xSeconds: {
                past: "{{count}} \u10ec\u10d0\u10db\u10d8\u10e1 \u10ec\u10d8\u10dc",
                present: "{{count}} \u10ec\u10d0\u10db\u10d8",
                future: "{{count}} \u10ec\u10d0\u10db\u10e8\u10d8"
            },
            halfAMinute: {
                past: "\u10dc\u10d0\u10ee\u10d4\u10d5\u10d0\u10e0\u10d8 \u10ec\u10e3\u10d7\u10d8\u10e1 \u10ec\u10d8\u10dc",
                present: "\u10dc\u10d0\u10ee\u10d4\u10d5\u10d0\u10e0\u10d8 \u10ec\u10e3\u10d7\u10d8",
                future: "\u10dc\u10d0\u10ee\u10d4\u10d5\u10d0\u10e0\u10d8 \u10ec\u10e3\u10d7\u10e8\u10d8"
            },
            lessThanXMinutes: {
                past: "{{count}} \u10ec\u10e3\u10d7\u10d6\u10d4 \u10dc\u10d0\u10d9\u10da\u10d4\u10d1\u10d8 \u10ee\u10dc\u10d8\u10e1 \u10ec\u10d8\u10dc",
                present: "{{count}} \u10ec\u10e3\u10d7\u10d6\u10d4 \u10dc\u10d0\u10d9\u10da\u10d4\u10d1\u10d8",
                future: "{{count}} \u10ec\u10e3\u10d7\u10d6\u10d4 \u10dc\u10d0\u10d9\u10da\u10d4\u10d1\u10e8\u10d8"
            },
            xMinutes: {
                past: "{{count}} \u10ec\u10e3\u10d7\u10d8\u10e1 \u10ec\u10d8\u10dc",
                present: "{{count}} \u10ec\u10e3\u10d7\u10d8",
                future: "{{count}} \u10ec\u10e3\u10d7\u10e8\u10d8"
            },
            aboutXHours: {
                past: "\u10d3\u10d0\u10d0\u10ee\u10da\u10dd\u10d4\u10d1\u10d8\u10d7 {{count}} \u10e1\u10d0\u10d0\u10d7\u10d8\u10e1 \u10ec\u10d8\u10dc",
                present: "\u10d3\u10d0\u10d0\u10ee\u10da\u10dd\u10d4\u10d1\u10d8\u10d7 {{count}} \u10e1\u10d0\u10d0\u10d7\u10d8",
                future: "\u10d3\u10d0\u10d0\u10ee\u10da\u10dd\u10d4\u10d1\u10d8\u10d7 {{count}} \u10e1\u10d0\u10d0\u10d7\u10e8\u10d8"
            },
            xHours: {
                past: "{{count}} \u10e1\u10d0\u10d0\u10d7\u10d8\u10e1 \u10ec\u10d8\u10dc",
                present: "{{count}} \u10e1\u10d0\u10d0\u10d7\u10d8",
                future: "{{count}} \u10e1\u10d0\u10d0\u10d7\u10e8\u10d8"
            },
            xDays: {
                past: "{{count}} \u10d3\u10e6\u10d8\u10e1 \u10ec\u10d8\u10dc",
                present: "{{count}} \u10d3\u10e6\u10d4",
                future: "{{count}} \u10d3\u10e6\u10d4\u10e8\u10d8"
            },
            aboutXWeeks: {
                past: "\u10d3\u10d0\u10d0\u10ee\u10da\u10dd\u10d4\u10d1\u10d8\u10d7 {{count}} \u10d9\u10d5\u10d8\u10e0\u10d0\u10e1 \u10ec\u10d8\u10dc",
                present: "\u10d3\u10d0\u10d0\u10ee\u10da\u10dd\u10d4\u10d1\u10d8\u10d7 {{count}} \u10d9\u10d5\u10d8\u10e0\u10d0",
                future: "\u10d3\u10d0\u10d0\u10ee\u10da\u10dd\u10d4\u10d1\u10d8\u10d7 {{count}} \u10d9\u10d5\u10d8\u10e0\u10d0\u10e8\u10d8"
            },
            xWeeks: {
                past: "{{count}} \u10d9\u10d5\u10d8\u10e0\u10d0\u10e1 \u10d9\u10d5\u10d8\u10e0\u10d0",
                present: "{{count}} \u10d9\u10d5\u10d8\u10e0\u10d0",
                future: "{{count}} \u10d9\u10d5\u10d8\u10e0\u10d0\u10e8\u10d8"
            },
            aboutXMonths: {
                past: "\u10d3\u10d0\u10d0\u10ee\u10da\u10dd\u10d4\u10d1\u10d8\u10d7 {{count}} \u10d7\u10d5\u10d8\u10e1 \u10ec\u10d8\u10dc",
                present: "\u10d3\u10d0\u10d0\u10ee\u10da\u10dd\u10d4\u10d1\u10d8\u10d7 {{count}} \u10d7\u10d5\u10d4",
                future: "\u10d3\u10d0\u10d0\u10ee\u10da\u10dd\u10d4\u10d1\u10d8\u10d7 {{count}} \u10d7\u10d5\u10d4\u10e8\u10d8"
            },
            xMonths: {
                past: "{{count}} \u10d7\u10d5\u10d8\u10e1 \u10ec\u10d8\u10dc",
                present: "{{count}} \u10d7\u10d5\u10d4",
                future: "{{count}} \u10d7\u10d5\u10d4\u10e8\u10d8"
            },
            aboutXYears: {
                past: "\u10d3\u10d0\u10d0\u10ee\u10da\u10dd\u10d4\u10d1\u10d8\u10d7 {{count}} \u10ec\u10da\u10d8\u10e1 \u10ec\u10d8\u10dc",
                present: "\u10d3\u10d0\u10d0\u10ee\u10da\u10dd\u10d4\u10d1\u10d8\u10d7 {{count}} \u10ec\u10d4\u10da\u10d8",
                future: "\u10d3\u10d0\u10d0\u10ee\u10da\u10dd\u10d4\u10d1\u10d8\u10d7 {{count}} \u10ec\u10d4\u10da\u10e8\u10d8"
            },
            xYears: {
                past: "{{count}} \u10ec\u10da\u10d8\u10e1 \u10ec\u10d8\u10dc",
                present: "{{count}} \u10ec\u10d4\u10da\u10d8",
                future: "{{count}} \u10ec\u10d4\u10da\u10e8\u10d8"
            },
            overXYears: {
                past: "{{count}} \u10ec\u10d4\u10da\u10d6\u10d4 \u10db\u10d4\u10e2\u10d8 \u10ee\u10dc\u10d8\u10e1 \u10ec\u10d8\u10dc",
                present: "{{count}} \u10ec\u10d4\u10da\u10d6\u10d4 \u10db\u10d4\u10e2\u10d8",
                future: "{{count}} \u10ec\u10d4\u10da\u10d6\u10d4 \u10db\u10d4\u10e2\u10d8 \u10ee\u10dc\u10d8\u10e1 \u10e8\u10d4\u10db\u10d3\u10d4\u10d2"
            },
            almostXYears: {
                past: "\u10d7\u10d8\u10d7\u10e5\u10db\u10d8\u10e1 {{count}} \u10ec\u10da\u10d8\u10e1 \u10ec\u10d8\u10dc",
                present: "\u10d7\u10d8\u10d7\u10e5\u10db\u10d8\u10e1 {{count}} \u10ec\u10d4\u10da\u10d8",
                future: "\u10d7\u10d8\u10d7\u10e5\u10db\u10d8\u10e1 {{count}} \u10ec\u10d4\u10da\u10e8\u10d8"
            }
        }
          , Ja = {
            date: r({
                formats: {
                    full: "EEEE, do MMMM, y",
                    long: "do, MMMM, y",
                    medium: "d, MMM, y",
                    short: "dd/MM/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}'-\u10d6\u10d4'",
                    long: "{{date}} {{time}}'-\u10d6\u10d4'",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Qa = {
            lastWeek: "'\u10ec\u10d8\u10dc\u10d0' eeee p'-\u10d6\u10d4'",
            yesterday: "'\u10d2\u10e3\u10e8\u10d8\u10dc' p'-\u10d6\u10d4'",
            today: "'\u10d3\u10e6\u10d4\u10e1' p'-\u10d6\u10d4'",
            tomorrow: "'\u10ee\u10d5\u10d0\u10da' p'-\u10d6\u10d4'",
            nextWeek: "'\u10e8\u10d4\u10db\u10d3\u10d4\u10d2\u10d8' eeee p'-\u10d6\u10d4'",
            other: "P"
        }
          , Ua = {
            code: "ka",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Ba[e];
                return a = "string" === typeof r ? r : n?.addSuffix && n.comparison && n.comparison > 0 ? r.future.replace("{{count}}", String(t)) : n?.addSuffix ? r.past.replace("{{count}}", String(t)) : r.present.replace("{{count}}", String(t)),
                a
            }
            ,
            formatLong: Ja,
            formatRelative: (e,t,n,a)=>Qa[e],
            localize: {
                ordinalNumber: e=>{
                    const t = Number(e);
                    return 1 === t ? t + "-\u10da\u10d8" : t + "-\u10d4"
                }
                ,
                era: s({
                    values: {
                        narrow: ["\u10e9.\u10ec-\u10db\u10d3\u10d4", "\u10e9.\u10ec"],
                        abbreviated: ["\u10e9\u10d5.\u10ec-\u10db\u10d3\u10d4", "\u10e9\u10d5.\u10ec"],
                        wide: ["\u10e9\u10d5\u10d4\u10dc\u10e1 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d0\u10db\u10d3\u10d4", "\u10e9\u10d5\u10d4\u10dc\u10d8 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8\u10d7"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1-\u10da\u10d8 \u10d9\u10d5", "2-\u10d4 \u10d9\u10d5", "3-\u10d4 \u10d9\u10d5", "4-\u10d4 \u10d9\u10d5"],
                        wide: ["1-\u10da\u10d8 \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "2-\u10d4 \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "3-\u10d4 \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "4-\u10d4 \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u10d8\u10d0", "\u10d7\u10d4", "\u10db\u10d0", "\u10d0\u10de", "\u10db\u10e1", "\u10d5\u10dc", "\u10d5\u10da", "\u10d0\u10d2", "\u10e1\u10d4", "\u10dd\u10e5", "\u10dc\u10dd", "\u10d3\u10d4"],
                        abbreviated: ["\u10d8\u10d0\u10dc", "\u10d7\u10d4\u10d1", "\u10db\u10d0\u10e0", "\u10d0\u10de\u10e0", "\u10db\u10d0\u10d8", "\u10d8\u10d5\u10dc", "\u10d8\u10d5\u10da", "\u10d0\u10d2\u10d5", "\u10e1\u10d4\u10e5", "\u10dd\u10e5\u10e2", "\u10dc\u10dd\u10d4", "\u10d3\u10d4\u10d9"],
                        wide: ["\u10d8\u10d0\u10dc\u10d5\u10d0\u10e0\u10d8", "\u10d7\u10d4\u10d1\u10d4\u10e0\u10d5\u10d0\u10da\u10d8", "\u10db\u10d0\u10e0\u10e2\u10d8", "\u10d0\u10de\u10e0\u10d8\u10da\u10d8", "\u10db\u10d0\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10dc\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10da\u10d8\u10e1\u10d8", "\u10d0\u10d2\u10d5\u10d8\u10e1\u10e2\u10dd", "\u10e1\u10d4\u10e5\u10e2\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dd\u10e5\u10e2\u10dd\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dc\u10dd\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10d3\u10d4\u10d9\u10d4\u10db\u10d1\u10d4\u10e0\u10d8"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u10d9\u10d5", "\u10dd\u10e0", "\u10e1\u10d0", "\u10dd\u10d7", "\u10ee\u10e3", "\u10de\u10d0", "\u10e8\u10d0"],
                        short: ["\u10d9\u10d5\u10d8", "\u10dd\u10e0\u10e8", "\u10e1\u10d0\u10db", "\u10dd\u10d7\u10ee", "\u10ee\u10e3\u10d7", "\u10de\u10d0\u10e0", "\u10e8\u10d0\u10d1"],
                        abbreviated: ["\u10d9\u10d5\u10d8", "\u10dd\u10e0\u10e8", "\u10e1\u10d0\u10db", "\u10dd\u10d7\u10ee", "\u10ee\u10e3\u10d7", "\u10de\u10d0\u10e0", "\u10e8\u10d0\u10d1"],
                        wide: ["\u10d9\u10d5\u10d8\u10e0\u10d0", "\u10dd\u10e0\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10e1\u10d0\u10db\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10dd\u10d7\u10ee\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10ee\u10e3\u10d7\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10de\u10d0\u10e0\u10d0\u10e1\u10d9\u10d4\u10d5\u10d8", "\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "\u10e8\u10e3\u10d0\u10e6\u10d0\u10db\u10d4",
                            noon: "\u10e8\u10e3\u10d0\u10d3\u10e6\u10d4",
                            morning: "\u10d3\u10d8\u10da\u10d0",
                            afternoon: "\u10e1\u10d0\u10e6\u10d0\u10db\u10dd",
                            evening: "\u10e1\u10d0\u10e6\u10d0\u10db\u10dd",
                            night: "\u10e6\u10d0\u10db\u10d4"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "\u10e8\u10e3\u10d0\u10e6\u10d0\u10db\u10d4",
                            noon: "\u10e8\u10e3\u10d0\u10d3\u10e6\u10d4",
                            morning: "\u10d3\u10d8\u10da\u10d0",
                            afternoon: "\u10e1\u10d0\u10e6\u10d0\u10db\u10dd",
                            evening: "\u10e1\u10d0\u10e6\u10d0\u10db\u10dd",
                            night: "\u10e6\u10d0\u10db\u10d4"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "\u10e8\u10e3\u10d0\u10e6\u10d0\u10db\u10d4",
                            noon: "\u10e8\u10e3\u10d0\u10d3\u10e6\u10d4",
                            morning: "\u10d3\u10d8\u10da\u10d0",
                            afternoon: "\u10e1\u10d0\u10e6\u10d0\u10db\u10dd",
                            evening: "\u10e1\u10d0\u10e6\u10d0\u10db\u10dd",
                            night: "\u10e6\u10d0\u10db\u10d4"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "\u10e8\u10e3\u10d0\u10e6\u10d0\u10db\u10d8\u10d7",
                            noon: "\u10e8\u10e3\u10d0\u10d3\u10e6\u10d8\u10e1\u10d0\u10e1",
                            morning: "\u10d3\u10d8\u10da\u10d8\u10d7",
                            afternoon: "\u10dc\u10d0\u10e8\u10e3\u10d0\u10d3\u10e6\u10d4\u10d5\u10e1",
                            evening: "\u10e1\u10d0\u10e6\u10d0\u10db\u10dd\u10e1",
                            night: "\u10e6\u10d0\u10db\u10d8\u10d7"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "\u10e8\u10e3\u10d0\u10e6\u10d0\u10db\u10d8\u10d7",
                            noon: "\u10e8\u10e3\u10d0\u10d3\u10e6\u10d8\u10e1\u10d0\u10e1",
                            morning: "\u10d3\u10d8\u10da\u10d8\u10d7",
                            afternoon: "\u10dc\u10d0\u10e8\u10e3\u10d0\u10d3\u10e6\u10d4\u10d5\u10e1",
                            evening: "\u10e1\u10d0\u10e6\u10d0\u10db\u10dd\u10e1",
                            night: "\u10e6\u10d0\u10db\u10d8\u10d7"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "\u10e8\u10e3\u10d0\u10e6\u10d0\u10db\u10d8\u10d7",
                            noon: "\u10e8\u10e3\u10d0\u10d3\u10e6\u10d8\u10e1\u10d0\u10e1",
                            morning: "\u10d3\u10d8\u10da\u10d8\u10d7",
                            afternoon: "\u10dc\u10d0\u10e8\u10e3\u10d0\u10d3\u10e6\u10d4\u10d5\u10e1",
                            evening: "\u10e1\u10d0\u10e6\u10d0\u10db\u10dd\u10e1",
                            night: "\u10e6\u10d0\u10db\u10d8\u10d7"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(-\u10da\u10d8|-\u10d4)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u10e9\u10d5?\.\u10ec)/i,
                        abbreviated: /^(\u10e9\u10d5?\.\u10ec)/i,
                        wide: /^(\u10e9\u10d5\u10d4\u10dc\u10e1 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d0\u10db\u10d3\u10d4|\u10e5\u10e0\u10d8\u10e1\u10e2\u10d4\u10e8\u10dd\u10d1\u10d0\u10db\u10d3\u10d4|\u10e9\u10d5\u10d4\u10dc\u10d8 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8\u10d7|\u10e5\u10e0\u10d8\u10e1\u10e2\u10d4\u10e8\u10dd\u10d1\u10d8\u10d3\u10d0\u10dc)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^(\u10e9\u10d5\u10d4\u10dc\u10e1 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d0\u10db\u10d3\u10d4|\u10e5\u10e0\u10d8\u10e1\u10e2\u10d4\u10e8\u10dd\u10d1\u10d0\u10db\u10d3\u10d4)/i, /^(\u10e9\u10d5\u10d4\u10dc\u10d8 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8\u10d7|\u10e5\u10e0\u10d8\u10e1\u10e2\u10d4\u10e8\u10dd\u10d1\u10d8\u10d3\u10d0\u10dc)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234]-(\u10da\u10d8|\u10d4)? \u10d9\u10d5/i,
                        wide: /^[1234]-(\u10da\u10d8|\u10d4)? \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        any: /^(\u10d8\u10d0|\u10d7\u10d4|\u10db\u10d0|\u10d0\u10de|\u10db\u10e1|\u10d5\u10dc|\u10d5\u10da|\u10d0\u10d2|\u10e1\u10d4|\u10dd\u10e5|\u10dc\u10dd|\u10d3\u10d4)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: [/^\u10d8\u10d0/i, /^\u10d7/i, /^\u10db\u10d0\u10e0/i, /^\u10d0\u10de/i, /^\u10db\u10d0\u10d8/i, /^\u10d8?\u10d5\u10dc/i, /^\u10d8?\u10d5\u10da/i, /^\u10d0\u10d2/i, /^\u10e1/i, /^\u10dd/i, /^\u10dc/i, /^\u10d3/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(\u10d9\u10d5|\u10dd\u10e0|\u10e1\u10d0|\u10dd\u10d7|\u10ee\u10e3|\u10de\u10d0|\u10e8\u10d0)/i,
                        short: /^(\u10d9\u10d5\u10d8|\u10dd\u10e0\u10e8|\u10e1\u10d0\u10db|\u10dd\u10d7\u10ee|\u10ee\u10e3\u10d7|\u10de\u10d0\u10e0|\u10e8\u10d0\u10d1)/i,
                        wide: /^(\u10d9\u10d5\u10d8\u10e0\u10d0|\u10dd\u10e0\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8|\u10e1\u10d0\u10db\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8|\u10dd\u10d7\u10ee\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8|\u10ee\u10e3\u10d7\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8|\u10de\u10d0\u10e0\u10d0\u10e1\u10d9\u10d4\u10d5\u10d8|\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u10d9\u10d5/i, /^\u10dd\u10e0/i, /^\u10e1\u10d0/i, /^\u10dd\u10d7/i, /^\u10ee\u10e3/i, /^\u10de\u10d0/i, /^\u10e8\u10d0/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^([ap]\.?\s?m\.?|\u10e8\u10e3\u10d0\u10e6|\u10d3\u10d8\u10da)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^\u10e8\u10e3\u10d0\u10e6/i,
                            noon: /^\u10e8\u10e3\u10d0\u10d3\u10e6/i,
                            morning: /^\u10d3\u10d8\u10da/i,
                            afternoon: /\u10dc\u10d0\u10e8\u10e3\u10d0\u10d3\u10e6\u10d4\u10d5\u10e1/i,
                            evening: /\u10e1\u10d0\u10e6\u10d0\u10db\u10dd/i,
                            night: /\u10e6\u10d0\u10db/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const Za = {
            lessThanXSeconds: {
                regular: {
                    one: "1 \u0441\u0435\u043a\u0443\u043d\u0434\u0442\u0430\u043d \u0430\u0437",
                    singularNominative: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0442\u0430\u043d \u0430\u0437",
                    singularGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0442\u0430\u043d \u0430\u0437",
                    pluralGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0442\u0430\u043d \u0430\u0437"
                },
                future: {
                    one: "\u0431\u0456\u0440 \u0441\u0435\u043a\u0443\u043d\u0434\u0442\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    singularNominative: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0442\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    singularGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0442\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    pluralGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0442\u0430\u043d \u043a\u0435\u0439\u0456\u043d"
                }
            },
            xSeconds: {
                regular: {
                    singularNominative: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434",
                    singularGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434",
                    pluralGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                },
                past: {
                    singularNominative: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434 \u0431\u04b1\u0440\u044b\u043d",
                    singularGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434 \u0431\u04b1\u0440\u044b\u043d",
                    pluralGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434 \u0431\u04b1\u0440\u044b\u043d"
                },
                future: {
                    singularNominative: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0442\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    singularGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0442\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    pluralGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0442\u0430\u043d \u043a\u0435\u0439\u0456\u043d"
                }
            },
            halfAMinute: e=>e?.addSuffix ? e.comparison && e.comparison > 0 ? "\u0436\u0430\u0440\u0442\u044b \u043c\u0438\u043d\u0443\u0442 \u0456\u0448\u0456\u043d\u0434\u0435" : "\u0436\u0430\u0440\u0442\u044b \u043c\u0438\u043d\u0443\u0442 \u0431\u04b1\u0440\u044b\u043d" : "\u0436\u0430\u0440\u0442\u044b \u043c\u0438\u043d\u0443\u0442",
            lessThanXMinutes: {
                regular: {
                    one: "1 \u043c\u0438\u043d\u0443\u0442\u0442\u0430\u043d \u0430\u0437",
                    singularNominative: "{{count}} \u043c\u0438\u043d\u0443\u0442\u0442\u0430\u043d \u0430\u0437",
                    singularGenitive: "{{count}} \u043c\u0438\u043d\u0443\u0442\u0442\u0430\u043d \u0430\u0437",
                    pluralGenitive: "{{count}} \u043c\u0438\u043d\u0443\u0442\u0442\u0430\u043d \u0430\u0437"
                },
                future: {
                    one: "\u043c\u0438\u043d\u0443\u0442\u0442\u0430\u043d \u043a\u0435\u043c ",
                    singularNominative: "{{count}} \u043c\u0438\u043d\u0443\u0442\u0442\u0430\u043d \u043a\u0435\u043c",
                    singularGenitive: "{{count}} \u043c\u0438\u043d\u0443\u0442\u0442\u0430\u043d \u043a\u0435\u043c",
                    pluralGenitive: "{{count}} \u043c\u0438\u043d\u0443\u0442\u0442\u0430\u043d \u043a\u0435\u043c"
                }
            },
            xMinutes: {
                regular: {
                    singularNominative: "{{count}} \u043c\u0438\u043d\u0443\u0442",
                    singularGenitive: "{{count}} \u043c\u0438\u043d\u0443\u0442",
                    pluralGenitive: "{{count}} \u043c\u0438\u043d\u0443\u0442"
                },
                past: {
                    singularNominative: "{{count}} \u043c\u0438\u043d\u0443\u0442 \u0431\u04b1\u0440\u044b\u043d",
                    singularGenitive: "{{count}} \u043c\u0438\u043d\u0443\u0442 \u0431\u04b1\u0440\u044b\u043d",
                    pluralGenitive: "{{count}} \u043c\u0438\u043d\u0443\u0442 \u0431\u04b1\u0440\u044b\u043d"
                },
                future: {
                    singularNominative: "{{count}} \u043c\u0438\u043d\u0443\u0442\u0442\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    singularGenitive: "{{count}} \u043c\u0438\u043d\u0443\u0442\u0442\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    pluralGenitive: "{{count}} \u043c\u0438\u043d\u0443\u0442\u0442\u0430\u043d \u043a\u0435\u0439\u0456\u043d"
                }
            },
            aboutXHours: {
                regular: {
                    singularNominative: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0441\u0430\u0493\u0430\u0442",
                    singularGenitive: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0441\u0430\u0493\u0430\u0442",
                    pluralGenitive: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0441\u0430\u0493\u0430\u0442"
                },
                future: {
                    singularNominative: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0441\u0430\u0493\u0430\u0442\u0442\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    singularGenitive: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0441\u0430\u0493\u0430\u0442\u0442\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    pluralGenitive: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0441\u0430\u0493\u0430\u0442\u0442\u0430\u043d \u043a\u0435\u0439\u0456\u043d"
                }
            },
            xHours: {
                regular: {
                    singularNominative: "{{count}} \u0441\u0430\u0493\u0430\u0442",
                    singularGenitive: "{{count}} \u0441\u0430\u0493\u0430\u0442",
                    pluralGenitive: "{{count}} \u0441\u0430\u0493\u0430\u0442"
                }
            },
            xDays: {
                regular: {
                    singularNominative: "{{count}} \u043a\u04af\u043d",
                    singularGenitive: "{{count}} \u043a\u04af\u043d",
                    pluralGenitive: "{{count}} \u043a\u04af\u043d"
                },
                future: {
                    singularNominative: "{{count}} \u043a\u04af\u043d\u043d\u0435\u043d \u043a\u0435\u0439\u0456\u043d",
                    singularGenitive: "{{count}} \u043a\u04af\u043d\u043d\u0435\u043d \u043a\u0435\u0439\u0456\u043d",
                    pluralGenitive: "{{count}} \u043a\u04af\u043d\u043d\u0435\u043d \u043a\u0435\u0439\u0456\u043d"
                }
            },
            aboutXWeeks: {
                type: "weeks",
                one: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d 1 \u0430\u043f\u0442\u0430",
                other: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0430\u043f\u0442\u0430"
            },
            xWeeks: {
                type: "weeks",
                one: "1 \u0430\u043f\u0442\u0430",
                other: "{{count}} \u0430\u043f\u0442\u0430"
            },
            aboutXMonths: {
                regular: {
                    singularNominative: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0430\u0439",
                    singularGenitive: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0430\u0439",
                    pluralGenitive: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0430\u0439"
                },
                future: {
                    singularNominative: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0430\u0439\u0434\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    singularGenitive: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0430\u0439\u0434\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    pluralGenitive: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0430\u0439\u0434\u0430\u043d \u043a\u0435\u0439\u0456\u043d"
                }
            },
            xMonths: {
                regular: {
                    singularNominative: "{{count}} \u0430\u0439",
                    singularGenitive: "{{count}} \u0430\u0439",
                    pluralGenitive: "{{count}} \u0430\u0439"
                }
            },
            aboutXYears: {
                regular: {
                    singularNominative: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0436\u044b\u043b",
                    singularGenitive: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0436\u044b\u043b",
                    pluralGenitive: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0436\u044b\u043b"
                },
                future: {
                    singularNominative: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0436\u044b\u043b\u0434\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    singularGenitive: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0436\u044b\u043b\u0434\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    pluralGenitive: "\u0448\u0430\u043c\u0430\u043c\u0435\u043d {{count}} \u0436\u044b\u043b\u0434\u0430\u043d \u043a\u0435\u0439\u0456\u043d"
                }
            },
            xYears: {
                regular: {
                    singularNominative: "{{count}} \u0436\u044b\u043b",
                    singularGenitive: "{{count}} \u0436\u044b\u043b",
                    pluralGenitive: "{{count}} \u0436\u044b\u043b"
                },
                future: {
                    singularNominative: "{{count}} \u0436\u044b\u043b\u0434\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    singularGenitive: "{{count}} \u0436\u044b\u043b\u0434\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    pluralGenitive: "{{count}} \u0436\u044b\u043b\u0434\u0430\u043d \u043a\u0435\u0439\u0456\u043d"
                }
            },
            overXYears: {
                regular: {
                    singularNominative: "{{count}} \u0436\u044b\u043b\u0434\u0430\u043d \u0430\u0441\u0442\u0430\u043c",
                    singularGenitive: "{{count}} \u0436\u044b\u043b\u0434\u0430\u043d \u0430\u0441\u0442\u0430\u043c",
                    pluralGenitive: "{{count}} \u0436\u044b\u043b\u0434\u0430\u043d \u0430\u0441\u0442\u0430\u043c"
                },
                future: {
                    singularNominative: "{{count}} \u0436\u044b\u043b\u0434\u0430\u043d \u0430\u0441\u0442\u0430\u043c",
                    singularGenitive: "{{count}} \u0436\u044b\u043b\u0434\u0430\u043d \u0430\u0441\u0442\u0430\u043c",
                    pluralGenitive: "{{count}} \u0436\u044b\u043b\u0434\u0430\u043d \u0430\u0441\u0442\u0430\u043c"
                }
            },
            almostXYears: {
                regular: {
                    singularNominative: "{{count}} \u0436\u044b\u043b\u0493\u0430 \u0436\u0430\u049b\u044b\u043d",
                    singularGenitive: "{{count}} \u0436\u044b\u043b\u0493\u0430 \u0436\u0430\u049b\u044b\u043d",
                    pluralGenitive: "{{count}} \u0436\u044b\u043b\u0493\u0430 \u0436\u0430\u049b\u044b\u043d"
                },
                future: {
                    singularNominative: "{{count}} \u0436\u044b\u043b\u0434\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    singularGenitive: "{{count}} \u0436\u044b\u043b\u0434\u0430\u043d \u043a\u0435\u0439\u0456\u043d",
                    pluralGenitive: "{{count}} \u0436\u044b\u043b\u0434\u0430\u043d \u043a\u0435\u0439\u0456\u043d"
                }
            }
        };
        function er(e, t) {
            if (e.one && 1 === t)
                return e.one;
            const n = t % 10
              , a = t % 100;
            return 1 === n && 11 !== a ? e.singularNominative.replace("{{count}}", String(t)) : n >= 2 && n <= 4 && (a < 10 || a > 20) ? e.singularGenitive.replace("{{count}}", String(t)) : e.pluralGenitive.replace("{{count}}", String(t))
        }
        const tr = {
            date: r({
                formats: {
                    full: "EEEE, do MMMM y '\u0436.'",
                    long: "do MMMM y '\u0436.'",
                    medium: "d MMM y '\u0436.'",
                    short: "dd.MM.yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "H:mm:ss zzzz",
                    long: "H:mm:ss z",
                    medium: "H:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    any: "{{date}}, {{time}}"
                },
                defaultWidth: "any"
            })
        }
          , nr = ["\u0436\u0435\u043a\u0441\u0435\u043d\u0431\u0456\u0434\u0435", "\u0434\u04af\u0439\u0441\u0435\u043d\u0431\u0456\u0434\u0435", "\u0441\u0435\u0439\u0441\u0435\u043d\u0431\u0456\u0434\u0435", "\u0441\u04d9\u0440\u0441\u0435\u043d\u0431\u0456\u0434\u0435", "\u0431\u0435\u0439\u0441\u0435\u043d\u0431\u0456\u0434\u0435", "\u0436\u04b1\u043c\u0430\u0434\u0430", "\u0441\u0435\u043d\u0431\u0456\u0434\u0435"];
        function ar(e) {
            return "'" + nr[e] + " \u0441\u0430\u0493\u0430\u0442' p'-\u0434\u0435'"
        }
        const rr = {
            lastWeek: (e,t,n)=>{
                const a = e.getDay();
                return $(e, t, n) ? ar(a) : function(e) {
                    return "'\u04e9\u0442\u043a\u0435\u043d " + nr[e] + " \u0441\u0430\u0493\u0430\u0442' p'-\u0434\u0435'"
                }(a)
            }
            ,
            yesterday: "'\u043a\u0435\u0448\u0435 \u0441\u0430\u0493\u0430\u0442' p'-\u0434\u0435'",
            today: "'\u0431\u04af\u0433\u0456\u043d \u0441\u0430\u0493\u0430\u0442' p'-\u0434\u0435'",
            tomorrow: "'\u0435\u0440\u0442\u0435\u04a3 \u0441\u0430\u0493\u0430\u0442' p'-\u0434\u0435'",
            nextWeek: (e,t,n)=>{
                const a = e.getDay();
                return $(e, t, n) ? ar(a) : function(e) {
                    return "'\u043a\u0435\u043b\u0435\u0441\u0456 " + nr[e] + " \u0441\u0430\u0493\u0430\u0442' p'-\u0434\u0435'"
                }(a)
            }
            ,
            other: "P"
        }
          , ir = {
            0: "-\u0448\u0456",
            1: "-\u0448\u0456",
            2: "-\u0448\u0456",
            3: "-\u0448\u0456",
            4: "-\u0448\u0456",
            5: "-\u0448\u0456",
            6: "-\u0448\u044b",
            7: "-\u0448\u0456",
            8: "-\u0448\u0456",
            9: "-\u0448\u044b",
            10: "-\u0448\u044b",
            20: "-\u0448\u044b",
            30: "-\u0448\u044b",
            40: "-\u0448\u044b",
            50: "-\u0448\u0456",
            60: "-\u0448\u044b",
            70: "-\u0448\u0456",
            80: "-\u0448\u0456",
            90: "-\u0448\u044b",
            100: "-\u0448\u0456"
        }
          , or = {
            code: "kk",
            formatDistance: (e,t,n)=>{
                const a = Za[e];
                return "function" === typeof a ? a(n) : "weeks" === a.type ? 1 === t ? a.one : a.other.replace("{{count}}", String(t)) : n?.addSuffix ? n.comparison && n.comparison > 0 ? a.future ? er(a.future, t) : er(a.regular, t) + " \u043a\u0435\u0439\u0456\u043d" : a.past ? er(a.past, t) : er(a.regular, t) + " \u0431\u04b1\u0440\u044b\u043d" : er(a.regular, t)
            }
            ,
            formatLong: tr,
            formatRelative: (e,t,n,a)=>{
                const r = rr[e];
                return "function" === typeof r ? r(t, n, a) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e)
                      , a = n >= 100 ? 100 : null;
                    return n + (ir[n] || ir[n % 10] || a && ir[a] || "")
                }
                ,
                era: s({
                    values: {
                        narrow: ["\u0431.\u0437.\u0434.", "\u0431.\u0437."],
                        abbreviated: ["\u0431.\u0437.\u0434.", "\u0431.\u0437."],
                        wide: ["\u0431\u0456\u0437\u0434\u0456\u04a3 \u0437\u0430\u043c\u0430\u043d\u044b\u043c\u044b\u0437\u0493\u0430 \u0434\u0435\u0439\u0456\u043d", "\u0431\u0456\u0437\u0434\u0456\u04a3 \u0437\u0430\u043c\u0430\u043d\u044b\u043c\u044b\u0437"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1-\u0448\u0456 \u0442\u043e\u049b.", "2-\u0448\u0456 \u0442\u043e\u049b.", "3-\u0448\u0456 \u0442\u043e\u049b.", "4-\u0448\u0456 \u0442\u043e\u049b."],
                        wide: ["1-\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "2-\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "3-\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "4-\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u049a", "\u0410", "\u041d", "\u0421", "\u041c", "\u041c", "\u0428", "\u0422", "\u049a", "\u049a", "\u049a", "\u0416"],
                        abbreviated: ["\u049b\u0430\u04a3", "\u0430\u049b\u043f", "\u043d\u0430\u0443", "\u0441\u04d9\u0443", "\u043c\u0430\u043c", "\u043c\u0430\u0443", "\u0448\u0456\u043b", "\u0442\u0430\u043c", "\u049b\u044b\u0440", "\u049b\u0430\u0437", "\u049b\u0430\u0440", "\u0436\u0435\u043b"],
                        wide: ["\u049b\u0430\u04a3\u0442\u0430\u0440", "\u0430\u049b\u043f\u0430\u043d", "\u043d\u0430\u0443\u0440\u044b\u0437", "\u0441\u04d9\u0443\u0456\u0440", "\u043c\u0430\u043c\u044b\u0440", "\u043c\u0430\u0443\u0441\u044b\u043c", "\u0448\u0456\u043b\u0434\u0435", "\u0442\u0430\u043c\u044b\u0437", "\u049b\u044b\u0440\u043a\u04af\u0439\u0435\u043a", "\u049b\u0430\u0437\u0430\u043d", "\u049b\u0430\u0440\u0430\u0448\u0430", "\u0436\u0435\u043b\u0442\u043e\u049b\u0441\u0430\u043d"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["\u049a", "\u0410", "\u041d", "\u0421", "\u041c", "\u041c", "\u0428", "\u0422", "\u049a", "\u049a", "\u049a", "\u0416"],
                        abbreviated: ["\u049b\u0430\u04a3", "\u0430\u049b\u043f", "\u043d\u0430\u0443", "\u0441\u04d9\u0443", "\u043c\u0430\u043c", "\u043c\u0430\u0443", "\u0448\u0456\u043b", "\u0442\u0430\u043c", "\u049b\u044b\u0440", "\u049b\u0430\u0437", "\u049b\u0430\u0440", "\u0436\u0435\u043b"],
                        wide: ["\u049b\u0430\u04a3\u0442\u0430\u0440", "\u0430\u049b\u043f\u0430\u043d", "\u043d\u0430\u0443\u0440\u044b\u0437", "\u0441\u04d9\u0443\u0456\u0440", "\u043c\u0430\u043c\u044b\u0440", "\u043c\u0430\u0443\u0441\u044b\u043c", "\u0448\u0456\u043b\u0434\u0435", "\u0442\u0430\u043c\u044b\u0437", "\u049b\u044b\u0440\u043a\u04af\u0439\u0435\u043a", "\u049b\u0430\u0437\u0430\u043d", "\u049b\u0430\u0440\u0430\u0448\u0430", "\u0436\u0435\u043b\u0442\u043e\u049b\u0441\u0430\u043d"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u0416", "\u0414", "\u0421", "\u0421", "\u0411", "\u0416", "\u0421"],
                        short: ["\u0436\u0441", "\u0434\u0441", "\u0441\u0441", "\u0441\u0440", "\u0431\u0441", "\u0436\u043c", "\u0441\u0431"],
                        abbreviated: ["\u0436\u0441", "\u0434\u0441", "\u0441\u0441", "\u0441\u0440", "\u0431\u0441", "\u0436\u043c", "\u0441\u0431"],
                        wide: ["\u0436\u0435\u043a\u0441\u0435\u043d\u0431\u0456", "\u0434\u04af\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u04d9\u0440\u0441\u0435\u043d\u0431\u0456", "\u0431\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0436\u04b1\u043c\u0430", "\u0441\u0435\u043d\u0431\u0456"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0422\u0414",
                            pm: "\u0422\u041a",
                            midnight: "\u0442\u04af\u043d \u043e\u0440\u0442\u0430\u0441\u044b",
                            noon: "\u0442\u04af\u0441",
                            morning: "\u0442\u0430\u04a3",
                            afternoon: "\u043a\u04af\u043d\u0434\u0456\u0437",
                            evening: "\u043a\u0435\u0448",
                            night: "\u0442\u04af\u043d"
                        },
                        wide: {
                            am: "\u0422\u0414",
                            pm: "\u0422\u041a",
                            midnight: "\u0442\u04af\u043d \u043e\u0440\u0442\u0430\u0441\u044b",
                            noon: "\u0442\u04af\u0441",
                            morning: "\u0442\u0430\u04a3",
                            afternoon: "\u043a\u04af\u043d\u0434\u0456\u0437",
                            evening: "\u043a\u0435\u0448",
                            night: "\u0442\u04af\u043d"
                        }
                    },
                    defaultWidth: "any",
                    formattingValues: {
                        narrow: {
                            am: "\u0422\u0414",
                            pm: "\u0422\u041a",
                            midnight: "\u0442\u04af\u043d \u043e\u0440\u0442\u0430\u0441\u044b\u043d\u0434\u0430",
                            noon: "\u0442\u04af\u0441",
                            morning: "\u0442\u0430\u04a3",
                            afternoon: "\u043a\u04af\u043d",
                            evening: "\u043a\u0435\u0448",
                            night: "\u0442\u04af\u043d"
                        },
                        wide: {
                            am: "\u0422\u0414",
                            pm: "\u0422\u041a",
                            midnight: "\u0442\u04af\u043d \u043e\u0440\u0442\u0430\u0441\u044b\u043d\u0434\u0430",
                            noon: "\u0442\u04af\u0441\u0442\u0435",
                            morning: "\u0442\u0430\u04a3\u0435\u0440\u0442\u0435\u04a3",
                            afternoon: "\u043a\u04af\u043d\u0434\u0456\u0437",
                            evening: "\u043a\u0435\u0448\u0442\u0435",
                            night: "\u0442\u04af\u043d\u0434\u0435"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(-?(\u0448\u0456|\u0448\u044b))?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^((\u0431 )?\u0437\.?\s?\u0434\.?)/i,
                        abbreviated: /^((\u0431 )?\u0437\.?\s?\u0434\.?)/i,
                        wide: /^(\u0431\u0456\u0437\u0434\u0456\u04a3 \u0437\u0430\u043c\u0430\u043d\u044b\u043c\u044b\u0437\u0493\u0430 \u0434\u0435\u0439\u0456\u043d|\u0431\u0456\u0437\u0434\u0456\u04a3 \u0437\u0430\u043c\u0430\u043d\u044b\u043c\u044b\u0437|\u0431\u0456\u0437\u0434\u0456\u04a3 \u0437\u0430\u043c\u0430\u043d\u044b\u043c\u044b\u0437\u0434\u0430\u043d)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u0431/i, /^\u0437/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234](-?\u0448\u0456)? \u0442\u043e\u049b.?/i,
                        wide: /^[1234](-?\u0448\u0456)? \u0442\u043e\u049b\u0441\u0430\u043d/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(\u049b|\u0430|\u043d|\u0441|\u043c|\u043c\u0430\u0443|\u0448|\u0442|\u049b\u044b\u0440|\u049b\u0430\u0437|\u049b\u0430\u0440|\u0436)/i,
                        abbreviated: /^(\u049b\u0430\u04a3|\u0430\u049b\u043f|\u043d\u0430\u0443|\u0441\u04d9\u0443|\u043c\u0430\u043c|\u043c\u0430\u0443|\u0448\u0456\u043b|\u0442\u0430\u043c|\u049b\u044b\u0440|\u049b\u0430\u0437|\u049b\u0430\u0440|\u0436\u0435\u043b)/i,
                        wide: /^(\u049b\u0430\u04a3\u0442\u0430\u0440|\u0430\u049b\u043f\u0430\u043d|\u043d\u0430\u0443\u0440\u044b\u0437|\u0441\u04d9\u0443\u0456\u0440|\u043c\u0430\u043c\u044b\u0440|\u043c\u0430\u0443\u0441\u044b\u043c|\u0448\u0456\u043b\u0434\u0435|\u0442\u0430\u043c\u044b\u0437|\u049b\u044b\u0440\u043a\u04af\u0439\u0435\u043a|\u049b\u0430\u0437\u0430\u043d|\u049b\u0430\u0440\u0430\u0448\u0430|\u0436\u0435\u043b\u0442\u043e\u049b\u0441\u0430\u043d)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u049b/i, /^\u0430/i, /^\u043d/i, /^\u0441/i, /^\u043c/i, /^\u043c/i, /^\u0448/i, /^\u0442/i, /^\u049b/i, /^\u049b/i, /^\u049b/i, /^\u0436/i],
                        abbreviated: [/^\u049b\u0430\u04a3/i, /^\u0430\u049b\u043f/i, /^\u043d\u0430\u0443/i, /^\u0441\u04d9\u0443/i, /^\u043c\u0430\u043c/i, /^\u043c\u0430\u0443/i, /^\u0448\u0456\u043b/i, /^\u0442\u0430\u043c/i, /^\u049b\u044b\u0440/i, /^\u049b\u0430\u0437/i, /^\u049b\u0430\u0440/i, /^\u0436\u0435\u043b/i],
                        any: [/^\u049b/i, /^\u0430/i, /^\u043d/i, /^\u0441/i, /^\u043c/i, /^\u043c/i, /^\u0448/i, /^\u0442/i, /^\u049b/i, /^\u049b/i, /^\u049b/i, /^\u0436/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(\u0436|\u0434|\u0441|\u0441|\u0431|\u0436|\u0441)/i,
                        short: /^(\u0436\u0441|\u0434\u0441|\u0441\u0441|\u0441\u0440|\u0431\u0441|\u0436\u043c|\u0441\u0431)/i,
                        wide: /^(\u0436\u0435\u043a\u0441\u0435\u043d\u0431\u0456|\u0434\u04af\u0439\u0441\u0435\u043d\u0431\u0456|\u0441\u0435\u0439\u0441\u0435\u043d\u0431\u0456|\u0441\u04d9\u0440\u0441\u0435\u043d\u0431\u0456|\u0431\u0435\u0439\u0441\u0435\u043d\u0431\u0456|\u0436\u04b1\u043c\u0430|\u0441\u0435\u043d\u0431\u0456)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0436/i, /^\u0434/i, /^\u0441/i, /^\u0441/i, /^\u0431/i, /^\u0436/i, /^\u0441/i],
                        short: [/^\u0436\u0441/i, /^\u0434\u0441/i, /^\u0441\u0441/i, /^\u0441\u0440/i, /^\u0431\u0441/i, /^\u0436\u043c/i, /^\u0441\u0431/i],
                        any: [/^\u0436[\u0435\u043a]/i, /^\u0434[\u04af\u0439]/i, /^\u0441e[\u0439]/i, /^\u0441\u04d9[\u0440]/i, /^\u0431[\u0435\u0439]/i, /^\u0436[\u04b1\u043c]/i, /^\u0441\u0435[\u043d]/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^\u0422\.?\s?[\u0414\u041a]\.?|\u0442\u04af\u043d \u043e\u0440\u0442\u0430\u0441\u044b\u043d\u0434\u0430|((\u0442\u04af\u0441\u0442\u0435|\u0442\u0430\u04a3\u0435\u0440\u0442\u0435\u04a3|\u0442\u0430\u04a3\u0434\u0430|\u0442\u0430\u04a3\u0435\u0440\u0442\u0435\u04a3|\u0442\u0430\u04a3\u043c\u0435\u043d|\u0442\u0430\u04a3|\u043a\u04af\u043d\u0434\u0456\u0437|\u043a\u04af\u043d|\u043a\u0435\u0448\u0442\u0435|\u043a\u0435\u0448|\u0442\u04af\u043d\u0434\u0435|\u0442\u04af\u043d)\.?)/i,
                        wide: /^\u0422\.?\s?[\u0414\u041a]\.?|\u0442\u04af\u043d \u043e\u0440\u0442\u0430\u0441\u044b\u043d\u0434\u0430|((\u0442\u04af\u0441\u0442\u0435|\u0442\u0430\u04a3\u0435\u0440\u0442\u0435\u04a3|\u0442\u0430\u04a3\u0434\u0430|\u0442\u0430\u04a3\u0435\u0440\u0442\u0435\u04a3|\u0442\u0430\u04a3\u043c\u0435\u043d|\u0442\u0430\u04a3|\u043a\u04af\u043d\u0434\u0456\u0437|\u043a\u04af\u043d|\u043a\u0435\u0448\u0442\u0435|\u043a\u0435\u0448|\u0442\u04af\u043d\u0434\u0435|\u0442\u04af\u043d)\.?)/i,
                        any: /^\u0422\.?\s?[\u0414\u041a]\.?|\u0442\u04af\u043d \u043e\u0440\u0442\u0430\u0441\u044b\u043d\u0434\u0430|((\u0442\u04af\u0441\u0442\u0435|\u0442\u0430\u04a3\u0435\u0440\u0442\u0435\u04a3|\u0442\u0430\u04a3\u0434\u0430|\u0442\u0430\u04a3\u0435\u0440\u0442\u0435\u04a3|\u0442\u0430\u04a3\u043c\u0435\u043d|\u0442\u0430\u04a3|\u043a\u04af\u043d\u0434\u0456\u0437|\u043a\u04af\u043d|\u043a\u0435\u0448\u0442\u0435|\u043a\u0435\u0448|\u0442\u04af\u043d\u0434\u0435|\u0442\u04af\u043d)\.?)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: {
                            am: /^\u0422\u0414/i,
                            pm: /^\u0422\u041a/i,
                            midnight: /^\u0442\u04af\u043d \u043e\u0440\u0442\u0430/i,
                            noon: /^\u043a\u04af\u043d\u0434\u0456\u0437/i,
                            morning: /\u0442\u0430\u04a3/i,
                            afternoon: /\u0442\u04af\u0441/i,
                            evening: /\u043a\u0435\u0448/i,
                            night: /\u0442\u04af\u043d/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const sr = {
            lessThanXSeconds: "\u178f\u17b7\u1785\u1787\u17b6\u1784 {{count}} \u179c\u17b7\u1793\u17b6\u1791\u17b8",
            xSeconds: "{{count}} \u179c\u17b7\u1793\u17b6\u1791\u17b8",
            halfAMinute: "\u1780\u1793\u17d2\u179b\u17c7\u1793\u17b6\u1791\u17b8",
            lessThanXMinutes: "\u178f\u17b7\u1785\u1787\u17b6\u1784 {{count}} \u1793\u17b6\u1791\u17b8",
            xMinutes: "{{count}} \u1793\u17b6\u1791\u17b8",
            aboutXHours: "\u1794\u17d2\u179a\u17a0\u17c2\u179b {{count}} \u1798\u17c9\u17c4\u1784",
            xHours: "{{count}} \u1798\u17c9\u17c4\u1784",
            xDays: "{{count}} \u1790\u17d2\u1784\u17c3",
            aboutXWeeks: "\u1794\u17d2\u179a\u17a0\u17c2\u179b {{count}} \u179f\u1794\u17d2\u178f\u17b6\u17a0\u17cd",
            xWeeks: "{{count}} \u179f\u1794\u17d2\u178f\u17b6\u17a0\u17cd",
            aboutXMonths: "\u1794\u17d2\u179a\u17a0\u17c2\u179b {{count}} \u1781\u17c2",
            xMonths: "{{count}} \u1781\u17c2",
            aboutXYears: "\u1794\u17d2\u179a\u17a0\u17c2\u179b {{count}} \u1786\u17d2\u1793\u17b6\u17c6",
            xYears: "{{count}} \u1786\u17d2\u1793\u17b6\u17c6",
            overXYears: "\u1787\u17b6\u1784 {{count}} \u1786\u17d2\u1793\u17b6\u17c6",
            almostXYears: "\u1787\u17b7\u178f {{count}} \u1786\u17d2\u1793\u17b6\u17c6"
        }
          , ur = {
            date: r({
                formats: {
                    full: "EEEE do MMMM y",
                    long: "do MMMM y",
                    medium: "d MMM y",
                    short: "dd/MM/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a",
                    long: "h:mm:ss a",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u1798\u17c9\u17c4\u1784' {{time}}",
                    long: "{{date}} '\u1798\u17c9\u17c4\u1784' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , dr = {
            lastWeek: "'\u1790\u17d2\u1784\u17c3'eeee'\u179f\u200b\u1794\u17d2\u178f\u17b6\u200b\u17a0\u17cd\u200b\u1798\u17bb\u1793\u1798\u17c9\u17c4\u1784' p",
            yesterday: "'\u1798\u17d2\u179f\u17b7\u179b\u1798\u17b7\u1789\u1793\u17c5\u1798\u17c9\u17c4\u1784' p",
            today: "'\u1790\u17d2\u1784\u17c3\u1793\u17c1\u17c7\u1798\u17c9\u17c4\u1784' p",
            tomorrow: "'\u1790\u17d2\u1784\u17c3\u179f\u17d2\u17a2\u17c2\u1780\u1798\u17c9\u17c4\u1784' p",
            nextWeek: "'\u1790\u17d2\u1784\u17c3'eeee'\u179f\u200b\u1794\u17d2\u178f\u17b6\u200b\u17a0\u17cd\u200b\u1780\u17d2\u179a\u17c4\u1799\u1798\u17c9\u17c4\u1784' p",
            other: "P"
        }
          , lr = {
            code: "km",
            formatDistance: (e,t,n)=>{
                let a = sr[e];
                return "number" === typeof t && (a = a.replace("{{count}}", t.toString())),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "\u1780\u17d2\u1793\u17bb\u1784\u179a\u1799\u17c8\u1796\u17c1\u179b " + a : a + "\u1798\u17bb\u1793" : a
            }
            ,
            formatLong: ur,
            formatRelative: (e,t,n,a)=>dr[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e).toString(),
                era: s({
                    values: {
                        narrow: ["\u1798.\u1782\u179f", "\u1782\u179f"],
                        abbreviated: ["\u1798\u17bb\u1793\u1782.\u179f", "\u1782.\u179f"],
                        wide: ["\u1798\u17bb\u1793\u1782\u17d2\u179a\u17b7\u179f\u17d2\u178f\u179f\u1780\u179a\u17b6\u1787", "\u1793\u17c3\u1782\u17d2\u179a\u17b7\u179f\u17d2\u178f\u179f\u1780\u179a\u17b6\u1787"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 1", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 2", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 3", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 4"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u1798.\u1780", "\u1780.\u1798", "\u1798\u17b7", "\u1798.\u179f", "\u17a7.\u179f", "\u1798.\u1790", "\u1780.\u178a", "\u179f\u17b8", "\u1780\u1789", "\u178f\u17bb", "\u179c\u17b7", "\u1792"],
                        abbreviated: ["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"],
                        wide: ["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u17a2\u17b6", "\u1785", "\u17a2", "\u1796", "\u1796\u17d2\u179a", "\u179f\u17bb", "\u179f"],
                        short: ["\u17a2\u17b6", "\u1785", "\u17a2", "\u1796", "\u1796\u17d2\u179a", "\u179f\u17bb", "\u179f"],
                        abbreviated: ["\u17a2\u17b6", "\u1785", "\u17a2", "\u1796", "\u1796\u17d2\u179a", "\u179f\u17bb", "\u179f"],
                        wide: ["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u1796\u17d2\u179a\u17b9\u1780",
                            pm: "\u179b\u17d2\u1784\u17b6\u1785",
                            midnight: "\u200b\u1796\u17c1\u179b\u1780\u178e\u17d2\u178a\u17b6\u179b\u17a2\u1792\u17d2\u179a\u17b6\u178f\u17d2\u179a",
                            noon: "\u1796\u17c1\u179b\u1790\u17d2\u1784\u17c3\u178f\u17d2\u179a\u1784\u17cb",
                            morning: "\u1796\u17c1\u179b\u1796\u17d2\u179a\u17b9\u1780",
                            afternoon: "\u1796\u17c1\u179b\u179a\u179f\u17c0\u179b",
                            evening: "\u1796\u17c1\u179b\u179b\u17d2\u1784\u17b6\u1785",
                            night: "\u1796\u17c1\u179b\u1799\u1794\u17cb"
                        },
                        abbreviated: {
                            am: "\u1796\u17d2\u179a\u17b9\u1780",
                            pm: "\u179b\u17d2\u1784\u17b6\u1785",
                            midnight: "\u200b\u1796\u17c1\u179b\u1780\u178e\u17d2\u178a\u17b6\u179b\u17a2\u1792\u17d2\u179a\u17b6\u178f\u17d2\u179a",
                            noon: "\u1796\u17c1\u179b\u1790\u17d2\u1784\u17c3\u178f\u17d2\u179a\u1784\u17cb",
                            morning: "\u1796\u17c1\u179b\u1796\u17d2\u179a\u17b9\u1780",
                            afternoon: "\u1796\u17c1\u179b\u179a\u179f\u17c0\u179b",
                            evening: "\u1796\u17c1\u179b\u179b\u17d2\u1784\u17b6\u1785",
                            night: "\u1796\u17c1\u179b\u1799\u1794\u17cb"
                        },
                        wide: {
                            am: "\u1796\u17d2\u179a\u17b9\u1780",
                            pm: "\u179b\u17d2\u1784\u17b6\u1785",
                            midnight: "\u200b\u1796\u17c1\u179b\u1780\u178e\u17d2\u178a\u17b6\u179b\u17a2\u1792\u17d2\u179a\u17b6\u178f\u17d2\u179a",
                            noon: "\u1796\u17c1\u179b\u1790\u17d2\u1784\u17c3\u178f\u17d2\u179a\u1784\u17cb",
                            morning: "\u1796\u17c1\u179b\u1796\u17d2\u179a\u17b9\u1780",
                            afternoon: "\u1796\u17c1\u179b\u179a\u179f\u17c0\u179b",
                            evening: "\u1796\u17c1\u179b\u179b\u17d2\u1784\u17b6\u1785",
                            night: "\u1796\u17c1\u179b\u1799\u1794\u17cb"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u1796\u17d2\u179a\u17b9\u1780",
                            pm: "\u179b\u17d2\u1784\u17b6\u1785",
                            midnight: "\u200b\u1796\u17c1\u179b\u1780\u178e\u17d2\u178a\u17b6\u179b\u17a2\u1792\u17d2\u179a\u17b6\u178f\u17d2\u179a",
                            noon: "\u1796\u17c1\u179b\u1790\u17d2\u1784\u17c3\u178f\u17d2\u179a\u1784\u17cb",
                            morning: "\u1796\u17c1\u179b\u1796\u17d2\u179a\u17b9\u1780",
                            afternoon: "\u1796\u17c1\u179b\u179a\u179f\u17c0\u179b",
                            evening: "\u1796\u17c1\u179b\u179b\u17d2\u1784\u17b6\u1785",
                            night: "\u1796\u17c1\u179b\u1799\u1794\u17cb"
                        },
                        abbreviated: {
                            am: "\u1796\u17d2\u179a\u17b9\u1780",
                            pm: "\u179b\u17d2\u1784\u17b6\u1785",
                            midnight: "\u200b\u1796\u17c1\u179b\u1780\u178e\u17d2\u178a\u17b6\u179b\u17a2\u1792\u17d2\u179a\u17b6\u178f\u17d2\u179a",
                            noon: "\u1796\u17c1\u179b\u1790\u17d2\u1784\u17c3\u178f\u17d2\u179a\u1784\u17cb",
                            morning: "\u1796\u17c1\u179b\u1796\u17d2\u179a\u17b9\u1780",
                            afternoon: "\u1796\u17c1\u179b\u179a\u179f\u17c0\u179b",
                            evening: "\u1796\u17c1\u179b\u179b\u17d2\u1784\u17b6\u1785",
                            night: "\u1796\u17c1\u179b\u1799\u1794\u17cb"
                        },
                        wide: {
                            am: "\u1796\u17d2\u179a\u17b9\u1780",
                            pm: "\u179b\u17d2\u1784\u17b6\u1785",
                            midnight: "\u200b\u1796\u17c1\u179b\u1780\u178e\u17d2\u178a\u17b6\u179b\u17a2\u1792\u17d2\u179a\u17b6\u178f\u17d2\u179a",
                            noon: "\u1796\u17c1\u179b\u1790\u17d2\u1784\u17c3\u178f\u17d2\u179a\u1784\u17cb",
                            morning: "\u1796\u17c1\u179b\u1796\u17d2\u179a\u17b9\u1780",
                            afternoon: "\u1796\u17c1\u179b\u179a\u179f\u17c0\u179b",
                            evening: "\u1796\u17c1\u179b\u179b\u17d2\u1784\u17b6\u1785",
                            night: "\u1796\u17c1\u179b\u1799\u1794\u17cb"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: function(e) {
                        return parseInt(e, 10)
                    }
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u1798\.)?\u1782\u179f/i,
                        abbreviated: /^(\u1798\u17bb\u1793)?\u1782\.\u179f/i,
                        wide: /^(\u1798\u17bb\u1793|\u1793\u17c3)\u1782\u17d2\u179a\u17b7\u179f\u17d2\u178f\u179f\u1780\u179a\u17b6\u1787/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^(\u1798|\u1798\u17bb\u1793)\u1782\.?\u179f/i, /^(\u1793\u17c3)?\u1782\.?\u179f/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^q[1234]/i,
                        wide: /^(\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f)(\u1791\u17b8)?\s?[1234]/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(\u1798\.\u1780|\u1780\.\u1798|\u1798\u17b7|\u1798\.\u179f|\u17a7\.\u179f|\u1798\.\u1790|\u1780\.\u178a|\u179f\u17b8|\u1780\u1789|\u178f\u17bb|\u179c\u17b7|\u1792)/i,
                        abbreviated: /^(\u1798\u1780\u179a\u17b6|\u1780\u17bb\u1798\u17d2\u1797\u17c8|\u1798\u17b8\u1793\u17b6|\u1798\u17c1\u179f\u17b6|\u17a7\u179f\u1797\u17b6|\u1798\u17b7\u1790\u17bb\u1793\u17b6|\u1780\u1780\u17d2\u1780\u178a\u17b6|\u179f\u17b8\u17a0\u17b6|\u1780\u1789\u17d2\u1789\u17b6|\u178f\u17bb\u179b\u17b6|\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6|\u1792\u17d2\u1793\u17bc)/i,
                        wide: /^(\u1798\u1780\u179a\u17b6|\u1780\u17bb\u1798\u17d2\u1797\u17c8|\u1798\u17b8\u1793\u17b6|\u1798\u17c1\u179f\u17b6|\u17a7\u179f\u1797\u17b6|\u1798\u17b7\u1790\u17bb\u1793\u17b6|\u1780\u1780\u17d2\u1780\u178a\u17b6|\u179f\u17b8\u17a0\u17b6|\u1780\u1789\u17d2\u1789\u17b6|\u178f\u17bb\u179b\u17b6|\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6|\u1792\u17d2\u1793\u17bc)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u1798\.\u1780/i, /^\u1780\.\u1798/i, /^\u1798\u17b7/i, /^\u1798\.\u179f/i, /^\u17a7\.\u179f/i, /^\u1798\.\u1790/i, /^\u1780\.\u178a/i, /^\u179f\u17b8/i, /^\u1780\u1789/i, /^\u178f\u17bb/i, /^\u179c\u17b7/i, /^\u1792/i],
                        any: [/^\u1798\u1780/i, /^\u1780\u17bb/i, /^\u1798\u17b8\u1793/i, /^\u1798\u17c1/i, /^\u17a7\u179f/i, /^\u1798\u17b7\u1790/i, /^\u1780\u1780/i, /^\u179f\u17b8/i, /^\u1780\u1789/i, /^\u178f\u17bb/i, /^\u179c\u17b7\u1785/i, /^\u1792/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(\u17a2\u17b6|\u1785|\u17a2|\u1796|\u1796\u17d2\u179a|\u179f\u17bb|\u179f)/i,
                        short: /^(\u17a2\u17b6|\u1785|\u17a2|\u1796|\u1796\u17d2\u179a|\u179f\u17bb|\u179f)/i,
                        abbreviated: /^(\u17a2\u17b6|\u1785|\u17a2|\u1796|\u1796\u17d2\u179a|\u179f\u17bb|\u179f)/i,
                        wide: /^(\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799|\u1785\u1793\u17d2\u1791|\u17a2\u1784\u17d2\u1782\u17b6\u179a|\u1796\u17bb\u1792|\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd|\u179f\u17bb\u1780\u17d2\u179a|\u179f\u17c5\u179a\u17cd)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u17a2\u17b6/i, /^\u1785/i, /^\u17a2/i, /^\u1796/i, /^\u1796\u17d2\u179a/i, /^\u179f\u17bb/i, /^\u179f/i],
                        any: [/^\u17a2\u17b6/i, /^\u1785/i, /^\u17a2/i, /^\u1796/i, /^\u1796\u17d2\u179a/i, /^\u179f\u17bb/i, /^\u179f\u17c5/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(\u1796\u17d2\u179a\u17b9\u1780|\u179b\u17d2\u1784\u17b6\u1785|\u1796\u17c1\u179b\u1796\u17d2\u179a\u17b9\u1780|\u1796\u17c1\u179b\u1790\u17d2\u1784\u17c3\u178f\u17d2\u179a\u1784\u17cb|\u1796\u17c1\u179b\u179b\u17d2\u1784\u17b6\u1785|\u1796\u17c1\u179b\u179a\u179f\u17c0\u179b|\u1796\u17c1\u179b\u1799\u1794\u17cb|\u1796\u17c1\u179b\u1780\u178e\u17d2\u178a\u17b6\u179b\u17a2\u1792\u17d2\u179a\u17b6\u178f\u17d2\u179a)/i,
                        any: /^(\u1796\u17d2\u179a\u17b9\u1780|\u179b\u17d2\u1784\u17b6\u1785|\u1796\u17c1\u179b\u1796\u17d2\u179a\u17b9\u1780|\u1796\u17c1\u179b\u1790\u17d2\u1784\u17c3\u178f\u17d2\u179a\u1784\u17cb|\u1796\u17c1\u179b\u179b\u17d2\u1784\u17b6\u1785|\u1796\u17c1\u179b\u179a\u179f\u17c0\u179b|\u1796\u17c1\u179b\u1799\u1794\u17cb|\u1796\u17c1\u179b\u1780\u178e\u17d2\u178a\u17b6\u179b\u17a2\u1792\u17d2\u179a\u17b6\u178f\u17d2\u179a)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u1796\u17d2\u179a\u17b9\u1780/i,
                            pm: /^\u179b\u17d2\u1784\u17b6\u1785/i,
                            midnight: /^\u1796\u17c1\u179b\u1780\u178e\u17d2\u178a\u17b6\u179b\u17a2\u1792\u17d2\u179a\u17b6\u178f\u17d2\u179a/i,
                            noon: /^\u1796\u17c1\u179b\u1790\u17d2\u1784\u17c3\u178f\u17d2\u179a\u1784\u17cb/i,
                            morning: /\u1796\u17c1\u179b\u1796\u17d2\u179a\u17b9\u1780/i,
                            afternoon: /\u1796\u17c1\u179b\u179a\u179f\u17c0\u179b/i,
                            evening: /\u1796\u17c1\u179b\u179b\u17d2\u1784\u17b6\u1785/i,
                            night: /\u1796\u17c1\u179b\u1799\u1794\u17cb/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const cr = {
            lessThanXSeconds: {
                one: {
                    default: "1 \u0cb8\u0cc6\u0c95\u0cc6\u0c82\u0ca1\u0ccd\u200c\u0c97\u0cbf\u0c82\u0ca4 \u0c95\u0ca1\u0cbf\u0cae\u0cc6",
                    future: "1 \u0cb8\u0cc6\u0c95\u0cc6\u0c82\u0ca1\u0ccd\u200c\u0c97\u0cbf\u0c82\u0ca4 \u0c95\u0ca1\u0cbf\u0cae\u0cc6",
                    past: "1 \u0cb8\u0cc6\u0c95\u0cc6\u0c82\u0ca1\u0ccd\u200c\u0c97\u0cbf\u0c82\u0ca4 \u0c95\u0ca1\u0cbf\u0cae\u0cc6"
                },
                other: {
                    default: "{{count}} \u0cb8\u0cc6\u0c95\u0cc6\u0c82\u0ca1\u0ccd\u200c\u0c97\u0cbf\u0c82\u0ca4 \u0c95\u0ca1\u0cbf\u0cae\u0cc6",
                    future: "{{count}} \u0cb8\u0cc6\u0c95\u0cc6\u0c82\u0ca1\u0ccd\u200c\u0c97\u0cbf\u0c82\u0ca4 \u0c95\u0ca1\u0cbf\u0cae\u0cc6",
                    past: "{{count}} \u0cb8\u0cc6\u0c95\u0cc6\u0c82\u0ca1\u0ccd\u200c\u0c97\u0cbf\u0c82\u0ca4 \u0c95\u0ca1\u0cbf\u0cae\u0cc6"
                }
            },
            xSeconds: {
                one: {
                    default: "1 \u0cb8\u0cc6\u0c95\u0cc6\u0c82\u0ca1\u0ccd",
                    future: "1 \u0cb8\u0cc6\u0c95\u0cc6\u0c82\u0ca1\u0ccd\u200c\u0ca8\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "1 \u0cb8\u0cc6\u0c95\u0cc6\u0c82\u0ca1\u0ccd \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                },
                other: {
                    default: "{{count}} \u0cb8\u0cc6\u0c95\u0cc6\u0c82\u0ca1\u0cc1\u0c97\u0cb3\u0cc1",
                    future: "{{count}} \u0cb8\u0cc6\u0c95\u0cc6\u0c82\u0ca1\u0ccd\u200c\u0c97\u0cb3\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "{{count}} \u0cb8\u0cc6\u0c95\u0cc6\u0c82\u0ca1\u0ccd \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                }
            },
            halfAMinute: {
                other: {
                    default: "\u0c85\u0cb0\u0ccd\u0ca7 \u0ca8\u0cbf\u0cae\u0cbf\u0cb7",
                    future: "\u0c85\u0cb0\u0ccd\u0ca7 \u0ca8\u0cbf\u0cae\u0cbf\u0cb7\u0ca6\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "\u0c85\u0cb0\u0ccd\u0ca7 \u0ca8\u0cbf\u0cae\u0cbf\u0cb7\u0ca6 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                }
            },
            lessThanXMinutes: {
                one: {
                    default: "1 \u0ca8\u0cbf\u0cae\u0cbf\u0cb7\u0c95\u0ccd\u0c95\u0cbf\u0c82\u0ca4 \u0c95\u0ca1\u0cbf\u0cae\u0cc6",
                    future: "1 \u0ca8\u0cbf\u0cae\u0cbf\u0cb7\u0c95\u0ccd\u0c95\u0cbf\u0c82\u0ca4 \u0c95\u0ca1\u0cbf\u0cae\u0cc6",
                    past: "1 \u0ca8\u0cbf\u0cae\u0cbf\u0cb7\u0c95\u0ccd\u0c95\u0cbf\u0c82\u0ca4 \u0c95\u0ca1\u0cbf\u0cae\u0cc6"
                },
                other: {
                    default: "{{count}} \u0ca8\u0cbf\u0cae\u0cbf\u0cb7\u0c95\u0ccd\u0c95\u0cbf\u0c82\u0ca4 \u0c95\u0ca1\u0cbf\u0cae\u0cc6",
                    future: "{{count}} \u0ca8\u0cbf\u0cae\u0cbf\u0cb7\u0c95\u0ccd\u0c95\u0cbf\u0c82\u0ca4 \u0c95\u0ca1\u0cbf\u0cae\u0cc6",
                    past: "{{count}} \u0ca8\u0cbf\u0cae\u0cbf\u0cb7\u0c95\u0ccd\u0c95\u0cbf\u0c82\u0ca4 \u0c95\u0ca1\u0cbf\u0cae\u0cc6"
                }
            },
            xMinutes: {
                one: {
                    default: "1 \u0ca8\u0cbf\u0cae\u0cbf\u0cb7",
                    future: "1 \u0ca8\u0cbf\u0cae\u0cbf\u0cb7\u0ca6\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "1 \u0ca8\u0cbf\u0cae\u0cbf\u0cb7\u0ca6 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                },
                other: {
                    default: "{{count}} \u0ca8\u0cbf\u0cae\u0cbf\u0cb7\u0c97\u0cb3\u0cc1",
                    future: "{{count}} \u0ca8\u0cbf\u0cae\u0cbf\u0cb7\u0c97\u0cb3\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "{{count}} \u0ca8\u0cbf\u0cae\u0cbf\u0cb7\u0c97\u0cb3 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                }
            },
            aboutXHours: {
                one: {
                    default: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 1 \u0c97\u0c82\u0c9f\u0cc6",
                    future: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 1 \u0c97\u0c82\u0c9f\u0cc6\u0caf\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 1 \u0c97\u0c82\u0c9f\u0cc6 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                },
                other: {
                    default: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 {{count}} \u0c97\u0c82\u0c9f\u0cc6\u0c97\u0cb3\u0cc1",
                    future: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 {{count}} \u0c97\u0c82\u0c9f\u0cc6\u0c97\u0cb3\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 {{count}} \u0c97\u0c82\u0c9f\u0cc6\u0c97\u0cb3 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                }
            },
            xHours: {
                one: {
                    default: "1 \u0c97\u0c82\u0c9f\u0cc6",
                    future: "1 \u0c97\u0c82\u0c9f\u0cc6\u0caf\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "1 \u0c97\u0c82\u0c9f\u0cc6 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                },
                other: {
                    default: "{{count}} \u0c97\u0c82\u0c9f\u0cc6\u0c97\u0cb3\u0cc1",
                    future: "{{count}} \u0c97\u0c82\u0c9f\u0cc6\u0c97\u0cb3\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "{{count}} \u0c97\u0c82\u0c9f\u0cc6\u0c97\u0cb3 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                }
            },
            xDays: {
                one: {
                    default: "1 \u0ca6\u0cbf\u0ca8",
                    future: "1 \u0ca6\u0cbf\u0ca8\u0ca6\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "1 \u0ca6\u0cbf\u0ca8\u0ca6 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                },
                other: {
                    default: "{{count}} \u0ca6\u0cbf\u0ca8\u0c97\u0cb3\u0cc1",
                    future: "{{count}} \u0ca6\u0cbf\u0ca8\u0c97\u0cb3\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "{{count}} \u0ca6\u0cbf\u0ca8\u0c97\u0cb3 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                }
            },
            aboutXMonths: {
                one: {
                    default: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 1 \u0ca4\u0cbf\u0c82\u0c97\u0cb3\u0cc1",
                    future: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 1 \u0ca4\u0cbf\u0c82\u0c97\u0cb3\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 1 \u0ca4\u0cbf\u0c82\u0c97\u0cb3 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                },
                other: {
                    default: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 {{count}} \u0ca4\u0cbf\u0c82\u0c97\u0cb3\u0cc1",
                    future: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 {{count}} \u0ca4\u0cbf\u0c82\u0c97\u0cb3\u0cc1\u0c97\u0cb3\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 {{count}} \u0ca4\u0cbf\u0c82\u0c97\u0cb3\u0cc1\u0c97\u0cb3 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                }
            },
            xMonths: {
                one: {
                    default: "1 \u0ca4\u0cbf\u0c82\u0c97\u0cb3\u0cc1",
                    future: "1 \u0ca4\u0cbf\u0c82\u0c97\u0cb3\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "1 \u0ca4\u0cbf\u0c82\u0c97\u0cb3 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                },
                other: {
                    default: "{{count}} \u0ca4\u0cbf\u0c82\u0c97\u0cb3\u0cc1",
                    future: "{{count}} \u0ca4\u0cbf\u0c82\u0c97\u0cb3\u0cc1\u0c97\u0cb3\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "{{count}} \u0ca4\u0cbf\u0c82\u0c97\u0cb3\u0cc1\u0c97\u0cb3 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                }
            },
            aboutXYears: {
                one: {
                    default: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 1 \u0cb5\u0cb0\u0ccd\u0cb7",
                    future: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 1 \u0cb5\u0cb0\u0ccd\u0cb7\u0ca6\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 1 \u0cb5\u0cb0\u0ccd\u0cb7\u0ca6 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                },
                other: {
                    default: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 {{count}} \u0cb5\u0cb0\u0ccd\u0cb7\u0c97\u0cb3\u0cc1",
                    future: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 {{count}} \u0cb5\u0cb0\u0ccd\u0cb7\u0c97\u0cb3\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "\u0cb8\u0cc1\u0cae\u0cbe\u0cb0\u0cc1 {{count}} \u0cb5\u0cb0\u0ccd\u0cb7\u0c97\u0cb3 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                }
            },
            xYears: {
                one: {
                    default: "1 \u0cb5\u0cb0\u0ccd\u0cb7",
                    future: "1 \u0cb5\u0cb0\u0ccd\u0cb7\u0ca6\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "1 \u0cb5\u0cb0\u0ccd\u0cb7\u0ca6 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                },
                other: {
                    default: "{{count}} \u0cb5\u0cb0\u0ccd\u0cb7\u0c97\u0cb3\u0cc1",
                    future: "{{count}} \u0cb5\u0cb0\u0ccd\u0cb7\u0c97\u0cb3\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "{{count}} \u0cb5\u0cb0\u0ccd\u0cb7\u0c97\u0cb3 \u0cb9\u0cbf\u0c82\u0ca6\u0cc6"
                }
            },
            overXYears: {
                one: {
                    default: "1 \u0cb5\u0cb0\u0ccd\u0cb7\u0ca6 \u0cae\u0cc7\u0cb2\u0cc6",
                    future: "1 \u0cb5\u0cb0\u0ccd\u0cb7\u0ca6 \u0cae\u0cc7\u0cb2\u0cc6",
                    past: "1 \u0cb5\u0cb0\u0ccd\u0cb7\u0ca6 \u0cae\u0cc7\u0cb2\u0cc6"
                },
                other: {
                    default: "{{count}} \u0cb5\u0cb0\u0ccd\u0cb7\u0c97\u0cb3 \u0cae\u0cc7\u0cb2\u0cc6",
                    future: "{{count}} \u0cb5\u0cb0\u0ccd\u0cb7\u0c97\u0cb3 \u0cae\u0cc7\u0cb2\u0cc6",
                    past: "{{count}} \u0cb5\u0cb0\u0ccd\u0cb7\u0c97\u0cb3 \u0cae\u0cc7\u0cb2\u0cc6"
                }
            },
            almostXYears: {
                one: {
                    default: "\u0cac\u0cb9\u0cc1\u0ca4\u0cc7\u0c95 1 \u0cb5\u0cb0\u0ccd\u0cb7\u0ca6\u0cb2\u0ccd\u0cb2\u0cbf",
                    future: "\u0cac\u0cb9\u0cc1\u0ca4\u0cc7\u0c95 1 \u0cb5\u0cb0\u0ccd\u0cb7\u0ca6\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "\u0cac\u0cb9\u0cc1\u0ca4\u0cc7\u0c95 1 \u0cb5\u0cb0\u0ccd\u0cb7\u0ca6\u0cb2\u0ccd\u0cb2\u0cbf"
                },
                other: {
                    default: "\u0cac\u0cb9\u0cc1\u0ca4\u0cc7\u0c95 {{count}} \u0cb5\u0cb0\u0ccd\u0cb7\u0c97\u0cb3\u0cb2\u0ccd\u0cb2\u0cbf",
                    future: "\u0cac\u0cb9\u0cc1\u0ca4\u0cc7\u0c95 {{count}} \u0cb5\u0cb0\u0ccd\u0cb7\u0c97\u0cb3\u0cb2\u0ccd\u0cb2\u0cbf",
                    past: "\u0cac\u0cb9\u0cc1\u0ca4\u0cc7\u0c95 {{count}} \u0cb5\u0cb0\u0ccd\u0cb7\u0c97\u0cb3\u0cb2\u0ccd\u0cb2\u0cbf"
                }
            }
        };
        function mr(e, t) {
            return t?.addSuffix ? t.comparison && t.comparison > 0 ? e.future : e.past : e.default
        }
        const hr = {
            date: r({
                formats: {
                    full: "EEEE, MMMM d, y",
                    long: "MMMM d, y",
                    medium: "MMM d, y",
                    short: "d/M/yy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "hh:mm:ss a zzzz",
                    long: "hh:mm:ss a z",
                    medium: "hh:mm:ss a",
                    short: "hh:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , fr = {
            lastWeek: "'\u0c95\u0cb3\u0cc6\u0ca6' eeee p '\u0c95\u0ccd\u0c95\u0cc6'",
            yesterday: "'\u0ca8\u0cbf\u0ca8\u0ccd\u0ca8\u0cc6' p '\u0c95\u0ccd\u0c95\u0cc6'",
            today: "'\u0c87\u0c82\u0ca6\u0cc1' p '\u0c95\u0ccd\u0c95\u0cc6'",
            tomorrow: "'\u0ca8\u0cbe\u0cb3\u0cc6' p '\u0c95\u0ccd\u0c95\u0cc6'",
            nextWeek: "eeee p '\u0c95\u0ccd\u0c95\u0cc6'",
            other: "P"
        }
          , pr = {
            code: "kn",
            formatDistance: (e,t,n)=>{
                let a;
                const r = cr[e];
                return a = r.one && 1 === t ? mr(r.one, n) : mr(r.other, n),
                a.replace("{{count}}", String(t))
            }
            ,
            formatLong: hr,
            formatRelative: (e,t,n,a)=>fr[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + "\u0ca8\u0cc7",
                era: s({
                    values: {
                        narrow: ["\u0c95\u0ccd\u0cb0\u0cbf.\u0caa\u0cc2", "\u0c95\u0ccd\u0cb0\u0cbf.\u0cb6"],
                        abbreviated: ["\u0c95\u0ccd\u0cb0\u0cbf.\u0caa\u0cc2", "\u0c95\u0ccd\u0cb0\u0cbf.\u0cb6"],
                        wide: ["\u0c95\u0ccd\u0cb0\u0cbf\u0cb8\u0ccd\u0ca4 \u0caa\u0cc2\u0cb0\u0ccd\u0cb5", "\u0c95\u0ccd\u0cb0\u0cbf\u0cb8\u0ccd\u0ca4 \u0cb6\u0c95"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u0ca4\u0ccd\u0cb0\u0cc8 1", "\u0ca4\u0ccd\u0cb0\u0cc8 2", "\u0ca4\u0ccd\u0cb0\u0cc8 3", "\u0ca4\u0ccd\u0cb0\u0cc8 4"],
                        wide: ["1\u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "2\u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "3\u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "4\u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u0c9c", "\u0cab\u0cc6", "\u0cae\u0cbe", "\u0c8f", "\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1", "\u0c86", "\u0cb8\u0cc6", "\u0c85", "\u0ca8", "\u0ca1\u0cbf"],
                        abbreviated: ["\u0c9c\u0ca8", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf", "\u0cae\u0cc7", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97", "\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb", "\u0ca8\u0cb5\u0cc6\u0c82", "\u0ca1\u0cbf\u0cb8\u0cc6\u0c82"],
                        wide: ["\u0c9c\u0ca8\u0cb5\u0cb0\u0cbf", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cbf", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc7", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", "\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u0cad\u0cbe", "\u0cb8\u0ccb", "\u0cae\u0c82", "\u0cac\u0cc1", "\u0c97\u0cc1", "\u0cb6\u0cc1", "\u0cb6"],
                        short: ["\u0cad\u0cbe\u0ca8\u0cc1", "\u0cb8\u0ccb\u0cae", "\u0cae\u0c82\u0c97\u0cb3", "\u0cac\u0cc1\u0ca7", "\u0c97\u0cc1\u0cb0\u0cc1", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0", "\u0cb6\u0ca8\u0cbf"],
                        abbreviated: ["\u0cad\u0cbe\u0ca8\u0cc1", "\u0cb8\u0ccb\u0cae", "\u0cae\u0c82\u0c97\u0cb3", "\u0cac\u0cc1\u0ca7", "\u0c97\u0cc1\u0cb0\u0cc1", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0", "\u0cb6\u0ca8\u0cbf"],
                        wide: ["\u0cad\u0cbe\u0ca8\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0", "\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0", "\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0", "\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0", "\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0caa\u0cc2\u0cb0\u0ccd\u0cb5\u0cbe\u0cb9\u0ccd\u0ca8",
                            pm: "\u0c85\u0caa\u0cb0\u0cbe\u0cb9\u0ccd\u0ca8",
                            midnight: "\u0cae\u0ca7\u0ccd\u0caf\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf",
                            noon: "\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0cb9\u0ccd\u0ca8",
                            morning: "\u0cac\u0cc6\u0cb3\u0c97\u0ccd\u0c97\u0cc6",
                            afternoon: "\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0cb9\u0ccd\u0ca8",
                            evening: "\u0cb8\u0c82\u0c9c\u0cc6",
                            night: "\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf"
                        },
                        abbreviated: {
                            am: "\u0caa\u0cc2\u0cb0\u0ccd\u0cb5\u0cbe\u0cb9\u0ccd\u0ca8",
                            pm: "\u0c85\u0caa\u0cb0\u0cbe\u0cb9\u0ccd\u0ca8",
                            midnight: "\u0cae\u0ca7\u0ccd\u0caf\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf",
                            noon: "\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0ca8\u0ccd\u0cb9",
                            morning: "\u0cac\u0cc6\u0cb3\u0c97\u0ccd\u0c97\u0cc6",
                            afternoon: "\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0ca8\u0ccd\u0cb9",
                            evening: "\u0cb8\u0c82\u0c9c\u0cc6",
                            night: "\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf"
                        },
                        wide: {
                            am: "\u0caa\u0cc2\u0cb0\u0ccd\u0cb5\u0cbe\u0cb9\u0ccd\u0ca8",
                            pm: "\u0c85\u0caa\u0cb0\u0cbe\u0cb9\u0ccd\u0ca8",
                            midnight: "\u0cae\u0ca7\u0ccd\u0caf\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf",
                            noon: "\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0ca8\u0ccd\u0cb9",
                            morning: "\u0cac\u0cc6\u0cb3\u0c97\u0ccd\u0c97\u0cc6",
                            afternoon: "\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0ca8\u0ccd\u0cb9",
                            evening: "\u0cb8\u0c82\u0c9c\u0cc6",
                            night: "\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u0caa\u0cc2",
                            pm: "\u0c85",
                            midnight: "\u0cae\u0ca7\u0ccd\u0caf\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf",
                            noon: "\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0ca8\u0ccd\u0cb9",
                            morning: "\u0cac\u0cc6\u0cb3\u0c97\u0ccd\u0c97\u0cc6",
                            afternoon: "\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0ca8\u0ccd\u0cb9",
                            evening: "\u0cb8\u0c82\u0c9c\u0cc6",
                            night: "\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf"
                        },
                        abbreviated: {
                            am: "\u0caa\u0cc2\u0cb0\u0ccd\u0cb5\u0cbe\u0cb9\u0ccd\u0ca8",
                            pm: "\u0c85\u0caa\u0cb0\u0cbe\u0cb9\u0ccd\u0ca8",
                            midnight: "\u0cae\u0ca7\u0ccd\u0caf \u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf",
                            noon: "\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0ca8\u0ccd\u0cb9",
                            morning: "\u0cac\u0cc6\u0cb3\u0c97\u0ccd\u0c97\u0cc6",
                            afternoon: "\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0ca8\u0ccd\u0cb9",
                            evening: "\u0cb8\u0c82\u0c9c\u0cc6",
                            night: "\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf"
                        },
                        wide: {
                            am: "\u0caa\u0cc2\u0cb0\u0ccd\u0cb5\u0cbe\u0cb9\u0ccd\u0ca8",
                            pm: "\u0c85\u0caa\u0cb0\u0cbe\u0cb9\u0ccd\u0ca8",
                            midnight: "\u0cae\u0ca7\u0ccd\u0caf \u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf",
                            noon: "\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0ca8\u0ccd\u0cb9",
                            morning: "\u0cac\u0cc6\u0cb3\u0c97\u0ccd\u0c97\u0cc6",
                            afternoon: "\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0ca8\u0ccd\u0cb9",
                            evening: "\u0cb8\u0c82\u0c9c\u0cc6",
                            night: "\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\u0ca8\u0cc7|\u0ca8\u0cc6)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u0c95\u0ccd\u0cb0\u0cbf.\u0caa\u0cc2|\u0c95\u0ccd\u0cb0\u0cbf.\u0cb6)/i,
                        abbreviated: /^(\u0c95\u0ccd\u0cb0\u0cbf\.?\s?\u0caa\u0cc2\.?|\u0c95\u0ccd\u0cb0\u0cbf\.?\s?\u0cb6\.?|\u0caa\u0ccd\u0cb0\.?\s?\u0cb6\.?)/i,
                        wide: /^(\u0c95\u0ccd\u0cb0\u0cbf\u0cb8\u0ccd\u0ca4 \u0caa\u0cc2\u0cb0\u0ccd\u0cb5|\u0c95\u0ccd\u0cb0\u0cbf\u0cb8\u0ccd\u0ca4 \u0cb6\u0c95|\u0caa\u0ccd\u0cb0\u0cb8\u0c95\u0ccd\u0ca4 \u0cb6\u0c95)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u0caa\u0cc2/i, /^(\u0cb6|\u0caa\u0ccd\u0cb0)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^\u0ca4\u0ccd\u0cb0\u0cc8[1234]|\u0ca4\u0ccd\u0cb0\u0cc8 [1234]| [1234]\u0ca4\u0ccd\u0cb0\u0cc8/i,
                        wide: /^[1234](\u0ca8\u0cc7)? \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(\u0c9c\u0cc2|\u0c9c\u0cc1|\u0c9c|\u0cab\u0cc6|\u0cae\u0cbe|\u0c8f|\u0cae\u0cc7|\u0c86|\u0cb8\u0cc6|\u0c85|\u0ca8|\u0ca1\u0cbf)/i,
                        abbreviated: /^(\u0c9c\u0ca8|\u0cab\u0cc6\u0cac\u0ccd\u0cb0|\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd|\u0c8f\u0caa\u0ccd\u0cb0\u0cbf|\u0cae\u0cc7|\u0c9c\u0cc2\u0ca8\u0ccd|\u0c9c\u0cc1\u0cb2\u0cc8|\u0c86\u0c97|\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82|\u0c85\u0c95\u0ccd\u0c9f\u0ccb|\u0ca8\u0cb5\u0cc6\u0c82|\u0ca1\u0cbf\u0cb8\u0cc6\u0c82)/i,
                        wide: /^(\u0c9c\u0ca8\u0cb5\u0cb0\u0cbf|\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cbf|\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd|\u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd|\u0cae\u0cc7|\u0c9c\u0cc2\u0ca8\u0ccd|\u0c9c\u0cc1\u0cb2\u0cc8|\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd|\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd|\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd|\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd|\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0c9c$/i, /^\u0cab\u0cc6/i, /^\u0cae\u0cbe/i, /^\u0c8f/i, /^\u0cae\u0cc7/i, /^\u0c9c\u0cc2/i, /^\u0c9c\u0cc1$/i, /^\u0c86/i, /^\u0cb8\u0cc6/i, /^\u0c85/i, /^\u0ca8/i, /^\u0ca1\u0cbf/i],
                        any: [/^\u0c9c\u0ca8/i, /^\u0cab\u0cc6/i, /^\u0cae\u0cbe/i, /^\u0c8f/i, /^\u0cae\u0cc7/i, /^\u0c9c\u0cc2\u0ca8\u0ccd/i, /^\u0c9c\u0cc1\u0cb2\u0cc8/i, /^\u0c86/i, /^\u0cb8\u0cc6/i, /^\u0c85/i, /^\u0ca8/i, /^\u0ca1\u0cbf/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(\u0cad\u0cbe|\u0cb8\u0ccb|\u0cae|\u0cac\u0cc1|\u0c97\u0cc1|\u0cb6\u0cc1|\u0cb6)/i,
                        short: /^(\u0cad\u0cbe\u0ca8\u0cc1|\u0cb8\u0ccb\u0cae|\u0cae\u0c82\u0c97\u0cb3|\u0cac\u0cc1\u0ca7|\u0c97\u0cc1\u0cb0\u0cc1|\u0cb6\u0cc1\u0c95\u0ccd\u0cb0|\u0cb6\u0ca8\u0cbf)/i,
                        abbreviated: /^(\u0cad\u0cbe\u0ca8\u0cc1|\u0cb8\u0ccb\u0cae|\u0cae\u0c82\u0c97\u0cb3|\u0cac\u0cc1\u0ca7|\u0c97\u0cc1\u0cb0\u0cc1|\u0cb6\u0cc1\u0c95\u0ccd\u0cb0|\u0cb6\u0ca8\u0cbf)/i,
                        wide: /^(\u0cad\u0cbe\u0ca8\u0cc1\u0cb5\u0cbe\u0cb0|\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0|\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0|\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0|\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0|\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0|\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0cad\u0cbe/i, /^\u0cb8\u0ccb/i, /^\u0cae/i, /^\u0cac\u0cc1/i, /^\u0c97\u0cc1/i, /^\u0cb6\u0cc1/i, /^\u0cb6/i],
                        any: [/^\u0cad\u0cbe/i, /^\u0cb8\u0ccb/i, /^\u0cae/i, /^\u0cac\u0cc1/i, /^\u0c97\u0cc1/i, /^\u0cb6\u0cc1/i, /^\u0cb6/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(\u0caa\u0cc2|\u0c85|\u0cae\u0ca7\u0ccd\u0caf\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf|\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0ca8\u0ccd\u0cb9|\u0cac\u0cc6\u0cb3\u0c97\u0ccd\u0c97\u0cc6|\u0cb8\u0c82\u0c9c\u0cc6|\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf)/i,
                        any: /^(\u0caa\u0cc2\u0cb0\u0ccd\u0cb5\u0cbe\u0cb9\u0ccd\u0ca8|\u0c85\u0caa\u0cb0\u0cbe\u0cb9\u0ccd\u0ca8|\u0cae\u0ca7\u0ccd\u0caf\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf|\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0ca8\u0ccd\u0cb9|\u0cac\u0cc6\u0cb3\u0c97\u0ccd\u0c97\u0cc6|\u0cb8\u0c82\u0c9c\u0cc6|\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u0caa\u0cc2/i,
                            pm: /^\u0c85/i,
                            midnight: /\u0cae\u0ca7\u0ccd\u0caf\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf/i,
                            noon: /\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0ca8\u0ccd\u0cb9/i,
                            morning: /\u0cac\u0cc6\u0cb3\u0c97\u0ccd\u0c97\u0cc6/i,
                            afternoon: /\u0cae\u0ca7\u0ccd\u0caf\u0cbe\u0ca8\u0ccd\u0cb9/i,
                            evening: /\u0cb8\u0c82\u0c9c\u0cc6/i,
                            night: /\u0cb0\u0cbe\u0ca4\u0ccd\u0cb0\u0cbf/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const gr = {
            lessThanXSeconds: {
                one: "1\ucd08 \ubbf8\ub9cc",
                other: "{{count}}\ucd08 \ubbf8\ub9cc"
            },
            xSeconds: {
                one: "1\ucd08",
                other: "{{count}}\ucd08"
            },
            halfAMinute: "30\ucd08",
            lessThanXMinutes: {
                one: "1\ubd84 \ubbf8\ub9cc",
                other: "{{count}}\ubd84 \ubbf8\ub9cc"
            },
            xMinutes: {
                one: "1\ubd84",
                other: "{{count}}\ubd84"
            },
            aboutXHours: {
                one: "\uc57d 1\uc2dc\uac04",
                other: "\uc57d {{count}}\uc2dc\uac04"
            },
            xHours: {
                one: "1\uc2dc\uac04",
                other: "{{count}}\uc2dc\uac04"
            },
            xDays: {
                one: "1\uc77c",
                other: "{{count}}\uc77c"
            },
            aboutXWeeks: {
                one: "\uc57d 1\uc8fc",
                other: "\uc57d {{count}}\uc8fc"
            },
            xWeeks: {
                one: "1\uc8fc",
                other: "{{count}}\uc8fc"
            },
            aboutXMonths: {
                one: "\uc57d 1\uac1c\uc6d4",
                other: "\uc57d {{count}}\uac1c\uc6d4"
            },
            xMonths: {
                one: "1\uac1c\uc6d4",
                other: "{{count}}\uac1c\uc6d4"
            },
            aboutXYears: {
                one: "\uc57d 1\ub144",
                other: "\uc57d {{count}}\ub144"
            },
            xYears: {
                one: "1\ub144",
                other: "{{count}}\ub144"
            },
            overXYears: {
                one: "1\ub144 \uc774\uc0c1",
                other: "{{count}}\ub144 \uc774\uc0c1"
            },
            almostXYears: {
                one: "\uac70\uc758 1\ub144",
                other: "\uac70\uc758 {{count}}\ub144"
            }
        }
          , vr = {
            date: r({
                formats: {
                    full: "y\ub144 M\uc6d4 d\uc77c EEEE",
                    long: "y\ub144 M\uc6d4 d\uc77c",
                    medium: "y.MM.dd",
                    short: "y.MM.dd"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "a H\uc2dc mm\ubd84 ss\ucd08 zzzz",
                    long: "a H:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , wr = {
            lastWeek: "'\uc9c0\ub09c' eeee p",
            yesterday: "'\uc5b4\uc81c' p",
            today: "'\uc624\ub298' p",
            tomorrow: "'\ub0b4\uc77c' p",
            nextWeek: "'\ub2e4\uc74c' eeee p",
            other: "P"
        }
          , br = {
            code: "ko",
            formatDistance: (e,t,n)=>{
                let a;
                const r = gr[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", t.toString()),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? a + " \ud6c4" : a + " \uc804" : a
            }
            ,
            formatLong: vr,
            formatRelative: (e,t,n,a)=>wr[e],
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e);
                    switch (String(t?.unit)) {
                    case "minute":
                    case "second":
                        return String(n);
                    case "date":
                        return n + "\uc77c";
                    default:
                        return n + "\ubc88\uc9f8"
                    }
                }
                ,
                era: s({
                    values: {
                        narrow: ["BC", "AD"],
                        abbreviated: ["BC", "AD"],
                        wide: ["\uae30\uc6d0\uc804", "\uc11c\uae30"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["1\ubd84\uae30", "2\ubd84\uae30", "3\ubd84\uae30", "4\ubd84\uae30"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],
                        abbreviated: ["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"],
                        wide: ["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"],
                        short: ["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"],
                        abbreviated: ["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"],
                        wide: ["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\uc624\uc804",
                            pm: "\uc624\ud6c4",
                            midnight: "\uc790\uc815",
                            noon: "\uc815\uc624",
                            morning: "\uc544\uce68",
                            afternoon: "\uc624\ud6c4",
                            evening: "\uc800\ub141",
                            night: "\ubc24"
                        },
                        abbreviated: {
                            am: "\uc624\uc804",
                            pm: "\uc624\ud6c4",
                            midnight: "\uc790\uc815",
                            noon: "\uc815\uc624",
                            morning: "\uc544\uce68",
                            afternoon: "\uc624\ud6c4",
                            evening: "\uc800\ub141",
                            night: "\ubc24"
                        },
                        wide: {
                            am: "\uc624\uc804",
                            pm: "\uc624\ud6c4",
                            midnight: "\uc790\uc815",
                            noon: "\uc815\uc624",
                            morning: "\uc544\uce68",
                            afternoon: "\uc624\ud6c4",
                            evening: "\uc800\ub141",
                            night: "\ubc24"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\uc624\uc804",
                            pm: "\uc624\ud6c4",
                            midnight: "\uc790\uc815",
                            noon: "\uc815\uc624",
                            morning: "\uc544\uce68",
                            afternoon: "\uc624\ud6c4",
                            evening: "\uc800\ub141",
                            night: "\ubc24"
                        },
                        abbreviated: {
                            am: "\uc624\uc804",
                            pm: "\uc624\ud6c4",
                            midnight: "\uc790\uc815",
                            noon: "\uc815\uc624",
                            morning: "\uc544\uce68",
                            afternoon: "\uc624\ud6c4",
                            evening: "\uc800\ub141",
                            night: "\ubc24"
                        },
                        wide: {
                            am: "\uc624\uc804",
                            pm: "\uc624\ud6c4",
                            midnight: "\uc790\uc815",
                            noon: "\uc815\uc624",
                            morning: "\uc544\uce68",
                            afternoon: "\uc624\ud6c4",
                            evening: "\uc800\ub141",
                            night: "\ubc24"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\uc77c|\ubc88\uc9f8)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
                        abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
                        wide: /^(\uae30\uc6d0\uc804|\uc11c\uae30)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^(bc|\uae30\uc6d0\uc804)/i, /^(ad|\uc11c\uae30)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^q[1234]/i,
                        wide: /^[1234]\uc0ac?\ubd84\uae30/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(1[012]|[123456789])/,
                        abbreviated: /^(1[012]|[123456789])\uc6d4/i,
                        wide: /^(1[012]|[123456789])\uc6d4/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^1\uc6d4?$/, /^2/, /^3/, /^4/, /^5/, /^6/, /^7/, /^8/, /^9/, /^10/, /^11/, /^12/]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\uc77c\uc6d4\ud654\uc218\ubaa9\uae08\ud1a0]/,
                        short: /^[\uc77c\uc6d4\ud654\uc218\ubaa9\uae08\ud1a0]/,
                        abbreviated: /^[\uc77c\uc6d4\ud654\uc218\ubaa9\uae08\ud1a0]/,
                        wide: /^[\uc77c\uc6d4\ud654\uc218\ubaa9\uae08\ud1a0]\uc694\uc77c/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\uc77c/, /^\uc6d4/, /^\ud654/, /^\uc218/, /^\ubaa9/, /^\uae08/, /^\ud1a0/]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(am|pm|\uc624\uc804|\uc624\ud6c4|\uc790\uc815|\uc815\uc624|\uc544\uce68|\uc800\ub141|\ubc24)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^(am|\uc624\uc804)/i,
                            pm: /^(pm|\uc624\ud6c4)/i,
                            midnight: /^\uc790\uc815/i,
                            noon: /^\uc815\uc624/i,
                            morning: /^\uc544\uce68/i,
                            afternoon: /^\uc624\ud6c4/i,
                            evening: /^\uc800\ub141/i,
                            night: /^\ubc24/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const yr = {
            lessThanXSeconds: {
                standalone: {
                    one: "manner w\xe9i eng Sekonn",
                    other: "manner w\xe9i {{count}} Sekonnen"
                },
                withPreposition: {
                    one: "manner w\xe9i enger Sekonn",
                    other: "manner w\xe9i {{count}} Sekonnen"
                }
            },
            xSeconds: {
                standalone: {
                    one: "eng Sekonn",
                    other: "{{count}} Sekonnen"
                },
                withPreposition: {
                    one: "enger Sekonn",
                    other: "{{count}} Sekonnen"
                }
            },
            halfAMinute: {
                standalone: "eng hallef Minutt",
                withPreposition: "enger hallwer Minutt"
            },
            lessThanXMinutes: {
                standalone: {
                    one: "manner w\xe9i eng Minutt",
                    other: "manner w\xe9i {{count}} Minutten"
                },
                withPreposition: {
                    one: "manner w\xe9i enger Minutt",
                    other: "manner w\xe9i {{count}} Minutten"
                }
            },
            xMinutes: {
                standalone: {
                    one: "eng Minutt",
                    other: "{{count}} Minutten"
                },
                withPreposition: {
                    one: "enger Minutt",
                    other: "{{count}} Minutten"
                }
            },
            aboutXHours: {
                standalone: {
                    one: "ongef\xe9ier eng Stonn",
                    other: "ongef\xe9ier {{count}} Stonnen"
                },
                withPreposition: {
                    one: "ongef\xe9ier enger Stonn",
                    other: "ongef\xe9ier {{count}} Stonnen"
                }
            },
            xHours: {
                standalone: {
                    one: "eng Stonn",
                    other: "{{count}} Stonnen"
                },
                withPreposition: {
                    one: "enger Stonn",
                    other: "{{count}} Stonnen"
                }
            },
            xDays: {
                standalone: {
                    one: "een Dag",
                    other: "{{count}} Deeg"
                },
                withPreposition: {
                    one: "engem Dag",
                    other: "{{count}} Deeg"
                }
            },
            aboutXWeeks: {
                standalone: {
                    one: "ongef\xe9ier eng Woch",
                    other: "ongef\xe9ier {{count}} Wochen"
                },
                withPreposition: {
                    one: "ongef\xe9ier enger Woche",
                    other: "ongef\xe9ier {{count}} Wochen"
                }
            },
            xWeeks: {
                standalone: {
                    one: "eng Woch",
                    other: "{{count}} Wochen"
                },
                withPreposition: {
                    one: "enger Woch",
                    other: "{{count}} Wochen"
                }
            },
            aboutXMonths: {
                standalone: {
                    one: "ongef\xe9ier ee Mount",
                    other: "ongef\xe9ier {{count}} M\xe9int"
                },
                withPreposition: {
                    one: "ongef\xe9ier engem Mount",
                    other: "ongef\xe9ier {{count}} M\xe9int"
                }
            },
            xMonths: {
                standalone: {
                    one: "ee Mount",
                    other: "{{count}} M\xe9int"
                },
                withPreposition: {
                    one: "engem Mount",
                    other: "{{count}} M\xe9int"
                }
            },
            aboutXYears: {
                standalone: {
                    one: "ongef\xe9ier ee Joer",
                    other: "ongef\xe9ier {{count}} Joer"
                },
                withPreposition: {
                    one: "ongef\xe9ier engem Joer",
                    other: "ongef\xe9ier {{count}} Joer"
                }
            },
            xYears: {
                standalone: {
                    one: "ee Joer",
                    other: "{{count}} Joer"
                },
                withPreposition: {
                    one: "engem Joer",
                    other: "{{count}} Joer"
                }
            },
            overXYears: {
                standalone: {
                    one: "m\xe9i w\xe9i ee Joer",
                    other: "m\xe9i w\xe9i {{count}} Joer"
                },
                withPreposition: {
                    one: "m\xe9i w\xe9i engem Joer",
                    other: "m\xe9i w\xe9i {{count}} Joer"
                }
            },
            almostXYears: {
                standalone: {
                    one: "bal ee Joer",
                    other: "bal {{count}} Joer"
                },
                withPreposition: {
                    one: "bal engem Joer",
                    other: "bal {{count}} Joer"
                }
            }
        }
          , kr = ["d", "h", "n", "t", "z"]
          , Mr = ["a,", "e", "i", "o", "u"]
          , Pr = [0, 1, 2, 3, 8, 9]
          , Wr = [40, 50, 60, 70];
        function xr(e) {
            const t = e.charAt(0).toLowerCase();
            if (-1 != Mr.indexOf(t) || -1 != kr.indexOf(t))
                return !0;
            const n = e.split(" ")[0]
              , a = parseInt(n);
            return !isNaN(a) && -1 != Pr.indexOf(a % 10) && -1 == Wr.indexOf(parseInt(n.substring(0, 2)))
        }
        const Sr = {
            date: r({
                formats: {
                    full: "EEEE, do MMMM y",
                    long: "do MMMM y",
                    medium: "do MMM y",
                    short: "dd.MM.yy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'um' {{time}}",
                    long: "{{date}} 'um' {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Dr = {
            lastWeek: e=>{
                const t = e.getDay();
                let n = "'l\xe4schte";
                return 2 !== t && 4 !== t || (n += "n"),
                n += "' eeee 'um' p",
                n
            }
            ,
            yesterday: "'g\xebschter um' p",
            today: "'haut um' p",
            tomorrow: "'moien um' p",
            nextWeek: "eeee 'um' p",
            other: "P"
        }
          , jr = {
            code: "lb",
            formatDistance: (e,t,n)=>{
                let a;
                const r = yr[e]
                  , i = n?.addSuffix ? r.withPreposition : r.standalone;
                return a = "string" === typeof i ? i : 1 === t ? i.one : i.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "a" + (xr(a) ? "n" : "") + " " + a : "viru" + (xr(a) ? "n" : "") + " " + a : a
            }
            ,
            formatLong: Sr,
            formatRelative: (e,t,n,a)=>{
                const r = Dr[e];
                return "function" === typeof r ? r(t) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["v.Chr.", "n.Chr."],
                        abbreviated: ["v.Chr.", "n.Chr."],
                        wide: ["viru Christus", "no Christus"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                        abbreviated: ["Jan", "Feb", "M\xe4e", "Abr", "Mee", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"],
                        wide: ["Januar", "Februar", "M\xe4erz", "Abr\xebll", "Mee", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["S", "M", "D", "M", "D", "F", "S"],
                        short: ["So", "M\xe9", "D\xeb", "M\xeb", "Do", "Fr", "Sa"],
                        abbreviated: ["So.", "M\xe9.", "D\xeb.", "M\xeb.", "Do.", "Fr.", "Sa."],
                        wide: ["Sonndeg", "M\xe9indeg", "D\xebnschdeg", "M\xebttwoch", "Donneschdeg", "Freideg", "Samschdeg"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "mo.",
                            pm: "nom\xeb.",
                            midnight: "M\xebtternuecht",
                            noon: "M\xebtteg",
                            morning: "Moien",
                            afternoon: "Nom\xebtteg",
                            evening: "Owend",
                            night: "Nuecht"
                        },
                        abbreviated: {
                            am: "moies",
                            pm: "nom\xebttes",
                            midnight: "M\xebtternuecht",
                            noon: "M\xebtteg",
                            morning: "Moien",
                            afternoon: "Nom\xebtteg",
                            evening: "Owend",
                            night: "Nuecht"
                        },
                        wide: {
                            am: "moies",
                            pm: "nom\xebttes",
                            midnight: "M\xebtternuecht",
                            noon: "M\xebtteg",
                            morning: "Moien",
                            afternoon: "Nom\xebtteg",
                            evening: "Owend",
                            night: "Nuecht"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "mo.",
                            pm: "nom.",
                            midnight: "M\xebtternuecht",
                            noon: "m\xebttes",
                            morning: "moies",
                            afternoon: "nom\xebttes",
                            evening: "owes",
                            night: "nuets"
                        },
                        abbreviated: {
                            am: "moies",
                            pm: "nom\xebttes",
                            midnight: "M\xebtternuecht",
                            noon: "m\xebttes",
                            morning: "moies",
                            afternoon: "nom\xebttes",
                            evening: "owes",
                            night: "nuets"
                        },
                        wide: {
                            am: "moies",
                            pm: "nom\xebttes",
                            midnight: "M\xebtternuecht",
                            noon: "m\xebttes",
                            morning: "moies",
                            afternoon: "nom\xebttes",
                            evening: "owes",
                            night: "nuets"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\.)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
                        abbreviated: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
                        wide: /^(viru Christus|virun eiser Z\xe4itrechnung|no Christus|eiser Z\xe4itrechnung)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^v/i, /^n/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^q[1234]/i,
                        wide: /^[1234](\.)? Quartal/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(jan|feb|m\xe4e|abr|mee|jun|jul|aug|sep|okt|nov|dez)/i,
                        wide: /^(januar|februar|m\xe4erz|abr\xebll|mee|juni|juli|august|september|oktober|november|dezember)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^f/i, /^m\xe4/i, /^ab/i, /^me/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[smdf]/i,
                        short: /^(so|m\xe9|d\xeb|m\xeb|do|fr|sa)/i,
                        abbreviated: /^(son?|m\xe9i?|d\xebn?|m\xebt?|don?|fre?|sam?)\.?/i,
                        wide: /^(sonndeg|m\xe9indeg|d\xebnschdeg|m\xebttwoch|donneschdeg|freideg|samschdeg)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^so/i, /^m\xe9/i, /^d\xeb/i, /^m\xeb/i, /^do/i, /^f/i, /^sa/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(mo\.?|nom\xeb\.?|M\xebtternuecht|m\xebttes|moies|nom\xebttes|owes|nuets)/i,
                        abbreviated: /^(moi\.?|nom\xebt\.?|M\xebtternuecht|m\xebttes|moies|nom\xebttes|owes|nuets)/i,
                        wide: /^(moies|nom\xebttes|M\xebtternuecht|m\xebttes|moies|nom\xebttes|owes|nuets)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: {
                            am: /^m/i,
                            pm: /^n/i,
                            midnight: /^M\xebtter/i,
                            noon: /^m\xebttes/i,
                            morning: /moies/i,
                            afternoon: /nom\xebttes/i,
                            evening: /owes/i,
                            night: /nuets/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Cr = {
            xseconds_other: "sekund\u0117_sekund\u017ei\u0173_sekundes",
            xminutes_one: "minut\u0117_minut\u0117s_minut\u0119",
            xminutes_other: "minut\u0117s_minu\u010di\u0173_minutes",
            xhours_one: "valanda_valandos_valand\u0105",
            xhours_other: "valandos_valand\u0173_valandas",
            xdays_one: "diena_dienos_dien\u0105",
            xdays_other: "dienos_dien\u0173_dienas",
            xweeks_one: "savait\u0117_savait\u0117s_savait\u0119",
            xweeks_other: "savait\u0117s_savai\u010di\u0173_savaites",
            xmonths_one: "m\u0117nuo_m\u0117nesio_m\u0117nes\u012f",
            xmonths_other: "m\u0117nesiai_m\u0117nesi\u0173_m\u0117nesius",
            xyears_one: "metai_met\u0173_metus",
            xyears_other: "metai_met\u0173_metus",
            about: "apie",
            over: "daugiau nei",
            almost: "beveik",
            lessthan: "ma\u017eiau nei"
        }
          , Tr = (e,t,n,a)=>t ? a ? "keli\u0173 sekund\u017ei\u0173" : "kelias sekundes" : "kelios sekund\u0117s"
          , Er = (e,t,n,a)=>t ? a ? Ir(n)[1] : Ir(n)[2] : Ir(n)[0]
          , Nr = (e,t,n,a)=>{
            const r = e + " ";
            return 1 === e ? r + Er(0, t, n, a) : t ? a ? r + Ir(n)[1] : r + (zr(e) ? Ir(n)[1] : Ir(n)[2]) : r + (zr(e) ? Ir(n)[1] : Ir(n)[0])
        }
        ;
        function zr(e) {
            return e % 10 === 0 || e > 10 && e < 20
        }
        function Ir(e) {
            return Cr[e].split("_")
        }
        const Or = {
            lessThanXSeconds: {
                one: Tr,
                other: Nr
            },
            xSeconds: {
                one: Tr,
                other: Nr
            },
            halfAMinute: "pus\u0117 minut\u0117s",
            lessThanXMinutes: {
                one: Er,
                other: Nr
            },
            xMinutes: {
                one: Er,
                other: Nr
            },
            aboutXHours: {
                one: Er,
                other: Nr
            },
            xHours: {
                one: Er,
                other: Nr
            },
            xDays: {
                one: Er,
                other: Nr
            },
            aboutXWeeks: {
                one: Er,
                other: Nr
            },
            xWeeks: {
                one: Er,
                other: Nr
            },
            aboutXMonths: {
                one: Er,
                other: Nr
            },
            xMonths: {
                one: Er,
                other: Nr
            },
            aboutXYears: {
                one: Er,
                other: Nr
            },
            xYears: {
                one: Er,
                other: Nr
            },
            overXYears: {
                one: Er,
                other: Nr
            },
            almostXYears: {
                one: Er,
                other: Nr
            }
        }
          , Hr = {
            date: r({
                formats: {
                    full: "y 'm'. MMMM d 'd'., EEEE",
                    long: "y 'm'. MMMM d 'd'.",
                    medium: "y-MM-dd",
                    short: "y-MM-dd"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Ar = {
            lastWeek: "'Pra\u0117jus\u012f' eeee p",
            yesterday: "'Vakar' p",
            today: "'\u0160iandien' p",
            tomorrow: "'Rytoj' p",
            nextWeek: "eeee p",
            other: "P"
        }
          , Yr = {
            code: "lt",
            formatDistance: (e,t,n)=>{
                const a = e.match(/about|over|almost|lessthan/i)
                  , r = a ? e.replace(a[0], "") : e
                  , i = void 0 !== n?.comparison && n.comparison > 0;
                let o;
                const s = Or[e];
                if (o = "string" === typeof s ? s : 1 === t ? s.one(t, !0 === n?.addSuffix, r.toLowerCase() + "_one", i) : s.other(t, !0 === n?.addSuffix, r.toLowerCase() + "_other", i),
                a) {
                    const e = a[0].toLowerCase();
                    o = Cr[e] + " " + o
                }
                return n?.addSuffix ? n.comparison && n.comparison > 0 ? "po " + o : "prie\u0161 " + o : o
            }
            ,
            formatLong: Hr,
            formatRelative: (e,t,n,a)=>Ar[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + "-oji",
                era: s({
                    values: {
                        narrow: ["pr. Kr.", "po Kr."],
                        abbreviated: ["pr. Kr.", "po Kr."],
                        wide: ["prie\u0161 Krist\u0173", "po Kristaus"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["I ketv.", "II ketv.", "III ketv.", "IV ketv."],
                        wide: ["I ketvirtis", "II ketvirtis", "III ketvirtis", "IV ketvirtis"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["I k.", "II k.", "III k.", "IV k."],
                        wide: ["I ketvirtis", "II ketvirtis", "III ketvirtis", "IV ketvirtis"]
                    },
                    defaultFormattingWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"],
                        abbreviated: ["saus.", "vas.", "kov.", "bal.", "geg.", "bir\u017e.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."],
                        wide: ["sausis", "vasaris", "kovas", "balandis", "gegu\u017e\u0117", "bir\u017eelis", "liepa", "rugpj\u016btis", "rugs\u0117jis", "spalis", "lapkritis", "gruodis"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"],
                        abbreviated: ["saus.", "vas.", "kov.", "bal.", "geg.", "bir\u017e.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."],
                        wide: ["sausio", "vasario", "kovo", "baland\u017eio", "gegu\u017e\u0117s", "bir\u017eelio", "liepos", "rugpj\u016b\u010dio", "rugs\u0117jo", "spalio", "lapkri\u010dio", "gruod\u017eio"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["S", "P", "A", "T", "K", "P", "\u0160"],
                        short: ["Sk", "Pr", "An", "Tr", "Kt", "Pn", "\u0160t"],
                        abbreviated: ["sk", "pr", "an", "tr", "kt", "pn", "\u0161t"],
                        wide: ["sekmadienis", "pirmadienis", "antradienis", "tre\u010diadienis", "ketvirtadienis", "penktadienis", "\u0161e\u0161tadienis"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["S", "P", "A", "T", "K", "P", "\u0160"],
                        short: ["Sk", "Pr", "An", "Tr", "Kt", "Pn", "\u0160t"],
                        abbreviated: ["sk", "pr", "an", "tr", "kt", "pn", "\u0161t"],
                        wide: ["sekmadien\u012f", "pirmadien\u012f", "antradien\u012f", "tre\u010diadien\u012f", "ketvirtadien\u012f", "penktadien\u012f", "\u0161e\u0161tadien\u012f"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "pr. p.",
                            pm: "pop.",
                            midnight: "vidurnaktis",
                            noon: "vidurdienis",
                            morning: "rytas",
                            afternoon: "diena",
                            evening: "vakaras",
                            night: "naktis"
                        },
                        abbreviated: {
                            am: "prie\u0161piet",
                            pm: "popiet",
                            midnight: "vidurnaktis",
                            noon: "vidurdienis",
                            morning: "rytas",
                            afternoon: "diena",
                            evening: "vakaras",
                            night: "naktis"
                        },
                        wide: {
                            am: "prie\u0161piet",
                            pm: "popiet",
                            midnight: "vidurnaktis",
                            noon: "vidurdienis",
                            morning: "rytas",
                            afternoon: "diena",
                            evening: "vakaras",
                            night: "naktis"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "pr. p.",
                            pm: "pop.",
                            midnight: "vidurnaktis",
                            noon: "perpiet",
                            morning: "rytas",
                            afternoon: "popiet\u0117",
                            evening: "vakaras",
                            night: "naktis"
                        },
                        abbreviated: {
                            am: "prie\u0161piet",
                            pm: "popiet",
                            midnight: "vidurnaktis",
                            noon: "perpiet",
                            morning: "rytas",
                            afternoon: "popiet\u0117",
                            evening: "vakaras",
                            night: "naktis"
                        },
                        wide: {
                            am: "prie\u0161piet",
                            pm: "popiet",
                            midnight: "vidurnaktis",
                            noon: "perpiet",
                            morning: "rytas",
                            afternoon: "popiet\u0117",
                            evening: "vakaras",
                            night: "naktis"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(-oji)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^p(r|o)\.?\s?(kr\.?|me)/i,
                        abbreviated: /^(pr\.\s?(kr\.|m\.\s?e\.)|po\s?kr\.|m\u016bs\u0173 eroje)/i,
                        wide: /^(prie\u0161 Krist\u0173|prie\u0161 m\u016bs\u0173 er\u0105|po Kristaus|m\u016bs\u0173 eroje)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        wide: [/prie\u0161/i, /(po|m\u016bs\u0173)/i],
                        any: [/^pr/i, /^(po|m)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^([1234])/i,
                        abbreviated: /^(I|II|III|IV)\s?ketv?\.?/i,
                        wide: /^(I|II|III|IV)\s?ketvirtis/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/1/i, /2/i, /3/i, /4/i],
                        any: [/I$/i, /II$/i, /III/i, /IV/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[svkbglr]/i,
                        abbreviated: /^(saus\.|vas\.|kov\.|bal\.|geg\.|bir\u017e\.|liep\.|rugp\.|rugs\.|spal\.|lapkr\.|gruod\.)/i,
                        wide: /^(sausi(s|o)|vasari(s|o)|kov(a|o)s|baland\u017e?i(s|o)|gegu\u017e\u0117s?|bir\u017eeli(s|o)|liep(a|os)|rugpj\u016b(t|\u010d)i(s|o)|rugs\u0117j(is|o)|spali(s|o)|lapkri(t|\u010d)i(s|o)|gruod\u017e?i(s|o))/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^s/i, /^v/i, /^k/i, /^b/i, /^g/i, /^b/i, /^l/i, /^r/i, /^r/i, /^s/i, /^l/i, /^g/i],
                        any: [/^saus/i, /^vas/i, /^kov/i, /^bal/i, /^geg/i, /^bir\u017e/i, /^liep/i, /^rugp/i, /^rugs/i, /^spal/i, /^lapkr/i, /^gruod/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[spatk\u0161]/i,
                        short: /^(sk|pr|an|tr|kt|pn|\u0161t)/i,
                        abbreviated: /^(sk|pr|an|tr|kt|pn|\u0161t)/i,
                        wide: /^(sekmadien(is|\u012f)|pirmadien(is|\u012f)|antradien(is|\u012f)|tre\u010diadien(is|\u012f)|ketvirtadien(is|\u012f)|penktadien(is|\u012f)|\u0161e\u0161tadien(is|\u012f))/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^s/i, /^p/i, /^a/i, /^t/i, /^k/i, /^p/i, /^\u0161/i],
                        wide: [/^se/i, /^pi/i, /^an/i, /^tr/i, /^ke/i, /^pe/i, /^\u0161e/i],
                        any: [/^sk/i, /^pr/i, /^an/i, /^tr/i, /^kt/i, /^pn/i, /^\u0161t/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(pr.\s?p.|pop.|vidurnaktis|(vidurdienis|perpiet)|rytas|(diena|popiet\u0117)|vakaras|naktis)/i,
                        any: /^(prie\u0161piet|popiet$|vidurnaktis|(vidurdienis|perpiet)|rytas|(diena|popiet\u0117)|vakaras|naktis)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        narrow: {
                            am: /^pr/i,
                            pm: /^pop./i,
                            midnight: /^vidurnaktis/i,
                            noon: /^(vidurdienis|perp)/i,
                            morning: /rytas/i,
                            afternoon: /(die|popiet\u0117)/i,
                            evening: /vakaras/i,
                            night: /naktis/i
                        },
                        any: {
                            am: /^pr/i,
                            pm: /^popiet$/i,
                            midnight: /^vidurnaktis/i,
                            noon: /^(vidurdienis|perp)/i,
                            morning: /rytas/i,
                            afternoon: /(die|popiet\u0117)/i,
                            evening: /vakaras/i,
                            night: /naktis/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        function _r(e) {
            return (t,n)=>{
                if (1 === t)
                    return n?.addSuffix ? e.one[0].replace("{{time}}", e.one[2]) : e.one[0].replace("{{time}}", e.one[1]);
                {
                    const a = t % 10 === 1 && t % 100 !== 11;
                    return n?.addSuffix ? e.other[0].replace("{{time}}", a ? e.other[3] : e.other[4]).replace("{{count}}", String(t)) : e.other[0].replace("{{time}}", a ? e.other[1] : e.other[2]).replace("{{count}}", String(t))
                }
            }
        }
        const Xr = {
            lessThanXSeconds: _r({
                one: ["maz\u0101k par {{time}}", "sekundi", "sekundi"],
                other: ["maz\u0101k nek\u0101 {{count}} {{time}}", "sekunde", "sekundes", "sekundes", "sekund\u0113m"]
            }),
            xSeconds: _r({
                one: ["1 {{time}}", "sekunde", "sekundes"],
                other: ["{{count}} {{time}}", "sekunde", "sekundes", "sekundes", "sekund\u0113m"]
            }),
            halfAMinute: (e,t)=>t?.addSuffix ? "pusmin\u016btes" : "pusmin\u016bte",
            lessThanXMinutes: _r({
                one: ["maz\u0101k par {{time}}", "min\u016bti", "min\u016bti"],
                other: ["maz\u0101k nek\u0101 {{count}} {{time}}", "min\u016bte", "min\u016btes", "min\u016btes", "min\u016bt\u0113m"]
            }),
            xMinutes: _r({
                one: ["1 {{time}}", "min\u016bte", "min\u016btes"],
                other: ["{{count}} {{time}}", "min\u016bte", "min\u016btes", "min\u016btes", "min\u016bt\u0113m"]
            }),
            aboutXHours: _r({
                one: ["apm\u0113ram 1 {{time}}", "stunda", "stundas"],
                other: ["apm\u0113ram {{count}} {{time}}", "stunda", "stundas", "stundas", "stund\u0101m"]
            }),
            xHours: _r({
                one: ["1 {{time}}", "stunda", "stundas"],
                other: ["{{count}} {{time}}", "stunda", "stundas", "stundas", "stund\u0101m"]
            }),
            xDays: _r({
                one: ["1 {{time}}", "diena", "dienas"],
                other: ["{{count}} {{time}}", "diena", "dienas", "dienas", "dien\u0101m"]
            }),
            aboutXWeeks: _r({
                one: ["apm\u0113ram 1 {{time}}", "ned\u0113\u013ca", "ned\u0113\u013cas"],
                other: ["apm\u0113ram {{count}} {{time}}", "ned\u0113\u013ca", "ned\u0113\u013cu", "ned\u0113\u013cas", "ned\u0113\u013c\u0101m"]
            }),
            xWeeks: _r({
                one: ["1 {{time}}", "ned\u0113\u013ca", "ned\u0113\u013cas"],
                other: ["{{count}} {{time}}", "ned\u0113\u013ca", "ned\u0113\u013cu", "ned\u0113\u013cas", "ned\u0113\u013c\u0101m"]
            }),
            aboutXMonths: _r({
                one: ["apm\u0113ram 1 {{time}}", "m\u0113nesis", "m\u0113ne\u0161a"],
                other: ["apm\u0113ram {{count}} {{time}}", "m\u0113nesis", "m\u0113ne\u0161i", "m\u0113ne\u0161a", "m\u0113ne\u0161iem"]
            }),
            xMonths: _r({
                one: ["1 {{time}}", "m\u0113nesis", "m\u0113ne\u0161a"],
                other: ["{{count}} {{time}}", "m\u0113nesis", "m\u0113ne\u0161i", "m\u0113ne\u0161a", "m\u0113ne\u0161iem"]
            }),
            aboutXYears: _r({
                one: ["apm\u0113ram 1 {{time}}", "gads", "gada"],
                other: ["apm\u0113ram {{count}} {{time}}", "gads", "gadi", "gada", "gadiem"]
            }),
            xYears: _r({
                one: ["1 {{time}}", "gads", "gada"],
                other: ["{{count}} {{time}}", "gads", "gadi", "gada", "gadiem"]
            }),
            overXYears: _r({
                one: ["ilg\u0101k par 1 {{time}}", "gadu", "gadu"],
                other: ["vair\u0101k nek\u0101 {{count}} {{time}}", "gads", "gadi", "gada", "gadiem"]
            }),
            almostXYears: _r({
                one: ["gandr\u012bz 1 {{time}}", "gads", "gada"],
                other: ["vair\u0101k nek\u0101 {{count}} {{time}}", "gads", "gadi", "gada", "gadiem"]
            })
        }
          , Rr = {
            date: r({
                formats: {
                    full: "EEEE, y. 'gada' d. MMMM",
                    long: "y. 'gada' d. MMMM",
                    medium: "dd.MM.y.",
                    short: "dd.MM.y."
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'plkst.' {{time}}",
                    long: "{{date}} 'plkst.' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Lr = ["sv\u0113tdien\u0101", "pirmdien\u0101", "otrdien\u0101", "tre\u0161dien\u0101", "ceturtdien\u0101", "piektdien\u0101", "sestdien\u0101"]
          , Fr = {
            lastWeek: (e,t,n)=>{
                if ($(e, t, n))
                    return "eeee 'plkst.' p";
                return "'Pag\u0101ju\u0161\u0101 " + Lr[e.getDay()] + " plkst.' p"
            }
            ,
            yesterday: "'Vakar plkst.' p",
            today: "'\u0160odien plkst.' p",
            tomorrow: "'R\u012bt plkst.' p",
            nextWeek: (e,t,n)=>{
                if ($(e, t, n))
                    return "eeee 'plkst.' p";
                return "'N\u0101kamaj\u0101 " + Lr[e.getDay()] + " plkst.' p"
            }
            ,
            other: "P"
        }
          , qr = {
            code: "lv",
            formatDistance: (e,t,n)=>{
                const a = Xr[e](t, n);
                return n?.addSuffix ? n.comparison && n.comparison > 0 ? "p\u0113c " + a : "pirms " + a : a
            }
            ,
            formatLong: Rr,
            formatRelative: (e,t,n,a)=>{
                const r = Fr[e];
                return "function" === typeof r ? r(t, n, a) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["p.m.\u0113", "m.\u0113"],
                        abbreviated: ["p. m. \u0113.", "m. \u0113."],
                        wide: ["pirms m\u016bsu \u0113ras", "m\u016bsu \u0113r\u0101"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1. cet.", "2. cet.", "3. cet.", "4. cet."],
                        wide: ["pirmais ceturksnis", "otrais ceturksnis", "tre\u0161ais ceturksnis", "ceturtais ceturksnis"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1. cet.", "2. cet.", "3. cet.", "4. cet."],
                        wide: ["pirmaj\u0101 ceturksn\u012b", "otraj\u0101 ceturksn\u012b", "tre\u0161aj\u0101 ceturksn\u012b", "ceturtaj\u0101 ceturksn\u012b"]
                    },
                    defaultFormattingWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                        abbreviated: ["janv.", "febr.", "marts", "apr.", "maijs", "j\u016bn.", "j\u016bl.", "aug.", "sept.", "okt.", "nov.", "dec."],
                        wide: ["janv\u0101ris", "febru\u0101ris", "marts", "apr\u012blis", "maijs", "j\u016bnijs", "j\u016blijs", "augusts", "septembris", "oktobris", "novembris", "decembris"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                        abbreviated: ["janv.", "febr.", "mart\u0101", "apr.", "maijs", "j\u016bn.", "j\u016bl.", "aug.", "sept.", "okt.", "nov.", "dec."],
                        wide: ["janv\u0101r\u012b", "febru\u0101r\u012b", "mart\u0101", "apr\u012bl\u012b", "maij\u0101", "j\u016bnij\u0101", "j\u016blij\u0101", "august\u0101", "septembr\u012b", "oktobr\u012b", "novembr\u012b", "decembr\u012b"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["S", "P", "O", "T", "C", "P", "S"],
                        short: ["Sv", "P", "O", "T", "C", "Pk", "S"],
                        abbreviated: ["sv\u0113td.", "pirmd.", "otrd.", "tre\u0161d.", "ceturtd.", "piektd.", "sestd."],
                        wide: ["sv\u0113tdiena", "pirmdiena", "otrdiena", "tre\u0161diena", "ceturtdiena", "piektdiena", "sestdiena"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["S", "P", "O", "T", "C", "P", "S"],
                        short: ["Sv", "P", "O", "T", "C", "Pk", "S"],
                        abbreviated: ["sv\u0113td.", "pirmd.", "otrd.", "tre\u0161d.", "ceturtd.", "piektd.", "sestd."],
                        wide: ["sv\u0113tdien\u0101", "pirmdien\u0101", "otrdien\u0101", "tre\u0161dien\u0101", "ceturtdien\u0101", "piektdien\u0101", "sestdien\u0101"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "am",
                            pm: "pm",
                            midnight: "pusn.",
                            noon: "pusd.",
                            morning: "r\u012bts",
                            afternoon: "diena",
                            evening: "vakars",
                            night: "nakts"
                        },
                        abbreviated: {
                            am: "am",
                            pm: "pm",
                            midnight: "pusn.",
                            noon: "pusd.",
                            morning: "r\u012bts",
                            afternoon: "p\u0113cpusd.",
                            evening: "vakars",
                            night: "nakts"
                        },
                        wide: {
                            am: "am",
                            pm: "pm",
                            midnight: "pusnakts",
                            noon: "pusdienlaiks",
                            morning: "r\u012bts",
                            afternoon: "p\u0113cpusdiena",
                            evening: "vakars",
                            night: "nakts"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "am",
                            pm: "pm",
                            midnight: "pusn.",
                            noon: "pusd.",
                            morning: "r\u012bt\u0101",
                            afternoon: "dien\u0101",
                            evening: "vakar\u0101",
                            night: "nakt\u012b"
                        },
                        abbreviated: {
                            am: "am",
                            pm: "pm",
                            midnight: "pusn.",
                            noon: "pusd.",
                            morning: "r\u012bt\u0101",
                            afternoon: "p\u0113cpusd.",
                            evening: "vakar\u0101",
                            night: "nakt\u012b"
                        },
                        wide: {
                            am: "am",
                            pm: "pm",
                            midnight: "pusnakt\u012b",
                            noon: "pusdienlaik\u0101",
                            morning: "r\u012bt\u0101",
                            afternoon: "p\u0113cpusdien\u0101",
                            evening: "vakar\u0101",
                            night: "nakt\u012b"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)\./i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(p\.m\.\u0113|m\.\u0113)/i,
                        abbreviated: /^(p\. m\. \u0113\.|m\. \u0113\.)/i,
                        wide: /^(pirms m\u016bsu \u0113ras|m\u016bsu \u0113r\u0101)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^p/i, /^m/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234](\. cet\.)/i,
                        wide: /^(pirma(is|j\u0101)|otra(is|j\u0101)|tre\u0161a(is|j\u0101)|ceturta(is|j\u0101)) ceturksn(is|\u012b)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^1/i, /^2/i, /^3/i, /^4/i],
                        abbreviated: [/^1/i, /^2/i, /^3/i, /^4/i],
                        wide: [/^p/i, /^o/i, /^t/i, /^c/i]
                    },
                    defaultParseWidth: "wide",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(janv\.|febr\.|marts|apr\.|maijs|j\u016bn\.|j\u016bl\.|aug\.|sept\.|okt\.|nov\.|dec\.)/i,
                        wide: /^(janv\u0101r(is|\u012b)|febru\u0101r(is|\u012b)|mart[s\u0101]|apr\u012bl(is|\u012b)|maij[s\u0101]|j\u016bnij[s\u0101]|j\u016blij[s\u0101]|august[s\u0101]|septembr(is|\u012b)|oktobr(is|\u012b)|novembr(is|\u012b)|decembr(is|\u012b))/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^mai/i, /^j\u016bn/i, /^j\u016bl/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[spotc]/i,
                        short: /^(sv|pi|o|t|c|pk|s)/i,
                        abbreviated: /^(sv\u0113td\.|pirmd\.|otrd.\|tre\u0161d\.|ceturtd\.|piektd\.|sestd\.)/i,
                        wide: /^(sv\u0113tdien(a|\u0101)|pirmdien(a|\u0101)|otrdien(a|\u0101)|tre\u0161dien(a|\u0101)|ceturtdien(a|\u0101)|piektdien(a|\u0101)|sestdien(a|\u0101))/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^s/i, /^p/i, /^o/i, /^t/i, /^c/i, /^p/i, /^s/i],
                        any: [/^sv/i, /^pi/i, /^o/i, /^t/i, /^c/i, /^p/i, /^se/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(am|pm|pusn\.|pusd\.|r\u012bt(s|\u0101)|dien(a|\u0101)|vakar(s|\u0101)|nakt(s|\u012b))/,
                        abbreviated: /^(am|pm|pusn\.|pusd\.|r\u012bt(s|\u0101)|p\u0113cpusd\.|vakar(s|\u0101)|nakt(s|\u012b))/,
                        wide: /^(am|pm|pusnakt(s|\u012b)|pusdienlaik(s|\u0101)|r\u012bt(s|\u0101)|p\u0113cpusdien(a|\u0101)|vakar(s|\u0101)|nakt(s|\u012b))/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: {
                            am: /^am/i,
                            pm: /^pm/i,
                            midnight: /^pusn/i,
                            noon: /^pusd/i,
                            morning: /^r/i,
                            afternoon: /^(d|p\u0113c)/i,
                            evening: /^v/i,
                            night: /^n/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Gr = {
            lessThanXSeconds: {
                one: "\u043f\u043e\u043c\u0430\u043b\u043a\u0443 \u043e\u0434 \u0441\u0435\u043a\u0443\u043d\u0434\u0430",
                other: "\u043f\u043e\u043c\u0430\u043b\u043a\u0443 \u043e\u0434 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0438"
            },
            xSeconds: {
                one: "1 \u0441\u0435\u043a\u0443\u043d\u0434\u0430",
                other: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0438"
            },
            halfAMinute: "\u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0430 \u043c\u0438\u043d\u0443\u0442\u0430",
            lessThanXMinutes: {
                one: "\u043f\u043e\u043c\u0430\u043b\u043a\u0443 \u043e\u0434 \u043c\u0438\u043d\u0443\u0442\u0430",
                other: "\u043f\u043e\u043c\u0430\u043b\u043a\u0443 \u043e\u0434 {{count}} \u043c\u0438\u043d\u0443\u0442\u0438"
            },
            xMinutes: {
                one: "1 \u043c\u0438\u043d\u0443\u0442\u0430",
                other: "{{count}} \u043c\u0438\u043d\u0443\u0442\u0438"
            },
            aboutXHours: {
                one: "\u043e\u043a\u043e\u043b\u0443 1 \u0447\u0430\u0441",
                other: "\u043e\u043a\u043e\u043b\u0443 {{count}} \u0447\u0430\u0441\u0430"
            },
            xHours: {
                one: "1 \u0447\u0430\u0441",
                other: "{{count}} \u0447\u0430\u0441\u0430"
            },
            xDays: {
                one: "1 \u0434\u0435\u043d",
                other: "{{count}} \u0434\u0435\u043d\u0430"
            },
            aboutXWeeks: {
                one: "\u043e\u043a\u043e\u043b\u0443 1 \u043d\u0435\u0434\u0435\u043b\u0430",
                other: "\u043e\u043a\u043e\u043b\u0443 {{count}} \u043c\u0435\u0441\u0435\u0446\u0438"
            },
            xWeeks: {
                one: "1 \u043d\u0435\u0434\u0435\u043b\u0430",
                other: "{{count}} \u043d\u0435\u0434\u0435\u043b\u0438"
            },
            aboutXMonths: {
                one: "\u043e\u043a\u043e\u043b\u0443 1 \u043c\u0435\u0441\u0435\u0446",
                other: "\u043e\u043a\u043e\u043b\u0443 {{count}} \u043d\u0435\u0434\u0435\u043b\u0438"
            },
            xMonths: {
                one: "1 \u043c\u0435\u0441\u0435\u0446",
                other: "{{count}} \u043c\u0435\u0441\u0435\u0446\u0438"
            },
            aboutXYears: {
                one: "\u043e\u043a\u043e\u043b\u0443 1 \u0433\u043e\u0434\u0438\u043d\u0430",
                other: "\u043e\u043a\u043e\u043b\u0443 {{count}} \u0433\u043e\u0434\u0438\u043d\u0438"
            },
            xYears: {
                one: "1 \u0433\u043e\u0434\u0438\u043d\u0430",
                other: "{{count}} \u0433\u043e\u0434\u0438\u043d\u0438"
            },
            overXYears: {
                one: "\u043f\u043e\u0432\u0435\u045c\u0435 \u043e\u0434 1 \u0433\u043e\u0434\u0438\u043d\u0430",
                other: "\u043f\u043e\u0432\u0435\u045c\u0435 \u043e\u0434 {{count}} \u0433\u043e\u0434\u0438\u043d\u0438"
            },
            almostXYears: {
                one: "\u0431\u0435\u0437\u043c\u0430\u043b\u043a\u0443 1 \u0433\u043e\u0434\u0438\u043d\u0430",
                other: "\u0431\u0435\u0437\u043c\u0430\u043b\u043a\u0443 {{count}} \u0433\u043e\u0434\u0438\u043d\u0438"
            }
        }
          , Kr = {
            date: r({
                formats: {
                    full: "EEEE, dd MMMM yyyy",
                    long: "dd MMMM yyyy",
                    medium: "dd MMM yyyy",
                    short: "dd/MM/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    any: "{{date}} {{time}}"
                },
                defaultWidth: "any"
            })
        }
          , Vr = ["\u043d\u0435\u0434\u0435\u043b\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e\u043a", "\u043f\u0435\u0442\u043e\u043a", "\u0441\u0430\u0431\u043e\u0442\u0430"];
        function $r(e) {
            const t = Vr[e];
            switch (e) {
            case 0:
            case 3:
            case 6:
                return "'\u043e\u0432\u0430 " + t + " \u0432o' p";
            case 1:
            case 2:
            case 4:
            case 5:
                return "'\u043e\u0432\u043e\u0458 " + t + " \u0432o' p"
            }
        }
        const Br = {
            lastWeek: (e,t,n)=>{
                const a = e.getDay();
                return $(e, t, n) ? $r(a) : function(e) {
                    const t = Vr[e];
                    switch (e) {
                    case 0:
                    case 3:
                    case 6:
                        return "'\u043c\u0438\u043d\u0430\u0442\u0430\u0442\u0430 " + t + " \u0432\u043e' p";
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return "'\u043c\u0438\u043d\u0430\u0442\u0438\u043e\u0442 " + t + " \u0432\u043e' p"
                    }
                }(a)
            }
            ,
            yesterday: "'\u0432\u0447\u0435\u0440\u0430 \u0432\u043e' p",
            today: "'\u0434\u0435\u043d\u0435\u0441 \u0432\u043e' p",
            tomorrow: "'\u0443\u0442\u0440\u0435 \u0432\u043e' p",
            nextWeek: (e,t,n)=>{
                const a = e.getDay();
                return $(e, t, n) ? $r(a) : function(e) {
                    const t = Vr[e];
                    switch (e) {
                    case 0:
                    case 3:
                    case 6:
                        return "'\u0441\u043b\u0435\u0434\u043d\u0430\u0442\u0430 " + t + " \u0432o' p";
                    case 1:
                    case 2:
                    case 4:
                    case 5:
                        return "'\u0441\u043b\u0435\u0434\u043d\u0438\u043e\u0442 " + t + " \u0432o' p"
                    }
                }(a)
            }
            ,
            other: "P"
        }
          , Jr = {
            code: "mk",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Gr[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "\u0437\u0430 " + a : "\u043f\u0440\u0435\u0434 " + a : a
            }
            ,
            formatLong: Kr,
            formatRelative: (e,t,n,a)=>{
                const r = Br[e];
                return "function" === typeof r ? r(t, n, a) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e)
                      , a = n % 100;
                    if (a > 20 || a < 10)
                        switch (a % 10) {
                        case 1:
                            return n + "-\u0432\u0438";
                        case 2:
                            return n + "-\u0440\u0438";
                        case 7:
                        case 8:
                            return n + "-\u043c\u0438"
                        }
                    return n + "-\u0442\u0438"
                }
                ,
                era: s({
                    values: {
                        narrow: ["\u043f\u0440.\u043d.\u0435.", "\u043d.\u0435."],
                        abbreviated: ["\u043f\u0440\u0435\u0434 \u043d. \u0435.", "\u043d. \u0435."],
                        wide: ["\u043f\u0440\u0435\u0434 \u043d\u0430\u0448\u0430\u0442\u0430 \u0435\u0440\u0430", "\u043d\u0430\u0448\u0430\u0442\u0430 \u0435\u0440\u0430"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1-\u0432\u0438 \u043a\u0432.", "2-\u0440\u0438 \u043a\u0432.", "3-\u0442\u0438 \u043a\u0432.", "4-\u0442\u0438 \u043a\u0432."],
                        wide: ["1-\u0432\u0438 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "2-\u0440\u0438 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "3-\u0442\u0438 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "4-\u0442\u0438 \u043a\u0432\u0430\u0440\u0442\u0430\u043b"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        abbreviated: ["\u0458\u0430\u043d", "\u0444\u0435\u0432", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f\u0442", "\u043e\u043a\u0442", "\u043d\u043e\u0435\u043c", "\u0434\u0435\u043a"],
                        wide: ["\u0458\u0430\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d\u0438", "\u0458\u0443\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"],
                        short: ["\u043d\u0435", "\u043f\u043e", "\u0432\u0442", "\u0441\u0440", "\u0447\u0435", "\u043f\u0435", "\u0441\u0430"],
                        abbreviated: ["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0432\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0430\u0431"],
                        wide: ["\u043d\u0435\u0434\u0435\u043b\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e\u043a", "\u043f\u0435\u0442\u043e\u043a", "\u0441\u0430\u0431\u043e\u0442\u0430"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        wide: {
                            am: "\u043f\u0440\u0435\u0442\u043f\u043b\u0430\u0434\u043d\u0435",
                            pm: "\u043f\u043e\u043f\u043b\u0430\u0434\u043d\u0435",
                            midnight: "\u043f\u043e\u043b\u043d\u043e\u045c",
                            noon: "\u043d\u0430\u043f\u043b\u0430\u0434\u043d\u0435",
                            morning: "\u043d\u0430\u0443\u0442\u0440\u043e",
                            afternoon: "\u043f\u043e\u043f\u043b\u0430\u0434\u043d\u0435",
                            evening: "\u043d\u0430\u0432\u0435\u0447\u0435\u0440",
                            night: "\u043d\u043e\u045c\u0435"
                        }
                    },
                    defaultWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(-?[\u0432\u0440\u043c\u0442][\u0438])?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^((\u043f\u0440)?\u043d\.?\s?\u0435\.?)/i,
                        abbreviated: /^((\u043f\u0440)?\u043d\.?\s?\u0435\.?)/i,
                        wide: /^(\u043f\u0440\u0435\u0434 \u043d\u0430\u0448\u0430\u0442\u0430 \u0435\u0440\u0430|\u043d\u0430\u0448\u0430\u0442\u0430 \u0435\u0440\u0430)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u043f/i, /^\u043d/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234](-?[\u0432\u0440\u0442]?\u0438?)? \u043a\u0432.?/i,
                        wide: /^[1234](-?[\u0432\u0440\u0442]?\u0438?)? \u043a\u0432\u0430\u0440\u0442\u0430\u043b/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        abbreviated: /^(\u0458\u0430\u043d|\u0444\u0435\u0432|\u043c\u0430\u0440|\u0430\u043f\u0440|\u043c\u0430\u0458|\u0458\u0443\u043d|\u0458\u0443\u043b|\u0430\u0432\u0433|\u0441\u0435\u043f|\u043e\u043a\u0442|\u043d\u043e\u0435\u043c|\u0434\u0435\u043a)/i,
                        wide: /^(\u0458\u0430\u043d\u0443\u0430\u0440\u0438|\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438|\u043c\u0430\u0440\u0442|\u0430\u043f\u0440\u0438\u043b|\u043c\u0430\u0458|\u0458\u0443\u043d\u0438|\u0458\u0443\u043b\u0438|\u0430\u0432\u0433\u0443\u0441\u0442|\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438|\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438|\u043d\u043e\u0435\u043c\u0432\u0440\u0438|\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u0458\u0430/i, /^\u0424/i, /^\u043c\u0430\u0440/i, /^\u0430\u043f/i, /^\u043c\u0430\u0458/i, /^\u0458\u0443\u043d/i, /^\u0458\u0443\u043b/i, /^\u0430\u0432/i, /^\u0441\u0435/i, /^\u043e\u043a\u0442/i, /^\u043d\u043e/i, /^\u0434\u0435/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u043d\u043f\u0432\u0441\u0447]/i,
                        short: /^(\u043d\u0435|\u043f\u043e|\u0432\u0442|\u0441\u0440|\u0447\u0435|\u043f\u0435|\u0441\u0430)/i,
                        abbreviated: /^(\u043d\u0435\u0434|\u043f\u043e\u043d|\u0432\u0442\u043e|\u0441\u0440\u0435|\u0447\u0435\u0442|\u043f\u0435\u0442|\u0441\u0430\u0431)/i,
                        wide: /^(\u043d\u0435\u0434\u0435\u043b\u0430|\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a|\u0432\u0442\u043e\u0440\u043d\u0438\u043a|\u0441\u0440\u0435\u0434\u0430|\u0447\u0435\u0442\u0432\u0440\u0442\u043e\u043a|\u043f\u0435\u0442\u043e\u043a|\u0441\u0430\u0431\u043e\u0442\u0430)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u043d/i, /^\u043f/i, /^\u0432/i, /^\u0441/i, /^\u0447/i, /^\u043f/i, /^\u0441/i],
                        any: [/^\u043d[\u0435\u0434]/i, /^\u043f[\u043e\u043d]/i, /^\u0432\u0442/i, /^\u0441\u0440/i, /^\u0447[\u0435\u0442]/i, /^\u043f[\u0435\u0442]/i, /^\u0441[\u0430\u0431]/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(\u043f\u0440\u0435\u0442\u043f|\u043f\u043e\u043f\u043b|\u043f\u043e\u043b\u043d\u043e\u045c|\u0443\u0442\u0440\u043e|\u043f\u043b\u0430\u0434\u043d\u0435|\u0432\u0435\u0447\u0435\u0440|\u043d\u043e\u045c)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /\u043f\u0440\u0435\u0442\u043f\u043b\u0430\u0434\u043d\u0435/i,
                            pm: /\u043f\u043e\u043f\u043b\u0430\u0434\u043d\u0435/i,
                            midnight: /\u043f\u043e\u043b\u043d\u043e\u045c/i,
                            noon: /\u043d\u0430\u043f\u043b\u0430\u0434\u043d\u0435/i,
                            morning: /\u043d\u0430\u0443\u0442\u0440\u043e/i,
                            afternoon: /\u043f\u043e\u043f\u043b\u0430\u0434\u043d\u0435/i,
                            evening: /\u043d\u0430\u0432\u0435\u0447\u0435\u0440/i,
                            night: /\u043d\u043e\u045c\u0435/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Qr = {
            lessThanXSeconds: {
                one: "\u0441\u0435\u043a\u0443\u043d\u0434 \u0445\u04af\u0440\u044d\u0445\u0433\u04af\u0439",
                other: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434 \u0445\u04af\u0440\u044d\u0445\u0433\u04af\u0439"
            },
            xSeconds: {
                one: "1 \u0441\u0435\u043a\u0443\u043d\u0434",
                other: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
            },
            halfAMinute: "\u0445\u0430\u0433\u0430\u0441 \u043c\u0438\u043d\u0443\u0442",
            lessThanXMinutes: {
                one: "\u043c\u0438\u043d\u0443\u0442 \u0445\u04af\u0440\u044d\u0445\u0433\u04af\u0439",
                other: "{{count}} \u043c\u0438\u043d\u0443\u0442 \u0445\u04af\u0440\u044d\u0445\u0433\u04af\u0439"
            },
            xMinutes: {
                one: "1 \u043c\u0438\u043d\u0443\u0442",
                other: "{{count}} \u043c\u0438\u043d\u0443\u0442"
            },
            aboutXHours: {
                one: "\u043e\u0439\u0440\u043e\u043b\u0446\u043e\u043e\u0433\u043e\u043e\u0440 1 \u0446\u0430\u0433",
                other: "\u043e\u0439\u0440\u043e\u043b\u0446\u043e\u043e\u0433\u043e\u043e\u0440 {{count}} \u0446\u0430\u0433"
            },
            xHours: {
                one: "1 \u0446\u0430\u0433",
                other: "{{count}} \u0446\u0430\u0433"
            },
            xDays: {
                one: "1 \u04e9\u0434\u04e9\u0440",
                other: "{{count}} \u04e9\u0434\u04e9\u0440"
            },
            aboutXWeeks: {
                one: "\u043e\u0439\u0440\u043e\u043b\u0446\u043e\u043e\u0433\u043e\u043e\u0440 1 \u0434\u043e\u043b\u043e\u043e \u0445\u043e\u043d\u043e\u0433",
                other: "\u043e\u0439\u0440\u043e\u043b\u0446\u043e\u043e\u0433\u043e\u043e\u0440 {{count}} \u0434\u043e\u043b\u043e\u043e \u0445\u043e\u043d\u043e\u0433"
            },
            xWeeks: {
                one: "1 \u0434\u043e\u043b\u043e\u043e \u0445\u043e\u043d\u043e\u0433",
                other: "{{count}} \u0434\u043e\u043b\u043e\u043e \u0445\u043e\u043d\u043e\u0433"
            },
            aboutXMonths: {
                one: "\u043e\u0439\u0440\u043e\u043b\u0446\u043e\u043e\u0433\u043e\u043e\u0440 1 \u0441\u0430\u0440",
                other: "\u043e\u0439\u0440\u043e\u043b\u0446\u043e\u043e\u0433\u043e\u043e\u0440 {{count}} \u0441\u0430\u0440"
            },
            xMonths: {
                one: "1 \u0441\u0430\u0440",
                other: "{{count}} \u0441\u0430\u0440"
            },
            aboutXYears: {
                one: "\u043e\u0439\u0440\u043e\u043b\u0446\u043e\u043e\u0433\u043e\u043e\u0440 1 \u0436\u0438\u043b",
                other: "\u043e\u0439\u0440\u043e\u043b\u0446\u043e\u043e\u0433\u043e\u043e\u0440 {{count}} \u0436\u0438\u043b"
            },
            xYears: {
                one: "1 \u0436\u0438\u043b",
                other: "{{count}} \u0436\u0438\u043b"
            },
            overXYears: {
                one: "1 \u0436\u0438\u043b \u0433\u0430\u0440\u0430\u043d",
                other: "{{count}} \u0436\u0438\u043b \u0433\u0430\u0440\u0430\u043d"
            },
            almostXYears: {
                one: "\u0431\u0430\u0440\u0430\u0433 1 \u0436\u0438\u043b",
                other: "\u0431\u0430\u0440\u0430\u0433 {{count}} \u0436\u0438\u043b"
            }
        }
          , Ur = {
            date: r({
                formats: {
                    full: "y '\u043e\u043d\u044b' MMMM'\u044b\u043d' d, EEEE '\u0433\u0430\u0440\u0430\u0433'",
                    long: "y '\u043e\u043d\u044b' MMMM'\u044b\u043d' d",
                    medium: "y '\u043e\u043d\u044b' MMM'\u044b\u043d' d",
                    short: "y.MM.dd"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "H:mm:ss zzzz",
                    long: "H:mm:ss z",
                    medium: "H:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Zr = {
            lastWeek: "'\u04e9\u043d\u0433\u04e9\u0440\u0441\u04e9\u043d' eeee '\u0433\u0430\u0440\u0430\u0433\u0438\u0439\u043d' p '\u0446\u0430\u0433\u0442'",
            yesterday: "'\u04e9\u0447\u0438\u0433\u0434\u04e9\u0440' p '\u0446\u0430\u0433\u0442'",
            today: "'\u04e9\u043d\u04e9\u04e9\u0434\u04e9\u0440' p '\u0446\u0430\u0433\u0442'",
            tomorrow: "'\u043c\u0430\u0440\u0433\u0430\u0430\u0448' p '\u0446\u0430\u0433\u0442'",
            nextWeek: "'\u0438\u0440\u044d\u0445' eeee '\u0433\u0430\u0440\u0430\u0433\u0438\u0439\u043d' p '\u0446\u0430\u0433\u0442'",
            other: "P"
        }
          , ei = {
            code: "mn",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Qr[e];
                if (a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix) {
                    const e = a.split(" ")
                      , t = e.pop();
                    switch (a = e.join(" "),
                    t) {
                    case "\u0441\u0435\u043a\u0443\u043d\u0434":
                        a += " \u0441\u0435\u043a\u0443\u043d\u0434\u0438\u0439\u043d";
                        break;
                    case "\u043c\u0438\u043d\u0443\u0442":
                        a += " \u043c\u0438\u043d\u0443\u0442\u044b\u043d";
                        break;
                    case "\u0446\u0430\u0433":
                        a += " \u0446\u0430\u0433\u0438\u0439\u043d";
                        break;
                    case "\u04e9\u0434\u04e9\u0440":
                        a += " \u04e9\u0434\u0440\u0438\u0439\u043d";
                        break;
                    case "\u0441\u0430\u0440":
                        a += " \u0441\u0430\u0440\u044b\u043d";
                        break;
                    case "\u0436\u0438\u043b":
                        a += " \u0436\u0438\u043b\u0438\u0439\u043d";
                        break;
                    case "\u0445\u043e\u043d\u043e\u0433":
                        a += " \u0445\u043e\u043d\u043e\u0433\u0438\u0439\u043d";
                        break;
                    case "\u0433\u0430\u0440\u0430\u043d":
                        a += " \u0433\u0430\u0440\u0430\u043d\u044b";
                        break;
                    case "\u0445\u04af\u0440\u044d\u0445\u0433\u04af\u0439":
                        a += " \u0445\u04af\u0440\u044d\u0445\u0433\u04af\u0439 \u0445\u0443\u0433\u0430\u0446\u0430\u0430\u043d\u044b";
                        break;
                    default:
                        a += t + "-\u043d"
                    }
                    return n.comparison && n.comparison > 0 ? a + " \u0434\u0430\u0440\u0430\u0430" : a + " \u04e9\u043c\u043d\u04e9"
                }
                return a
            }
            ,
            formatLong: Ur,
            formatRelative: (e,t,n,a)=>Zr[e],
            localize: {
                ordinalNumber: (e,t)=>String(e),
                era: s({
                    values: {
                        narrow: ["\u041d\u0422\u04e8", "\u041d\u0422"],
                        abbreviated: ["\u041d\u0422\u04e8", "\u041d\u0422"],
                        wide: ["\u043d\u0438\u0439\u0442\u0438\u0439\u043d \u0442\u043e\u043e\u043b\u043b\u044b\u043d \u04e9\u043c\u043d\u04e9\u0445", "\u043d\u0438\u0439\u0442\u0438\u0439\u043d \u0442\u043e\u043e\u043b\u043b\u044b\u043d"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["I", "II", "III", "IV"],
                        abbreviated: ["I \u0443\u043b\u0438\u0440\u0430\u043b", "II \u0443\u043b\u0438\u0440\u0430\u043b", "III \u0443\u043b\u0438\u0440\u0430\u043b", "IV \u0443\u043b\u0438\u0440\u0430\u043b"],
                        wide: ["1-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "2-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "3-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "4-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII"],
                        abbreviated: ["1-\u0440 \u0441\u0430\u0440", "2-\u0440 \u0441\u0430\u0440", "3-\u0440 \u0441\u0430\u0440", "4-\u0440 \u0441\u0430\u0440", "5-\u0440 \u0441\u0430\u0440", "6-\u0440 \u0441\u0430\u0440", "7-\u0440 \u0441\u0430\u0440", "8-\u0440 \u0441\u0430\u0440", "9-\u0440 \u0441\u0430\u0440", "10-\u0440 \u0441\u0430\u0440", "11-\u0440 \u0441\u0430\u0440", "12-\u0440 \u0441\u0430\u0440"],
                        wide: ["\u041d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0425\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0413\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u04e9\u0440\u04e9\u0432\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0422\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0417\u0443\u0440\u0433\u0430\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u043e\u043b\u043e\u043e\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u041d\u0430\u0439\u043c\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0415\u0441\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d\u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X", "XI", "XII"],
                        abbreviated: ["1-\u0440 \u0441\u0430\u0440", "2-\u0440 \u0441\u0430\u0440", "3-\u0440 \u0441\u0430\u0440", "4-\u0440 \u0441\u0430\u0440", "5-\u0440 \u0441\u0430\u0440", "6-\u0440 \u0441\u0430\u0440", "7-\u0440 \u0441\u0430\u0440", "8-\u0440 \u0441\u0430\u0440", "9-\u0440 \u0441\u0430\u0440", "10-\u0440 \u0441\u0430\u0440", "11-\u0440 \u0441\u0430\u0440", "12-\u0440 \u0441\u0430\u0440"],
                        wide: ["\u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0433\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0434\u04e9\u0440\u04e9\u0432\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0442\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0437\u0443\u0440\u0433\u0430\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0434\u043e\u043b\u043e\u043e\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u043d\u0430\u0439\u043c\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0435\u0441\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0430\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0430\u0440\u0432\u0430\u043d\u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0430\u0440\u0432\u0430\u043d \u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u041d", "\u0414", "\u041c", "\u041b", "\u041f", "\u0411", "\u0411"],
                        short: ["\u041d\u044f", "\u0414\u0430", "\u041c\u044f", "\u041b\u0445", "\u041f\u04af", "\u0411\u0430", "\u0411\u044f"],
                        abbreviated: ["\u041d\u044f\u043c", "\u0414\u0430\u0432", "\u041c\u044f\u0433", "\u041b\u0445\u0430", "\u041f\u04af\u0440", "\u0411\u0430\u0430", "\u0411\u044f\u043c"],
                        wide: ["\u041d\u044f\u043c", "\u0414\u0430\u0432\u0430\u0430", "\u041c\u044f\u0433\u043c\u0430\u0440", "\u041b\u0445\u0430\u0433\u0432\u0430", "\u041f\u04af\u0440\u044d\u0432", "\u0411\u0430\u0430\u0441\u0430\u043d", "\u0411\u044f\u043c\u0431\u0430"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["\u041d", "\u0414", "\u041c", "\u041b", "\u041f", "\u0411", "\u0411"],
                        short: ["\u041d\u044f", "\u0414\u0430", "\u041c\u044f", "\u041b\u0445", "\u041f\u04af", "\u0411\u0430", "\u0411\u044f"],
                        abbreviated: ["\u041d\u044f\u043c", "\u0414\u0430\u0432", "\u041c\u044f\u0433", "\u041b\u0445\u0430", "\u041f\u04af\u0440", "\u0411\u0430\u0430", "\u0411\u044f\u043c"],
                        wide: ["\u043d\u044f\u043c", "\u0434\u0430\u0432\u0430\u0430", "\u043c\u044f\u0433\u043c\u0430\u0440", "\u043b\u0445\u0430\u0433\u0432\u0430", "\u043f\u04af\u0440\u044d\u0432", "\u0431\u0430\u0430\u0441\u0430\u043d", "\u0431\u044f\u043c\u0431\u0430"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u04af.\u04e9.",
                            pm: "\u04af.\u0445.",
                            midnight: "\u0448\u04e9\u043d\u04e9 \u0434\u0443\u043d\u0434",
                            noon: "\u04af\u0434 \u0434\u0443\u043d\u0434",
                            morning: "\u04e9\u0433\u043b\u04e9\u04e9",
                            afternoon: "\u04e9\u0434\u04e9\u0440",
                            evening: "\u043e\u0440\u043e\u0439",
                            night: "\u0448\u04e9\u043d\u04e9"
                        },
                        abbreviated: {
                            am: "\u04af.\u04e9.",
                            pm: "\u04af.\u0445.",
                            midnight: "\u0448\u04e9\u043d\u04e9 \u0434\u0443\u043d\u0434",
                            noon: "\u04af\u0434 \u0434\u0443\u043d\u0434",
                            morning: "\u04e9\u0433\u043b\u04e9\u04e9",
                            afternoon: "\u04e9\u0434\u04e9\u0440",
                            evening: "\u043e\u0440\u043e\u0439",
                            night: "\u0448\u04e9\u043d\u04e9"
                        },
                        wide: {
                            am: "\u04af.\u04e9.",
                            pm: "\u04af.\u0445.",
                            midnight: "\u0448\u04e9\u043d\u04e9 \u0434\u0443\u043d\u0434",
                            noon: "\u04af\u0434 \u0434\u0443\u043d\u0434",
                            morning: "\u04e9\u0433\u043b\u04e9\u04e9",
                            afternoon: "\u04e9\u0434\u04e9\u0440",
                            evening: "\u043e\u0440\u043e\u0439",
                            night: "\u0448\u04e9\u043d\u04e9"
                        }
                    },
                    defaultWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /\d+/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u043d\u0442\u04e9|\u043d\u0442)/i,
                        abbreviated: /^(\u043d\u0442\u04e9|\u043d\u0442)/i,
                        wide: /^(\u043d\u0438\u0439\u0442\u0438\u0439\u043d \u0442\u043e\u043e\u043b\u043b\u044b\u043d \u04e9\u043c\u043d\u04e9|\u043d\u0438\u0439\u0442\u0438\u0439\u043d \u0442\u043e\u043e\u043b\u043b\u044b\u043d)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^(\u043d\u0442\u04e9|\u043d\u0438\u0439\u0442\u0438\u0439\u043d \u0442\u043e\u043e\u043b\u043b\u044b\u043d \u04e9\u043c\u043d\u04e9)/i, /^(\u043d\u0442|\u043d\u0438\u0439\u0442\u0438\u0439\u043d \u0442\u043e\u043e\u043b\u043b\u044b\u043d)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^(iv|iii|ii|i)/i,
                        abbreviated: /^(iv|iii|ii|i) \u0443\u043b\u0438\u0440\u0430\u043b/i,
                        wide: /^[1-4]-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^(i(\s|$)|1)/i, /^(ii(\s|$)|2)/i, /^(iii(\s|$)|3)/i, /^(iv(\s|$)|4)/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(xii|xi|x|ix|viii|vii|vi|v|iv|iii|ii|i)/i,
                        abbreviated: /^(1-\u0440 \u0441\u0430\u0440|2-\u0440 \u0441\u0430\u0440|3-\u0440 \u0441\u0430\u0440|4-\u0440 \u0441\u0430\u0440|5-\u0440 \u0441\u0430\u0440|6-\u0440 \u0441\u0430\u0440|7-\u0440 \u0441\u0430\u0440|8-\u0440 \u0441\u0430\u0440|9-\u0440 \u0441\u0430\u0440|10-\u0440 \u0441\u0430\u0440|11-\u0440 \u0441\u0430\u0440|12-\u0440 \u0441\u0430\u0440)/i,
                        wide: /^(\u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440|\u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440|\u0433\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440|\u0434\u04e9\u0440\u04e9\u0432\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440|\u0442\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440|\u0437\u0443\u0440\u0433\u0430\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440|\u0434\u043e\u043b\u043e\u043e\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440|\u043d\u0430\u0439\u043c\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440|\u0435\u0441\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440|\u0430\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440|\u0430\u0440\u0432\u0430\u043d \u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440|\u0430\u0440\u0432\u0430\u043d \u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^i$/i, /^ii$/i, /^iii$/i, /^iv$/i, /^v$/i, /^vi$/i, /^vii$/i, /^viii$/i, /^ix$/i, /^x$/i, /^xi$/i, /^xii$/i],
                        any: [/^(1|\u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440)/i, /^(2|\u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440)/i, /^(3|\u0433\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440)/i, /^(4|\u0434\u04e9\u0440\u04e9\u0432\u0434\u04af\u0433\u044d\u044d\u0440)/i, /^(5|\u0442\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440)/i, /^(6|\u0437\u0443\u0440\u0433\u0430\u0430\u0434\u0443\u0433\u0430\u0430\u0440)/i, /^(7|\u0434\u043e\u043b\u043e\u043e\u0434\u0443\u0433\u0430\u0430\u0440)/i, /^(8|\u043d\u0430\u0439\u043c\u0434\u0443\u0433\u0430\u0430\u0440)/i, /^(9|\u0435\u0441\u0434\u04af\u0433\u044d\u044d\u0440)/i, /^(10|\u0430\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440)/i, /^(11|\u0430\u0440\u0432\u0430\u043d \u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440)/i, /^(12|\u0430\u0440\u0432\u0430\u043d \u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440)/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u043d\u0434\u043c\u043b\u043f\u0431\u0431]/i,
                        short: /^(\u043d\u044f|\u0434\u0430|\u043c\u044f|\u043b\u0445|\u043f\u04af|\u0431\u0430|\u0431\u044f)/i,
                        abbreviated: /^(\u043d\u044f\u043c|\u0434\u0430\u0432|\u043c\u044f\u0433|\u043b\u0445\u0430|\u043f\u04af\u0440|\u0431\u0430\u0430|\u0431\u044f\u043c)/i,
                        wide: /^(\u043d\u044f\u043c|\u0434\u0430\u0432\u0430\u0430|\u043c\u044f\u0433\u043c\u0430\u0440|\u043b\u0445\u0430\u0433\u0432\u0430|\u043f\u04af\u0440\u044d\u0432|\u0431\u0430\u0430\u0441\u0430\u043d|\u0431\u044f\u043c\u0431\u0430)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u043d/i, /^\u0434/i, /^\u043c/i, /^\u043b/i, /^\u043f/i, /^\u0431/i, /^\u0431/i],
                        any: [/^\u043d\u044f/i, /^\u0434\u0430/i, /^\u043c\u044f/i, /^\u043b\u0445/i, /^\u043f\u04af/i, /^\u0431\u0430/i, /^\u0431\u044f/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(\u04af\.\u04e9\.|\u04af\.\u0445\.|\u0448\u04e9\u043d\u04e9 \u0434\u0443\u043d\u0434|\u04af\u0434 \u0434\u0443\u043d\u0434|\u04e9\u0433\u043b\u04e9\u04e9|\u04e9\u0434\u04e9\u0440|\u043e\u0440\u043e\u0439|\u0448\u04e9\u043d\u04e9)/i,
                        any: /^(\u04af\.\u04e9\.|\u04af\.\u0445\.|\u0448\u04e9\u043d\u04e9 \u0434\u0443\u043d\u0434|\u04af\u0434 \u0434\u0443\u043d\u0434|\u04e9\u0433\u043b\u04e9\u04e9|\u04e9\u0434\u04e9\u0440|\u043e\u0440\u043e\u0439|\u0448\u04e9\u043d\u04e9)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u04af\.\u04e9\./i,
                            pm: /^\u04af\.\u0445\./i,
                            midnight: /^\u0448\u04e9\u043d\u04e9 \u0434\u0443\u043d\u0434/i,
                            noon: /^\u04af\u0434 \u0434\u0443\u043d\u0434/i,
                            morning: /\u04e9\u0433\u043b\u04e9\u04e9/i,
                            afternoon: /\u04e9\u0434\u04e9\u0440/i,
                            evening: /\u043e\u0440\u043e\u0439/i,
                            night: /\u0448\u04e9\u043d\u04e9/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const ti = {
            lessThanXSeconds: {
                one: "kurang dari 1 saat",
                other: "kurang dari {{count}} saat"
            },
            xSeconds: {
                one: "1 saat",
                other: "{{count}} saat"
            },
            halfAMinute: "setengah minit",
            lessThanXMinutes: {
                one: "kurang dari 1 minit",
                other: "kurang dari {{count}} minit"
            },
            xMinutes: {
                one: "1 minit",
                other: "{{count}} minit"
            },
            aboutXHours: {
                one: "sekitar 1 jam",
                other: "sekitar {{count}} jam"
            },
            xHours: {
                one: "1 jam",
                other: "{{count}} jam"
            },
            xDays: {
                one: "1 hari",
                other: "{{count}} hari"
            },
            aboutXWeeks: {
                one: "sekitar 1 minggu",
                other: "sekitar {{count}} minggu"
            },
            xWeeks: {
                one: "1 minggu",
                other: "{{count}} minggu"
            },
            aboutXMonths: {
                one: "sekitar 1 bulan",
                other: "sekitar {{count}} bulan"
            },
            xMonths: {
                one: "1 bulan",
                other: "{{count}} bulan"
            },
            aboutXYears: {
                one: "sekitar 1 tahun",
                other: "sekitar {{count}} tahun"
            },
            xYears: {
                one: "1 tahun",
                other: "{{count}} tahun"
            },
            overXYears: {
                one: "lebih dari 1 tahun",
                other: "lebih dari {{count}} tahun"
            },
            almostXYears: {
                one: "hampir 1 tahun",
                other: "hampir {{count}} tahun"
            }
        }
          , ni = {
            date: r({
                formats: {
                    full: "EEEE, d MMMM yyyy",
                    long: "d MMMM yyyy",
                    medium: "d MMM yyyy",
                    short: "d/M/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH.mm.ss",
                    long: "HH.mm.ss",
                    medium: "HH.mm",
                    short: "HH.mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'pukul' {{time}}",
                    long: "{{date}} 'pukul' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , ai = {
            lastWeek: "eeee 'lepas pada jam' p",
            yesterday: "'Semalam pada jam' p",
            today: "'Hari ini pada jam' p",
            tomorrow: "'Esok pada jam' p",
            nextWeek: "eeee 'pada jam' p",
            other: "P"
        }
          , ri = {
            code: "ms",
            formatDistance: (e,t,n)=>{
                let a;
                const r = ti[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "dalam masa " + a : a + " yang lalu" : a
            }
            ,
            formatLong: ni,
            formatRelative: (e,t,n,a)=>ai[e],
            localize: {
                ordinalNumber: (e,t)=>"ke-" + Number(e),
                era: s({
                    values: {
                        narrow: ["SM", "M"],
                        abbreviated: ["SM", "M"],
                        wide: ["Sebelum Masihi", "Masihi"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["S1", "S2", "S3", "S4"],
                        wide: ["Suku pertama", "Suku kedua", "Suku ketiga", "Suku keempat"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"],
                        abbreviated: ["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"],
                        wide: ["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["A", "I", "S", "R", "K", "J", "S"],
                        short: ["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"],
                        abbreviated: ["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"],
                        wide: ["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "am",
                            pm: "pm",
                            midnight: "tgh malam",
                            noon: "tgh hari",
                            morning: "pagi",
                            afternoon: "tengah hari",
                            evening: "petang",
                            night: "malam"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "tengah malam",
                            noon: "tengah hari",
                            morning: "pagi",
                            afternoon: "tengah hari",
                            evening: "petang",
                            night: "malam"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "tengah malam",
                            noon: "tengah hari",
                            morning: "pagi",
                            afternoon: "tengah hari",
                            evening: "petang",
                            night: "malam"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "am",
                            pm: "pm",
                            midnight: "tengah malam",
                            noon: "tengah hari",
                            morning: "pagi",
                            afternoon: "tengah hari",
                            evening: "petang",
                            night: "malam"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "tengah malam",
                            noon: "tengah hari",
                            morning: "pagi",
                            afternoon: "tengah hari",
                            evening: "petang",
                            night: "malam"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "tengah malam",
                            noon: "tengah hari",
                            morning: "pagi",
                            afternoon: "tengah hari",
                            evening: "petang",
                            night: "malam"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^ke-(\d+)?/i,
                    parsePattern: /petama|\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(sm|m)/i,
                        abbreviated: /^(s\.?\s?m\.?|m\.?)/i,
                        wide: /^(sebelum masihi|masihi)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^s/i, /^(m)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^S[1234]/i,
                        wide: /Suku (pertama|kedua|ketiga|keempat)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/pertama|1/i, /kedua|2/i, /ketiga|3/i, /keempat|4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(jan|feb|mac|apr|mei|jun|jul|ogo|sep|okt|nov|dis)/i,
                        wide: /^(januari|februari|mac|april|mei|jun|julai|ogos|september|oktober|november|disember)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^o/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^f/i, /^ma/i, /^ap/i, /^me/i, /^jun/i, /^jul/i, /^og/i, /^s/i, /^ok/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[aisrkj]/i,
                        short: /^(ahd|isn|sel|rab|kha|jum|sab)/i,
                        abbreviated: /^(ahd|isn|sel|rab|kha|jum|sab)/i,
                        wide: /^(ahad|isnin|selasa|rabu|khamis|jumaat|sabtu)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^a/i, /^i/i, /^s/i, /^r/i, /^k/i, /^j/i, /^s/i],
                        any: [/^a/i, /^i/i, /^se/i, /^r/i, /^k/i, /^j/i, /^sa/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(am|pm|tengah malam|tengah hari|pagi|petang|malam)/i,
                        any: /^([ap]\.?\s?m\.?|tengah malam|tengah hari|pagi|petang|malam)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^pm/i,
                            midnight: /^tengah m/i,
                            noon: /^tengah h/i,
                            morning: /pa/i,
                            afternoon: /tengah h/i,
                            evening: /pe/i,
                            night: /m/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const ii = {
            lessThanXSeconds: {
                one: "inqas minn sekonda",
                other: "inqas minn {{count}} sekondi"
            },
            xSeconds: {
                one: "sekonda",
                other: "{{count}} sekondi"
            },
            halfAMinute: "nofs minuta",
            lessThanXMinutes: {
                one: "inqas minn minuta",
                other: "inqas minn {{count}} minuti"
            },
            xMinutes: {
                one: "minuta",
                other: "{{count}} minuti"
            },
            aboutXHours: {
                one: "madwar sieg\u0127a",
                other: "madwar {{count}} sieg\u0127at"
            },
            xHours: {
                one: "sieg\u0127a",
                other: "{{count}} sieg\u0127at"
            },
            xDays: {
                one: "\u0121urnata",
                other: "{{count}} \u0121ranet"
            },
            aboutXWeeks: {
                one: "madwar \u0121img\u0127a",
                other: "madwar {{count}} \u0121img\u0127at"
            },
            xWeeks: {
                one: "\u0121img\u0127a",
                other: "{{count}} \u0121img\u0127at"
            },
            aboutXMonths: {
                one: "madwar xahar",
                other: "madwar {{count}} xhur"
            },
            xMonths: {
                one: "xahar",
                other: "{{count}} xhur"
            },
            aboutXYears: {
                one: "madwar sena",
                two: "madwar sentejn",
                other: "madwar {{count}} snin"
            },
            xYears: {
                one: "sena",
                two: "sentejn",
                other: "{{count}} snin"
            },
            overXYears: {
                one: "aktar minn sena",
                two: "aktar minn sentejn",
                other: "aktar minn {{count}} snin"
            },
            almostXYears: {
                one: "kwa\u017ci sena",
                two: "kwa\u017ci sentejn",
                other: "kwa\u017ci {{count}} snin"
            }
        }
          , oi = {
            date: r({
                formats: {
                    full: "EEEE, d MMMM yyyy",
                    long: "d MMMM yyyy",
                    medium: "d MMM yyyy",
                    short: "dd/MM/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , si = {
            lastWeek: "eeee 'li g\u0127adda' 'fil-'p",
            yesterday: "'Il-biera\u0127 fil-'p",
            today: "'Illum fil-'p",
            tomorrow: "'G\u0127ada fil-'p",
            nextWeek: "eeee 'fil-'p",
            other: "P"
        }
          , ui = {
            code: "mt",
            formatDistance: (e,t,n)=>{
                let a;
                const r = ii[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : 2 === t && r.two ? r.two : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "f'" + a : a + " ilu" : a
            }
            ,
            formatLong: oi,
            formatRelative: (e,t,n,a)=>si[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + "\xba",
                era: s({
                    values: {
                        narrow: ["Q", "W"],
                        abbreviated: ["QK", "WK"],
                        wide: ["qabel Kristu", "wara Kristu"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["K1", "K2", "K3", "K4"],
                        wide: ["1. kwart", "2. kwart", "3. kwart", "4. kwart"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "A", "M", "\u0120", "L", "A", "S", "O", "N", "D"],
                        abbreviated: ["Jan", "Fra", "Mar", "Apr", "Mej", "\u0120un", "Lul", "Aww", "Set", "Ott", "Nov", "Di\u010b"],
                        wide: ["Jannar", "Frar", "Marzu", "April", "Mejju", "\u0120unju", "Lulju", "Awwissu", "Settembru", "Ottubru", "Novembru", "Di\u010bembru"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u0126", "T", "T", "E", "\u0126", "\u0120", "S"],
                        short: ["\u0126a", "Tn", "Tl", "Er", "\u0126a", "\u0120i", "Si"],
                        abbreviated: ["\u0126ad", "Tne", "Tli", "Erb", "\u0126am", "\u0120im", "Sib"],
                        wide: ["Il-\u0126add", "It-Tnejn", "It-Tlieta", "L-Erbg\u0127a", "Il-\u0126amis", "Il-\u0120img\u0127a", "Is-Sibt"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "nofsillejl",
                            noon: "nofsinhar",
                            morning: "g\u0127odwa",
                            afternoon: "wara nofsinhar",
                            evening: "filg\u0127axija",
                            night: "lejl"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "nofsillejl",
                            noon: "nofsinhar",
                            morning: "g\u0127odwa",
                            afternoon: "wara nofsinhar",
                            evening: "filg\u0127axija",
                            night: "lejl"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "nofsillejl",
                            noon: "nofsinhar",
                            morning: "g\u0127odwa",
                            afternoon: "wara nofsinhar",
                            evening: "filg\u0127axija",
                            night: "lejl"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "f'nofsillejl",
                            noon: "f'nofsinhar",
                            morning: "filg\u0127odu",
                            afternoon: "wara nofsinhar",
                            evening: "filg\u0127axija",
                            night: "billejl"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "f'nofsillejl",
                            noon: "f'nofsinhar",
                            morning: "filg\u0127odu",
                            afternoon: "wara nofsinhar",
                            evening: "filg\u0127axija",
                            night: "billejl"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "f'nofsillejl",
                            noon: "f'nofsinhar",
                            morning: "filg\u0127odu",
                            afternoon: "wara nofsinhar",
                            evening: "filg\u0127axija",
                            night: "billejl"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\xba)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(q|w)/i,
                        abbreviated: /^(q\.?\s?k\.?|b\.?\s?c\.?\s?e\.?|w\.?\s?k\.?)/i,
                        wide: /^(qabel kristu|before common era|wara kristu|common era)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^(q|b)/i, /^(w|c)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^k[1234]/i,
                        wide: /^[1234](\.)? kwart/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmaglsond]/i,
                        abbreviated: /^(jan|fra|mar|apr|mej|\u0121un|lul|aww|set|ott|nov|di\u010b)/i,
                        wide: /^(jannar|frar|marzu|april|mejju|\u0121unju|lulju|awwissu|settembru|ottubru|novembru|di\u010bembru)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^\u0121/i, /^l/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^mej/i, /^\u0121/i, /^l/i, /^aw/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u0127te\u0121s]/i,
                        short: /^(\u0127a|tn|tl|er|\u0127a|\u0121i|si)/i,
                        abbreviated: /^(\u0127ad|tne|tli|erb|\u0127am|\u0121im|sib)/i,
                        wide: /^(il-\u0127add|it-tnejn|it-tlieta|l-erbg\u0127a|il-\u0127amis|il-\u0121img\u0127a|is-sibt)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0127/i, /^t/i, /^t/i, /^e/i, /^\u0127/i, /^\u0121/i, /^s/i],
                        any: [/^(il-)?\u0127ad/i, /^(it-)?tn/i, /^(it-)?tl/i, /^(l-)?er/i, /^(il-)?ham/i, /^(il-)?\u0121i/i, /^(is-)?si/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|f'nofsillejl|f'nofsinhar|(ta') (g\u0127odwa|wara nofsinhar|filg\u0127axija|lejl))/i,
                        any: /^([ap]\.?\s?m\.?|f'nofsillejl|f'nofsinhar|(ta') (g\u0127odwa|wara nofsinhar|filg\u0127axija|lejl))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^f'nofsillejl/i,
                            noon: /^f'nofsinhar/i,
                            morning: /g\u0127odwa/i,
                            afternoon: /wara(\s.*)nofsinhar/i,
                            evening: /filg\u0127axija/i,
                            night: /lejl/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const di = {
            lessThanXSeconds: {
                one: "mindre enn ett sekund",
                other: "mindre enn {{count}} sekunder"
            },
            xSeconds: {
                one: "ett sekund",
                other: "{{count}} sekunder"
            },
            halfAMinute: "et halvt minutt",
            lessThanXMinutes: {
                one: "mindre enn ett minutt",
                other: "mindre enn {{count}} minutter"
            },
            xMinutes: {
                one: "ett minutt",
                other: "{{count}} minutter"
            },
            aboutXHours: {
                one: "omtrent en time",
                other: "omtrent {{count}} timer"
            },
            xHours: {
                one: "en time",
                other: "{{count}} timer"
            },
            xDays: {
                one: "en dag",
                other: "{{count}} dager"
            },
            aboutXWeeks: {
                one: "omtrent en uke",
                other: "omtrent {{count}} uker"
            },
            xWeeks: {
                one: "en uke",
                other: "{{count}} uker"
            },
            aboutXMonths: {
                one: "omtrent en m\xe5ned",
                other: "omtrent {{count}} m\xe5neder"
            },
            xMonths: {
                one: "en m\xe5ned",
                other: "{{count}} m\xe5neder"
            },
            aboutXYears: {
                one: "omtrent ett \xe5r",
                other: "omtrent {{count}} \xe5r"
            },
            xYears: {
                one: "ett \xe5r",
                other: "{{count}} \xe5r"
            },
            overXYears: {
                one: "over ett \xe5r",
                other: "over {{count}} \xe5r"
            },
            almostXYears: {
                one: "nesten ett \xe5r",
                other: "nesten {{count}} \xe5r"
            }
        }
          , li = {
            date: r({
                formats: {
                    full: "EEEE d. MMMM y",
                    long: "d. MMMM y",
                    medium: "d. MMM y",
                    short: "dd.MM.y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "'kl'. HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'kl.' {{time}}",
                    long: "{{date}} 'kl.' {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , ci = {
            lastWeek: "'forrige' eeee 'kl.' p",
            yesterday: "'i g\xe5r kl.' p",
            today: "'i dag kl.' p",
            tomorrow: "'i morgen kl.' p",
            nextWeek: "EEEE 'kl.' p",
            other: "P"
        }
          , mi = {
            code: "nb",
            formatDistance: (e,t,n)=>{
                let a;
                const r = di[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "om " + a : a + " siden" : a
            }
            ,
            formatLong: li,
            formatRelative: (e,t,n,a)=>ci[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["f.Kr.", "e.Kr."],
                        abbreviated: ["f.Kr.", "e.Kr."],
                        wide: ["f\xf8r Kristus", "etter Kristus"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                        abbreviated: ["jan.", "feb.", "mars", "apr.", "mai", "juni", "juli", "aug.", "sep.", "okt.", "nov.", "des."],
                        wide: ["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["S", "M", "T", "O", "T", "F", "L"],
                        short: ["s\xf8", "ma", "ti", "on", "to", "fr", "l\xf8"],
                        abbreviated: ["s\xf8n", "man", "tir", "ons", "tor", "fre", "l\xf8r"],
                        wide: ["s\xf8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\xf8rdag"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "midnatt",
                            noon: "middag",
                            morning: "p\xe5 morg.",
                            afternoon: "p\xe5 etterm.",
                            evening: "p\xe5 kvelden",
                            night: "p\xe5 natten"
                        },
                        abbreviated: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "midnatt",
                            noon: "middag",
                            morning: "p\xe5 morg.",
                            afternoon: "p\xe5 etterm.",
                            evening: "p\xe5 kvelden",
                            night: "p\xe5 natten"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "midnatt",
                            noon: "middag",
                            morning: "p\xe5 morgenen",
                            afternoon: "p\xe5 ettermiddagen",
                            evening: "p\xe5 kvelden",
                            night: "p\xe5 natten"
                        }
                    },
                    defaultWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)\.?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
                        abbreviated: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
                        wide: /^(f\xf8r Kristus|f\xf8r v\xe5r tid|etter Kristus|v\xe5r tid)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^f/i, /^e/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^q[1234]/i,
                        wide: /^[1234](\.)? kvartal/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\.?/i,
                        wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^mai/i, /^jun/i, /^jul/i, /^aug/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[smtofl]/i,
                        short: /^(s\xf8|ma|ti|on|to|fr|l\xf8)/i,
                        abbreviated: /^(s\xf8n|man|tir|ons|tor|fre|l\xf8r)/i,
                        wide: /^(s\xf8ndag|mandag|tirsdag|onsdag|torsdag|fredag|l\xf8rdag)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(midnatt|middag|(p\xe5) (morgenen|ettermiddagen|kvelden|natten)|[ap])/i,
                        any: /^([ap]\.?\s?m\.?|midnatt|middag|(p\xe5) (morgenen|ettermiddagen|kvelden|natten))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a(\.?\s?m\.?)?$/i,
                            pm: /^p(\.?\s?m\.?)?$/i,
                            midnight: /^midn/i,
                            noon: /^midd/i,
                            morning: /morgen/i,
                            afternoon: /ettermiddag/i,
                            evening: /kveld/i,
                            night: /natt/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const hi = {
            lessThanXSeconds: {
                one: "minder dan een seconde",
                other: "minder dan {{count}} seconden"
            },
            xSeconds: {
                one: "1 seconde",
                other: "{{count}} seconden"
            },
            halfAMinute: "een halve minuut",
            lessThanXMinutes: {
                one: "minder dan een minuut",
                other: "minder dan {{count}} minuten"
            },
            xMinutes: {
                one: "een minuut",
                other: "{{count}} minuten"
            },
            aboutXHours: {
                one: "ongeveer 1 uur",
                other: "ongeveer {{count}} uur"
            },
            xHours: {
                one: "1 uur",
                other: "{{count}} uur"
            },
            xDays: {
                one: "1 dag",
                other: "{{count}} dagen"
            },
            aboutXWeeks: {
                one: "ongeveer 1 week",
                other: "ongeveer {{count}} weken"
            },
            xWeeks: {
                one: "1 week",
                other: "{{count}} weken"
            },
            aboutXMonths: {
                one: "ongeveer 1 maand",
                other: "ongeveer {{count}} maanden"
            },
            xMonths: {
                one: "1 maand",
                other: "{{count}} maanden"
            },
            aboutXYears: {
                one: "ongeveer 1 jaar",
                other: "ongeveer {{count}} jaar"
            },
            xYears: {
                one: "1 jaar",
                other: "{{count}} jaar"
            },
            overXYears: {
                one: "meer dan 1 jaar",
                other: "meer dan {{count}} jaar"
            },
            almostXYears: {
                one: "bijna 1 jaar",
                other: "bijna {{count}} jaar"
            }
        }
          , fi = {
            date: r({
                formats: {
                    full: "EEEE d MMMM y",
                    long: "d MMMM y",
                    medium: "d MMM y",
                    short: "dd-MM-y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'om' {{time}}",
                    long: "{{date}} 'om' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , pi = {
            lastWeek: "'afgelopen' eeee 'om' p",
            yesterday: "'gisteren om' p",
            today: "'vandaag om' p",
            tomorrow: "'morgen om' p",
            nextWeek: "eeee 'om' p",
            other: "P"
        }
          , gi = {
            code: "nl",
            formatDistance: (e,t,n)=>{
                let a;
                const r = hi[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "over " + a : a + " geleden" : a
            }
            ,
            formatLong: fi,
            formatRelative: (e,t,n,a)=>pi[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + "e",
                era: s({
                    values: {
                        narrow: ["v.C.", "n.C."],
                        abbreviated: ["v.Chr.", "n.Chr."],
                        wide: ["voor Christus", "na Christus"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["K1", "K2", "K3", "K4"],
                        wide: ["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                        abbreviated: ["jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."],
                        wide: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["Z", "M", "D", "W", "D", "V", "Z"],
                        short: ["zo", "ma", "di", "wo", "do", "vr", "za"],
                        abbreviated: ["zon", "maa", "din", "woe", "don", "vri", "zat"],
                        wide: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "middernacht",
                            noon: "het middaguur",
                            morning: "'s ochtends",
                            afternoon: "'s middags",
                            evening: "'s avonds",
                            night: "'s nachts"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "middernacht",
                            noon: "het middaguur",
                            morning: "'s ochtends",
                            afternoon: "'s middags",
                            evening: "'s avonds",
                            night: "'s nachts"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "middernacht",
                            noon: "het middaguur",
                            morning: "'s ochtends",
                            afternoon: "'s middags",
                            evening: "'s avonds",
                            night: "'s nachts"
                        }
                    },
                    defaultWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)e?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^([vn]\.? ?C\.?)/,
                        abbreviated: /^([vn]\. ?Chr\.?)/,
                        wide: /^((voor|na) Christus)/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^v/, /^n/]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^K[1234]/i,
                        wide: /^[1234]e kwartaal/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(jan.|feb.|mrt.|apr.|mei|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,
                        wide: /^(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^jan/i, /^feb/i, /^m(r|a)/i, /^apr/i, /^mei/i, /^jun/i, /^jul/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[zmdwv]/i,
                        short: /^(zo|ma|di|wo|do|vr|za)/i,
                        abbreviated: /^(zon|maa|din|woe|don|vri|zat)/i,
                        wide: /^(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^z/i, /^m/i, /^d/i, /^w/i, /^d/i, /^v/i, /^z/i],
                        any: [/^zo/i, /^ma/i, /^di/i, /^wo/i, /^do/i, /^vr/i, /^za/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(am|pm|middernacht|het middaguur|'s (ochtends|middags|avonds|nachts))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^am/i,
                            pm: /^pm/i,
                            midnight: /^middernacht/i,
                            noon: /^het middaguur/i,
                            morning: /ochtend/i,
                            afternoon: /middag/i,
                            evening: /avond/i,
                            night: /nacht/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const vi = {
            lessThanXSeconds: {
                one: "minder dan een seconde",
                other: "minder dan {{count}} seconden"
            },
            xSeconds: {
                one: "1 seconde",
                other: "{{count}} seconden"
            },
            halfAMinute: "een halve minuut",
            lessThanXMinutes: {
                one: "minder dan een minuut",
                other: "minder dan {{count}} minuten"
            },
            xMinutes: {
                one: "een minuut",
                other: "{{count}} minuten"
            },
            aboutXHours: {
                one: "ongeveer 1 uur",
                other: "ongeveer {{count}} uur"
            },
            xHours: {
                one: "1 uur",
                other: "{{count}} uur"
            },
            xDays: {
                one: "1 dag",
                other: "{{count}} dagen"
            },
            aboutXWeeks: {
                one: "ongeveer 1 week",
                other: "ongeveer {{count}} weken"
            },
            xWeeks: {
                one: "1 week",
                other: "{{count}} weken"
            },
            aboutXMonths: {
                one: "ongeveer 1 maand",
                other: "ongeveer {{count}} maanden"
            },
            xMonths: {
                one: "1 maand",
                other: "{{count}} maanden"
            },
            aboutXYears: {
                one: "ongeveer 1 jaar",
                other: "ongeveer {{count}} jaar"
            },
            xYears: {
                one: "1 jaar",
                other: "{{count}} jaar"
            },
            overXYears: {
                one: "meer dan 1 jaar",
                other: "meer dan {{count}} jaar"
            },
            almostXYears: {
                one: "bijna 1 jaar",
                other: "bijna {{count}} jaar"
            }
        }
          , wi = {
            date: r({
                formats: {
                    full: "EEEE d MMMM y",
                    long: "d MMMM y",
                    medium: "d MMM y",
                    short: "dd.MM.y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'om' {{time}}",
                    long: "{{date}} 'om' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , bi = {
            lastWeek: "'vorige' eeee 'om' p",
            yesterday: "'gisteren om' p",
            today: "'vandaag om' p",
            tomorrow: "'morgen om' p",
            nextWeek: "eeee 'om' p",
            other: "P"
        }
          , yi = {
            code: "nl-BE",
            formatDistance: (e,t,n)=>{
                let a;
                const r = vi[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "over " + a : a + " geleden" : a
            }
            ,
            formatLong: wi,
            formatRelative: (e,t,n,a)=>bi[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + "e",
                era: s({
                    values: {
                        narrow: ["v.C.", "n.C."],
                        abbreviated: ["v.Chr.", "n.Chr."],
                        wide: ["voor Christus", "na Christus"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["K1", "K2", "K3", "K4"],
                        wide: ["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                        abbreviated: ["jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."],
                        wide: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["Z", "M", "D", "W", "D", "V", "Z"],
                        short: ["zo", "ma", "di", "wo", "do", "vr", "za"],
                        abbreviated: ["zon", "maa", "din", "woe", "don", "vri", "zat"],
                        wide: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "middernacht",
                            noon: "het middag",
                            morning: "'s ochtends",
                            afternoon: "'s namiddags",
                            evening: "'s avonds",
                            night: "'s nachts"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "middernacht",
                            noon: "het middag",
                            morning: "'s ochtends",
                            afternoon: "'s namiddags",
                            evening: "'s avonds",
                            night: "'s nachts"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "middernacht",
                            noon: "het middag",
                            morning: "'s ochtends",
                            afternoon: "'s namiddags",
                            evening: "'s avonds",
                            night: "'s nachts"
                        }
                    },
                    defaultWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)e?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^([vn]\.? ?C\.?)/,
                        abbreviated: /^([vn]\. ?Chr\.?)/,
                        wide: /^((voor|na) Christus)/
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^v/, /^n/]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^K[1234]/i,
                        wide: /^[1234]e kwartaal/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(jan.|feb.|mrt.|apr.|mei|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,
                        wide: /^(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^jan/i, /^feb/i, /^m(r|a)/i, /^apr/i, /^mei/i, /^jun/i, /^jul/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[zmdwv]/i,
                        short: /^(zo|ma|di|wo|do|vr|za)/i,
                        abbreviated: /^(zon|maa|din|woe|don|vri|zat)/i,
                        wide: /^(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^z/i, /^m/i, /^d/i, /^w/i, /^d/i, /^v/i, /^z/i],
                        any: [/^zo/i, /^ma/i, /^di/i, /^wo/i, /^do/i, /^vr/i, /^za/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(am|pm|middernacht|het middaguur|'s (ochtends|middags|avonds|nachts))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^am/i,
                            pm: /^pm/i,
                            midnight: /^middernacht/i,
                            noon: /^het middaguur/i,
                            morning: /ochtend/i,
                            afternoon: /middag/i,
                            evening: /avond/i,
                            night: /nacht/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const ki = {
            lessThanXSeconds: {
                one: "mindre enn eitt sekund",
                other: "mindre enn {{count}} sekund"
            },
            xSeconds: {
                one: "eitt sekund",
                other: "{{count}} sekund"
            },
            halfAMinute: "eit halvt minutt",
            lessThanXMinutes: {
                one: "mindre enn eitt minutt",
                other: "mindre enn {{count}} minutt"
            },
            xMinutes: {
                one: "eitt minutt",
                other: "{{count}} minutt"
            },
            aboutXHours: {
                one: "omtrent ein time",
                other: "omtrent {{count}} timar"
            },
            xHours: {
                one: "ein time",
                other: "{{count}} timar"
            },
            xDays: {
                one: "ein dag",
                other: "{{count}} dagar"
            },
            aboutXWeeks: {
                one: "omtrent ei veke",
                other: "omtrent {{count}} veker"
            },
            xWeeks: {
                one: "ei veke",
                other: "{{count}} veker"
            },
            aboutXMonths: {
                one: "omtrent ein m\xe5nad",
                other: "omtrent {{count}} m\xe5nader"
            },
            xMonths: {
                one: "ein m\xe5nad",
                other: "{{count}} m\xe5nader"
            },
            aboutXYears: {
                one: "omtrent eitt \xe5r",
                other: "omtrent {{count}} \xe5r"
            },
            xYears: {
                one: "eitt \xe5r",
                other: "{{count}} \xe5r"
            },
            overXYears: {
                one: "over eitt \xe5r",
                other: "over {{count}} \xe5r"
            },
            almostXYears: {
                one: "nesten eitt \xe5r",
                other: "nesten {{count}} \xe5r"
            }
        }
          , Mi = ["null", "ein", "to", "tre", "fire", "fem", "seks", "sju", "\xe5tte", "ni", "ti", "elleve", "tolv"]
          , Pi = {
            date: r({
                formats: {
                    full: "EEEE d. MMMM y",
                    long: "d. MMMM y",
                    medium: "d. MMM y",
                    short: "dd.MM.y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "'kl'. HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'kl.' {{time}}",
                    long: "{{date}} 'kl.' {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Wi = {
            lastWeek: "'f\xf8rre' eeee 'kl.' p",
            yesterday: "'i g\xe5r kl.' p",
            today: "'i dag kl.' p",
            tomorrow: "'i morgon kl.' p",
            nextWeek: "EEEE 'kl.' p",
            other: "P"
        }
          , xi = {
            code: "nn",
            formatDistance: (e,t,n)=>{
                let a;
                const r = ki[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", t < 13 ? Mi[t] : String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "om " + a : a + " sidan" : a
            }
            ,
            formatLong: Pi,
            formatRelative: (e,t,n,a)=>Wi[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["f.Kr.", "e.Kr."],
                        abbreviated: ["f.Kr.", "e.Kr."],
                        wide: ["f\xf8r Kristus", "etter Kristus"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                        abbreviated: ["jan.", "feb.", "mars", "apr.", "mai", "juni", "juli", "aug.", "sep.", "okt.", "nov.", "des."],
                        wide: ["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["S", "M", "T", "O", "T", "F", "L"],
                        short: ["su", "m\xe5", "ty", "on", "to", "fr", "lau"],
                        abbreviated: ["sun", "m\xe5n", "tys", "ons", "tor", "fre", "laur"],
                        wide: ["sundag", "m\xe5ndag", "tysdag", "onsdag", "torsdag", "fredag", "laurdag"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "midnatt",
                            noon: "middag",
                            morning: "p\xe5 morg.",
                            afternoon: "p\xe5 etterm.",
                            evening: "p\xe5 kvelden",
                            night: "p\xe5 natta"
                        },
                        abbreviated: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "midnatt",
                            noon: "middag",
                            morning: "p\xe5 morg.",
                            afternoon: "p\xe5 etterm.",
                            evening: "p\xe5 kvelden",
                            night: "p\xe5 natta"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "midnatt",
                            noon: "middag",
                            morning: "p\xe5 morgonen",
                            afternoon: "p\xe5 ettermiddagen",
                            evening: "p\xe5 kvelden",
                            night: "p\xe5 natta"
                        }
                    },
                    defaultWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)\.?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
                        abbreviated: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
                        wide: /^(f\xf8r Kristus|f\xf8r v\xe5r tid|etter Kristus|v\xe5r tid)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^f/i, /^e/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^q[1234]/i,
                        wide: /^[1234](\.)? kvartal/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\.?/i,
                        wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^mai/i, /^jun/i, /^jul/i, /^aug/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[smtofl]/i,
                        short: /^(su|m\xe5|ty|on|to|fr|la)/i,
                        abbreviated: /^(sun|m\xe5n|tys|ons|tor|fre|laur)/i,
                        wide: /^(sundag|m\xe5ndag|tysdag|onsdag|torsdag|fredag|laurdag)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^s/i, /^m/i, /^ty/i, /^o/i, /^to/i, /^f/i, /^l/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(midnatt|middag|(p\xe5) (morgonen|ettermiddagen|kvelden|natta)|[ap])/i,
                        any: /^([ap]\.?\s?m\.?|midnatt|middag|(p\xe5) (morgonen|ettermiddagen|kvelden|natta))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a(\.?\s?m\.?)?$/i,
                            pm: /^p(\.?\s?m\.?)?$/i,
                            midnight: /^midn/i,
                            noon: /^midd/i,
                            morning: /morgon/i,
                            afternoon: /ettermiddag/i,
                            evening: /kveld/i,
                            night: /natt/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Si = {
            lessThanXSeconds: {
                one: "mens d\u2019una segonda",
                other: "mens de {{count}} segondas"
            },
            xSeconds: {
                one: "1 segonda",
                other: "{{count}} segondas"
            },
            halfAMinute: "30 segondas",
            lessThanXMinutes: {
                one: "mens d\u2019una minuta",
                other: "mens de {{count}} minutas"
            },
            xMinutes: {
                one: "1 minuta",
                other: "{{count}} minutas"
            },
            aboutXHours: {
                one: "environ 1 ora",
                other: "environ {{count}} oras"
            },
            xHours: {
                one: "1 ora",
                other: "{{count}} oras"
            },
            xDays: {
                one: "1 jorn",
                other: "{{count}} jorns"
            },
            aboutXWeeks: {
                one: "environ 1 setmana",
                other: "environ {{count}} setmanas"
            },
            xWeeks: {
                one: "1 setmana",
                other: "{{count}} setmanas"
            },
            aboutXMonths: {
                one: "environ 1 mes",
                other: "environ {{count}} meses"
            },
            xMonths: {
                one: "1 mes",
                other: "{{count}} meses"
            },
            aboutXYears: {
                one: "environ 1 an",
                other: "environ {{count}} ans"
            },
            xYears: {
                one: "1 an",
                other: "{{count}} ans"
            },
            overXYears: {
                one: "mai d\u2019un an",
                other: "mai de {{count}} ans"
            },
            almostXYears: {
                one: "gaireben un an",
                other: "gaireben {{count}} ans"
            }
        }
          , Di = {
            date: r({
                formats: {
                    full: "EEEE d 'de' MMMM y",
                    long: "d 'de' MMMM y",
                    medium: "d MMM y",
                    short: "dd/MM/y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'a' {{time}}",
                    long: "{{date}} 'a' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , ji = {
            lastWeek: "eeee 'passat a' p",
            yesterday: "'i\xe8r a' p",
            today: "'u\xe8i a' p",
            tomorrow: "'deman a' p",
            nextWeek: "eeee 'a' p",
            other: "P"
        }
          , Ci = {
            code: "oc",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Si[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "d\u2019aqu\xed " + a : "fa " + a : a
            }
            ,
            formatLong: Di,
            formatRelative: (e,t,n,a)=>ji[e],
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e)
                      , a = t?.unit;
                    let r;
                    switch (n) {
                    case 1:
                        r = "\xe8r";
                        break;
                    case 2:
                        r = "nd";
                        break;
                    default:
                        r = "en"
                    }
                    return "year" !== a && "week" !== a && "hour" !== a && "minute" !== a && "second" !== a || (r += "a"),
                    n + r
                }
                ,
                era: s({
                    values: {
                        narrow: ["ab. J.C.", "apr. J.C."],
                        abbreviated: ["ab. J.C.", "apr. J.C."],
                        wide: ["abans J\xe8sus-Crist", "apr\xe8s J\xe8sus-Crist"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["T1", "T2", "T3", "T4"],
                        abbreviated: ["1\xe8r trim.", "2nd trim.", "3en trim.", "4en trim."],
                        wide: ["1\xe8r trim\xe8stre", "2nd trim\xe8stre", "3en trim\xe8stre", "4en trim\xe8stre"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["GN", "FB", "M\xc7", "AB", "MA", "JN", "JL", "AG", "ST", "OC", "NV", "DC"],
                        abbreviated: ["gen.", "febr.", "mar\xe7", "abr.", "mai", "junh", "jul.", "ag.", "set.", "oct.", "nov.", "dec."],
                        wide: ["geni\xe8r", "febri\xe8r", "mar\xe7", "abril", "mai", "junh", "julhet", "agost", "setembre", "oct\xf2bre", "novembre", "decembre"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["dg.", "dl.", "dm.", "dc.", "dj.", "dv.", "ds."],
                        short: ["dg.", "dl.", "dm.", "dc.", "dj.", "dv.", "ds."],
                        abbreviated: ["dg.", "dl.", "dm.", "dc.", "dj.", "dv.", "ds."],
                        wide: ["dimenge", "diluns", "dimars", "dim\xe8cres", "dij\xf2us", "divendres", "dissabte"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "am",
                            pm: "pm",
                            midnight: "mi\xe8janu\xe8ch",
                            noon: "mi\xe8gjorn",
                            morning: "matin",
                            afternoon: "apr\xe8p-mi\xe8gjorn",
                            evening: "v\xe8spre",
                            night: "nu\xe8ch"
                        },
                        abbreviated: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "mi\xe8janu\xe8ch",
                            noon: "mi\xe8gjorn",
                            morning: "matin",
                            afternoon: "apr\xe8p-mi\xe8gjorn",
                            evening: "v\xe8spre",
                            night: "nu\xe8ch"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "mi\xe8janu\xe8ch",
                            noon: "mi\xe8gjorn",
                            morning: "matin",
                            afternoon: "apr\xe8p-mi\xe8gjorn",
                            evening: "v\xe8spre",
                            night: "nu\xe8ch"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "am",
                            pm: "pm",
                            midnight: "mi\xe8janu\xe8ch",
                            noon: "mi\xe8gjorn",
                            morning: "del matin",
                            afternoon: "de l\u2019apr\xe8p-mi\xe8gjorn",
                            evening: "del ser",
                            night: "de la nu\xe8ch"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "mi\xe8janu\xe8ch",
                            noon: "mi\xe8gjorn",
                            morning: "del matin",
                            afternoon: "de l\u2019apr\xe8p-mi\xe8gjorn",
                            evening: "del ser",
                            night: "de la nu\xe8ch"
                        },
                        wide: {
                            am: "ante meridiem",
                            pm: "post meridiem",
                            midnight: "mi\xe8janu\xe8ch",
                            noon: "mi\xe8gjorn",
                            morning: "del matin",
                            afternoon: "de l\u2019apr\xe8p-mi\xe8gjorn",
                            evening: "del ser",
                            night: "de la nu\xe8ch"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\xe8r|nd|en)?[a]?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(ab\.J\.C|apr\.J\.C|apr\.J\.-C)/i,
                        abbreviated: /^(ab\.J\.-C|ab\.J-C|apr\.J\.-C|apr\.J-C|ap\.J-C)/i,
                        wide: /^(abans J\xe8sus-Crist|apr\xe8s J\xe8sus-Crist)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^ab/i, /^ap/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^T[1234]/i,
                        abbreviated: /^[1234](\xe8r|nd|en)? trim\.?/i,
                        wide: /^[1234](\xe8r|nd|en)? trim\xe8stre/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(GN|FB|M\xc7|AB|MA|JN|JL|AG|ST|OC|NV|DC)/i,
                        abbreviated: /^(gen|febr|mar\xe7|abr|mai|junh|jul|ag|set|oct|nov|dec)\.?/i,
                        wide: /^(geni\xe8r|febri\xe8r|mar\xe7|abril|mai|junh|julhet|agost|setembre|oct\xf2bre|novembre|decembre)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^g/i, /^f/i, /^ma[r?]|M\xc7/i, /^ab/i, /^ma[i?]/i, /^ju[n?]|JN/i, /^ju[l?]|JL/i, /^ag/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^d[glmcjvs]\.?/i,
                        short: /^d[glmcjvs]\.?/i,
                        abbreviated: /^d[glmcjvs]\.?/i,
                        wide: /^(dimenge|diluns|dimars|dim\xe8cres|dij\xf2us|divendres|dissabte)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i],
                        short: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i],
                        abbreviated: [/^dg/i, /^dl/i, /^dm/i, /^dc/i, /^dj/i, /^dv/i, /^ds/i],
                        any: [/^dg|dime/i, /^dl|dil/i, /^dm|dima/i, /^dc|dim\xe8/i, /^dj|dij/i, /^dv|div/i, /^ds|dis/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /(^(a\.?m|p\.?m))|(ante meridiem|post meridiem)|((del |de la |de l\u2019)(matin|apr\xe8p-mi\xe8gjorn|v\xe8spre|ser|nu\xe8ch))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /(^a)|ante meridiem/i,
                            pm: /(^p)|post meridiem/i,
                            midnight: /^mi\xe8j/i,
                            noon: /^mi\xe8g/i,
                            morning: /matin/i,
                            afternoon: /apr\xe8p-mi\xe8gjorn/i,
                            evening: /v\xe8spre|ser/i,
                            night: /nu\xe8ch/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Ti = {
            lessThanXSeconds: {
                one: {
                    regular: "mniej ni\u017c sekunda",
                    past: "mniej ni\u017c sekund\u0119",
                    future: "mniej ni\u017c sekund\u0119"
                },
                twoFour: "mniej ni\u017c {{count}} sekundy",
                other: "mniej ni\u017c {{count}} sekund"
            },
            xSeconds: {
                one: {
                    regular: "sekunda",
                    past: "sekund\u0119",
                    future: "sekund\u0119"
                },
                twoFour: "{{count}} sekundy",
                other: "{{count}} sekund"
            },
            halfAMinute: {
                one: "p\xf3\u0142 minuty",
                twoFour: "p\xf3\u0142 minuty",
                other: "p\xf3\u0142 minuty"
            },
            lessThanXMinutes: {
                one: {
                    regular: "mniej ni\u017c minuta",
                    past: "mniej ni\u017c minut\u0119",
                    future: "mniej ni\u017c minut\u0119"
                },
                twoFour: "mniej ni\u017c {{count}} minuty",
                other: "mniej ni\u017c {{count}} minut"
            },
            xMinutes: {
                one: {
                    regular: "minuta",
                    past: "minut\u0119",
                    future: "minut\u0119"
                },
                twoFour: "{{count}} minuty",
                other: "{{count}} minut"
            },
            aboutXHours: {
                one: {
                    regular: "oko\u0142o godziny",
                    past: "oko\u0142o godziny",
                    future: "oko\u0142o godzin\u0119"
                },
                twoFour: "oko\u0142o {{count}} godziny",
                other: "oko\u0142o {{count}} godzin"
            },
            xHours: {
                one: {
                    regular: "godzina",
                    past: "godzin\u0119",
                    future: "godzin\u0119"
                },
                twoFour: "{{count}} godziny",
                other: "{{count}} godzin"
            },
            xDays: {
                one: {
                    regular: "dzie\u0144",
                    past: "dzie\u0144",
                    future: "1 dzie\u0144"
                },
                twoFour: "{{count}} dni",
                other: "{{count}} dni"
            },
            aboutXWeeks: {
                one: "oko\u0142o tygodnia",
                twoFour: "oko\u0142o {{count}} tygodni",
                other: "oko\u0142o {{count}} tygodni"
            },
            xWeeks: {
                one: "tydzie\u0144",
                twoFour: "{{count}} tygodnie",
                other: "{{count}} tygodni"
            },
            aboutXMonths: {
                one: "oko\u0142o miesi\u0105c",
                twoFour: "oko\u0142o {{count}} miesi\u0105ce",
                other: "oko\u0142o {{count}} miesi\u0119cy"
            },
            xMonths: {
                one: "miesi\u0105c",
                twoFour: "{{count}} miesi\u0105ce",
                other: "{{count}} miesi\u0119cy"
            },
            aboutXYears: {
                one: "oko\u0142o rok",
                twoFour: "oko\u0142o {{count}} lata",
                other: "oko\u0142o {{count}} lat"
            },
            xYears: {
                one: "rok",
                twoFour: "{{count}} lata",
                other: "{{count}} lat"
            },
            overXYears: {
                one: "ponad rok",
                twoFour: "ponad {{count}} lata",
                other: "ponad {{count}} lat"
            },
            almostXYears: {
                one: "prawie rok",
                twoFour: "prawie {{count}} lata",
                other: "prawie {{count}} lat"
            }
        };
        function Ei(e, t, n) {
            const a = function(e, t) {
                if (1 === t)
                    return e.one;
                const n = t % 100;
                if (n <= 20 && n > 10)
                    return e.other;
                const a = n % 10;
                return a >= 2 && a <= 4 ? e.twoFour : e.other
            }(e, t);
            return ("string" === typeof a ? a : a[n]).replace("{{count}}", String(t))
        }
        const Ni = {
            date: r({
                formats: {
                    full: "EEEE, do MMMM y",
                    long: "do MMMM y",
                    medium: "do MMM y",
                    short: "dd.MM.y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , zi = {
            masculine: "ostatni",
            feminine: "ostatnia"
        }
          , Ii = {
            masculine: "ten",
            feminine: "ta"
        }
          , Oi = {
            masculine: "nast\u0119pny",
            feminine: "nast\u0119pna"
        }
          , Hi = {
            0: "feminine",
            1: "masculine",
            2: "masculine",
            3: "feminine",
            4: "masculine",
            5: "masculine",
            6: "feminine"
        };
        function Ai(e, t, n, a) {
            let r;
            if ($(t, n, a))
                r = Ii;
            else if ("lastWeek" === e)
                r = zi;
            else {
                if ("nextWeek" !== e)
                    throw new Error(`Cannot determine adjectives for token ${e}`);
                r = Oi
            }
            const i = t.getDay();
            return `'${r[Hi[i]]}' eeee 'o' p`
        }
        const Yi = {
            lastWeek: Ai,
            yesterday: "'wczoraj o' p",
            today: "'dzisiaj o' p",
            tomorrow: "'jutro o' p",
            nextWeek: Ai,
            other: "P"
        }
          , _i = {
            code: "pl",
            formatDistance: (e,t,n)=>{
                const a = Ti[e];
                return n?.addSuffix ? n.comparison && n.comparison > 0 ? "za " + Ei(a, t, "future") : Ei(a, t, "past") + " temu" : Ei(a, t, "regular")
            }
            ,
            formatLong: Ni,
            formatRelative: (e,t,n,a)=>{
                const r = Yi[e];
                return "function" === typeof r ? r(e, t, n, a) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>String(e),
                era: s({
                    values: {
                        narrow: ["p.n.e.", "n.e."],
                        abbreviated: ["p.n.e.", "n.e."],
                        wide: ["przed nasz\u0105 er\u0105", "naszej ery"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["I kw.", "II kw.", "III kw.", "IV kw."],
                        wide: ["I kwarta\u0142", "II kwarta\u0142", "III kwarta\u0142", "IV kwarta\u0142"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["S", "L", "M", "K", "M", "C", "L", "S", "W", "P", "L", "G"],
                        abbreviated: ["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"],
                        wide: ["stycze\u0144", "luty", "marzec", "kwiecie\u0144", "maj", "czerwiec", "lipiec", "sierpie\u0144", "wrzesie\u0144", "pa\u017adziernik", "listopad", "grudzie\u0144"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"],
                        abbreviated: ["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"],
                        wide: ["stycznia", "lutego", "marca", "kwietnia", "maja", "czerwca", "lipca", "sierpnia", "wrze\u015bnia", "pa\u017adziernika", "listopada", "grudnia"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["N", "P", "W", "\u015a", "C", "P", "S"],
                        short: ["nie", "pon", "wto", "\u015bro", "czw", "pi\u0105", "sob"],
                        abbreviated: ["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."],
                        wide: ["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["n", "p", "w", "\u015b", "c", "p", "s"],
                        short: ["nie", "pon", "wto", "\u015bro", "czw", "pi\u0105", "sob"],
                        abbreviated: ["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."],
                        wide: ["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "p\xf3\u0142n.",
                            noon: "po\u0142",
                            morning: "rano",
                            afternoon: "popo\u0142.",
                            evening: "wiecz.",
                            night: "noc"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "p\xf3\u0142noc",
                            noon: "po\u0142udnie",
                            morning: "rano",
                            afternoon: "popo\u0142udnie",
                            evening: "wiecz\xf3r",
                            night: "noc"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "p\xf3\u0142noc",
                            noon: "po\u0142udnie",
                            morning: "rano",
                            afternoon: "popo\u0142udnie",
                            evening: "wiecz\xf3r",
                            night: "noc"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "o p\xf3\u0142n.",
                            noon: "w po\u0142.",
                            morning: "rano",
                            afternoon: "po po\u0142.",
                            evening: "wiecz.",
                            night: "w nocy"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "o p\xf3\u0142nocy",
                            noon: "w po\u0142udnie",
                            morning: "rano",
                            afternoon: "po po\u0142udniu",
                            evening: "wieczorem",
                            night: "w nocy"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "o p\xf3\u0142nocy",
                            noon: "w po\u0142udnie",
                            morning: "rano",
                            afternoon: "po po\u0142udniu",
                            evening: "wieczorem",
                            night: "w nocy"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(p\.?\s*n\.?\s*e\.?\s*|n\.?\s*e\.?\s*)/i,
                        abbreviated: /^(p\.?\s*n\.?\s*e\.?\s*|n\.?\s*e\.?\s*)/i,
                        wide: /^(przed\s*nasz(\u0105|a)\s*er(\u0105|a)|naszej\s*ery)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^p/i, /^n/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^(I|II|III|IV)\s*kw\.?/i,
                        wide: /^(I|II|III|IV)\s*kwarta(\u0142|l)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/1/i, /2/i, /3/i, /4/i],
                        any: [/^I kw/i, /^II kw/i, /^III kw/i, /^IV kw/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[slmkcwpg]/i,
                        abbreviated: /^(sty|lut|mar|kwi|maj|cze|lip|sie|wrz|pa(\u017a|z)|lis|gru)/i,
                        wide: /^(stycznia|stycze(\u0144|n)|lutego|luty|marca|marzec|kwietnia|kwiecie(\u0144|n)|maja|maj|czerwca|czerwiec|lipca|lipiec|sierpnia|sierpie(\u0144|n)|wrze(\u015b|s)nia|wrzesie(\u0144|n)|pa(\u017a|z)dziernika|pa(\u017a|z)dziernik|listopada|listopad|grudnia|grudzie(\u0144|n))/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^s/i, /^l/i, /^m/i, /^k/i, /^m/i, /^c/i, /^l/i, /^s/i, /^w/i, /^p/i, /^l/i, /^g/i],
                        any: [/^st/i, /^lu/i, /^mar/i, /^k/i, /^maj/i, /^c/i, /^lip/i, /^si/i, /^w/i, /^p/i, /^lis/i, /^g/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[npw\u015bcs]/i,
                        short: /^(nie|pon|wto|(\u015b|s)ro|czw|pi(\u0105|a)|sob)/i,
                        abbreviated: /^(niedz|pon|wt|(\u015b|s)r|czw|pt|sob)\.?/i,
                        wide: /^(niedziela|poniedzia(\u0142|l)ek|wtorek|(\u015b|s)roda|czwartek|pi(\u0105|a)tek|sobota)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^n/i, /^p/i, /^w/i, /^\u015b/i, /^c/i, /^p/i, /^s/i],
                        abbreviated: [/^n/i, /^po/i, /^w/i, /^(\u015b|s)r/i, /^c/i, /^pt/i, /^so/i],
                        any: [/^n/i, /^po/i, /^w/i, /^(\u015b|s)r/i, /^c/i, /^pi/i, /^so/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(^a$|^p$|p\xf3(\u0142|l)n\.?|o\s*p\xf3(\u0142|l)n\.?|po(\u0142|l)\.?|w\s*po(\u0142|l)\.?|po\s*po(\u0142|l)\.?|rano|wiecz\.?|noc|w\s*nocy)/i,
                        any: /^(am|pm|p\xf3(\u0142|l)noc|o\s*p\xf3(\u0142|l)nocy|po(\u0142|l)udnie|w\s*po(\u0142|l)udnie|popo(\u0142|l)udnie|po\s*po(\u0142|l)udniu|rano|wiecz\xf3r|wieczorem|noc|w\s*nocy)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        narrow: {
                            am: /^a$/i,
                            pm: /^p$/i,
                            midnight: /p\xf3(\u0142|l)n/i,
                            noon: /po(\u0142|l)/i,
                            morning: /rano/i,
                            afternoon: /po\s*po(\u0142|l)/i,
                            evening: /wiecz/i,
                            night: /noc/i
                        },
                        any: {
                            am: /^am/i,
                            pm: /^pm/i,
                            midnight: /p\xf3(\u0142|l)n/i,
                            noon: /po(\u0142|l)/i,
                            morning: /rano/i,
                            afternoon: /po\s*po(\u0142|l)/i,
                            evening: /wiecz/i,
                            night: /noc/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Xi = {
            lessThanXSeconds: {
                one: "menos de um segundo",
                other: "menos de {{count}} segundos"
            },
            xSeconds: {
                one: "1 segundo",
                other: "{{count}} segundos"
            },
            halfAMinute: "meio minuto",
            lessThanXMinutes: {
                one: "menos de um minuto",
                other: "menos de {{count}} minutos"
            },
            xMinutes: {
                one: "1 minuto",
                other: "{{count}} minutos"
            },
            aboutXHours: {
                one: "aproximadamente 1 hora",
                other: "aproximadamente {{count}} horas"
            },
            xHours: {
                one: "1 hora",
                other: "{{count}} horas"
            },
            xDays: {
                one: "1 dia",
                other: "{{count}} dias"
            },
            aboutXWeeks: {
                one: "aproximadamente 1 semana",
                other: "aproximadamente {{count}} semanas"
            },
            xWeeks: {
                one: "1 semana",
                other: "{{count}} semanas"
            },
            aboutXMonths: {
                one: "aproximadamente 1 m\xeas",
                other: "aproximadamente {{count}} meses"
            },
            xMonths: {
                one: "1 m\xeas",
                other: "{{count}} meses"
            },
            aboutXYears: {
                one: "aproximadamente 1 ano",
                other: "aproximadamente {{count}} anos"
            },
            xYears: {
                one: "1 ano",
                other: "{{count}} anos"
            },
            overXYears: {
                one: "mais de 1 ano",
                other: "mais de {{count}} anos"
            },
            almostXYears: {
                one: "quase 1 ano",
                other: "quase {{count}} anos"
            }
        }
          , Ri = {
            date: r({
                formats: {
                    full: "EEEE, d 'de' MMMM 'de' y",
                    long: "d 'de' MMMM 'de' y",
                    medium: "d 'de' MMM 'de' y",
                    short: "dd/MM/y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\xe0s' {{time}}",
                    long: "{{date}} '\xe0s' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Li = {
            lastWeek: e=>{
                const t = e.getDay();
                return "'" + (0 === t || 6 === t ? "\xfaltimo" : "\xfaltima") + "' eeee '\xe0s' p"
            }
            ,
            yesterday: "'ontem \xe0s' p",
            today: "'hoje \xe0s' p",
            tomorrow: "'amanh\xe3 \xe0s' p",
            nextWeek: "eeee '\xe0s' p",
            other: "P"
        }
          , Fi = {
            code: "pt",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Xi[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "daqui a " + a : "h\xe1 " + a : a
            }
            ,
            formatLong: Ri,
            formatRelative: (e,t,n,a)=>{
                const r = Li[e];
                return "function" === typeof r ? r(t) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>Number(e) + "\xba",
                era: s({
                    values: {
                        narrow: ["aC", "dC"],
                        abbreviated: ["a.C.", "d.C."],
                        wide: ["antes de Cristo", "depois de Cristo"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["T1", "T2", "T3", "T4"],
                        wide: ["1\xba trimestre", "2\xba trimestre", "3\xba trimestre", "4\xba trimestre"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
                        abbreviated: ["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"],
                        wide: ["janeiro", "fevereiro", "mar\xe7o", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["d", "s", "t", "q", "q", "s", "s"],
                        short: ["dom", "seg", "ter", "qua", "qui", "sex", "s\xe1b"],
                        abbreviated: ["dom", "seg", "ter", "qua", "qui", "sex", "s\xe1b"],
                        wide: ["domingo", "segunda-feira", "ter\xe7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\xe1bado"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "meia-noite",
                            noon: "meio-dia",
                            morning: "manh\xe3",
                            afternoon: "tarde",
                            evening: "noite",
                            night: "madrugada"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "meia-noite",
                            noon: "meio-dia",
                            morning: "manh\xe3",
                            afternoon: "tarde",
                            evening: "noite",
                            night: "madrugada"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "meia-noite",
                            noon: "meio-dia",
                            morning: "manh\xe3",
                            afternoon: "tarde",
                            evening: "noite",
                            night: "madrugada"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "meia-noite",
                            noon: "meio-dia",
                            morning: "da manh\xe3",
                            afternoon: "da tarde",
                            evening: "da noite",
                            night: "da madrugada"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "meia-noite",
                            noon: "meio-dia",
                            morning: "da manh\xe3",
                            afternoon: "da tarde",
                            evening: "da noite",
                            night: "da madrugada"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "meia-noite",
                            noon: "meio-dia",
                            morning: "da manh\xe3",
                            afternoon: "da tarde",
                            evening: "da noite",
                            night: "da madrugada"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\xba|\xaa)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(ac|dc|a|d)/i,
                        abbreviated: /^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i,
                        wide: /^(antes de cristo|antes da era comum|depois de cristo|era comum)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^ac/i, /^dc/i],
                        wide: [/^(antes de cristo|antes da era comum)/i, /^(depois de cristo|era comum)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^T[1234]/i,
                        wide: /^[1234](\xba|\xaa)? trimestre/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,
                        wide: /^(janeiro|fevereiro|mar\xe7o|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^f/i, /^mar/i, /^ab/i, /^mai/i, /^jun/i, /^jul/i, /^ag/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[dstq]/i,
                        short: /^(dom|seg|ter|qua|qui|sex|s[\xe1a]b)/i,
                        abbreviated: /^(dom|seg|ter|qua|qui|sex|s[\xe1a]b)/i,
                        wide: /^(domingo|segunda-?\s?feira|ter\xe7a-?\s?feira|quarta-?\s?feira|quinta-?\s?feira|sexta-?\s?feira|s[\xe1a]bado)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^d/i, /^s/i, /^t/i, /^q/i, /^q/i, /^s/i, /^s/i],
                        any: [/^d/i, /^seg/i, /^t/i, /^qua/i, /^qui/i, /^sex/i, /^s[\xe1a]/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|meia-?\s?noite|meio-?\s?dia|(da) (manh[\xe3a]|tarde|noite|madrugada))/i,
                        any: /^([ap]\.?\s?m\.?|meia-?\s?noite|meio-?\s?dia|(da) (manh[\xe3a]|tarde|noite|madrugada))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^meia/i,
                            noon: /^meio/i,
                            morning: /manh[\xe3a]/i,
                            afternoon: /tarde/i,
                            evening: /noite/i,
                            night: /madrugada/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const qi = {
            lessThanXSeconds: {
                one: "menos de um segundo",
                other: "menos de {{count}} segundos"
            },
            xSeconds: {
                one: "1 segundo",
                other: "{{count}} segundos"
            },
            halfAMinute: "meio minuto",
            lessThanXMinutes: {
                one: "menos de um minuto",
                other: "menos de {{count}} minutos"
            },
            xMinutes: {
                one: "1 minuto",
                other: "{{count}} minutos"
            },
            aboutXHours: {
                one: "cerca de 1 hora",
                other: "cerca de {{count}} horas"
            },
            xHours: {
                one: "1 hora",
                other: "{{count}} horas"
            },
            xDays: {
                one: "1 dia",
                other: "{{count}} dias"
            },
            aboutXWeeks: {
                one: "cerca de 1 semana",
                other: "cerca de {{count}} semanas"
            },
            xWeeks: {
                one: "1 semana",
                other: "{{count}} semanas"
            },
            aboutXMonths: {
                one: "cerca de 1 m\xeas",
                other: "cerca de {{count}} meses"
            },
            xMonths: {
                one: "1 m\xeas",
                other: "{{count}} meses"
            },
            aboutXYears: {
                one: "cerca de 1 ano",
                other: "cerca de {{count}} anos"
            },
            xYears: {
                one: "1 ano",
                other: "{{count}} anos"
            },
            overXYears: {
                one: "mais de 1 ano",
                other: "mais de {{count}} anos"
            },
            almostXYears: {
                one: "quase 1 ano",
                other: "quase {{count}} anos"
            }
        }
          , Gi = {
            date: r({
                formats: {
                    full: "EEEE, d 'de' MMMM 'de' y",
                    long: "d 'de' MMMM 'de' y",
                    medium: "d MMM y",
                    short: "dd/MM/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\xe0s' {{time}}",
                    long: "{{date}} '\xe0s' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Ki = {
            lastWeek: e=>{
                const t = e.getDay();
                return "'" + (0 === t || 6 === t ? "\xfaltimo" : "\xfaltima") + "' eeee '\xe0s' p"
            }
            ,
            yesterday: "'ontem \xe0s' p",
            today: "'hoje \xe0s' p",
            tomorrow: "'amanh\xe3 \xe0s' p",
            nextWeek: "eeee '\xe0s' p",
            other: "P"
        }
          , Vi = {
            code: "pt-BR",
            formatDistance: (e,t,n)=>{
                let a;
                const r = qi[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "em " + a : "h\xe1 " + a : a
            }
            ,
            formatLong: Gi,
            formatRelative: (e,t,n,a)=>{
                const r = Ki[e];
                return "function" === typeof r ? r(t) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e);
                    return "week" === t?.unit ? n + "\xaa" : n + "\xba"
                }
                ,
                era: s({
                    values: {
                        narrow: ["AC", "DC"],
                        abbreviated: ["AC", "DC"],
                        wide: ["antes de cristo", "depois de cristo"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["T1", "T2", "T3", "T4"],
                        wide: ["1\xba trimestre", "2\xba trimestre", "3\xba trimestre", "4\xba trimestre"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
                        abbreviated: ["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"],
                        wide: ["janeiro", "fevereiro", "mar\xe7o", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["D", "S", "T", "Q", "Q", "S", "S"],
                        short: ["dom", "seg", "ter", "qua", "qui", "sex", "sab"],
                        abbreviated: ["domingo", "segunda", "ter\xe7a", "quarta", "quinta", "sexta", "s\xe1bado"],
                        wide: ["domingo", "segunda-feira", "ter\xe7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\xe1bado"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "mn",
                            noon: "md",
                            morning: "manh\xe3",
                            afternoon: "tarde",
                            evening: "tarde",
                            night: "noite"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "meia-noite",
                            noon: "meio-dia",
                            morning: "manh\xe3",
                            afternoon: "tarde",
                            evening: "tarde",
                            night: "noite"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "meia-noite",
                            noon: "meio-dia",
                            morning: "manh\xe3",
                            afternoon: "tarde",
                            evening: "tarde",
                            night: "noite"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "mn",
                            noon: "md",
                            morning: "da manh\xe3",
                            afternoon: "da tarde",
                            evening: "da tarde",
                            night: "da noite"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "meia-noite",
                            noon: "meio-dia",
                            morning: "da manh\xe3",
                            afternoon: "da tarde",
                            evening: "da tarde",
                            night: "da noite"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "meia-noite",
                            noon: "meio-dia",
                            morning: "da manh\xe3",
                            afternoon: "da tarde",
                            evening: "da tarde",
                            night: "da noite"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)[\xba\xaao]?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(ac|dc|a|d)/i,
                        abbreviated: /^(a\.?\s?c\.?|d\.?\s?c\.?)/i,
                        wide: /^(antes de cristo|depois de cristo)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^ac/i, /^dc/i],
                        wide: [/^antes de cristo/i, /^depois de cristo/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^T[1234]/i,
                        wide: /^[1234](\xba)? trimestre/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmajsond]/i,
                        abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,
                        wide: /^(janeiro|fevereiro|mar\xe7o|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^fev/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dez/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(dom|[23456]\xaa?|s[a\xe1]b)/i,
                        short: /^(dom|[23456]\xaa?|s[a\xe1]b)/i,
                        abbreviated: /^(dom|seg|ter|qua|qui|sex|s[a\xe1]b)/i,
                        wide: /^(domingo|(segunda|ter[c\xe7]a|quarta|quinta|sexta)([- ]feira)?|s[a\xe1]bado)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        short: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[a\xe1]/i],
                        narrow: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[a\xe1]/i],
                        any: [/^d/i, /^seg/i, /^t/i, /^qua/i, /^qui/i, /^sex/i, /^s[a\xe1]b/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|mn|md|(da) (manh\xe3|tarde|noite))/i,
                        any: /^([ap]\.?\s?m\.?|meia[-\s]noite|meio[-\s]dia|(da) (manh\xe3|tarde|noite))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^mn|^meia[-\s]noite/i,
                            noon: /^md|^meio[-\s]dia/i,
                            morning: /manh\xe3/i,
                            afternoon: /tarde/i,
                            evening: /tarde/i,
                            night: /noite/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const $i = {
            lessThanXSeconds: {
                one: "mai pu\u021bin de o secund\u0103",
                other: "mai pu\u021bin de {{count}} secunde"
            },
            xSeconds: {
                one: "1 secund\u0103",
                other: "{{count}} secunde"
            },
            halfAMinute: "jum\u0103tate de minut",
            lessThanXMinutes: {
                one: "mai pu\u021bin de un minut",
                other: "mai pu\u021bin de {{count}} minute"
            },
            xMinutes: {
                one: "1 minut",
                other: "{{count}} minute"
            },
            aboutXHours: {
                one: "circa 1 or\u0103",
                other: "circa {{count}} ore"
            },
            xHours: {
                one: "1 or\u0103",
                other: "{{count}} ore"
            },
            xDays: {
                one: "1 zi",
                other: "{{count}} zile"
            },
            aboutXWeeks: {
                one: "circa o s\u0103pt\u0103m\xe2n\u0103",
                other: "circa {{count}} s\u0103pt\u0103m\xe2ni"
            },
            xWeeks: {
                one: "1 s\u0103pt\u0103m\xe2n\u0103",
                other: "{{count}} s\u0103pt\u0103m\xe2ni"
            },
            aboutXMonths: {
                one: "circa 1 lun\u0103",
                other: "circa {{count}} luni"
            },
            xMonths: {
                one: "1 lun\u0103",
                other: "{{count}} luni"
            },
            aboutXYears: {
                one: "circa 1 an",
                other: "circa {{count}} ani"
            },
            xYears: {
                one: "1 an",
                other: "{{count}} ani"
            },
            overXYears: {
                one: "peste 1 an",
                other: "peste {{count}} ani"
            },
            almostXYears: {
                one: "aproape 1 an",
                other: "aproape {{count}} ani"
            }
        }
          , Bi = {
            date: r({
                formats: {
                    full: "EEEE, d MMMM yyyy",
                    long: "d MMMM yyyy",
                    medium: "d MMM yyyy",
                    short: "dd.MM.yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'la' {{time}}",
                    long: "{{date}} 'la' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Ji = {
            lastWeek: "eeee 'trecut\u0103 la' p",
            yesterday: "'ieri la' p",
            today: "'ast\u0103zi la' p",
            tomorrow: "'m\xe2ine la' p",
            nextWeek: "eeee 'viitoare la' p",
            other: "P"
        }
          , Qi = {
            code: "ro",
            formatDistance: (e,t,n)=>{
                let a;
                const r = $i[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "\xeen " + a : a + " \xeen urm\u0103" : a
            }
            ,
            formatLong: Bi,
            formatRelative: (e,t,n,a)=>Ji[e],
            localize: {
                ordinalNumber: (e,t)=>String(e),
                era: s({
                    values: {
                        narrow: ["\xce", "D"],
                        abbreviated: ["\xce.d.C.", "D.C."],
                        wide: ["\xcenainte de Cristos", "Dup\u0103 Cristos"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["T1", "T2", "T3", "T4"],
                        wide: ["primul trimestru", "al doilea trimestru", "al treilea trimestru", "al patrulea trimestru"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"],
                        abbreviated: ["ian", "feb", "mar", "apr", "mai", "iun", "iul", "aug", "sep", "oct", "noi", "dec"],
                        wide: ["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["d", "l", "m", "m", "j", "v", "s"],
                        short: ["du", "lu", "ma", "mi", "jo", "vi", "s\xe2"],
                        abbreviated: ["dum", "lun", "mar", "mie", "joi", "vin", "s\xe2m"],
                        wide: ["duminic\u0103", "luni", "mar\u021bi", "miercuri", "joi", "vineri", "s\xe2mb\u0103t\u0103"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "mn",
                            noon: "ami",
                            morning: "dim",
                            afternoon: "da",
                            evening: "s",
                            night: "n"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "miezul nop\u021bii",
                            noon: "amiaz\u0103",
                            morning: "diminea\u021b\u0103",
                            afternoon: "dup\u0103-amiaz\u0103",
                            evening: "sear\u0103",
                            night: "noapte"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "miezul nop\u021bii",
                            noon: "amiaz\u0103",
                            morning: "diminea\u021b\u0103",
                            afternoon: "dup\u0103-amiaz\u0103",
                            evening: "sear\u0103",
                            night: "noapte"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "mn",
                            noon: "amiaz\u0103",
                            morning: "diminea\u021b\u0103",
                            afternoon: "dup\u0103-amiaz\u0103",
                            evening: "sear\u0103",
                            night: "noapte"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "miezul nop\u021bii",
                            noon: "amiaz\u0103",
                            morning: "diminea\u021b\u0103",
                            afternoon: "dup\u0103-amiaz\u0103",
                            evening: "sear\u0103",
                            night: "noapte"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "miezul nop\u021bii",
                            noon: "amiaz\u0103",
                            morning: "diminea\u021b\u0103",
                            afternoon: "dup\u0103-amiaz\u0103",
                            evening: "sear\u0103",
                            night: "noapte"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\xce|D)/i,
                        abbreviated: /^(\xce\.?\s?d\.?\s?C\.?|\xce\.?\s?e\.?\s?n\.?|D\.?\s?C\.?|e\.?\s?n\.?)/i,
                        wide: /^(\xcenainte de Cristos|\xcenaintea erei noastre|Dup\u0103 Cristos|Era noastr\u0103)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\xceC/i, /^DC/i],
                        wide: [/^(\xcenainte de Cristos|\xcenaintea erei noastre)/i, /^(Dup\u0103 Cristos|Era noastr\u0103)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^T[1234]/i,
                        wide: /^trimestrul [1234]/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[ifmaasond]/i,
                        abbreviated: /^(ian|feb|mar|apr|mai|iun|iul|aug|sep|oct|noi|dec)/i,
                        wide: /^(ianuarie|februarie|martie|aprilie|mai|iunie|iulie|august|septembrie|octombrie|noiembrie|decembrie)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^i/i, /^f/i, /^m/i, /^a/i, /^m/i, /^i/i, /^i/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ia/i, /^f/i, /^mar/i, /^ap/i, /^mai/i, /^iun/i, /^iul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[dlmjvs]/i,
                        short: /^(d|l|ma|mi|j|v|s)/i,
                        abbreviated: /^(dum|lun|mar|mie|jo|vi|s\xe2)/i,
                        wide: /^(duminica|luni|mar\u0163i|miercuri|joi|vineri|s\xe2mb\u0103t\u0103)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],
                        any: [/^d/i, /^l/i, /^ma/i, /^mi/i, /^j/i, /^v/i, /^s/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|mn|a|(diminea\u0163a|dup\u0103-amiaza|seara|noaptea))/i,
                        any: /^([ap]\.?\s?m\.?|miezul nop\u021bii|amiaza|(diminea\u0163a|dup\u0103-amiaza|seara|noaptea))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^mn/i,
                            noon: /amiaza/i,
                            morning: /diminea\u0163a/i,
                            afternoon: /dup\u0103-amiaza/i,
                            evening: /seara/i,
                            night: /noaptea/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        function Ui(e, t) {
            if (void 0 !== e.one && 1 === t)
                return e.one;
            const n = t % 10
              , a = t % 100;
            return 1 === n && 11 !== a ? e.singularNominative.replace("{{count}}", String(t)) : n >= 2 && n <= 4 && (a < 10 || a > 20) ? e.singularGenitive.replace("{{count}}", String(t)) : e.pluralGenitive.replace("{{count}}", String(t))
        }
        function Zi(e) {
            return (t,n)=>n?.addSuffix ? n.comparison && n.comparison > 0 ? e.future ? Ui(e.future, t) : "\u0447\u0435\u0440\u0435\u0437 " + Ui(e.regular, t) : e.past ? Ui(e.past, t) : Ui(e.regular, t) + " \u043d\u0430\u0437\u0430\u0434" : Ui(e.regular, t)
        }
        const eo = {
            lessThanXSeconds: Zi({
                regular: {
                    one: "\u043c\u0435\u043d\u044c\u0448\u0435 \u0441\u0435\u043a\u0443\u043d\u0434\u044b",
                    singularNominative: "\u043c\u0435\u043d\u044c\u0448\u0435 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",
                    singularGenitive: "\u043c\u0435\u043d\u044c\u0448\u0435 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434",
                    pluralGenitive: "\u043c\u0435\u043d\u044c\u0448\u0435 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                },
                future: {
                    one: "\u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u0447\u0435\u0440\u0435\u0437 \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularNominative: "\u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularGenitive: "\u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",
                    pluralGenitive: "\u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                }
            }),
            xSeconds: Zi({
                regular: {
                    singularNominative: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0430",
                    singularGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",
                    pluralGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                },
                past: {
                    singularNominative: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0443 \u043d\u0430\u0437\u0430\u0434",
                    singularGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u044b \u043d\u0430\u0437\u0430\u0434",
                    pluralGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434 \u043d\u0430\u0437\u0430\u0434"
                },
                future: {
                    singularNominative: "\u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularGenitive: "\u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u044b",
                    pluralGenitive: "\u0447\u0435\u0440\u0435\u0437 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                }
            }),
            halfAMinute: (e,t)=>t?.addSuffix ? t.comparison && t.comparison > 0 ? "\u0447\u0435\u0440\u0435\u0437 \u043f\u043e\u043b\u043c\u0438\u043d\u0443\u0442\u044b" : "\u043f\u043e\u043b\u043c\u0438\u043d\u0443\u0442\u044b \u043d\u0430\u0437\u0430\u0434" : "\u043f\u043e\u043b\u043c\u0438\u043d\u0443\u0442\u044b",
            lessThanXMinutes: Zi({
                regular: {
                    one: "\u043c\u0435\u043d\u044c\u0448\u0435 \u043c\u0438\u043d\u0443\u0442\u044b",
                    singularNominative: "\u043c\u0435\u043d\u044c\u0448\u0435 {{count}} \u043c\u0438\u043d\u0443\u0442\u044b",
                    singularGenitive: "\u043c\u0435\u043d\u044c\u0448\u0435 {{count}} \u043c\u0438\u043d\u0443\u0442",
                    pluralGenitive: "\u043c\u0435\u043d\u044c\u0448\u0435 {{count}} \u043c\u0438\u043d\u0443\u0442"
                },
                future: {
                    one: "\u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u0447\u0435\u0440\u0435\u0437 \u043c\u0438\u043d\u0443\u0442\u0443",
                    singularNominative: "\u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u0447\u0435\u0440\u0435\u0437 {{count}} \u043c\u0438\u043d\u0443\u0442\u0443",
                    singularGenitive: "\u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u0447\u0435\u0440\u0435\u0437 {{count}} \u043c\u0438\u043d\u0443\u0442\u044b",
                    pluralGenitive: "\u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u0447\u0435\u0440\u0435\u0437 {{count}} \u043c\u0438\u043d\u0443\u0442"
                }
            }),
            xMinutes: Zi({
                regular: {
                    singularNominative: "{{count}} \u043c\u0438\u043d\u0443\u0442\u0430",
                    singularGenitive: "{{count}} \u043c\u0438\u043d\u0443\u0442\u044b",
                    pluralGenitive: "{{count}} \u043c\u0438\u043d\u0443\u0442"
                },
                past: {
                    singularNominative: "{{count}} \u043c\u0438\u043d\u0443\u0442\u0443 \u043d\u0430\u0437\u0430\u0434",
                    singularGenitive: "{{count}} \u043c\u0438\u043d\u0443\u0442\u044b \u043d\u0430\u0437\u0430\u0434",
                    pluralGenitive: "{{count}} \u043c\u0438\u043d\u0443\u0442 \u043d\u0430\u0437\u0430\u0434"
                },
                future: {
                    singularNominative: "\u0447\u0435\u0440\u0435\u0437 {{count}} \u043c\u0438\u043d\u0443\u0442\u0443",
                    singularGenitive: "\u0447\u0435\u0440\u0435\u0437 {{count}} \u043c\u0438\u043d\u0443\u0442\u044b",
                    pluralGenitive: "\u0447\u0435\u0440\u0435\u0437 {{count}} \u043c\u0438\u043d\u0443\u0442"
                }
            }),
            aboutXHours: Zi({
                regular: {
                    singularNominative: "\u043e\u043a\u043e\u043b\u043e {{count}} \u0447\u0430\u0441\u0430",
                    singularGenitive: "\u043e\u043a\u043e\u043b\u043e {{count}} \u0447\u0430\u0441\u043e\u0432",
                    pluralGenitive: "\u043e\u043a\u043e\u043b\u043e {{count}} \u0447\u0430\u0441\u043e\u0432"
                },
                future: {
                    singularNominative: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0447\u0435\u0440\u0435\u0437 {{count}} \u0447\u0430\u0441",
                    singularGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0447\u0435\u0440\u0435\u0437 {{count}} \u0447\u0430\u0441\u0430",
                    pluralGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0447\u0435\u0440\u0435\u0437 {{count}} \u0447\u0430\u0441\u043e\u0432"
                }
            }),
            xHours: Zi({
                regular: {
                    singularNominative: "{{count}} \u0447\u0430\u0441",
                    singularGenitive: "{{count}} \u0447\u0430\u0441\u0430",
                    pluralGenitive: "{{count}} \u0447\u0430\u0441\u043e\u0432"
                }
            }),
            xDays: Zi({
                regular: {
                    singularNominative: "{{count}} \u0434\u0435\u043d\u044c",
                    singularGenitive: "{{count}} \u0434\u043d\u044f",
                    pluralGenitive: "{{count}} \u0434\u043d\u0435\u0439"
                }
            }),
            aboutXWeeks: Zi({
                regular: {
                    singularNominative: "\u043e\u043a\u043e\u043b\u043e {{count}} \u043d\u0435\u0434\u0435\u043b\u0438",
                    singularGenitive: "\u043e\u043a\u043e\u043b\u043e {{count}} \u043d\u0435\u0434\u0435\u043b\u044c",
                    pluralGenitive: "\u043e\u043a\u043e\u043b\u043e {{count}} \u043d\u0435\u0434\u0435\u043b\u044c"
                },
                future: {
                    singularNominative: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0447\u0435\u0440\u0435\u0437 {{count}} \u043d\u0435\u0434\u0435\u043b\u044e",
                    singularGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0447\u0435\u0440\u0435\u0437 {{count}} \u043d\u0435\u0434\u0435\u043b\u0438",
                    pluralGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0447\u0435\u0440\u0435\u0437 {{count}} \u043d\u0435\u0434\u0435\u043b\u044c"
                }
            }),
            xWeeks: Zi({
                regular: {
                    singularNominative: "{{count}} \u043d\u0435\u0434\u0435\u043b\u044f",
                    singularGenitive: "{{count}} \u043d\u0435\u0434\u0435\u043b\u0438",
                    pluralGenitive: "{{count}} \u043d\u0435\u0434\u0435\u043b\u044c"
                }
            }),
            aboutXMonths: Zi({
                regular: {
                    singularNominative: "\u043e\u043a\u043e\u043b\u043e {{count}} \u043c\u0435\u0441\u044f\u0446\u0430",
                    singularGenitive: "\u043e\u043a\u043e\u043b\u043e {{count}} \u043c\u0435\u0441\u044f\u0446\u0435\u0432",
                    pluralGenitive: "\u043e\u043a\u043e\u043b\u043e {{count}} \u043c\u0435\u0441\u044f\u0446\u0435\u0432"
                },
                future: {
                    singularNominative: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0447\u0435\u0440\u0435\u0437 {{count}} \u043c\u0435\u0441\u044f\u0446",
                    singularGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0447\u0435\u0440\u0435\u0437 {{count}} \u043c\u0435\u0441\u044f\u0446\u0430",
                    pluralGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0447\u0435\u0440\u0435\u0437 {{count}} \u043c\u0435\u0441\u044f\u0446\u0435\u0432"
                }
            }),
            xMonths: Zi({
                regular: {
                    singularNominative: "{{count}} \u043c\u0435\u0441\u044f\u0446",
                    singularGenitive: "{{count}} \u043c\u0435\u0441\u044f\u0446\u0430",
                    pluralGenitive: "{{count}} \u043c\u0435\u0441\u044f\u0446\u0435\u0432"
                }
            }),
            aboutXYears: Zi({
                regular: {
                    singularNominative: "\u043e\u043a\u043e\u043b\u043e {{count}} \u0433\u043e\u0434\u0430",
                    singularGenitive: "\u043e\u043a\u043e\u043b\u043e {{count}} \u043b\u0435\u0442",
                    pluralGenitive: "\u043e\u043a\u043e\u043b\u043e {{count}} \u043b\u0435\u0442"
                },
                future: {
                    singularNominative: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043e\u0434",
                    singularGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043e\u0434\u0430",
                    pluralGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0447\u0435\u0440\u0435\u0437 {{count}} \u043b\u0435\u0442"
                }
            }),
            xYears: Zi({
                regular: {
                    singularNominative: "{{count}} \u0433\u043e\u0434",
                    singularGenitive: "{{count}} \u0433\u043e\u0434\u0430",
                    pluralGenitive: "{{count}} \u043b\u0435\u0442"
                }
            }),
            overXYears: Zi({
                regular: {
                    singularNominative: "\u0431\u043e\u043b\u044c\u0448\u0435 {{count}} \u0433\u043e\u0434\u0430",
                    singularGenitive: "\u0431\u043e\u043b\u044c\u0448\u0435 {{count}} \u043b\u0435\u0442",
                    pluralGenitive: "\u0431\u043e\u043b\u044c\u0448\u0435 {{count}} \u043b\u0435\u0442"
                },
                future: {
                    singularNominative: "\u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043e\u0434",
                    singularGenitive: "\u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043e\u0434\u0430",
                    pluralGenitive: "\u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u0447\u0435\u0440\u0435\u0437 {{count}} \u043b\u0435\u0442"
                }
            }),
            almostXYears: Zi({
                regular: {
                    singularNominative: "\u043f\u043e\u0447\u0442\u0438 {{count}} \u0433\u043e\u0434",
                    singularGenitive: "\u043f\u043e\u0447\u0442\u0438 {{count}} \u0433\u043e\u0434\u0430",
                    pluralGenitive: "\u043f\u043e\u0447\u0442\u0438 {{count}} \u043b\u0435\u0442"
                },
                future: {
                    singularNominative: "\u043f\u043e\u0447\u0442\u0438 \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043e\u0434",
                    singularGenitive: "\u043f\u043e\u0447\u0442\u0438 \u0447\u0435\u0440\u0435\u0437 {{count}} \u0433\u043e\u0434\u0430",
                    pluralGenitive: "\u043f\u043e\u0447\u0442\u0438 \u0447\u0435\u0440\u0435\u0437 {{count}} \u043b\u0435\u0442"
                }
            })
        }
          , to = {
            date: r({
                formats: {
                    full: "EEEE, d MMMM y '\u0433.'",
                    long: "d MMMM y '\u0433.'",
                    medium: "d MMM y '\u0433.'",
                    short: "dd.MM.y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "H:mm:ss zzzz",
                    long: "H:mm:ss z",
                    medium: "H:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    any: "{{date}}, {{time}}"
                },
                defaultWidth: "any"
            })
        }
          , no = ["\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0443", "\u0447\u0435\u0442\u0432\u0435\u0440\u0433", "\u043f\u044f\u0442\u043d\u0438\u0446\u0443", "\u0441\u0443\u0431\u0431\u043e\u0442\u0443"];
        function ao(e) {
            const t = no[e];
            return 2 === e ? "'\u0432\u043e " + t + " \u0432' p" : "'\u0432 " + t + " \u0432' p"
        }
        const ro = {
            lastWeek: (e,t,n)=>{
                const a = e.getDay();
                return $(e, t, n) ? ao(a) : function(e) {
                    const t = no[e];
                    switch (e) {
                    case 0:
                        return "'\u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u0435 " + t + " \u0432' p";
                    case 1:
                    case 2:
                    case 4:
                        return "'\u0432 \u043f\u0440\u043e\u0448\u043b\u044b\u0439 " + t + " \u0432' p";
                    case 3:
                    case 5:
                    case 6:
                        return "'\u0432 \u043f\u0440\u043e\u0448\u043b\u0443\u044e " + t + " \u0432' p"
                    }
                }(a)
            }
            ,
            yesterday: "'\u0432\u0447\u0435\u0440\u0430 \u0432' p",
            today: "'\u0441\u0435\u0433\u043e\u0434\u043d\u044f \u0432' p",
            tomorrow: "'\u0437\u0430\u0432\u0442\u0440\u0430 \u0432' p",
            nextWeek: (e,t,n)=>{
                const a = e.getDay();
                return $(e, t, n) ? ao(a) : function(e) {
                    const t = no[e];
                    switch (e) {
                    case 0:
                        return "'\u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435 " + t + " \u0432' p";
                    case 1:
                    case 2:
                    case 4:
                        return "'\u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 " + t + " \u0432' p";
                    case 3:
                    case 5:
                    case 6:
                        return "'\u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e " + t + " \u0432' p"
                    }
                }(a)
            }
            ,
            other: "P"
        }
          , io = {
            code: "ru",
            formatDistance: (e,t,n)=>eo[e](t, n),
            formatLong: to,
            formatRelative: (e,t,n,a)=>{
                const r = ro[e];
                return "function" === typeof r ? r(t, n, a) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e)
                      , a = t?.unit;
                    let r;
                    return r = "date" === a ? "-\u0435" : "week" === a || "minute" === a || "second" === a ? "-\u044f" : "-\u0439",
                    n + r
                }
                ,
                era: s({
                    values: {
                        narrow: ["\u0434\u043e \u043d.\u044d.", "\u043d.\u044d."],
                        abbreviated: ["\u0434\u043e \u043d. \u044d.", "\u043d. \u044d."],
                        wide: ["\u0434\u043e \u043d\u0430\u0448\u0435\u0439 \u044d\u0440\u044b", "\u043d\u0430\u0448\u0435\u0439 \u044d\u0440\u044b"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1-\u0439 \u043a\u0432.", "2-\u0439 \u043a\u0432.", "3-\u0439 \u043a\u0432.", "4-\u0439 \u043a\u0432."],
                        wide: ["1-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "2-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "3-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "4-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"],
                        abbreviated: ["\u044f\u043d\u0432.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u0438\u044e\u043d\u044c", "\u0438\u044e\u043b\u044c", "\u0430\u0432\u0433.", "\u0441\u0435\u043d\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f\u0431.", "\u0434\u0435\u043a."],
                        wide: ["\u044f\u043d\u0432\u0430\u0440\u044c", "\u0444\u0435\u0432\u0440\u0430\u043b\u044c", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0435\u043b\u044c", "\u043c\u0430\u0439", "\u0438\u044e\u043d\u044c", "\u0438\u044e\u043b\u044c", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u043e\u043a\u0442\u044f\u0431\u0440\u044c", "\u043d\u043e\u044f\u0431\u0440\u044c", "\u0434\u0435\u043a\u0430\u0431\u0440\u044c"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"],
                        abbreviated: ["\u044f\u043d\u0432.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u044f", "\u0438\u044e\u043d.", "\u0438\u044e\u043b.", "\u0430\u0432\u0433.", "\u0441\u0435\u043d\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f\u0431.", "\u0434\u0435\u043a."],
                        wide: ["\u044f\u043d\u0432\u0430\u0440\u044f", "\u0444\u0435\u0432\u0440\u0430\u043b\u044f", "\u043c\u0430\u0440\u0442\u0430", "\u0430\u043f\u0440\u0435\u043b\u044f", "\u043c\u0430\u044f", "\u0438\u044e\u043d\u044f", "\u0438\u044e\u043b\u044f", "\u0430\u0432\u0433\u0443\u0441\u0442\u0430", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044f", "\u043e\u043a\u0442\u044f\u0431\u0440\u044f", "\u043d\u043e\u044f\u0431\u0440\u044f", "\u0434\u0435\u043a\u0430\u0431\u0440\u044f"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u0412", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"],
                        short: ["\u0432\u0441", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"],
                        abbreviated: ["\u0432\u0441\u043a", "\u043f\u043d\u0434", "\u0432\u0442\u0440", "\u0441\u0440\u0434", "\u0447\u0442\u0432", "\u043f\u0442\u043d", "\u0441\u0443\u0431"],
                        wide: ["\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0435\u0440\u0433", "\u043f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0441\u0443\u0431\u0431\u043e\u0442\u0430"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u043b\u043d.",
                            noon: "\u043f\u043e\u043b\u0434.",
                            morning: "\u0443\u0442\u0440\u043e",
                            afternoon: "\u0434\u0435\u043d\u044c",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u043e\u0447\u044c"
                        },
                        abbreviated: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u043b\u043d.",
                            noon: "\u043f\u043e\u043b\u0434.",
                            morning: "\u0443\u0442\u0440\u043e",
                            afternoon: "\u0434\u0435\u043d\u044c",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u043e\u0447\u044c"
                        },
                        wide: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u043b\u043d\u043e\u0447\u044c",
                            noon: "\u043f\u043e\u043b\u0434\u0435\u043d\u044c",
                            morning: "\u0443\u0442\u0440\u043e",
                            afternoon: "\u0434\u0435\u043d\u044c",
                            evening: "\u0432\u0435\u0447\u0435\u0440",
                            night: "\u043d\u043e\u0447\u044c"
                        }
                    },
                    defaultWidth: "any",
                    formattingValues: {
                        narrow: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u043b\u043d.",
                            noon: "\u043f\u043e\u043b\u0434.",
                            morning: "\u0443\u0442\u0440\u0430",
                            afternoon: "\u0434\u043d\u044f",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u043e\u0447\u0438"
                        },
                        abbreviated: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u043b\u043d.",
                            noon: "\u043f\u043e\u043b\u0434.",
                            morning: "\u0443\u0442\u0440\u0430",
                            afternoon: "\u0434\u043d\u044f",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u043e\u0447\u0438"
                        },
                        wide: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u043e\u043b\u043d\u043e\u0447\u044c",
                            noon: "\u043f\u043e\u043b\u0434\u0435\u043d\u044c",
                            morning: "\u0443\u0442\u0440\u0430",
                            afternoon: "\u0434\u043d\u044f",
                            evening: "\u0432\u0435\u0447\u0435\u0440\u0430",
                            night: "\u043d\u043e\u0447\u0438"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(-?(\u0435|\u044f|\u0439|\u043e\u0435|\u044c\u0435|\u0430\u044f|\u044c\u044f|\u044b\u0439|\u043e\u0439|\u0438\u0439|\u044b\u0439))?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^((\u0434\u043e )?\u043d\.?\s?\u044d\.?)/i,
                        abbreviated: /^((\u0434\u043e )?\u043d\.?\s?\u044d\.?)/i,
                        wide: /^(\u0434\u043e \u043d\u0430\u0448\u0435\u0439 \u044d\u0440\u044b|\u043d\u0430\u0448\u0435\u0439 \u044d\u0440\u044b|\u043d\u0430\u0448\u0430 \u044d\u0440\u0430)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u0434/i, /^\u043d/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234](-?[\u044b\u043e\u0438]?\u0439?)? \u043a\u0432.?/i,
                        wide: /^[1234](-?[\u044b\u043e\u0438]?\u0439?)? \u043a\u0432\u0430\u0440\u0442\u0430\u043b/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[\u044f\u0444\u043c\u0430\u0438\u0441\u043e\u043d\u0434]/i,
                        abbreviated: /^(\u044f\u043d\u0432|\u0444\u0435\u0432|\u043c\u0430\u0440\u0442?|\u0430\u043f\u0440|\u043c\u0430[\u0439\u044f]|\u0438\u044e\u043d[\u044c\u044f]?|\u0438\u044e\u043b[\u044c\u044f]?|\u0430\u0432\u0433|\u0441\u0435\u043d\u0442?|\u043e\u043a\u0442|\u043d\u043e\u044f\u0431?|\u0434\u0435\u043a)\.?/i,
                        wide: /^(\u044f\u043d\u0432\u0430\u0440[\u044c\u044f]|\u0444\u0435\u0432\u0440\u0430\u043b[\u044c\u044f]|\u043c\u0430\u0440\u0442\u0430?|\u0430\u043f\u0440\u0435\u043b[\u044c\u044f]|\u043c\u0430[\u0439\u044f]|\u0438\u044e\u043d[\u044c\u044f]|\u0438\u044e\u043b[\u044c\u044f]|\u0430\u0432\u0433\u0443\u0441\u0442\u0430?|\u0441\u0435\u043d\u0442\u044f\u0431\u0440[\u044c\u044f]|\u043e\u043a\u0442\u044f\u0431\u0440[\u044c\u044f]|\u043e\u043a\u0442\u044f\u0431\u0440[\u044c\u044f]|\u043d\u043e\u044f\u0431\u0440[\u044c\u044f]|\u0434\u0435\u043a\u0430\u0431\u0440[\u044c\u044f])/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u044f/i, /^\u0444/i, /^\u043c/i, /^\u0430/i, /^\u043c/i, /^\u0438/i, /^\u0438/i, /^\u0430/i, /^\u0441/i, /^\u043e/i, /^\u043d/i, /^\u044f/i],
                        any: [/^\u044f/i, /^\u0444/i, /^\u043c\u0430\u0440/i, /^\u0430\u043f/i, /^\u043c\u0430[\u0439\u044f]/i, /^\u0438\u044e\u043d/i, /^\u0438\u044e\u043b/i, /^\u0430\u0432/i, /^\u0441/i, /^\u043e/i, /^\u043d/i, /^\u0434/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u0432\u043f\u0441\u0447]/i,
                        short: /^(\u0432\u0441|\u0432\u043e|\u043f\u043d|\u043f\u043e|\u0432\u0442|\u0441\u0440|\u0447\u0442|\u0447\u0435|\u043f\u0442|\u043f\u044f|\u0441\u0431|\u0441\u0443)\.?/i,
                        abbreviated: /^(\u0432\u0441\u043a|\u0432\u043e\u0441|\u043f\u043d\u0434|\u043f\u043e\u043d|\u0432\u0442\u0440|\u0432\u0442\u043e|\u0441\u0440\u0434|\u0441\u0440\u0435|\u0447\u0442\u0432|\u0447\u0435\u0442|\u043f\u0442\u043d|\u043f\u044f\u0442|\u0441\u0443\u0431).?/i,
                        wide: /^(\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c[\u0435\u044f]|\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a\u0430?|\u0432\u0442\u043e\u0440\u043d\u0438\u043a\u0430?|\u0441\u0440\u0435\u0434[\u0430\u044b]|\u0447\u0435\u0442\u0432\u0435\u0440\u0433\u0430?|\u043f\u044f\u0442\u043d\u0438\u0446[\u0430\u044b]|\u0441\u0443\u0431\u0431\u043e\u0442[\u0430\u044b])/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0432/i, /^\u043f/i, /^\u0432/i, /^\u0441/i, /^\u0447/i, /^\u043f/i, /^\u0441/i],
                        any: [/^\u0432[\u043e\u0441]/i, /^\u043f[\u043e\u043d]/i, /^\u0432/i, /^\u0441\u0440/i, /^\u0447/i, /^\u043f[\u044f\u0442]/i, /^\u0441[\u0443\u0431]/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^([\u0434\u043f]\u043f|\u043f\u043e\u043b\u043d\.?|\u043f\u043e\u043b\u0434\.?|\u0443\u0442\u0440[\u043e\u0430]|\u0434\u0435\u043d\u044c|\u0434\u043d\u044f|\u0432\u0435\u0447\.?|\u043d\u043e\u0447[\u044c\u0438])/i,
                        abbreviated: /^([\u0434\u043f]\u043f|\u043f\u043e\u043b\u043d\.?|\u043f\u043e\u043b\u0434\.?|\u0443\u0442\u0440[\u043e\u0430]|\u0434\u0435\u043d\u044c|\u0434\u043d\u044f|\u0432\u0435\u0447\.?|\u043d\u043e\u0447[\u044c\u0438])/i,
                        wide: /^([\u0434\u043f]\u043f|\u043f\u043e\u043b\u043d\u043e\u0447\u044c|\u043f\u043e\u043b\u0434\u0435\u043d\u044c|\u0443\u0442\u0440[\u043e\u0430]|\u0434\u0435\u043d\u044c|\u0434\u043d\u044f|\u0432\u0435\u0447\u0435\u0440\u0430?|\u043d\u043e\u0447[\u044c\u0438])/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: {
                            am: /^\u0434\u043f/i,
                            pm: /^\u043f\u043f/i,
                            midnight: /^\u043f\u043e\u043b\u043d/i,
                            noon: /^\u043f\u043e\u043b\u0434/i,
                            morning: /^\u0443/i,
                            afternoon: /^\u0434[\u0435\u043d]/i,
                            evening: /^\u0432/i,
                            night: /^\u043d/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const oo = {
            lessThanXSeconds: {
                one: "unnit go ovtta sekundda",
                other: "unnit go {{count}} sekundda"
            },
            xSeconds: {
                one: "sekundda",
                other: "{{count}} sekundda"
            },
            halfAMinute: "bealle minuhta",
            lessThanXMinutes: {
                one: "unnit go bealle minuhta",
                other: "unnit go {{count}} minuhta"
            },
            xMinutes: {
                one: "minuhta",
                other: "{{count}} minuhta"
            },
            aboutXHours: {
                one: "sullii ovtta diimmu",
                other: "sullii {{count}} diimmu"
            },
            xHours: {
                one: "diimmu",
                other: "{{count}} diimmu"
            },
            xDays: {
                one: "beaivvi",
                other: "{{count}} beaivvi"
            },
            aboutXWeeks: {
                one: "sullii ovtta vahku",
                other: "sullii {{count}} vahku"
            },
            xWeeks: {
                one: "vahku",
                other: "{{count}} vahku"
            },
            aboutXMonths: {
                one: "sullii ovtta m\xe1nu",
                other: "sullii {{count}} m\xe1nu"
            },
            xMonths: {
                one: "m\xe1nu",
                other: "{{count}} m\xe1nu"
            },
            aboutXYears: {
                one: "sullii ovtta jagi",
                other: "sullii {{count}} jagi"
            },
            xYears: {
                one: "jagi",
                other: "{{count}} jagi"
            },
            overXYears: {
                one: "guhkit go jagi",
                other: "guhkit go {{count}} jagi"
            },
            almostXYears: {
                one: "measta jagi",
                other: "measta {{count}} jagi"
            }
        }
          , so = {
            date: r({
                formats: {
                    full: "EEEE MMMM d. 'b.' y",
                    long: "MMMM d. 'b.' y",
                    medium: "MMM d. 'b.' y",
                    short: "dd.MM.y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "'dii.' HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'dii.' {{time}}",
                    long: "{{date}} 'dii.' {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , uo = {
            lastWeek: "'ovddit' eeee 'dii.' p",
            yesterday: "'ikte dii.' p",
            today: "'odne dii.' p",
            tomorrow: "'ihtin dii.' p",
            nextWeek: "EEEE 'dii.' p",
            other: "P"
        }
          , lo = {
            code: "se",
            formatDistance: (e,t,n)=>{
                let a;
                const r = oo[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "geah\u010den " + a : a + " \xe1igi" : a
            }
            ,
            formatLong: so,
            formatRelative: (e,t,n,a)=>uo[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["o.Kr.", "m.Kr."],
                        abbreviated: ["o.Kr.", "m.Kr."],
                        wide: ["ovdal Kristusa", "ma\u014b\u014bel Kristusa"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["1. kvart\xe1la", "2. kvart\xe1la", "3. kvart\xe1la", "4. kvart\xe1la"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["O", "G", "N", "C", "M", "G", "S", "B", "\u010c", "G", "S", "J"],
                        abbreviated: ["o\u0111\u0111a", "guov", "njuk", "cuo", "mies", "geas", "suoi", "borg", "\u010dak\u010d", "golg", "sk\xe1b", "juov"],
                        wide: ["o\u0111\u0111ajagem\xe1nnu", "guovvam\xe1nnu", "njuk\u010dam\xe1nnu", "cuo\u014bom\xe1nnu", "miessem\xe1nnu", "geassem\xe1nnu", "suoidnem\xe1nnu", "borgem\xe1nnu", "\u010dak\u010dam\xe1nnu", "golggotm\xe1nnu", "sk\xe1bmam\xe1nnu", "juovlam\xe1nnu"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["S", "V", "M", "G", "D", "B", "L"],
                        short: ["sotn", "vuos", "ma\u014b", "gask", "duor", "bear", "l\xe1v"],
                        abbreviated: ["sotn", "vuos", "ma\u014b", "gask", "duor", "bear", "l\xe1v"],
                        wide: ["sotnabeaivi", "vuoss\xe1rga", "ma\u014b\u014beb\xe1rga", "gaskavahkku", "duorastat", "bearjadat", "l\xe1vvardat"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "gaskaidja",
                            noon: "gaskabeaivi",
                            morning: "i\u0111\u0111es",
                            afternoon: "ma\u014b\u014bel gaska.",
                            evening: "eahkes",
                            night: "ihkku"
                        },
                        abbreviated: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "gaskaidja",
                            noon: "gaskabeaivvi",
                            morning: "i\u0111\u0111es",
                            afternoon: "ma\u014b\u014bel gaskabea.",
                            evening: "eahkes",
                            night: "ihkku"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "gaskaidja",
                            noon: "gaskabeavvi",
                            morning: "i\u0111\u0111es",
                            afternoon: "ma\u014b\u014bel gaskabeaivvi",
                            evening: "eahkes",
                            night: "ihkku"
                        }
                    },
                    defaultWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)\.?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(o\.? ?Kr\.?|m\.? ?Kr\.?)/i,
                        abbreviated: /^(o\.? ?Kr\.?|m\.? ?Kr\.?)/i,
                        wide: /^(ovdal Kristusa|ovdal min \xe1iggi|ma\u014b\u014bel Kristusa|min \xe1igi)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^o/i, /^m/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^q[1234]/i,
                        wide: /^[1234](\.)? kvart\xe1la/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[ogncmsb\u010dj]/i,
                        abbreviated: /^(o\u0111\u0111a|guov|njuk|cuo|mies|geas|suoi|borg|\u010dak\u010d|golg|sk\xe1b|juov)\.?/i,
                        wide: /^(o\u0111\u0111ajagem\xe1nnu|guovvam\xe1nnu|njuk\u010dam\xe1nnu|cuo\u014bom\xe1nnu|miessem\xe1nnu|geassem\xe1nnu|suoidnem\xe1nnu|borgem\xe1nnu|\u010dak\u010dam\xe1nnu|golggotm\xe1nnu|sk\xe1bmam\xe1nnu|juovlam\xe1nnu)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^o/i, /^g/i, /^n/i, /^c/i, /^m/i, /^g/i, /^s/i, /^b/i, /^\u010d/i, /^g/i, /^s/i, /^j/i],
                        any: [/^o/i, /^gu/i, /^n/i, /^c/i, /^m/i, /^ge/i, /^su/i, /^b/i, /^\u010d/i, /^go/i, /^sk/i, /^j/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[svmgdbl]/i,
                        short: /^(sotn|vuos|ma\u014b|gask|duor|bear|l\xe1v)/i,
                        abbreviated: /^(sotn|vuos|ma\u014b|gask|duor|bear|l\xe1v)/i,
                        wide: /^(sotnabeaivi|vuoss\xe1rga|ma\u014b\u014beb\xe1rga|gaskavahkku|duorastat|bearjadat|l\xe1vvardat)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^s/i, /^v/i, /^m/i, /^g/i, /^d/i, /^b/i, /^l/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(gaskaidja|gaskabeaivvi|(p\xe5) (i\u0111\u0111es|ma\u014b\u014bel gaskabeaivvi|eahkes|ihkku)|[ap])/i,
                        any: /^([ap]\.?\s?m\.?|gaskaidja|gaskabeaivvi|(p\xe5) (i\u0111\u0111es|ma\u014b\u014bel gaskabeaivvi|eahkes|ihkku))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a(\.?\s?m\.?)?$/i,
                            pm: /^p(\.?\s?m\.?)?$/i,
                            midnight: /^gaskai/i,
                            noon: /^gaskab/i,
                            morning: /i\u0111\u0111es/i,
                            afternoon: /ma\u014b\u014bel gaskabeaivvi/i,
                            evening: /eahkes/i,
                            night: /ihkku/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        function co(e, t, n) {
            const a = function(e, t) {
                return 1 === t && e.one ? e.one : t >= 2 && t <= 4 && e.twoFour ? e.twoFour : e.other
            }(e, t);
            return a[n].replace("{{count}}", String(t))
        }
        function mo(e) {
            let t = "";
            return "almost" === e && (t = "takmer"),
            "about" === e && (t = "pribli\u017ene"),
            t.length > 0 ? t + " " : ""
        }
        function ho(e) {
            let t = "";
            return "lessThan" === e && (t = "menej ne\u017e"),
            "over" === e && (t = "viac ne\u017e"),
            t.length > 0 ? t + " " : ""
        }
        const fo = {
            xSeconds: {
                one: {
                    present: "sekunda",
                    past: "sekundou",
                    future: "sekundu"
                },
                twoFour: {
                    present: "{{count}} sekundy",
                    past: "{{count}} sekundami",
                    future: "{{count}} sekundy"
                },
                other: {
                    present: "{{count}} sek\xfand",
                    past: "{{count}} sekundami",
                    future: "{{count}} sek\xfand"
                }
            },
            halfAMinute: {
                other: {
                    present: "pol min\xfaty",
                    past: "pol min\xfatou",
                    future: "pol min\xfaty"
                }
            },
            xMinutes: {
                one: {
                    present: "min\xfata",
                    past: "min\xfatou",
                    future: "min\xfatu"
                },
                twoFour: {
                    present: "{{count}} min\xfaty",
                    past: "{{count}} min\xfatami",
                    future: "{{count}} min\xfaty"
                },
                other: {
                    present: "{{count}} min\xfat",
                    past: "{{count}} min\xfatami",
                    future: "{{count}} min\xfat"
                }
            },
            xHours: {
                one: {
                    present: "hodina",
                    past: "hodinou",
                    future: "hodinu"
                },
                twoFour: {
                    present: "{{count}} hodiny",
                    past: "{{count}} hodinami",
                    future: "{{count}} hodiny"
                },
                other: {
                    present: "{{count}} hod\xedn",
                    past: "{{count}} hodinami",
                    future: "{{count}} hod\xedn"
                }
            },
            xDays: {
                one: {
                    present: "de\u0148",
                    past: "d\u0148om",
                    future: "de\u0148"
                },
                twoFour: {
                    present: "{{count}} dni",
                    past: "{{count}} d\u0148ami",
                    future: "{{count}} dni"
                },
                other: {
                    present: "{{count}} dn\xed",
                    past: "{{count}} d\u0148ami",
                    future: "{{count}} dn\xed"
                }
            },
            xWeeks: {
                one: {
                    present: "t\xfd\u017ede\u0148",
                    past: "t\xfd\u017ed\u0148om",
                    future: "t\xfd\u017ede\u0148"
                },
                twoFour: {
                    present: "{{count}} t\xfd\u017edne",
                    past: "{{count}} t\xfd\u017ed\u0148ami",
                    future: "{{count}} t\xfd\u017edne"
                },
                other: {
                    present: "{{count}} t\xfd\u017ed\u0148ov",
                    past: "{{count}} t\xfd\u017ed\u0148ami",
                    future: "{{count}} t\xfd\u017ed\u0148ov"
                }
            },
            xMonths: {
                one: {
                    present: "mesiac",
                    past: "mesiacom",
                    future: "mesiac"
                },
                twoFour: {
                    present: "{{count}} mesiace",
                    past: "{{count}} mesiacmi",
                    future: "{{count}} mesiace"
                },
                other: {
                    present: "{{count}} mesiacov",
                    past: "{{count}} mesiacmi",
                    future: "{{count}} mesiacov"
                }
            },
            xYears: {
                one: {
                    present: "rok",
                    past: "rokom",
                    future: "rok"
                },
                twoFour: {
                    present: "{{count}} roky",
                    past: "{{count}} rokmi",
                    future: "{{count}} roky"
                },
                other: {
                    present: "{{count}} rokov",
                    past: "{{count}} rokmi",
                    future: "{{count}} rokov"
                }
            }
        }
          , po = {
            date: r({
                formats: {
                    full: "EEEE d. MMMM y",
                    long: "d. MMMM y",
                    medium: "d. M. y",
                    short: "d. M. y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "H:mm:ss zzzz",
                    long: "H:mm:ss z",
                    medium: "H:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}}, {{time}}",
                    long: "{{date}}, {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , go = ["nede\u013eu", "pondelok", "utorok", "stredu", "\u0161tvrtok", "piatok", "sobotu"];
        function vo(e) {
            return 4 === e ? "'vo' eeee 'o' p" : "'v " + go[e] + " o' p"
        }
        const wo = {
            lastWeek: (e,t,n)=>{
                const a = e.getDay();
                return $(e, t, n) ? vo(a) : function(e) {
                    const t = go[e];
                    switch (e) {
                    case 0:
                    case 3:
                    case 6:
                        return "'minul\xfa " + t + " o' p";
                    default:
                        return "'minul\xfd' eeee 'o' p"
                    }
                }(a)
            }
            ,
            yesterday: "'v\u010dera o' p",
            today: "'dnes o' p",
            tomorrow: "'zajtra o' p",
            nextWeek: (e,t,n)=>{
                const a = e.getDay();
                return $(e, t, n) ? vo(a) : function(e) {
                    const t = go[e];
                    switch (e) {
                    case 0:
                    case 4:
                    case 6:
                        return "'bud\xfacu " + t + " o' p";
                    default:
                        return "'bud\xfaci' eeee 'o' p"
                    }
                }(a)
            }
            ,
            other: "P"
        }
          , bo = {
            code: "sk",
            formatDistance: (e,t,n)=>{
                const a = function(e) {
                    return ["lessThan", "about", "over", "almost"].filter((function(t) {
                        return !!e.match(new RegExp("^" + t))
                    }
                    ))[0]
                }(e) || ""
                  , r = (i = e.substring(a.length)).charAt(0).toLowerCase() + i.slice(1);
                var i;
                const o = fo[r];
                return n?.addSuffix ? n.comparison && n.comparison > 0 ? mo(a) + "o " + ho(a) + co(o, t, "future") : mo(a) + "pred " + ho(a) + co(o, t, "past") : mo(a) + ho(a) + co(o, t, "present")
            }
            ,
            formatLong: po,
            formatRelative: (e,t,n,a)=>{
                const r = wo[e];
                return "function" === typeof r ? r(t, n, a) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["pred Kr.", "po Kr."],
                        abbreviated: ["pred Kr.", "po Kr."],
                        wide: ["pred Kristom", "po Kristovi"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["1. \u0161tvr\u0165rok", "2. \u0161tvr\u0165rok", "3. \u0161tvr\u0165rok", "4. \u0161tvr\u0165rok"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
                        abbreviated: ["jan", "feb", "mar", "apr", "m\xe1j", "j\xfan", "j\xfal", "aug", "sep", "okt", "nov", "dec"],
                        wide: ["janu\xe1r", "febru\xe1r", "marec", "apr\xedl", "m\xe1j", "j\xfan", "j\xfal", "august", "september", "okt\xf3ber", "november", "december"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
                        abbreviated: ["jan", "feb", "mar", "apr", "m\xe1j", "j\xfan", "j\xfal", "aug", "sep", "okt", "nov", "dec"],
                        wide: ["janu\xe1ra", "febru\xe1ra", "marca", "apr\xedla", "m\xe1ja", "j\xfana", "j\xfala", "augusta", "septembra", "okt\xf3bra", "novembra", "decembra"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["n", "p", "u", "s", "\u0161", "p", "s"],
                        short: ["ne", "po", "ut", "st", "\u0161t", "pi", "so"],
                        abbreviated: ["ne", "po", "ut", "st", "\u0161t", "pi", "so"],
                        wide: ["nede\u013ea", "pondelok", "utorok", "streda", "\u0161tvrtok", "piatok", "sobota"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "poln.",
                            noon: "pol.",
                            morning: "r\xe1no",
                            afternoon: "pop.",
                            evening: "ve\u010d.",
                            night: "noc"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "poln.",
                            noon: "pol.",
                            morning: "r\xe1no",
                            afternoon: "popol.",
                            evening: "ve\u010der",
                            night: "noc"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "polnoc",
                            noon: "poludnie",
                            morning: "r\xe1no",
                            afternoon: "popoludnie",
                            evening: "ve\u010der",
                            night: "noc"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "o poln.",
                            noon: "nap.",
                            morning: "r\xe1no",
                            afternoon: "pop.",
                            evening: "ve\u010d.",
                            night: "v n."
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "o poln.",
                            noon: "napol.",
                            morning: "r\xe1no",
                            afternoon: "popol.",
                            evening: "ve\u010der",
                            night: "v noci"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "o polnoci",
                            noon: "napoludnie",
                            morning: "r\xe1no",
                            afternoon: "popoludn\xed",
                            evening: "ve\u010der",
                            night: "v noci"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)\.?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(pred Kr\.|pred n\. l\.|po Kr\.|n\. l\.)/i,
                        abbreviated: /^(pred Kr\.|pred n\. l\.|po Kr\.|n\. l\.)/i,
                        wide: /^(pred Kristom|pred na[\u0161s][\xedi]m letopo[\u010dc]tom|po Kristovi|n[\xe1a][\u0161s]ho letopo[\u010dc]tu)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^pr/i, /^(po|n)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^q[1234]/i,
                        wide: /^[1234]\. [\u0161s]tvr[\u0165t]rok/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(jan|feb|mar|apr|m[\xe1a]j|j[\xfau]n|j[\xfau]l|aug|sep|okt|nov|dec)/i,
                        wide: /^(janu[\xe1a]ra?|febru[\xe1a]ra?|(marec|marca)|apr[\xedi]la?|m[\xe1a]ja?|j[\xfau]na?|j[\xfau]la?|augusta?|(september|septembra)|(okt[\xf3o]ber|okt[\xf3o]bra)|(november|novembra)|(december|decembra))/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^m[\xe1a]j/i, /^j[\xfau]n/i, /^j[\xfau]l/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[npus\u0161p]/i,
                        short: /^(ne|po|ut|st|\u0161t|pi|so)/i,
                        abbreviated: /^(ne|po|ut|st|\u0161t|pi|so)/i,
                        wide: /^(nede[\u013el]a|pondelok|utorok|streda|[\u0161s]tvrtok|piatok|sobota])/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^n/i, /^p/i, /^u/i, /^s/i, /^\u0161/i, /^p/i, /^s/i],
                        any: [/^n/i, /^po/i, /^u/i, /^st/i, /^(\u0161t|stv)/i, /^pi/i, /^so/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(am|pm|(o )?poln\.?|(nap\.?|pol\.?)|r[\xe1a]no|pop\.?|ve[\u010dc]\.?|(v n\.?|noc))/i,
                        abbreviated: /^(am|pm|(o )?poln\.?|(napol\.?|pol\.?)|r[\xe1a]no|pop\.?|ve[\u010dc]er|(v )?noci?)/i,
                        any: /^(am|pm|(o )?polnoci?|(na)?poludnie|r[\xe1a]no|popoludn(ie|\xed|i)|ve[\u010dc]er|(v )?noci?)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^am/i,
                            pm: /^pm/i,
                            midnight: /poln/i,
                            noon: /^(nap|(na)?pol(\.|u))/i,
                            morning: /^r[\xe1a]no/i,
                            afternoon: /^pop/i,
                            evening: /^ve[\u010dc]/i,
                            night: /^(noc|v n\.)/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const yo = {
            lessThanXSeconds: {
                present: {
                    one: "manj kot {{count}} sekunda",
                    two: "manj kot {{count}} sekundi",
                    few: "manj kot {{count}} sekunde",
                    other: "manj kot {{count}} sekund"
                },
                past: {
                    one: "manj kot {{count}} sekundo",
                    two: "manj kot {{count}} sekundama",
                    few: "manj kot {{count}} sekundami",
                    other: "manj kot {{count}} sekundami"
                },
                future: {
                    one: "manj kot {{count}} sekundo",
                    two: "manj kot {{count}} sekundi",
                    few: "manj kot {{count}} sekunde",
                    other: "manj kot {{count}} sekund"
                }
            },
            xSeconds: {
                present: {
                    one: "{{count}} sekunda",
                    two: "{{count}} sekundi",
                    few: "{{count}} sekunde",
                    other: "{{count}} sekund"
                },
                past: {
                    one: "{{count}} sekundo",
                    two: "{{count}} sekundama",
                    few: "{{count}} sekundami",
                    other: "{{count}} sekundami"
                },
                future: {
                    one: "{{count}} sekundo",
                    two: "{{count}} sekundi",
                    few: "{{count}} sekunde",
                    other: "{{count}} sekund"
                }
            },
            halfAMinute: "pol minute",
            lessThanXMinutes: {
                present: {
                    one: "manj kot {{count}} minuta",
                    two: "manj kot {{count}} minuti",
                    few: "manj kot {{count}} minute",
                    other: "manj kot {{count}} minut"
                },
                past: {
                    one: "manj kot {{count}} minuto",
                    two: "manj kot {{count}} minutama",
                    few: "manj kot {{count}} minutami",
                    other: "manj kot {{count}} minutami"
                },
                future: {
                    one: "manj kot {{count}} minuto",
                    two: "manj kot {{count}} minuti",
                    few: "manj kot {{count}} minute",
                    other: "manj kot {{count}} minut"
                }
            },
            xMinutes: {
                present: {
                    one: "{{count}} minuta",
                    two: "{{count}} minuti",
                    few: "{{count}} minute",
                    other: "{{count}} minut"
                },
                past: {
                    one: "{{count}} minuto",
                    two: "{{count}} minutama",
                    few: "{{count}} minutami",
                    other: "{{count}} minutami"
                },
                future: {
                    one: "{{count}} minuto",
                    two: "{{count}} minuti",
                    few: "{{count}} minute",
                    other: "{{count}} minut"
                }
            },
            aboutXHours: {
                present: {
                    one: "pribli\u017eno {{count}} ura",
                    two: "pribli\u017eno {{count}} uri",
                    few: "pribli\u017eno {{count}} ure",
                    other: "pribli\u017eno {{count}} ur"
                },
                past: {
                    one: "pribli\u017eno {{count}} uro",
                    two: "pribli\u017eno {{count}} urama",
                    few: "pribli\u017eno {{count}} urami",
                    other: "pribli\u017eno {{count}} urami"
                },
                future: {
                    one: "pribli\u017eno {{count}} uro",
                    two: "pribli\u017eno {{count}} uri",
                    few: "pribli\u017eno {{count}} ure",
                    other: "pribli\u017eno {{count}} ur"
                }
            },
            xHours: {
                present: {
                    one: "{{count}} ura",
                    two: "{{count}} uri",
                    few: "{{count}} ure",
                    other: "{{count}} ur"
                },
                past: {
                    one: "{{count}} uro",
                    two: "{{count}} urama",
                    few: "{{count}} urami",
                    other: "{{count}} urami"
                },
                future: {
                    one: "{{count}} uro",
                    two: "{{count}} uri",
                    few: "{{count}} ure",
                    other: "{{count}} ur"
                }
            },
            xDays: {
                present: {
                    one: "{{count}} dan",
                    two: "{{count}} dni",
                    few: "{{count}} dni",
                    other: "{{count}} dni"
                },
                past: {
                    one: "{{count}} dnem",
                    two: "{{count}} dnevoma",
                    few: "{{count}} dnevi",
                    other: "{{count}} dnevi"
                },
                future: {
                    one: "{{count}} dan",
                    two: "{{count}} dni",
                    few: "{{count}} dni",
                    other: "{{count}} dni"
                }
            },
            aboutXWeeks: {
                one: "pribli\u017eno {{count}} teden",
                two: "pribli\u017eno {{count}} tedna",
                few: "pribli\u017eno {{count}} tedne",
                other: "pribli\u017eno {{count}} tednov"
            },
            xWeeks: {
                one: "{{count}} teden",
                two: "{{count}} tedna",
                few: "{{count}} tedne",
                other: "{{count}} tednov"
            },
            aboutXMonths: {
                present: {
                    one: "pribli\u017eno {{count}} mesec",
                    two: "pribli\u017eno {{count}} meseca",
                    few: "pribli\u017eno {{count}} mesece",
                    other: "pribli\u017eno {{count}} mesecev"
                },
                past: {
                    one: "pribli\u017eno {{count}} mesecem",
                    two: "pribli\u017eno {{count}} mesecema",
                    few: "pribli\u017eno {{count}} meseci",
                    other: "pribli\u017eno {{count}} meseci"
                },
                future: {
                    one: "pribli\u017eno {{count}} mesec",
                    two: "pribli\u017eno {{count}} meseca",
                    few: "pribli\u017eno {{count}} mesece",
                    other: "pribli\u017eno {{count}} mesecev"
                }
            },
            xMonths: {
                present: {
                    one: "{{count}} mesec",
                    two: "{{count}} meseca",
                    few: "{{count}} meseci",
                    other: "{{count}} mesecev"
                },
                past: {
                    one: "{{count}} mesecem",
                    two: "{{count}} mesecema",
                    few: "{{count}} meseci",
                    other: "{{count}} meseci"
                },
                future: {
                    one: "{{count}} mesec",
                    two: "{{count}} meseca",
                    few: "{{count}} mesece",
                    other: "{{count}} mesecev"
                }
            },
            aboutXYears: {
                present: {
                    one: "pribli\u017eno {{count}} leto",
                    two: "pribli\u017eno {{count}} leti",
                    few: "pribli\u017eno {{count}} leta",
                    other: "pribli\u017eno {{count}} let"
                },
                past: {
                    one: "pribli\u017eno {{count}} letom",
                    two: "pribli\u017eno {{count}} letoma",
                    few: "pribli\u017eno {{count}} leti",
                    other: "pribli\u017eno {{count}} leti"
                },
                future: {
                    one: "pribli\u017eno {{count}} leto",
                    two: "pribli\u017eno {{count}} leti",
                    few: "pribli\u017eno {{count}} leta",
                    other: "pribli\u017eno {{count}} let"
                }
            },
            xYears: {
                present: {
                    one: "{{count}} leto",
                    two: "{{count}} leti",
                    few: "{{count}} leta",
                    other: "{{count}} let"
                },
                past: {
                    one: "{{count}} letom",
                    two: "{{count}} letoma",
                    few: "{{count}} leti",
                    other: "{{count}} leti"
                },
                future: {
                    one: "{{count}} leto",
                    two: "{{count}} leti",
                    few: "{{count}} leta",
                    other: "{{count}} let"
                }
            },
            overXYears: {
                present: {
                    one: "ve\u010d kot {{count}} leto",
                    two: "ve\u010d kot {{count}} leti",
                    few: "ve\u010d kot {{count}} leta",
                    other: "ve\u010d kot {{count}} let"
                },
                past: {
                    one: "ve\u010d kot {{count}} letom",
                    two: "ve\u010d kot {{count}} letoma",
                    few: "ve\u010d kot {{count}} leti",
                    other: "ve\u010d kot {{count}} leti"
                },
                future: {
                    one: "ve\u010d kot {{count}} leto",
                    two: "ve\u010d kot {{count}} leti",
                    few: "ve\u010d kot {{count}} leta",
                    other: "ve\u010d kot {{count}} let"
                }
            },
            almostXYears: {
                present: {
                    one: "skoraj {{count}} leto",
                    two: "skoraj {{count}} leti",
                    few: "skoraj {{count}} leta",
                    other: "skoraj {{count}} let"
                },
                past: {
                    one: "skoraj {{count}} letom",
                    two: "skoraj {{count}} letoma",
                    few: "skoraj {{count}} leti",
                    other: "skoraj {{count}} leti"
                },
                future: {
                    one: "skoraj {{count}} leto",
                    two: "skoraj {{count}} leti",
                    few: "skoraj {{count}} leta",
                    other: "skoraj {{count}} let"
                }
            }
        };
        const ko = {
            date: r({
                formats: {
                    full: "EEEE, dd. MMMM y",
                    long: "dd. MMMM y",
                    medium: "d. MMM y",
                    short: "d. MM. yy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Mo = {
            lastWeek: e=>{
                switch (e.getDay()) {
                case 0:
                    return "'prej\u0161njo nedeljo ob' p";
                case 3:
                    return "'prej\u0161njo sredo ob' p";
                case 6:
                    return "'prej\u0161njo soboto ob' p";
                default:
                    return "'prej\u0161nji' EEEE 'ob' p"
                }
            }
            ,
            yesterday: "'v\u010deraj ob' p",
            today: "'danes ob' p",
            tomorrow: "'jutri ob' p",
            nextWeek: e=>{
                switch (e.getDay()) {
                case 0:
                    return "'naslednjo nedeljo ob' p";
                case 3:
                    return "'naslednjo sredo ob' p";
                case 6:
                    return "'naslednjo soboto ob' p";
                default:
                    return "'naslednji' EEEE 'ob' p"
                }
            }
            ,
            other: "P"
        }
          , Po = {
            code: "sl",
            formatDistance: (e,t,n)=>{
                let a = ""
                  , r = "present";
                n?.addSuffix && (n.comparison && n.comparison > 0 ? (r = "future",
                a = "\u010dez ") : (r = "past",
                a = "pred "));
                const i = yo[e];
                if ("string" === typeof i)
                    a += i;
                else {
                    const e = function(e) {
                        switch (e % 100) {
                        case 1:
                            return "one";
                        case 2:
                            return "two";
                        case 3:
                        case 4:
                            return "few";
                        default:
                            return "other"
                        }
                    }(t);
                    void 0 !== i.one ? a += i[e].replace("{{count}}", String(t)) : a += i[r][e].replace("{{count}}", String(t))
                }
                return a
            }
            ,
            formatLong: ko,
            formatRelative: (e,t,n,a)=>{
                const r = Mo[e];
                return "function" === typeof r ? r(t) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["pr. n. \u0161t.", "po n. \u0161t."],
                        abbreviated: ["pr. n. \u0161t.", "po n. \u0161t."],
                        wide: ["pred na\u0161im \u0161tetjem", "po na\u0161em \u0161tetju"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1. \u010det.", "2. \u010det.", "3. \u010det.", "4. \u010det."],
                        wide: ["1. \u010detrtletje", "2. \u010detrtletje", "3. \u010detrtletje", "4. \u010detrtletje"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
                        abbreviated: ["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "avg.", "sep.", "okt.", "nov.", "dec."],
                        wide: ["januar", "februar", "marec", "april", "maj", "junij", "julij", "avgust", "september", "oktober", "november", "december"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["n", "p", "t", "s", "\u010d", "p", "s"],
                        short: ["ned.", "pon.", "tor.", "sre.", "\u010det.", "pet.", "sob."],
                        abbreviated: ["ned.", "pon.", "tor.", "sre.", "\u010det.", "pet.", "sob."],
                        wide: ["nedelja", "ponedeljek", "torek", "sreda", "\u010detrtek", "petek", "sobota"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "d",
                            pm: "p",
                            midnight: "24.00",
                            noon: "12.00",
                            morning: "j",
                            afternoon: "p",
                            evening: "v",
                            night: "n"
                        },
                        abbreviated: {
                            am: "dop.",
                            pm: "pop.",
                            midnight: "poln.",
                            noon: "pold.",
                            morning: "jut.",
                            afternoon: "pop.",
                            evening: "ve\u010d.",
                            night: "no\u010d"
                        },
                        wide: {
                            am: "dop.",
                            pm: "pop.",
                            midnight: "polno\u010d",
                            noon: "poldne",
                            morning: "jutro",
                            afternoon: "popoldne",
                            evening: "ve\u010der",
                            night: "no\u010d"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "d",
                            pm: "p",
                            midnight: "24.00",
                            noon: "12.00",
                            morning: "zj",
                            afternoon: "p",
                            evening: "zv",
                            night: "po"
                        },
                        abbreviated: {
                            am: "dop.",
                            pm: "pop.",
                            midnight: "opoln.",
                            noon: "opold.",
                            morning: "zjut.",
                            afternoon: "pop.",
                            evening: "zve\u010d.",
                            night: "pono\u010di"
                        },
                        wide: {
                            am: "dop.",
                            pm: "pop.",
                            midnight: "opolno\u010di",
                            noon: "opoldne",
                            morning: "zjutraj",
                            afternoon: "popoldan",
                            evening: "zve\u010der",
                            night: "pono\u010di"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)\./i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        abbreviated: /^(pr\. n\. \u0161t\.|po n\. \u0161t\.)/i,
                        wide: /^(pred Kristusom|pred na[s\u0161]im [s\u0161]tetjem|po Kristusu|po na[s\u0161]em [s\u0161]tetju|na[s\u0161]ega [s\u0161]tetja)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^pr/i, /^(po|na[s\u0161]em)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234]\.\s?[\u010dc]et\.?/i,
                        wide: /^[1234]\. [\u010dc]etrtletje/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(jan\.|feb\.|mar\.|apr\.|maj|jun\.|jul\.|avg\.|sep\.|okt\.|nov\.|dec\.)/i,
                        wide: /^(januar|februar|marec|april|maj|junij|julij|avgust|september|oktober|november|december)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        abbreviated: [/^ja/i, /^fe/i, /^mar/i, /^ap/i, /^maj/i, /^jun/i, /^jul/i, /^av/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        wide: [/^ja/i, /^fe/i, /^mar/i, /^ap/i, /^maj/i, /^jun/i, /^jul/i, /^av/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "wide"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[npts\u010dc]/i,
                        short: /^(ned\.|pon\.|tor\.|sre\.|[c\u010d]et\.|pet\.|sob\.)/i,
                        abbreviated: /^(ned\.|pon\.|tor\.|sre\.|[c\u010d]et\.|pet\.|sob\.)/i,
                        wide: /^(nedelja|ponedeljek|torek|sreda|[c\u010d]etrtek|petek|sobota)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^n/i, /^p/i, /^t/i, /^s/i, /^[c\u010d]/i, /^p/i, /^s/i],
                        any: [/^n/i, /^po/i, /^t/i, /^sr/i, /^[c\u010d]/i, /^pe/i, /^so/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(d|po?|z?v|n|z?j|24\.00|12\.00)/i,
                        any: /^(dop\.|pop\.|o?poln(\.|o[c\u010d]i?)|o?pold(\.|ne)|z?ve[c\u010d](\.|er)|(po)?no[c\u010d]i?|popold(ne|an)|jut(\.|ro)|zjut(\.|raj))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        narrow: {
                            am: /^d/i,
                            pm: /^p/i,
                            midnight: /^24/i,
                            noon: /^12/i,
                            morning: /^(z?j)/i,
                            afternoon: /^p/i,
                            evening: /^(z?v)/i,
                            night: /^(n|po)/i
                        },
                        any: {
                            am: /^dop\./i,
                            pm: /^pop\./i,
                            midnight: /^o?poln/i,
                            noon: /^o?pold/i,
                            morning: /j/i,
                            afternoon: /^pop\./i,
                            evening: /^z?ve/i,
                            night: /(po)?no/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const Wo = {
            lessThanXSeconds: {
                one: "m\xeb pak se nj\xeb sekond\xeb",
                other: "m\xeb pak se {{count}} sekonda"
            },
            xSeconds: {
                one: "1 sekond\xeb",
                other: "{{count}} sekonda"
            },
            halfAMinute: "gjys\xebm minuti",
            lessThanXMinutes: {
                one: "m\xeb pak se nj\xeb minute",
                other: "m\xeb pak se {{count}} minuta"
            },
            xMinutes: {
                one: "1 minut\xeb",
                other: "{{count}} minuta"
            },
            aboutXHours: {
                one: "rreth 1 or\xeb",
                other: "rreth {{count}} or\xeb"
            },
            xHours: {
                one: "1 or\xeb",
                other: "{{count}} or\xeb"
            },
            xDays: {
                one: "1 dit\xeb",
                other: "{{count}} dit\xeb"
            },
            aboutXWeeks: {
                one: "rreth 1 jav\xeb",
                other: "rreth {{count}} jav\xeb"
            },
            xWeeks: {
                one: "1 jav\xeb",
                other: "{{count}} jav\xeb"
            },
            aboutXMonths: {
                one: "rreth 1 muaj",
                other: "rreth {{count}} muaj"
            },
            xMonths: {
                one: "1 muaj",
                other: "{{count}} muaj"
            },
            aboutXYears: {
                one: "rreth 1 vit",
                other: "rreth {{count}} vite"
            },
            xYears: {
                one: "1 vit",
                other: "{{count}} vite"
            },
            overXYears: {
                one: "mbi 1 vit",
                other: "mbi {{count}} vite"
            },
            almostXYears: {
                one: "pothuajse 1 vit",
                other: "pothuajse {{count}} vite"
            }
        }
          , xo = {
            date: r({
                formats: {
                    full: "EEEE, MMMM do, y",
                    long: "MMMM do, y",
                    medium: "MMM d, y",
                    short: "MM/dd/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'n\xeb' {{time}}",
                    long: "{{date}} 'n\xeb' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , So = {
            lastWeek: "'t\xeb' eeee 'e shkuar n\xeb' p",
            yesterday: "'dje n\xeb' p",
            today: "'sot n\xeb' p",
            tomorrow: "'nes\xebr n\xeb' p",
            nextWeek: "eeee 'at' p",
            other: "P"
        }
          , Do = {
            code: "sq",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Wo[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "n\xeb " + a : a + " m\xeb par\xeb" : a
            }
            ,
            formatLong: xo,
            formatRelative: (e,t,n,a)=>So[e],
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e);
                    return "hour" === t?.unit ? String(n) : 1 === n ? n + "-r\xeb" : 4 === n ? n + "t" : n + "-t\xeb"
                }
                ,
                era: s({
                    values: {
                        narrow: ["P", "M"],
                        abbreviated: ["PK", "MK"],
                        wide: ["Para Krishtit", "Mbas Krishtit"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["4-mujori I", "4-mujori II", "4-mujori III", "4-mujori IV"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"],
                        abbreviated: ["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gus", "Sht", "Tet", "N\xebn", "Dhj"],
                        wide: ["Janar", "Shkurt", "Mars", "Prill", "Maj", "Qershor", "Korrik", "Gusht", "Shtator", "Tetor", "N\xebntor", "Dhjetor"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["D", "H", "M", "M", "E", "P", "S"],
                        short: ["Di", "H\xeb", "Ma", "M\xeb", "En", "Pr", "Sh"],
                        abbreviated: ["Die", "H\xebn", "Mar", "M\xebr", "Enj", "Pre", "Sht"],
                        wide: ["Diel\xeb", "H\xebn\xeb", "Mart\xeb", "M\xebrkur\xeb", "Enjte", "Premte", "Shtun\xeb"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "p",
                            pm: "m",
                            midnight: "m",
                            noon: "d",
                            morning: "m\xebngjes",
                            afternoon: "dite",
                            evening: "mbr\xebmje",
                            night: "nat\xeb"
                        },
                        abbreviated: {
                            am: "PD",
                            pm: "MD",
                            midnight: "mesn\xebt\xeb",
                            noon: "drek",
                            morning: "m\xebngjes",
                            afternoon: "mbasdite",
                            evening: "mbr\xebmje",
                            night: "nat\xeb"
                        },
                        wide: {
                            am: "p.d.",
                            pm: "m.d.",
                            midnight: "mesn\xebt\xeb",
                            noon: "drek",
                            morning: "m\xebngjes",
                            afternoon: "mbasdite",
                            evening: "mbr\xebmje",
                            night: "nat\xeb"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "p",
                            pm: "m",
                            midnight: "m",
                            noon: "d",
                            morning: "n\xeb m\xebngjes",
                            afternoon: "n\xeb mbasdite",
                            evening: "n\xeb mbr\xebmje",
                            night: "n\xeb mesnat\xeb"
                        },
                        abbreviated: {
                            am: "PD",
                            pm: "MD",
                            midnight: "mesnat\xeb",
                            noon: "drek",
                            morning: "n\xeb m\xebngjes",
                            afternoon: "n\xeb mbasdite",
                            evening: "n\xeb mbr\xebmje",
                            night: "n\xeb mesnat\xeb"
                        },
                        wide: {
                            am: "p.d.",
                            pm: "m.d.",
                            midnight: "mesnat\xeb",
                            noon: "drek",
                            morning: "n\xeb m\xebngjes",
                            afternoon: "n\xeb mbasdite",
                            evening: "n\xeb mbr\xebmje",
                            night: "n\xeb mesnat\xeb"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(-r\xeb|-t\xeb|t|)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(p|m)/i,
                        abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
                        wide: /^(para krishtit|mbas krishtit)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^b/i, /^(p|m)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^q[1234]/i,
                        wide: /^[1234]-mujori (i{1,3}|iv)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jsmpqkftnd]/i,
                        abbreviated: /^(jan|shk|mar|pri|maj|qer|kor|gus|sht|tet|n\xebn|dhj)/i,
                        wide: /^(janar|shkurt|mars|prill|maj|qershor|korrik|gusht|shtator|tetor|n\xebntor|dhjetor)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^s/i, /^m/i, /^p/i, /^m/i, /^q/i, /^k/i, /^g/i, /^s/i, /^t/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^shk/i, /^mar/i, /^pri/i, /^maj/i, /^qer/i, /^kor/i, /^gu/i, /^sht/i, /^tet/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[dhmeps]/i,
                        short: /^(di|h\xeb|ma|m\xeb|en|pr|sh)/i,
                        abbreviated: /^(die|h\xebn|mar|m\xebr|enj|pre|sht)/i,
                        wide: /^(diel\xeb|h\xebn\xeb|mart\xeb|m\xebrkur\xeb|enjte|premte|shtun\xeb)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^d/i, /^h/i, /^m/i, /^m/i, /^e/i, /^p/i, /^s/i],
                        any: [/^d/i, /^h/i, /^ma/i, /^m\xeb/i, /^e/i, /^p/i, /^s/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(p|m|me|n\xeb (m\xebngjes|mbasdite|mbr\xebmje|mesnat\xeb))/i,
                        any: /^([pm]\.?\s?d\.?|drek|n\xeb (m\xebngjes|mbasdite|mbr\xebmje|mesnat\xeb))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^p/i,
                            pm: /^m/i,
                            midnight: /^me/i,
                            noon: /^dr/i,
                            morning: /m\xebngjes/i,
                            afternoon: /mbasdite/i,
                            evening: /mbr\xebmje/i,
                            night: /nat\xeb/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const jo = {
            lessThanXSeconds: {
                one: {
                    standalone: "\u043c\u0430\u045a\u0435 \u043e\u0434 1 \u0441\u0435\u043a\u0443\u043d\u0434\u0435",
                    withPrepositionAgo: "\u043c\u0430\u045a\u0435 \u043e\u0434 1 \u0441\u0435\u043a\u0443\u043d\u0434\u0435",
                    withPrepositionIn: "\u043c\u0430\u045a\u0435 \u043e\u0434 1 \u0441\u0435\u043a\u0443\u043d\u0434\u0443"
                },
                dual: "\u043c\u0430\u045a\u0435 \u043e\u0434 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0435",
                other: "\u043c\u0430\u045a\u0435 \u043e\u0434 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0438"
            },
            xSeconds: {
                one: {
                    standalone: "1 \u0441\u0435\u043a\u0443\u043d\u0434\u0430",
                    withPrepositionAgo: "1 \u0441\u0435\u043a\u0443\u043d\u0434\u0435",
                    withPrepositionIn: "1 \u0441\u0435\u043a\u0443\u043d\u0434\u0443"
                },
                dual: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0435",
                other: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0438"
            },
            halfAMinute: "\u043f\u043e\u043b\u0430 \u043c\u0438\u043d\u0443\u0442\u0435",
            lessThanXMinutes: {
                one: {
                    standalone: "\u043c\u0430\u045a\u0435 \u043e\u0434 1 \u043c\u0438\u043d\u0443\u0442\u0435",
                    withPrepositionAgo: "\u043c\u0430\u045a\u0435 \u043e\u0434 1 \u043c\u0438\u043d\u0443\u0442\u0435",
                    withPrepositionIn: "\u043c\u0430\u045a\u0435 \u043e\u0434 1 \u043c\u0438\u043d\u0443\u0442\u0443"
                },
                dual: "\u043c\u0430\u045a\u0435 \u043e\u0434 {{count}} \u043c\u0438\u043d\u0443\u0442\u0435",
                other: "\u043c\u0430\u045a\u0435 \u043e\u0434 {{count}} \u043c\u0438\u043d\u0443\u0442\u0430"
            },
            xMinutes: {
                one: {
                    standalone: "1 \u043c\u0438\u043d\u0443\u0442\u0430",
                    withPrepositionAgo: "1 \u043c\u0438\u043d\u0443\u0442\u0435",
                    withPrepositionIn: "1 \u043c\u0438\u043d\u0443\u0442\u0443"
                },
                dual: "{{count}} \u043c\u0438\u043d\u0443\u0442\u0435",
                other: "{{count}} \u043c\u0438\u043d\u0443\u0442\u0430"
            },
            aboutXHours: {
                one: {
                    standalone: "\u043e\u043a\u043e 1 \u0441\u0430\u0442",
                    withPrepositionAgo: "\u043e\u043a\u043e 1 \u0441\u0430\u0442",
                    withPrepositionIn: "\u043e\u043a\u043e 1 \u0441\u0430\u0442"
                },
                dual: "\u043e\u043a\u043e {{count}} \u0441\u0430\u0442\u0430",
                other: "\u043e\u043a\u043e {{count}} \u0441\u0430\u0442\u0438"
            },
            xHours: {
                one: {
                    standalone: "1 \u0441\u0430\u0442",
                    withPrepositionAgo: "1 \u0441\u0430\u0442",
                    withPrepositionIn: "1 \u0441\u0430\u0442"
                },
                dual: "{{count}} \u0441\u0430\u0442\u0430",
                other: "{{count}} \u0441\u0430\u0442\u0438"
            },
            xDays: {
                one: {
                    standalone: "1 \u0434\u0430\u043d",
                    withPrepositionAgo: "1 \u0434\u0430\u043d",
                    withPrepositionIn: "1 \u0434\u0430\u043d"
                },
                dual: "{{count}} \u0434\u0430\u043d\u0430",
                other: "{{count}} \u0434\u0430\u043d\u0430"
            },
            aboutXWeeks: {
                one: {
                    standalone: "\u043e\u043a\u043e 1 \u043d\u0435\u0434\u0435\u0459\u0443",
                    withPrepositionAgo: "\u043e\u043a\u043e 1 \u043d\u0435\u0434\u0435\u0459\u0443",
                    withPrepositionIn: "\u043e\u043a\u043e 1 \u043d\u0435\u0434\u0435\u0459\u0443"
                },
                dual: "\u043e\u043a\u043e {{count}} \u043d\u0435\u0434\u0435\u0459\u0435",
                other: "\u043e\u043a\u043e {{count}} \u043d\u0435\u0434\u0435\u0459\u0435"
            },
            xWeeks: {
                one: {
                    standalone: "1 \u043d\u0435\u0434\u0435\u0459\u0443",
                    withPrepositionAgo: "1 \u043d\u0435\u0434\u0435\u0459\u0443",
                    withPrepositionIn: "1 \u043d\u0435\u0434\u0435\u0459\u0443"
                },
                dual: "{{count}} \u043d\u0435\u0434\u0435\u0459\u0435",
                other: "{{count}} \u043d\u0435\u0434\u0435\u0459\u0435"
            },
            aboutXMonths: {
                one: {
                    standalone: "\u043e\u043a\u043e 1 \u043c\u0435\u0441\u0435\u0446",
                    withPrepositionAgo: "\u043e\u043a\u043e 1 \u043c\u0435\u0441\u0435\u0446",
                    withPrepositionIn: "\u043e\u043a\u043e 1 \u043c\u0435\u0441\u0435\u0446"
                },
                dual: "\u043e\u043a\u043e {{count}} \u043c\u0435\u0441\u0435\u0446\u0430",
                other: "\u043e\u043a\u043e {{count}} \u043c\u0435\u0441\u0435\u0446\u0438"
            },
            xMonths: {
                one: {
                    standalone: "1 \u043c\u0435\u0441\u0435\u0446",
                    withPrepositionAgo: "1 \u043c\u0435\u0441\u0435\u0446",
                    withPrepositionIn: "1 \u043c\u0435\u0441\u0435\u0446"
                },
                dual: "{{count}} \u043c\u0435\u0441\u0435\u0446\u0430",
                other: "{{count}} \u043c\u0435\u0441\u0435\u0446\u0438"
            },
            aboutXYears: {
                one: {
                    standalone: "\u043e\u043a\u043e 1 \u0433\u043e\u0434\u0438\u043d\u0443",
                    withPrepositionAgo: "\u043e\u043a\u043e 1 \u0433\u043e\u0434\u0438\u043d\u0443",
                    withPrepositionIn: "\u043e\u043a\u043e 1 \u0433\u043e\u0434\u0438\u043d\u0443"
                },
                dual: "\u043e\u043a\u043e {{count}} \u0433\u043e\u0434\u0438\u043d\u0435",
                other: "\u043e\u043a\u043e {{count}} \u0433\u043e\u0434\u0438\u043d\u0430"
            },
            xYears: {
                one: {
                    standalone: "1 \u0433\u043e\u0434\u0438\u043d\u0430",
                    withPrepositionAgo: "1 \u0433\u043e\u0434\u0438\u043d\u0435",
                    withPrepositionIn: "1 \u0433\u043e\u0434\u0438\u043d\u0443"
                },
                dual: "{{count}} \u0433\u043e\u0434\u0438\u043d\u0435",
                other: "{{count}} \u0433\u043e\u0434\u0438\u043d\u0430"
            },
            overXYears: {
                one: {
                    standalone: "\u043f\u0440\u0435\u043a\u043e 1 \u0433\u043e\u0434\u0438\u043d\u0443",
                    withPrepositionAgo: "\u043f\u0440\u0435\u043a\u043e 1 \u0433\u043e\u0434\u0438\u043d\u0443",
                    withPrepositionIn: "\u043f\u0440\u0435\u043a\u043e 1 \u0433\u043e\u0434\u0438\u043d\u0443"
                },
                dual: "\u043f\u0440\u0435\u043a\u043e {{count}} \u0433\u043e\u0434\u0438\u043d\u0435",
                other: "\u043f\u0440\u0435\u043a\u043e {{count}} \u0433\u043e\u0434\u0438\u043d\u0430"
            },
            almostXYears: {
                one: {
                    standalone: "\u0433\u043e\u0442\u043e\u0432\u043e 1 \u0433\u043e\u0434\u0438\u043d\u0443",
                    withPrepositionAgo: "\u0433\u043e\u0442\u043e\u0432\u043e 1 \u0433\u043e\u0434\u0438\u043d\u0443",
                    withPrepositionIn: "\u0433\u043e\u0442\u043e\u0432\u043e 1 \u0433\u043e\u0434\u0438\u043d\u0443"
                },
                dual: "\u0433\u043e\u0442\u043e\u0432\u043e {{count}} \u0433\u043e\u0434\u0438\u043d\u0435",
                other: "\u0433\u043e\u0442\u043e\u0432\u043e {{count}} \u0433\u043e\u0434\u0438\u043d\u0430"
            }
        }
          , Co = {
            date: r({
                formats: {
                    full: "EEEE, d. MMMM yyyy.",
                    long: "d. MMMM yyyy.",
                    medium: "d. MMM yy.",
                    short: "dd. MM. yy."
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss (zzzz)",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u0443' {{time}}",
                    long: "{{date}} '\u0443' {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , To = {
            lastWeek: e=>{
                switch (e.getDay()) {
                case 0:
                    return "'\u043f\u0440\u043e\u0448\u043b\u0435 \u043d\u0435\u0434\u0435\u0459\u0435 \u0443' p";
                case 3:
                    return "'\u043f\u0440\u043e\u0448\u043b\u0435 \u0441\u0440\u0435\u0434\u0435 \u0443' p";
                case 6:
                    return "'\u043f\u0440\u043e\u0448\u043b\u0435 \u0441\u0443\u0431\u043e\u0442\u0435 \u0443' p";
                default:
                    return "'\u043f\u0440\u043e\u0448\u043b\u0438' EEEE '\u0443' p"
                }
            }
            ,
            yesterday: "'\u0458\u0443\u0447\u0435 \u0443' p",
            today: "'\u0434\u0430\u043d\u0430\u0441 \u0443' p",
            tomorrow: "'\u0441\u0443\u0442\u0440\u0430 \u0443' p",
            nextWeek: e=>{
                switch (e.getDay()) {
                case 0:
                    return "'\u0441\u043b\u0435\u0434\u0435\u045b\u0435 \u043d\u0435\u0434\u0435\u0459\u0435 \u0443' p";
                case 3:
                    return "'\u0441\u043b\u0435\u0434\u0435\u045b\u0443 \u0441\u0440\u0435\u0434\u0443 \u0443' p";
                case 6:
                    return "'\u0441\u043b\u0435\u0434\u0435\u045b\u0443 \u0441\u0443\u0431\u043e\u0442\u0443 \u0443' p";
                default:
                    return "'\u0441\u043b\u0435\u0434\u0435\u045b\u0438' EEEE '\u0443' p"
                }
            }
            ,
            other: "P"
        }
          , Eo = {
            code: "sr",
            formatDistance: (e,t,n)=>{
                let a;
                const r = jo[e];
                return a = "string" === typeof r ? r : 1 === t ? n?.addSuffix ? n.comparison && n.comparison > 0 ? r.one.withPrepositionIn : r.one.withPrepositionAgo : r.one.standalone : t % 10 > 1 && t % 10 < 5 && "1" !== String(t).substr(-2, 1) ? r.dual.replace("{{count}}", String(t)) : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "\u0437\u0430 " + a : "\u043f\u0440\u0435 " + a : a
            }
            ,
            formatLong: Co,
            formatRelative: (e,t,n,a)=>{
                const r = To[e];
                return "function" === typeof r ? r(t) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["\u043f\u0440.\u043d.\u0435.", "\u0410\u0414"],
                        abbreviated: ["\u043f\u0440. \u0425\u0440.", "\u043f\u043e. \u0425\u0440."],
                        wide: ["\u041f\u0440\u0435 \u0425\u0440\u0438\u0441\u0442\u0430", "\u041f\u043e\u0441\u043b\u0435 \u0425\u0440\u0438\u0441\u0442\u0430"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1.", "2.", "3.", "4."],
                        abbreviated: ["1. \u043a\u0432.", "2. \u043a\u0432.", "3. \u043a\u0432.", "4. \u043a\u0432."],
                        wide: ["1. \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "2. \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "3. \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "4. \u043a\u0432\u0430\u0440\u0442\u0430\u043b"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."],
                        abbreviated: ["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"],
                        wide: ["\u0458\u0430\u043d\u0443\u0430\u0440", "\u0444\u0435\u0431\u0440\u0443\u0430\u0440", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."],
                        abbreviated: ["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"],
                        wide: ["\u0458\u0430\u043d\u0443\u0430\u0440", "\u0444\u0435\u0431\u0440\u0443\u0430\u0440", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u041d", "\u041f", "\u0423", "\u0421", "\u0427", "\u041f", "\u0421"],
                        short: ["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"],
                        abbreviated: ["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"],
                        wide: ["\u043d\u0435\u0434\u0435\u0459\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", "\u0443\u0442\u043e\u0440\u0430\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u043f\u0435\u0442\u0430\u043a", "\u0441\u0443\u0431\u043e\u0442\u0430"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "\u043f\u043e\u043d\u043e\u045b",
                            noon: "\u043f\u043e\u0434\u043d\u0435",
                            morning: "\u0443\u0458\u0443\u0442\u0440\u0443",
                            afternoon: "\u043f\u043e\u043f\u043e\u0434\u043d\u0435",
                            evening: "\u0443\u0432\u0435\u0447\u0435",
                            night: "\u043d\u043e\u045b\u0443"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "\u043f\u043e\u043d\u043e\u045b",
                            noon: "\u043f\u043e\u0434\u043d\u0435",
                            morning: "\u0443\u0458\u0443\u0442\u0440\u0443",
                            afternoon: "\u043f\u043e\u043f\u043e\u0434\u043d\u0435",
                            evening: "\u0443\u0432\u0435\u0447\u0435",
                            night: "\u043d\u043e\u045b\u0443"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "\u043f\u043e\u043d\u043e\u045b",
                            noon: "\u043f\u043e\u0434\u043d\u0435",
                            morning: "\u0443\u0458\u0443\u0442\u0440\u0443",
                            afternoon: "\u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043d\u0435",
                            evening: "\u0443\u0432\u0435\u0447\u0435",
                            night: "\u043d\u043e\u045b\u0443"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u0410\u041c",
                            pm: "\u041f\u041c",
                            midnight: "\u043f\u043e\u043d\u043e\u045b",
                            noon: "\u043f\u043e\u0434\u043d\u0435",
                            morning: "\u0443\u0458\u0443\u0442\u0440\u0443",
                            afternoon: "\u043f\u043e\u043f\u043e\u0434\u043d\u0435",
                            evening: "\u0443\u0432\u0435\u0447\u0435",
                            night: "\u043d\u043e\u045b\u0443"
                        },
                        abbreviated: {
                            am: "\u0410\u041c",
                            pm: "\u041f\u041c",
                            midnight: "\u043f\u043e\u043d\u043e\u045b",
                            noon: "\u043f\u043e\u0434\u043d\u0435",
                            morning: "\u0443\u0458\u0443\u0442\u0440\u0443",
                            afternoon: "\u043f\u043e\u043f\u043e\u0434\u043d\u0435",
                            evening: "\u0443\u0432\u0435\u0447\u0435",
                            night: "\u043d\u043e\u045b\u0443"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "\u043f\u043e\u043d\u043e\u045b",
                            noon: "\u043f\u043e\u0434\u043d\u0435",
                            morning: "\u0443\u0458\u0443\u0442\u0440\u0443",
                            afternoon: "\u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043d\u0435",
                            evening: "\u0443\u0432\u0435\u0447\u0435",
                            night: "\u043d\u043e\u045b\u0443"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)\./i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u043f\u0440\.\u043d\.\u0435\.|\u0410\u0414)/i,
                        abbreviated: /^(\u043f\u0440\.\s?\u0425\u0440\.|\u043f\u043e\.\s?\u0425\u0440\.)/i,
                        wide: /^(\u041f\u0440\u0435 \u0425\u0440\u0438\u0441\u0442\u0430|\u043f\u0440\u0435 \u043d\u043e\u0432\u0435 \u0435\u0440\u0435|\u041f\u043e\u0441\u043b\u0435 \u0425\u0440\u0438\u0441\u0442\u0430|\u043d\u043e\u0432\u0430 \u0435\u0440\u0430)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u043f\u0440/i, /^(\u043f\u043e|\u043d\u043e\u0432\u0430)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234]\.\s?\u043a\u0432\.?/i,
                        wide: /^[1234]\. \u043a\u0432\u0430\u0440\u0442\u0430\u043b/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(10|11|12|[123456789])\./i,
                        abbreviated: /^(\u0458\u0430\u043d|\u0444\u0435\u0431|\u043c\u0430\u0440|\u0430\u043f\u0440|\u043c\u0430\u0458|\u0458\u0443\u043d|\u0458\u0443\u043b|\u0430\u0432\u0433|\u0441\u0435\u043f|\u043e\u043a\u0442|\u043d\u043e\u0432|\u0434\u0435\u0446)/i,
                        wide: /^((\u0458\u0430\u043d\u0443\u0430\u0440|\u0458\u0430\u043d\u0443\u0430\u0440\u0430)|(\u0444\u0435\u0431\u0440\u0443\u0430\u0440|\u0444\u0435\u0431\u0440\u0443\u0430\u0440\u0430)|(\u043c\u0430\u0440\u0442|\u043c\u0430\u0440\u0442\u0430)|(\u0430\u043f\u0440\u0438\u043b|\u0430\u043f\u0440\u0438\u043b\u0430)|(\u043c\u0458\u0430|\u043c\u0430\u0458\u0430)|(\u0458\u0443\u043d|\u0458\u0443\u043d\u0430)|(\u0458\u0443\u043b|\u0458\u0443\u043b\u0430)|(\u0430\u0432\u0433\u0443\u0441\u0442|\u0430\u0432\u0433\u0443\u0441\u0442\u0430)|(\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440|\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0440\u0430)|(\u043e\u043a\u0442\u043e\u0431\u0430\u0440|\u043e\u043a\u0442\u043e\u0431\u0440\u0430)|(\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440|\u043d\u043e\u0432\u0435\u043c\u0431\u0440\u0430)|(\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440|\u0434\u0435\u0446\u0435\u043c\u0431\u0440\u0430))/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^1/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^7/i, /^8/i, /^9/i, /^10/i, /^11/i, /^12/i],
                        any: [/^\u0458\u0430/i, /^\u0444/i, /^\u043c\u0430\u0440/i, /^\u0430\u043f/i, /^\u043c\u0430\u0458/i, /^\u0458\u0443\u043d/i, /^\u0458\u0443\u043b/i, /^\u0430\u0432\u0433/i, /^\u0441/i, /^\u043e/i, /^\u043d/i, /^\u0434/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u043f\u0443\u0441\u0447\u043d]/i,
                        short: /^(\u043d\u0435\u0434|\u043f\u043e\u043d|\u0443\u0442\u043e|\u0441\u0440\u0435|\u0447\u0435\u0442|\u043f\u0435\u0442|\u0441\u0443\u0431)/i,
                        abbreviated: /^(\u043d\u0435\u0434|\u043f\u043e\u043d|\u0443\u0442\u043e|\u0441\u0440\u0435|\u0447\u0435\u0442|\u043f\u0435\u0442|\u0441\u0443\u0431)/i,
                        wide: /^(\u043d\u0435\u0434\u0435\u0459\u0430|\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a|\u0443\u0442\u043e\u0440\u0430\u043a|\u0441\u0440\u0435\u0434\u0430|\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a|\u043f\u0435\u0442\u0430\u043a|\u0441\u0443\u0431\u043e\u0442\u0430)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u043f/i, /^\u0443/i, /^\u0441/i, /^\u0447/i, /^\u043f/i, /^\u0441/i, /^\u043d/i],
                        any: [/^\u043d\u0435\u0434/i, /^\u043f\u043e\u043d/i, /^\u0443\u0442\u043e/i, /^\u0441\u0440\u0435/i, /^\u0447\u0435\u0442/i, /^\u043f\u0435\u0442/i, /^\u0441\u0443\u0431/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(\u0430\u043c|\u043f\u043c|\u043f\u043e\u043d\u043e\u045b|(\u043f\u043e)?\u043f\u043e\u0434\u043d\u0435|\u0443\u0432\u0435\u0447\u0435|\u043d\u043e\u045b\u0443|\u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u0434\u043d\u0435|\u0443\u0458\u0443\u0442\u0440\u0443)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^\u043f\u043e\u043d\u043e/i,
                            noon: /^\u043f\u043e\u0434/i,
                            morning: /\u0443\u0458\u0443\u0442\u0440\u0443/i,
                            afternoon: /(\u043f\u043e\u0441\u043b\u0435\s|\u043f\u043e)+\u043f\u043e\u0434\u043d\u0435/i,
                            evening: /(\u0443\u0432\u0435\u0447\u0435)/i,
                            night: /(\u043d\u043e\u045b\u0443)/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const No = {
            lessThanXSeconds: {
                one: {
                    standalone: "manje od 1 sekunde",
                    withPrepositionAgo: "manje od 1 sekunde",
                    withPrepositionIn: "manje od 1 sekundu"
                },
                dual: "manje od {{count}} sekunde",
                other: "manje od {{count}} sekundi"
            },
            xSeconds: {
                one: {
                    standalone: "1 sekunda",
                    withPrepositionAgo: "1 sekunde",
                    withPrepositionIn: "1 sekundu"
                },
                dual: "{{count}} sekunde",
                other: "{{count}} sekundi"
            },
            halfAMinute: "pola minute",
            lessThanXMinutes: {
                one: {
                    standalone: "manje od 1 minute",
                    withPrepositionAgo: "manje od 1 minute",
                    withPrepositionIn: "manje od 1 minutu"
                },
                dual: "manje od {{count}} minute",
                other: "manje od {{count}} minuta"
            },
            xMinutes: {
                one: {
                    standalone: "1 minuta",
                    withPrepositionAgo: "1 minute",
                    withPrepositionIn: "1 minutu"
                },
                dual: "{{count}} minute",
                other: "{{count}} minuta"
            },
            aboutXHours: {
                one: {
                    standalone: "oko 1 sat",
                    withPrepositionAgo: "oko 1 sat",
                    withPrepositionIn: "oko 1 sat"
                },
                dual: "oko {{count}} sata",
                other: "oko {{count}} sati"
            },
            xHours: {
                one: {
                    standalone: "1 sat",
                    withPrepositionAgo: "1 sat",
                    withPrepositionIn: "1 sat"
                },
                dual: "{{count}} sata",
                other: "{{count}} sati"
            },
            xDays: {
                one: {
                    standalone: "1 dan",
                    withPrepositionAgo: "1 dan",
                    withPrepositionIn: "1 dan"
                },
                dual: "{{count}} dana",
                other: "{{count}} dana"
            },
            aboutXWeeks: {
                one: {
                    standalone: "oko 1 nedelju",
                    withPrepositionAgo: "oko 1 nedelju",
                    withPrepositionIn: "oko 1 nedelju"
                },
                dual: "oko {{count}} nedelje",
                other: "oko {{count}} nedelje"
            },
            xWeeks: {
                one: {
                    standalone: "1 nedelju",
                    withPrepositionAgo: "1 nedelju",
                    withPrepositionIn: "1 nedelju"
                },
                dual: "{{count}} nedelje",
                other: "{{count}} nedelje"
            },
            aboutXMonths: {
                one: {
                    standalone: "oko 1 mesec",
                    withPrepositionAgo: "oko 1 mesec",
                    withPrepositionIn: "oko 1 mesec"
                },
                dual: "oko {{count}} meseca",
                other: "oko {{count}} meseci"
            },
            xMonths: {
                one: {
                    standalone: "1 mesec",
                    withPrepositionAgo: "1 mesec",
                    withPrepositionIn: "1 mesec"
                },
                dual: "{{count}} meseca",
                other: "{{count}} meseci"
            },
            aboutXYears: {
                one: {
                    standalone: "oko 1 godinu",
                    withPrepositionAgo: "oko 1 godinu",
                    withPrepositionIn: "oko 1 godinu"
                },
                dual: "oko {{count}} godine",
                other: "oko {{count}} godina"
            },
            xYears: {
                one: {
                    standalone: "1 godina",
                    withPrepositionAgo: "1 godine",
                    withPrepositionIn: "1 godinu"
                },
                dual: "{{count}} godine",
                other: "{{count}} godina"
            },
            overXYears: {
                one: {
                    standalone: "preko 1 godinu",
                    withPrepositionAgo: "preko 1 godinu",
                    withPrepositionIn: "preko 1 godinu"
                },
                dual: "preko {{count}} godine",
                other: "preko {{count}} godina"
            },
            almostXYears: {
                one: {
                    standalone: "gotovo 1 godinu",
                    withPrepositionAgo: "gotovo 1 godinu",
                    withPrepositionIn: "gotovo 1 godinu"
                },
                dual: "gotovo {{count}} godine",
                other: "gotovo {{count}} godina"
            }
        }
          , zo = {
            date: r({
                formats: {
                    full: "EEEE, d. MMMM yyyy.",
                    long: "d. MMMM yyyy.",
                    medium: "d. MMM yy.",
                    short: "dd. MM. yy."
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss (zzzz)",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'u' {{time}}",
                    long: "{{date}} 'u' {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Io = {
            lastWeek: e=>{
                switch (e.getDay()) {
                case 0:
                    return "'pro\u0161le nedelje u' p";
                case 3:
                    return "'pro\u0161le srede u' p";
                case 6:
                    return "'pro\u0161le subote u' p";
                default:
                    return "'pro\u0161li' EEEE 'u' p"
                }
            }
            ,
            yesterday: "'ju\u010de u' p",
            today: "'danas u' p",
            tomorrow: "'sutra u' p",
            nextWeek: e=>{
                switch (e.getDay()) {
                case 0:
                    return "'slede\u0107e nedelje u' p";
                case 3:
                    return "'slede\u0107u sredu u' p";
                case 6:
                    return "'slede\u0107u subotu u' p";
                default:
                    return "'slede\u0107i' EEEE 'u' p"
                }
            }
            ,
            other: "P"
        }
          , Oo = {
            code: "sr-Latn",
            formatDistance: (e,t,n)=>{
                let a;
                const r = No[e];
                return a = "string" === typeof r ? r : 1 === t ? n?.addSuffix ? n.comparison && n.comparison > 0 ? r.one.withPrepositionIn : r.one.withPrepositionAgo : r.one.standalone : t % 10 > 1 && t % 10 < 5 && "1" !== String(t).substr(-2, 1) ? r.dual.replace("{{count}}", String(t)) : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "za " + a : "pre " + a : a
            }
            ,
            formatLong: zo,
            formatRelative: (e,t,n,a)=>{
                const r = Io[e];
                return "function" === typeof r ? r(t) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["pr.n.e.", "AD"],
                        abbreviated: ["pr. Hr.", "po. Hr."],
                        wide: ["Pre Hrista", "Posle Hrista"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1.", "2.", "3.", "4."],
                        abbreviated: ["1. kv.", "2. kv.", "3. kv.", "4. kv."],
                        wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."],
                        abbreviated: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"],
                        wide: ["januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", "decembar"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."],
                        abbreviated: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"],
                        wide: ["januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", "decembar"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["N", "P", "U", "S", "\u010c", "P", "S"],
                        short: ["ned", "pon", "uto", "sre", "\u010det", "pet", "sub"],
                        abbreviated: ["ned", "pon", "uto", "sre", "\u010det", "pet", "sub"],
                        wide: ["nedelja", "ponedeljak", "utorak", "sreda", "\u010detvrtak", "petak", "subota"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutru",
                            afternoon: "popodne",
                            evening: "uve\u010de",
                            night: "no\u0107u"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutru",
                            afternoon: "popodne",
                            evening: "uve\u010de",
                            night: "no\u0107u"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutru",
                            afternoon: "posle podne",
                            evening: "uve\u010de",
                            night: "no\u0107u"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutru",
                            afternoon: "popodne",
                            evening: "uve\u010de",
                            night: "no\u0107u"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutru",
                            afternoon: "popodne",
                            evening: "uve\u010de",
                            night: "no\u0107u"
                        },
                        wide: {
                            am: "AM",
                            pm: "PM",
                            midnight: "pono\u0107",
                            noon: "podne",
                            morning: "ujutru",
                            afternoon: "posle podne",
                            evening: "uve\u010de",
                            night: "no\u0107u"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)\./i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(pr\.n\.e\.|AD)/i,
                        abbreviated: /^(pr\.\s?Hr\.|po\.\s?Hr\.)/i,
                        wide: /^(Pre Hrista|pre nove ere|Posle Hrista|nova era)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^pr/i, /^(po|nova)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234]\.\s?kv\.?/i,
                        wide: /^[1234]\. kvartal/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(10|11|12|[123456789])\./i,
                        abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|avg|sep|okt|nov|dec)/i,
                        wide: /^((januar|januara)|(februar|februara)|(mart|marta)|(april|aprila)|(maj|maja)|(jun|juna)|(jul|jula)|(avgust|avgusta)|(septembar|septembra)|(oktobar|oktobra)|(novembar|novembra)|(decembar|decembra))/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^1/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^7/i, /^8/i, /^9/i, /^10/i, /^11/i, /^12/i],
                        any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^maj/i, /^jun/i, /^jul/i, /^avg/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[npus\u010dc]/i,
                        short: /^(ned|pon|uto|sre|(\u010det|cet)|pet|sub)/i,
                        abbreviated: /^(ned|pon|uto|sre|(\u010det|cet)|pet|sub)/i,
                        wide: /^(nedelja|ponedeljak|utorak|sreda|(\u010detvrtak|cetvrtak)|petak|subota)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
                        any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(am|pm|ponoc|pono\u0107|(po)?podne|uvece|uve\u010de|no\u0107u|posle podne|ujutru)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^pono/i,
                            noon: /^pod/i,
                            morning: /jutro/i,
                            afternoon: /(posle\s|po)+podne/i,
                            evening: /(uvece|uve\u010de)/i,
                            night: /(nocu|no\u0107u)/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const Ho = {
            lessThanXSeconds: {
                one: "mindre \xe4n en sekund",
                other: "mindre \xe4n {{count}} sekunder"
            },
            xSeconds: {
                one: "en sekund",
                other: "{{count}} sekunder"
            },
            halfAMinute: "en halv minut",
            lessThanXMinutes: {
                one: "mindre \xe4n en minut",
                other: "mindre \xe4n {{count}} minuter"
            },
            xMinutes: {
                one: "en minut",
                other: "{{count}} minuter"
            },
            aboutXHours: {
                one: "ungef\xe4r en timme",
                other: "ungef\xe4r {{count}} timmar"
            },
            xHours: {
                one: "en timme",
                other: "{{count}} timmar"
            },
            xDays: {
                one: "en dag",
                other: "{{count}} dagar"
            },
            aboutXWeeks: {
                one: "ungef\xe4r en vecka",
                other: "ungef\xe4r {{count}} veckor"
            },
            xWeeks: {
                one: "en vecka",
                other: "{{count}} veckor"
            },
            aboutXMonths: {
                one: "ungef\xe4r en m\xe5nad",
                other: "ungef\xe4r {{count}} m\xe5nader"
            },
            xMonths: {
                one: "en m\xe5nad",
                other: "{{count}} m\xe5nader"
            },
            aboutXYears: {
                one: "ungef\xe4r ett \xe5r",
                other: "ungef\xe4r {{count}} \xe5r"
            },
            xYears: {
                one: "ett \xe5r",
                other: "{{count}} \xe5r"
            },
            overXYears: {
                one: "\xf6ver ett \xe5r",
                other: "\xf6ver {{count}} \xe5r"
            },
            almostXYears: {
                one: "n\xe4stan ett \xe5r",
                other: "n\xe4stan {{count}} \xe5r"
            }
        }
          , Ao = ["noll", "en", "tv\xe5", "tre", "fyra", "fem", "sex", "sju", "\xe5tta", "nio", "tio", "elva", "tolv"]
          , Yo = {
            date: r({
                formats: {
                    full: "EEEE d MMMM y",
                    long: "d MMMM y",
                    medium: "d MMM y",
                    short: "y-MM-dd"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "'kl'. HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'kl.' {{time}}",
                    long: "{{date}} 'kl.' {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , _o = {
            lastWeek: "'i' EEEE's kl.' p",
            yesterday: "'ig\xe5r kl.' p",
            today: "'idag kl.' p",
            tomorrow: "'imorgon kl.' p",
            nextWeek: "EEEE 'kl.' p",
            other: "P"
        }
          , Xo = {
            code: "sv",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Ho[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", t < 13 ? Ao[t] : String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "om " + a : a + " sedan" : a
            }
            ,
            formatLong: Yo,
            formatRelative: (e,t,n,a)=>_o[e],
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e)
                      , a = n % 100;
                    if (a > 20 || a < 10)
                        switch (a % 10) {
                        case 1:
                        case 2:
                            return n + ":a"
                        }
                    return n + ":e"
                }
                ,
                era: s({
                    values: {
                        narrow: ["f.Kr.", "e.Kr."],
                        abbreviated: ["f.Kr.", "e.Kr."],
                        wide: ["f\xf6re Kristus", "efter Kristus"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["1:a kvartalet", "2:a kvartalet", "3:e kvartalet", "4:e kvartalet"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
                        abbreviated: ["jan.", "feb.", "mars", "apr.", "maj", "juni", "juli", "aug.", "sep.", "okt.", "nov.", "dec."],
                        wide: ["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["S", "M", "T", "O", "T", "F", "L"],
                        short: ["s\xf6", "m\xe5", "ti", "on", "to", "fr", "l\xf6"],
                        abbreviated: ["s\xf6n", "m\xe5n", "tis", "ons", "tors", "fre", "l\xf6r"],
                        wide: ["s\xf6ndag", "m\xe5ndag", "tisdag", "onsdag", "torsdag", "fredag", "l\xf6rdag"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "fm",
                            pm: "em",
                            midnight: "midnatt",
                            noon: "middag",
                            morning: "morg.",
                            afternoon: "efterm.",
                            evening: "kv\xe4ll",
                            night: "natt"
                        },
                        abbreviated: {
                            am: "f.m.",
                            pm: "e.m.",
                            midnight: "midnatt",
                            noon: "middag",
                            morning: "morgon",
                            afternoon: "efterm.",
                            evening: "kv\xe4ll",
                            night: "natt"
                        },
                        wide: {
                            am: "f\xf6rmiddag",
                            pm: "eftermiddag",
                            midnight: "midnatt",
                            noon: "middag",
                            morning: "morgon",
                            afternoon: "eftermiddag",
                            evening: "kv\xe4ll",
                            night: "natt"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "fm",
                            pm: "em",
                            midnight: "midnatt",
                            noon: "middag",
                            morning: "p\xe5 morg.",
                            afternoon: "p\xe5 efterm.",
                            evening: "p\xe5 kv\xe4llen",
                            night: "p\xe5 natten"
                        },
                        abbreviated: {
                            am: "fm",
                            pm: "em",
                            midnight: "midnatt",
                            noon: "middag",
                            morning: "p\xe5 morg.",
                            afternoon: "p\xe5 efterm.",
                            evening: "p\xe5 kv\xe4llen",
                            night: "p\xe5 natten"
                        },
                        wide: {
                            am: "fm",
                            pm: "em",
                            midnight: "midnatt",
                            noon: "middag",
                            morning: "p\xe5 morgonen",
                            afternoon: "p\xe5 eftermiddagen",
                            evening: "p\xe5 kv\xe4llen",
                            night: "p\xe5 natten"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(:a|:e)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(f\.? ?Kr\.?|f\.? ?v\.? ?t\.?|e\.? ?Kr\.?|v\.? ?t\.?)/i,
                        abbreviated: /^(f\.? ?Kr\.?|f\.? ?v\.? ?t\.?|e\.? ?Kr\.?|v\.? ?t\.?)/i,
                        wide: /^(f\xf6re Kristus|f\xf6re v\xe5r tid|efter Kristus|v\xe5r tid)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^f/i, /^[ev]/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^q[1234]/i,
                        wide: /^[1234](:a|:e)? kvartalet/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[jfmasond]/i,
                        abbreviated: /^(jan|feb|mar[s]?|apr|maj|jun[i]?|jul[i]?|aug|sep|okt|nov|dec)\.?/i,
                        wide: /^(januari|februari|mars|april|maj|juni|juli|augusti|september|oktober|november|december)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^maj/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[smtofl]/i,
                        short: /^(s\xf6|m\xe5|ti|on|to|fr|l\xf6)/i,
                        abbreviated: /^(s\xf6n|m\xe5n|tis|ons|tors|fre|l\xf6r)/i,
                        wide: /^(s\xf6ndag|m\xe5ndag|tisdag|onsdag|torsdag|fredag|l\xf6rdag)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^([fe]\.?\s?m\.?|midn(att)?|midd(ag)?|(p\xe5) (morgonen|eftermiddagen|kv\xe4llen|natten))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^f/i,
                            pm: /^e/i,
                            midnight: /^midn/i,
                            noon: /^midd/i,
                            morning: /morgon/i,
                            afternoon: /eftermiddag/i,
                            evening: /kv\xe4ll/i,
                            night: /natt/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Ro = {
            lessThanXSeconds: {
                one: {
                    default: "\u0b92\u0bb0\u0bc1 \u0bb5\u0bbf\u0ba9\u0bbe\u0b9f\u0bbf\u0b95\u0bcd\u0b95\u0bc1 \u0b95\u0bc1\u0bb1\u0bc8\u0bb5\u0bbe\u0b95",
                    in: "\u0b92\u0bb0\u0bc1 \u0bb5\u0bbf\u0ba9\u0bbe\u0b9f\u0bbf\u0b95\u0bcd\u0b95\u0bc1\u0bb3\u0bcd",
                    ago: "\u0b92\u0bb0\u0bc1 \u0bb5\u0bbf\u0ba9\u0bbe\u0b9f\u0bbf\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                },
                other: {
                    default: "{{count}} \u0bb5\u0bbf\u0ba9\u0bbe\u0b9f\u0bbf\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0b95\u0bc1\u0bb1\u0bc8\u0bb5\u0bbe\u0b95",
                    in: "{{count}} \u0bb5\u0bbf\u0ba9\u0bbe\u0b9f\u0bbf\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bb3\u0bcd",
                    ago: "{{count}} \u0bb5\u0bbf\u0ba9\u0bbe\u0b9f\u0bbf\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                }
            },
            xSeconds: {
                one: {
                    default: "1 \u0bb5\u0bbf\u0ba9\u0bbe\u0b9f\u0bbf",
                    in: "1 \u0bb5\u0bbf\u0ba9\u0bbe\u0b9f\u0bbf\u0baf\u0bbf\u0bb2\u0bcd",
                    ago: "1 \u0bb5\u0bbf\u0ba9\u0bbe\u0b9f\u0bbf \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                },
                other: {
                    default: "{{count}} \u0bb5\u0bbf\u0ba8\u0bbe\u0b9f\u0bbf\u0b95\u0bb3\u0bcd",
                    in: "{{count}} \u0bb5\u0bbf\u0ba9\u0bbe\u0b9f\u0bbf\u0b95\u0bb3\u0bbf\u0bb2\u0bcd",
                    ago: "{{count}} \u0bb5\u0bbf\u0ba8\u0bbe\u0b9f\u0bbf\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                }
            },
            halfAMinute: {
                default: "\u0b85\u0bb0\u0bc8 \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0bae\u0bcd",
                in: "\u0b85\u0bb0\u0bc8 \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0ba4\u0bcd\u0ba4\u0bbf\u0bb2\u0bcd",
                ago: "\u0b85\u0bb0\u0bc8 \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0bae\u0bcd \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
            },
            lessThanXMinutes: {
                one: {
                    default: "\u0b92\u0bb0\u0bc1 \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0ba4\u0bcd\u0ba4\u0bbf\u0bb1\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0b95\u0bc1\u0bb1\u0bc8\u0bb5\u0bbe\u0b95",
                    in: "\u0b92\u0bb0\u0bc1 \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0ba4\u0bcd\u0ba4\u0bbf\u0bb1\u0bcd\u0b95\u0bc1\u0bb3\u0bcd",
                    ago: "\u0b92\u0bb0\u0bc1 \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0ba4\u0bcd\u0ba4\u0bbf\u0bb1\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                },
                other: {
                    default: "{{count}} \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0b99\u0bcd\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0b95\u0bc1\u0bb1\u0bc8\u0bb5\u0bbe\u0b95",
                    in: "{{count}} \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0b99\u0bcd\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bb3\u0bcd",
                    ago: "{{count}} \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0b99\u0bcd\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                }
            },
            xMinutes: {
                one: {
                    default: "1 \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0bae\u0bcd",
                    in: "1 \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0ba4\u0bcd\u0ba4\u0bbf\u0bb2\u0bcd",
                    ago: "1 \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0bae\u0bcd \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                },
                other: {
                    default: "{{count}} \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0b99\u0bcd\u0b95\u0bb3\u0bcd",
                    in: "{{count}} \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0b99\u0bcd\u0b95\u0bb3\u0bbf\u0bb2\u0bcd",
                    ago: "{{count}} \u0ba8\u0bbf\u0bae\u0bbf\u0b9f\u0b99\u0bcd\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                }
            },
            aboutXHours: {
                one: {
                    default: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd 1 \u0bae\u0ba3\u0bbf \u0ba8\u0bc7\u0bb0\u0bae\u0bcd",
                    in: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd 1 \u0bae\u0ba3\u0bbf \u0ba8\u0bc7\u0bb0\u0ba4\u0bcd\u0ba4\u0bbf\u0bb2\u0bcd",
                    ago: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd 1 \u0bae\u0ba3\u0bbf \u0ba8\u0bc7\u0bb0\u0ba4\u0bcd\u0ba4\u0bbf\u0bb1\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                },
                other: {
                    default: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd {{count}} \u0bae\u0ba3\u0bbf \u0ba8\u0bc7\u0bb0\u0bae\u0bcd",
                    in: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd {{count}} \u0bae\u0ba3\u0bbf \u0ba8\u0bc7\u0bb0\u0ba4\u0bcd\u0ba4\u0bbf\u0bb1\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1",
                    ago: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd {{count}} \u0bae\u0ba3\u0bbf \u0ba8\u0bc7\u0bb0\u0ba4\u0bcd\u0ba4\u0bbf\u0bb2\u0bcd"
                }
            },
            xHours: {
                one: {
                    default: "1 \u0bae\u0ba3\u0bbf \u0ba8\u0bc7\u0bb0\u0bae\u0bcd",
                    in: "1 \u0bae\u0ba3\u0bbf \u0ba8\u0bc7\u0bb0\u0ba4\u0bcd\u0ba4\u0bbf\u0bb2\u0bcd",
                    ago: "1 \u0bae\u0ba3\u0bbf \u0ba8\u0bc7\u0bb0\u0ba4\u0bcd\u0ba4\u0bbf\u0bb1\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                },
                other: {
                    default: "{{count}} \u0bae\u0ba3\u0bbf \u0ba8\u0bc7\u0bb0\u0bae\u0bcd",
                    in: "{{count}} \u0bae\u0ba3\u0bbf \u0ba8\u0bc7\u0bb0\u0ba4\u0bcd\u0ba4\u0bbf\u0bb2\u0bcd",
                    ago: "{{count}} \u0bae\u0ba3\u0bbf \u0ba8\u0bc7\u0bb0\u0ba4\u0bcd\u0ba4\u0bbf\u0bb1\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                }
            },
            xDays: {
                one: {
                    default: "1 \u0ba8\u0bbe\u0bb3\u0bcd",
                    in: "1 \u0ba8\u0bbe\u0bb3\u0bbf\u0bb2\u0bcd",
                    ago: "1 \u0ba8\u0bbe\u0bb3\u0bcd \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                },
                other: {
                    default: "{{count}} \u0ba8\u0bbe\u0b9f\u0bcd\u0b95\u0bb3\u0bcd",
                    in: "{{count}} \u0ba8\u0bbe\u0b9f\u0bcd\u0b95\u0bb3\u0bbf\u0bb2\u0bcd",
                    ago: "{{count}} \u0ba8\u0bbe\u0b9f\u0bcd\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                }
            },
            aboutXWeeks: {
                one: {
                    default: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd 1 \u0bb5\u0bbe\u0bb0\u0bae\u0bcd",
                    in: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd 1 \u0bb5\u0bbe\u0bb0\u0ba4\u0bcd\u0ba4\u0bbf\u0bb2\u0bcd",
                    ago: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd 1 \u0bb5\u0bbe\u0bb0\u0bae\u0bcd \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                },
                other: {
                    default: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd {{count}} \u0bb5\u0bbe\u0bb0\u0b99\u0bcd\u0b95\u0bb3\u0bcd",
                    in: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd {{count}} \u0bb5\u0bbe\u0bb0\u0b99\u0bcd\u0b95\u0bb3\u0bbf\u0bb2\u0bcd",
                    ago: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd {{count}} \u0bb5\u0bbe\u0bb0\u0b99\u0bcd\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                }
            },
            xWeeks: {
                one: {
                    default: "1 \u0bb5\u0bbe\u0bb0\u0bae\u0bcd",
                    in: "1 \u0bb5\u0bbe\u0bb0\u0ba4\u0bcd\u0ba4\u0bbf\u0bb2\u0bcd",
                    ago: "1 \u0bb5\u0bbe\u0bb0\u0bae\u0bcd \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                },
                other: {
                    default: "{{count}} \u0bb5\u0bbe\u0bb0\u0b99\u0bcd\u0b95\u0bb3\u0bcd",
                    in: "{{count}} \u0bb5\u0bbe\u0bb0\u0b99\u0bcd\u0b95\u0bb3\u0bbf\u0bb2\u0bcd",
                    ago: "{{count}} \u0bb5\u0bbe\u0bb0\u0b99\u0bcd\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                }
            },
            aboutXMonths: {
                one: {
                    default: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd 1 \u0bae\u0bbe\u0ba4\u0bae\u0bcd",
                    in: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd 1 \u0bae\u0bbe\u0ba4\u0ba4\u0bcd\u0ba4\u0bbf\u0bb2\u0bcd",
                    ago: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd 1 \u0bae\u0bbe\u0ba4\u0ba4\u0bcd\u0ba4\u0bbf\u0bb1\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                },
                other: {
                    default: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd {{count}} \u0bae\u0bbe\u0ba4\u0b99\u0bcd\u0b95\u0bb3\u0bcd",
                    in: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd {{count}} \u0bae\u0bbe\u0ba4\u0b99\u0bcd\u0b95\u0bb3\u0bbf\u0bb2\u0bcd",
                    ago: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd {{count}} \u0bae\u0bbe\u0ba4\u0b99\u0bcd\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                }
            },
            xMonths: {
                one: {
                    default: "1 \u0bae\u0bbe\u0ba4\u0bae\u0bcd",
                    in: "1 \u0bae\u0bbe\u0ba4\u0ba4\u0bcd\u0ba4\u0bbf\u0bb2\u0bcd",
                    ago: "1 \u0bae\u0bbe\u0ba4\u0bae\u0bcd \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                },
                other: {
                    default: "{{count}} \u0bae\u0bbe\u0ba4\u0b99\u0bcd\u0b95\u0bb3\u0bcd",
                    in: "{{count}} \u0bae\u0bbe\u0ba4\u0b99\u0bcd\u0b95\u0bb3\u0bbf\u0bb2\u0bcd",
                    ago: "{{count}} \u0bae\u0bbe\u0ba4\u0b99\u0bcd\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                }
            },
            aboutXYears: {
                one: {
                    default: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd 1 \u0bb5\u0bb0\u0bc1\u0b9f\u0bae\u0bcd",
                    in: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd 1 \u0b86\u0ba3\u0bcd\u0b9f\u0bbf\u0bb2\u0bcd",
                    ago: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd 1 \u0bb5\u0bb0\u0bc1\u0b9f\u0bae\u0bcd \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                },
                other: {
                    default: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd {{count}} \u0b86\u0ba3\u0bcd\u0b9f\u0bc1\u0b95\u0bb3\u0bcd",
                    in: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd {{count}} \u0b86\u0ba3\u0bcd\u0b9f\u0bc1\u0b95\u0bb3\u0bbf\u0bb2\u0bcd",
                    ago: "\u0b9a\u0bc1\u0bae\u0bbe\u0bb0\u0bcd {{count}} \u0b86\u0ba3\u0bcd\u0b9f\u0bc1\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                }
            },
            xYears: {
                one: {
                    default: "1 \u0bb5\u0bb0\u0bc1\u0b9f\u0bae\u0bcd",
                    in: "1 \u0b86\u0ba3\u0bcd\u0b9f\u0bbf\u0bb2\u0bcd",
                    ago: "1 \u0bb5\u0bb0\u0bc1\u0b9f\u0bae\u0bcd \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                },
                other: {
                    default: "{{count}} \u0b86\u0ba3\u0bcd\u0b9f\u0bc1\u0b95\u0bb3\u0bcd",
                    in: "{{count}} \u0b86\u0ba3\u0bcd\u0b9f\u0bc1\u0b95\u0bb3\u0bbf\u0bb2\u0bcd",
                    ago: "{{count}} \u0b86\u0ba3\u0bcd\u0b9f\u0bc1\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                }
            },
            overXYears: {
                one: {
                    default: "1 \u0bb5\u0bb0\u0bc1\u0b9f\u0ba4\u0bcd\u0ba4\u0bbf\u0bb1\u0bcd\u0b95\u0bc1 \u0bae\u0bc7\u0bb2\u0bcd",
                    in: "1 \u0bb5\u0bb0\u0bc1\u0b9f\u0ba4\u0bcd\u0ba4\u0bbf\u0bb1\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0bae\u0bc7\u0bb2\u0bbe\u0b95",
                    ago: "1 \u0bb5\u0bb0\u0bc1\u0b9f\u0bae\u0bcd \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                },
                other: {
                    default: "{{count}} \u0b86\u0ba3\u0bcd\u0b9f\u0bc1\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0bae\u0bc7\u0bb2\u0bbe\u0b95",
                    in: "{{count}} \u0b86\u0ba3\u0bcd\u0b9f\u0bc1\u0b95\u0bb3\u0bbf\u0bb2\u0bcd",
                    ago: "{{count}} \u0b86\u0ba3\u0bcd\u0b9f\u0bc1\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                }
            },
            almostXYears: {
                one: {
                    default: "\u0b95\u0bbf\u0b9f\u0bcd\u0b9f\u0ba4\u0bcd\u0ba4\u0b9f\u0bcd\u0b9f 1 \u0bb5\u0bb0\u0bc1\u0b9f\u0bae\u0bcd",
                    in: "\u0b95\u0bbf\u0b9f\u0bcd\u0b9f\u0ba4\u0bcd\u0ba4\u0b9f\u0bcd\u0b9f 1 \u0b86\u0ba3\u0bcd\u0b9f\u0bbf\u0bb2\u0bcd",
                    ago: "\u0b95\u0bbf\u0b9f\u0bcd\u0b9f\u0ba4\u0bcd\u0ba4\u0b9f\u0bcd\u0b9f 1 \u0bb5\u0bb0\u0bc1\u0b9f\u0bae\u0bcd \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                },
                other: {
                    default: "\u0b95\u0bbf\u0b9f\u0bcd\u0b9f\u0ba4\u0bcd\u0ba4\u0b9f\u0bcd\u0b9f {{count}} \u0b86\u0ba3\u0bcd\u0b9f\u0bc1\u0b95\u0bb3\u0bcd",
                    in: "\u0b95\u0bbf\u0b9f\u0bcd\u0b9f\u0ba4\u0bcd\u0ba4\u0b9f\u0bcd\u0b9f {{count}} \u0b86\u0ba3\u0bcd\u0b9f\u0bc1\u0b95\u0bb3\u0bbf\u0bb2\u0bcd",
                    ago: "\u0b95\u0bbf\u0b9f\u0bcd\u0b9f\u0ba4\u0bcd\u0ba4\u0b9f\u0bcd\u0b9f {{count}} \u0b86\u0ba3\u0bcd\u0b9f\u0bc1\u0b95\u0bb3\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd\u0baa\u0bc1"
                }
            }
        }
          , Lo = {
            date: r({
                formats: {
                    full: "EEEE, d MMMM, y",
                    long: "d MMMM, y",
                    medium: "d MMM, y",
                    short: "d/M/yy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "a h:mm:ss zzzz",
                    long: "a h:mm:ss z",
                    medium: "a h:mm:ss",
                    short: "a h:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Fo = {
            lastWeek: "'\u0b95\u0b9f\u0ba8\u0bcd\u0ba4' eeee p '\u0bae\u0ba3\u0bbf\u0b95\u0bcd\u0b95\u0bc1'",
            yesterday: "'\u0ba8\u0bc7\u0bb1\u0bcd\u0bb1\u0bc1 ' p '\u0bae\u0ba3\u0bbf\u0b95\u0bcd\u0b95\u0bc1'",
            today: "'\u0b87\u0ba9\u0bcd\u0bb1\u0bc1 ' p '\u0bae\u0ba3\u0bbf\u0b95\u0bcd\u0b95\u0bc1'",
            tomorrow: "'\u0ba8\u0bbe\u0bb3\u0bc8 ' p '\u0bae\u0ba3\u0bbf\u0b95\u0bcd\u0b95\u0bc1'",
            nextWeek: "eeee p '\u0bae\u0ba3\u0bbf\u0b95\u0bcd\u0b95\u0bc1'",
            other: "P"
        }
          , qo = {
            code: "ta",
            formatDistance: (e,t,n)=>{
                const a = n?.addSuffix ? n.comparison && n.comparison > 0 ? "in" : "ago" : "default"
                  , r = Ro[e];
                return void 0 === r.one ? r[a] : 1 === t ? r.one[a] : r.other[a].replace("{{count}}", String(t))
            }
            ,
            formatLong: Lo,
            formatRelative: (e,t,n,a)=>Fo[e],
            localize: {
                ordinalNumber: (e,t)=>String(e),
                era: s({
                    values: {
                        narrow: ["\u0b95\u0bbf.\u0bae\u0bc1.", "\u0b95\u0bbf.\u0baa\u0bbf."],
                        abbreviated: ["\u0b95\u0bbf.\u0bae\u0bc1.", "\u0b95\u0bbf.\u0baa\u0bbf."],
                        wide: ["\u0b95\u0bbf\u0bb1\u0bbf\u0bb8\u0bcd\u0ba4\u0bc1\u0bb5\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd", "\u0b85\u0ba9\u0bcd\u0ba9\u0bcb \u0b9f\u0bcb\u0bae\u0bbf\u0ba9\u0bbf"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u0b95\u0bbe\u0bb2\u0bbe.1", "\u0b95\u0bbe\u0bb2\u0bbe.2", "\u0b95\u0bbe\u0bb2\u0bbe.3", "\u0b95\u0bbe\u0bb2\u0bbe.4"],
                        wide: ["\u0b92\u0ba9\u0bcd\u0bb1\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0b87\u0bb0\u0ba3\u0bcd\u0b9f\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0bae\u0bc2\u0ba9\u0bcd\u0bb1\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0ba8\u0bbe\u0ba9\u0bcd\u0b95\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u0b9c", "\u0baa\u0bbf", "\u0bae\u0bbe", "\u0b8f", "\u0bae\u0bc7", "\u0b9c\u0bc2", "\u0b9c\u0bc2", "\u0b86", "\u0b9a\u0bc6", "\u0b85", "\u0ba8", "\u0b9f\u0bbf"],
                        abbreviated: ["\u0b9c\u0ba9.", "\u0baa\u0bbf\u0baa\u0bcd.", "\u0bae\u0bbe\u0bb0\u0bcd.", "\u0b8f\u0baa\u0bcd.", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95.", "\u0b9a\u0bc6\u0baa\u0bcd.", "\u0b85\u0b95\u0bcd.", "\u0ba8\u0bb5.", "\u0b9f\u0bbf\u0b9a."],
                        wide: ["\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf", "\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf", "\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd", "\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bcd", "\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd", "\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"],
                        short: ["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"],
                        abbreviated: ["\u0b9e\u0bbe\u0baf\u0bbf.", "\u0ba4\u0bbf\u0b99\u0bcd.", "\u0b9a\u0bc6\u0bb5\u0bcd.", "\u0baa\u0bc1\u0ba4.", "\u0bb5\u0bbf\u0baf\u0bbe.", "\u0bb5\u0bc6\u0bb3\u0bcd.", "\u0b9a\u0ba9\u0bbf"],
                        wide: ["\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1", "\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd", "\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd", "\u0baa\u0bc1\u0ba4\u0ba9\u0bcd", "\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd", "\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf", "\u0b9a\u0ba9\u0bbf"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0bae\u0bc1.\u0baa",
                            pm: "\u0baa\u0bbf.\u0baa",
                            midnight: "\u0ba8\u0bb3\u0bcd.",
                            noon: "\u0ba8\u0ba3\u0bcd.",
                            morning: "\u0b95\u0bbe.",
                            afternoon: "\u0bae\u0ba4\u0bbf.",
                            evening: "\u0bae\u0bbe.",
                            night: "\u0b87\u0bb0."
                        },
                        abbreviated: {
                            am: "\u0bae\u0bc1\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd",
                            pm: "\u0baa\u0bbf\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd",
                            midnight: "\u0ba8\u0bb3\u0bcd\u0bb3\u0bbf\u0bb0\u0bb5\u0bc1",
                            noon: "\u0ba8\u0ba3\u0bcd\u0baa\u0b95\u0bb2\u0bcd",
                            morning: "\u0b95\u0bbe\u0bb2\u0bc8",
                            afternoon: "\u0bae\u0ba4\u0bbf\u0baf\u0bae\u0bcd",
                            evening: "\u0bae\u0bbe\u0bb2\u0bc8",
                            night: "\u0b87\u0bb0\u0bb5\u0bc1"
                        },
                        wide: {
                            am: "\u0bae\u0bc1\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd",
                            pm: "\u0baa\u0bbf\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd",
                            midnight: "\u0ba8\u0bb3\u0bcd\u0bb3\u0bbf\u0bb0\u0bb5\u0bc1",
                            noon: "\u0ba8\u0ba3\u0bcd\u0baa\u0b95\u0bb2\u0bcd",
                            morning: "\u0b95\u0bbe\u0bb2\u0bc8",
                            afternoon: "\u0bae\u0ba4\u0bbf\u0baf\u0bae\u0bcd",
                            evening: "\u0bae\u0bbe\u0bb2\u0bc8",
                            night: "\u0b87\u0bb0\u0bb5\u0bc1"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u0bae\u0bc1.\u0baa",
                            pm: "\u0baa\u0bbf.\u0baa",
                            midnight: "\u0ba8\u0bb3\u0bcd.",
                            noon: "\u0ba8\u0ba3\u0bcd.",
                            morning: "\u0b95\u0bbe.",
                            afternoon: "\u0bae\u0ba4\u0bbf.",
                            evening: "\u0bae\u0bbe.",
                            night: "\u0b87\u0bb0."
                        },
                        abbreviated: {
                            am: "\u0bae\u0bc1\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd",
                            pm: "\u0baa\u0bbf\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd",
                            midnight: "\u0ba8\u0bb3\u0bcd\u0bb3\u0bbf\u0bb0\u0bb5\u0bc1",
                            noon: "\u0ba8\u0ba3\u0bcd\u0baa\u0b95\u0bb2\u0bcd",
                            morning: "\u0b95\u0bbe\u0bb2\u0bc8",
                            afternoon: "\u0bae\u0ba4\u0bbf\u0baf\u0bae\u0bcd",
                            evening: "\u0bae\u0bbe\u0bb2\u0bc8",
                            night: "\u0b87\u0bb0\u0bb5\u0bc1"
                        },
                        wide: {
                            am: "\u0bae\u0bc1\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd",
                            pm: "\u0baa\u0bbf\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd",
                            midnight: "\u0ba8\u0bb3\u0bcd\u0bb3\u0bbf\u0bb0\u0bb5\u0bc1",
                            noon: "\u0ba8\u0ba3\u0bcd\u0baa\u0b95\u0bb2\u0bcd",
                            morning: "\u0b95\u0bbe\u0bb2\u0bc8",
                            afternoon: "\u0bae\u0ba4\u0bbf\u0baf\u0bae\u0bcd",
                            evening: "\u0bae\u0bbe\u0bb2\u0bc8",
                            night: "\u0b87\u0bb0\u0bb5\u0bc1"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\u0bb5\u0ba4\u0bc1)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u0b95\u0bbf.\u0bae\u0bc1.|\u0b95\u0bbf.\u0baa\u0bbf.)/i,
                        abbreviated: /^(\u0b95\u0bbf\.?\s?\u0bae\u0bc1\.?|\u0b95\u0bbf\.?\s?\u0baa\u0bbf\.?)/,
                        wide: /^(\u0b95\u0bbf\u0bb1\u0bbf\u0bb8\u0bcd\u0ba4\u0bc1\u0bb5\u0bc1\u0b95\u0bcd\u0b95\u0bc1\s\u0bae\u0bc1\u0ba9\u0bcd|\u0b85\u0ba9\u0bcd\u0ba9\u0bcb\s\u0b9f\u0bcb\u0bae\u0bbf\u0ba9\u0bbf)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/\u0b95\u0bbf\.?\s?\u0bae\u0bc1\.?/, /\u0b95\u0bbf\.?\s?\u0baa\u0bbf\.?/]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^\u0b95\u0bbe\u0bb2\u0bbe.[1234]/i,
                        wide: /^(\u0b92\u0ba9\u0bcd\u0bb1\u0bbe\u0bae\u0bcd|\u0b87\u0bb0\u0ba3\u0bcd\u0b9f\u0bbe\u0bae\u0bcd|\u0bae\u0bc2\u0ba9\u0bcd\u0bb1\u0bbe\u0bae\u0bcd|\u0ba8\u0bbe\u0ba9\u0bcd\u0b95\u0bbe\u0bae\u0bcd) \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/1/i, /2/i, /3/i, /4/i],
                        any: [/(1|\u0b95\u0bbe\u0bb2\u0bbe.1|\u0b92\u0ba9\u0bcd\u0bb1\u0bbe\u0bae\u0bcd)/i, /(2|\u0b95\u0bbe\u0bb2\u0bbe.2|\u0b87\u0bb0\u0ba3\u0bcd\u0b9f\u0bbe\u0bae\u0bcd)/i, /(3|\u0b95\u0bbe\u0bb2\u0bbe.3|\u0bae\u0bc2\u0ba9\u0bcd\u0bb1\u0bbe\u0bae\u0bcd)/i, /(4|\u0b95\u0bbe\u0bb2\u0bbe.4|\u0ba8\u0bbe\u0ba9\u0bcd\u0b95\u0bbe\u0bae\u0bcd)/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(\u0b9c|\u0baa\u0bbf|\u0bae\u0bbe|\u0b8f|\u0bae\u0bc7|\u0b9c\u0bc2|\u0b86|\u0b9a\u0bc6|\u0b85|\u0ba8|\u0b9f\u0bbf)$/i,
                        abbreviated: /^(\u0b9c\u0ba9.|\u0baa\u0bbf\u0baa\u0bcd.|\u0bae\u0bbe\u0bb0\u0bcd.|\u0b8f\u0baa\u0bcd.|\u0bae\u0bc7|\u0b9c\u0bc2\u0ba9\u0bcd|\u0b9c\u0bc2\u0bb2\u0bc8|\u0b86\u0b95.|\u0b9a\u0bc6\u0baa\u0bcd.|\u0b85\u0b95\u0bcd.|\u0ba8\u0bb5.|\u0b9f\u0bbf\u0b9a.)/i,
                        wide: /^(\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf|\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf|\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd|\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd|\u0bae\u0bc7|\u0b9c\u0bc2\u0ba9\u0bcd|\u0b9c\u0bc2\u0bb2\u0bc8|\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bcd|\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd|\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd|\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd|\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0b9c$/i, /^\u0baa\u0bbf/i, /^\u0bae\u0bbe/i, /^\u0b8f/i, /^\u0bae\u0bc7/i, /^\u0b9c\u0bc2/i, /^\u0b9c\u0bc2/i, /^\u0b86/i, /^\u0b9a\u0bc6/i, /^\u0b85/i, /^\u0ba8/i, /^\u0b9f\u0bbf/i],
                        any: [/^\u0b9c\u0ba9/i, /^\u0baa\u0bbf/i, /^\u0bae\u0bbe/i, /^\u0b8f/i, /^\u0bae\u0bc7/i, /^\u0b9c\u0bc2\u0ba9\u0bcd/i, /^\u0b9c\u0bc2\u0bb2\u0bc8/i, /^\u0b86/i, /^\u0b9a\u0bc6/i, /^\u0b85/i, /^\u0ba8/i, /^\u0b9f\u0bbf/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(\u0b9e\u0bbe|\u0ba4\u0bbf|\u0b9a\u0bc6|\u0baa\u0bc1|\u0bb5\u0bbf|\u0bb5\u0bc6|\u0b9a)/i,
                        short: /^(\u0b9e\u0bbe|\u0ba4\u0bbf|\u0b9a\u0bc6|\u0baa\u0bc1|\u0bb5\u0bbf|\u0bb5\u0bc6|\u0b9a)/i,
                        abbreviated: /^(\u0b9e\u0bbe\u0baf\u0bbf.|\u0ba4\u0bbf\u0b99\u0bcd.|\u0b9a\u0bc6\u0bb5\u0bcd.|\u0baa\u0bc1\u0ba4.|\u0bb5\u0bbf\u0baf\u0bbe.|\u0bb5\u0bc6\u0bb3\u0bcd.|\u0b9a\u0ba9\u0bbf)/i,
                        wide: /^(\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1|\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd|\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd|\u0baa\u0bc1\u0ba4\u0ba9\u0bcd|\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd|\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf|\u0b9a\u0ba9\u0bbf)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0b9e\u0bbe/i, /^\u0ba4\u0bbf/i, /^\u0b9a\u0bc6/i, /^\u0baa\u0bc1/i, /^\u0bb5\u0bbf/i, /^\u0bb5\u0bc6/i, /^\u0b9a/i],
                        any: [/^\u0b9e\u0bbe/i, /^\u0ba4\u0bbf/i, /^\u0b9a\u0bc6/i, /^\u0baa\u0bc1/i, /^\u0bb5\u0bbf/i, /^\u0bb5\u0bc6/i, /^\u0b9a/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(\u0bae\u0bc1.\u0baa|\u0baa\u0bbf.\u0baa|\u0ba8\u0bb3\u0bcd|\u0ba8\u0ba3\u0bcd|\u0b95\u0bbe\u0bb2\u0bc8|\u0bae\u0ba4\u0bbf\u0baf\u0bae\u0bcd|\u0bae\u0bbe\u0bb2\u0bc8|\u0b87\u0bb0\u0bb5\u0bc1)/i,
                        any: /^(\u0bae\u0bc1.\u0baa|\u0baa\u0bbf.\u0baa|\u0bae\u0bc1\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd|\u0baa\u0bbf\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd|\u0ba8\u0bb3\u0bcd\u0bb3\u0bbf\u0bb0\u0bb5\u0bc1|\u0ba8\u0ba3\u0bcd\u0baa\u0b95\u0bb2\u0bcd|\u0b95\u0bbe\u0bb2\u0bc8|\u0bae\u0ba4\u0bbf\u0baf\u0bae\u0bcd|\u0bae\u0bbe\u0bb2\u0bc8|\u0b87\u0bb0\u0bb5\u0bc1)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u0bae\u0bc1/i,
                            pm: /^\u0baa\u0bbf/i,
                            midnight: /^\u0ba8\u0bb3\u0bcd/i,
                            noon: /^\u0ba8\u0ba3\u0bcd/i,
                            morning: /\u0b95\u0bbe\u0bb2\u0bc8/i,
                            afternoon: /\u0bae\u0ba4\u0bbf\u0baf\u0bae\u0bcd/i,
                            evening: /\u0bae\u0bbe\u0bb2\u0bc8/i,
                            night: /\u0b87\u0bb0\u0bb5\u0bc1/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Go = {
            lessThanXSeconds: {
                standalone: {
                    one: "\u0c38\u0c46\u0c15\u0c28\u0c41 \u0c15\u0c28\u0c4d\u0c28\u0c3e \u0c24\u0c15\u0c4d\u0c15\u0c41\u0c35",
                    other: "{{count}} \u0c38\u0c46\u0c15\u0c28\u0c4d\u0c32 \u0c15\u0c28\u0c4d\u0c28\u0c3e \u0c24\u0c15\u0c4d\u0c15\u0c41\u0c35"
                },
                withPreposition: {
                    one: "\u0c38\u0c46\u0c15\u0c28\u0c41",
                    other: "{{count}} \u0c38\u0c46\u0c15\u0c28\u0c4d\u0c32"
                }
            },
            xSeconds: {
                standalone: {
                    one: "\u0c12\u0c15 \u0c38\u0c46\u0c15\u0c28\u0c41",
                    other: "{{count}} \u0c38\u0c46\u0c15\u0c28\u0c4d\u0c32"
                },
                withPreposition: {
                    one: "\u0c12\u0c15 \u0c38\u0c46\u0c15\u0c28\u0c41",
                    other: "{{count}} \u0c38\u0c46\u0c15\u0c28\u0c4d\u0c32"
                }
            },
            halfAMinute: {
                standalone: "\u0c05\u0c30 \u0c28\u0c3f\u0c2e\u0c3f\u0c37\u0c02",
                withPreposition: "\u0c05\u0c30 \u0c28\u0c3f\u0c2e\u0c3f\u0c37\u0c02"
            },
            lessThanXMinutes: {
                standalone: {
                    one: "\u0c12\u0c15 \u0c28\u0c3f\u0c2e\u0c3f\u0c37\u0c02 \u0c15\u0c28\u0c4d\u0c28\u0c3e \u0c24\u0c15\u0c4d\u0c15\u0c41\u0c35",
                    other: "{{count}} \u0c28\u0c3f\u0c2e\u0c3f\u0c37\u0c3e\u0c32 \u0c15\u0c28\u0c4d\u0c28\u0c3e \u0c24\u0c15\u0c4d\u0c15\u0c41\u0c35"
                },
                withPreposition: {
                    one: "\u0c12\u0c15 \u0c28\u0c3f\u0c2e\u0c3f\u0c37\u0c02",
                    other: "{{count}} \u0c28\u0c3f\u0c2e\u0c3f\u0c37\u0c3e\u0c32"
                }
            },
            xMinutes: {
                standalone: {
                    one: "\u0c12\u0c15 \u0c28\u0c3f\u0c2e\u0c3f\u0c37\u0c02",
                    other: "{{count}} \u0c28\u0c3f\u0c2e\u0c3f\u0c37\u0c3e\u0c32\u0c41"
                },
                withPreposition: {
                    one: "\u0c12\u0c15 \u0c28\u0c3f\u0c2e\u0c3f\u0c37\u0c02",
                    other: "{{count}} \u0c28\u0c3f\u0c2e\u0c3f\u0c37\u0c3e\u0c32"
                }
            },
            aboutXHours: {
                standalone: {
                    one: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 \u0c12\u0c15 \u0c17\u0c02\u0c1f",
                    other: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 {{count}} \u0c17\u0c02\u0c1f\u0c32\u0c41"
                },
                withPreposition: {
                    one: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 \u0c12\u0c15 \u0c17\u0c02\u0c1f",
                    other: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 {{count}} \u0c17\u0c02\u0c1f\u0c32"
                }
            },
            xHours: {
                standalone: {
                    one: "\u0c12\u0c15 \u0c17\u0c02\u0c1f",
                    other: "{{count}} \u0c17\u0c02\u0c1f\u0c32\u0c41"
                },
                withPreposition: {
                    one: "\u0c12\u0c15 \u0c17\u0c02\u0c1f",
                    other: "{{count}} \u0c17\u0c02\u0c1f\u0c32"
                }
            },
            xDays: {
                standalone: {
                    one: "\u0c12\u0c15 \u0c30\u0c4b\u0c1c\u0c41",
                    other: "{{count}} \u0c30\u0c4b\u0c1c\u0c41\u0c32\u0c41"
                },
                withPreposition: {
                    one: "\u0c12\u0c15 \u0c30\u0c4b\u0c1c\u0c41",
                    other: "{{count}} \u0c30\u0c4b\u0c1c\u0c41\u0c32"
                }
            },
            aboutXWeeks: {
                standalone: {
                    one: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 \u0c12\u0c15 \u0c35\u0c3e\u0c30\u0c02",
                    other: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 {{count}} \u0c35\u0c3e\u0c30\u0c3e\u0c32\u0c41"
                },
                withPreposition: {
                    one: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 \u0c12\u0c15 \u0c35\u0c3e\u0c30\u0c02",
                    other: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 {{count}} \u0c35\u0c3e\u0c30\u0c3e\u0c32\u0c32"
                }
            },
            xWeeks: {
                standalone: {
                    one: "\u0c12\u0c15 \u0c35\u0c3e\u0c30\u0c02",
                    other: "{{count}} \u0c35\u0c3e\u0c30\u0c3e\u0c32\u0c41"
                },
                withPreposition: {
                    one: "\u0c12\u0c15 \u0c35\u0c3e\u0c30\u0c02",
                    other: "{{count}} \u0c35\u0c3e\u0c30\u0c3e\u0c32\u0c32"
                }
            },
            aboutXMonths: {
                standalone: {
                    one: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 \u0c12\u0c15 \u0c28\u0c46\u0c32",
                    other: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 {{count}} \u0c28\u0c46\u0c32\u0c32\u0c41"
                },
                withPreposition: {
                    one: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 \u0c12\u0c15 \u0c28\u0c46\u0c32",
                    other: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 {{count}} \u0c28\u0c46\u0c32\u0c32"
                }
            },
            xMonths: {
                standalone: {
                    one: "\u0c12\u0c15 \u0c28\u0c46\u0c32",
                    other: "{{count}} \u0c28\u0c46\u0c32\u0c32\u0c41"
                },
                withPreposition: {
                    one: "\u0c12\u0c15 \u0c28\u0c46\u0c32",
                    other: "{{count}} \u0c28\u0c46\u0c32\u0c32"
                }
            },
            aboutXYears: {
                standalone: {
                    one: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 \u0c12\u0c15 \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c02",
                    other: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 {{count}} \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c3e\u0c32\u0c41"
                },
                withPreposition: {
                    one: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 \u0c12\u0c15 \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c02",
                    other: "\u0c38\u0c41\u0c2e\u0c3e\u0c30\u0c41 {{count}} \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c3e\u0c32"
                }
            },
            xYears: {
                standalone: {
                    one: "\u0c12\u0c15 \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c02",
                    other: "{{count}} \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c3e\u0c32\u0c41"
                },
                withPreposition: {
                    one: "\u0c12\u0c15 \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c02",
                    other: "{{count}} \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c3e\u0c32"
                }
            },
            overXYears: {
                standalone: {
                    one: "\u0c12\u0c15 \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c02 \u0c2a\u0c48\u0c17\u0c3e",
                    other: "{{count}} \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c3e\u0c32\u0c15\u0c41 \u0c2a\u0c48\u0c17\u0c3e"
                },
                withPreposition: {
                    one: "\u0c12\u0c15 \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c02",
                    other: "{{count}} \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c3e\u0c32"
                }
            },
            almostXYears: {
                standalone: {
                    one: "\u0c26\u0c3e\u0c26\u0c3e\u0c2a\u0c41 \u0c12\u0c15 \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c02",
                    other: "\u0c26\u0c3e\u0c26\u0c3e\u0c2a\u0c41 {{count}} \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c3e\u0c32\u0c41"
                },
                withPreposition: {
                    one: "\u0c26\u0c3e\u0c26\u0c3e\u0c2a\u0c41 \u0c12\u0c15 \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c02",
                    other: "\u0c26\u0c3e\u0c26\u0c3e\u0c2a\u0c41 {{count}} \u0c38\u0c02\u0c35\u0c24\u0c4d\u0c38\u0c30\u0c3e\u0c32"
                }
            }
        }
          , Ko = {
            date: r({
                formats: {
                    full: "d, MMMM y, EEEE",
                    long: "d MMMM, y",
                    medium: "d MMM, y",
                    short: "dd-MM-yy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}'\u0c15\u0c3f'",
                    long: "{{date}} {{time}}'\u0c15\u0c3f'",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Vo = {
            lastWeek: "'\u0c17\u0c24' eeee p",
            yesterday: "'\u0c28\u0c3f\u0c28\u0c4d\u0c28' p",
            today: "'\u0c08 \u0c30\u0c4b\u0c1c\u0c41' p",
            tomorrow: "'\u0c30\u0c47\u0c2a\u0c41' p",
            nextWeek: "'\u0c24\u0c26\u0c41\u0c2a\u0c30\u0c3f' eeee p",
            other: "P"
        }
          , $o = {
            code: "te",
            formatDistance: (e,t,n)=>{
                let a;
                const r = n?.addSuffix ? Go[e].withPreposition : Go[e].standalone;
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? a + "\u0c32\u0c4b" : a + " \u0c15\u0c4d\u0c30\u0c3f\u0c24\u0c02" : a
            }
            ,
            formatLong: Ko,
            formatRelative: (e,t,n,a)=>Vo[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + "\u0c35",
                era: s({
                    values: {
                        narrow: ["\u0c15\u0c4d\u0c30\u0c40.\u0c2a\u0c42.", "\u0c15\u0c4d\u0c30\u0c40.\u0c36."],
                        abbreviated: ["\u0c15\u0c4d\u0c30\u0c40.\u0c2a\u0c42.", "\u0c15\u0c4d\u0c30\u0c40.\u0c36."],
                        wide: ["\u0c15\u0c4d\u0c30\u0c40\u0c38\u0c4d\u0c24\u0c41 \u0c2a\u0c42\u0c30\u0c4d\u0c35\u0c02", "\u0c15\u0c4d\u0c30\u0c40\u0c38\u0c4d\u0c24\u0c41\u0c36\u0c15\u0c02"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u0c24\u0c4d\u0c30\u0c481", "\u0c24\u0c4d\u0c30\u0c482", "\u0c24\u0c4d\u0c30\u0c483", "\u0c24\u0c4d\u0c30\u0c484"],
                        wide: ["1\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c3f\u0c15\u0c02", "2\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c3f\u0c15\u0c02", "3\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c3f\u0c15\u0c02", "4\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c3f\u0c15\u0c02"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u0c1c", "\u0c2b\u0c3f", "\u0c2e\u0c3e", "\u0c0f", "\u0c2e\u0c47", "\u0c1c\u0c42", "\u0c1c\u0c41", "\u0c06", "\u0c38\u0c46", "\u0c05", "\u0c28", "\u0c21\u0c3f"],
                        abbreviated: ["\u0c1c\u0c28", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0f\u0c2a\u0c4d\u0c30\u0c3f", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b", "\u0c28\u0c35\u0c02", "\u0c21\u0c3f\u0c38\u0c46\u0c02"],
                        wide: ["\u0c1c\u0c28\u0c35\u0c30\u0c3f", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0f\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", "\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", "\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u0c06", "\u0c38\u0c4b", "\u0c2e", "\u0c2c\u0c41", "\u0c17\u0c41", "\u0c36\u0c41", "\u0c36"],
                        short: ["\u0c06\u0c26\u0c3f", "\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", "\u0c36\u0c28\u0c3f"],
                        abbreviated: ["\u0c06\u0c26\u0c3f", "\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", "\u0c36\u0c28\u0c3f"],
                        wide: ["\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02", "\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02", "\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02", "\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02", "\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0c2a\u0c42\u0c30\u0c4d\u0c35\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            pm: "\u0c05\u0c2a\u0c30\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            midnight: "\u0c05\u0c30\u0c4d\u0c27\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f",
                            noon: "\u0c2e\u0c3f\u0c1f\u0c4d\u0c1f\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            morning: "\u0c09\u0c26\u0c2f\u0c02",
                            afternoon: "\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            evening: "\u0c38\u0c3e\u0c2f\u0c02\u0c24\u0c4d\u0c30\u0c02",
                            night: "\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f"
                        },
                        abbreviated: {
                            am: "\u0c2a\u0c42\u0c30\u0c4d\u0c35\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            pm: "\u0c05\u0c2a\u0c30\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            midnight: "\u0c05\u0c30\u0c4d\u0c27\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f",
                            noon: "\u0c2e\u0c3f\u0c1f\u0c4d\u0c1f\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            morning: "\u0c09\u0c26\u0c2f\u0c02",
                            afternoon: "\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            evening: "\u0c38\u0c3e\u0c2f\u0c02\u0c24\u0c4d\u0c30\u0c02",
                            night: "\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f"
                        },
                        wide: {
                            am: "\u0c2a\u0c42\u0c30\u0c4d\u0c35\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            pm: "\u0c05\u0c2a\u0c30\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            midnight: "\u0c05\u0c30\u0c4d\u0c27\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f",
                            noon: "\u0c2e\u0c3f\u0c1f\u0c4d\u0c1f\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            morning: "\u0c09\u0c26\u0c2f\u0c02",
                            afternoon: "\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            evening: "\u0c38\u0c3e\u0c2f\u0c02\u0c24\u0c4d\u0c30\u0c02",
                            night: "\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u0c2a\u0c42\u0c30\u0c4d\u0c35\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            pm: "\u0c05\u0c2a\u0c30\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            midnight: "\u0c05\u0c30\u0c4d\u0c27\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f",
                            noon: "\u0c2e\u0c3f\u0c1f\u0c4d\u0c1f\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            morning: "\u0c09\u0c26\u0c2f\u0c02",
                            afternoon: "\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            evening: "\u0c38\u0c3e\u0c2f\u0c02\u0c24\u0c4d\u0c30\u0c02",
                            night: "\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f"
                        },
                        abbreviated: {
                            am: "\u0c2a\u0c42\u0c30\u0c4d\u0c35\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            pm: "\u0c05\u0c2a\u0c30\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            midnight: "\u0c05\u0c30\u0c4d\u0c27\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f",
                            noon: "\u0c2e\u0c3f\u0c1f\u0c4d\u0c1f\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            morning: "\u0c09\u0c26\u0c2f\u0c02",
                            afternoon: "\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            evening: "\u0c38\u0c3e\u0c2f\u0c02\u0c24\u0c4d\u0c30\u0c02",
                            night: "\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f"
                        },
                        wide: {
                            am: "\u0c2a\u0c42\u0c30\u0c4d\u0c35\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            pm: "\u0c05\u0c2a\u0c30\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            midnight: "\u0c05\u0c30\u0c4d\u0c27\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f",
                            noon: "\u0c2e\u0c3f\u0c1f\u0c4d\u0c1f\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            morning: "\u0c09\u0c26\u0c2f\u0c02",
                            afternoon: "\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02",
                            evening: "\u0c38\u0c3e\u0c2f\u0c02\u0c24\u0c4d\u0c30\u0c02",
                            night: "\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\u0c35)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u0c15\u0c4d\u0c30\u0c40\.\u0c2a\u0c42\.|\u0c15\u0c4d\u0c30\u0c40\.\u0c36\.)/i,
                        abbreviated: /^(\u0c15\u0c4d\u0c30\u0c40\.?\s?\u0c2a\u0c42\.?|\u0c2a\u0c4d\u0c30\.?\s?\u0c36\.?\s?\u0c2a\u0c42\.?|\u0c15\u0c4d\u0c30\u0c40\.?\s?\u0c36\.?|\u0c38\u0c3e\.?\s?\u0c36\.?)/i,
                        wide: /^(\u0c15\u0c4d\u0c30\u0c40\u0c38\u0c4d\u0c24\u0c41 \u0c2a\u0c42\u0c30\u0c4d\u0c35\u0c02|\u0c2a\u0c4d\u0c30\u0c38\u0c4d\u0c24\u0c41\u0c24 \u0c36\u0c15\u0c3e\u0c28\u0c3f\u0c15\u0c3f \u0c2a\u0c42\u0c30\u0c4d\u0c35\u0c02|\u0c15\u0c4d\u0c30\u0c40\u0c38\u0c4d\u0c24\u0c41 \u0c36\u0c15\u0c02|\u0c2a\u0c4d\u0c30\u0c38\u0c4d\u0c24\u0c41\u0c24 \u0c36\u0c15\u0c02)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^(\u0c2a\u0c42|\u0c36)/i, /^\u0c38\u0c3e/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^\u0c24\u0c4d\u0c30\u0c48[1234]/i,
                        wide: /^[1234](\u0c35)? \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c3f\u0c15\u0c02/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(\u0c1c\u0c42|\u0c1c\u0c41|\u0c1c|\u0c2b\u0c3f|\u0c2e\u0c3e|\u0c0f|\u0c2e\u0c47|\u0c06|\u0c38\u0c46|\u0c05|\u0c28|\u0c21\u0c3f)/i,
                        abbreviated: /^(\u0c1c\u0c28|\u0c2b\u0c3f\u0c2c\u0c4d\u0c30|\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f|\u0c0f\u0c2a\u0c4d\u0c30\u0c3f|\u0c2e\u0c47|\u0c1c\u0c42\u0c28\u0c4d|\u0c1c\u0c41\u0c32\u0c48|\u0c06\u0c17|\u0c38\u0c46\u0c2a\u0c4d|\u0c05\u0c15\u0c4d\u0c1f\u0c4b|\u0c28\u0c35|\u0c21\u0c3f\u0c38\u0c46)/i,
                        wide: /^(\u0c1c\u0c28\u0c35\u0c30\u0c3f|\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f|\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f|\u0c0f\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d|\u0c2e\u0c47|\u0c1c\u0c42\u0c28\u0c4d|\u0c1c\u0c41\u0c32\u0c48|\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41|\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d|\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d|\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d|\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0c1c/i, /^\u0c2b\u0c3f/i, /^\u0c2e\u0c3e/i, /^\u0c0f/i, /^\u0c2e\u0c47/i, /^\u0c1c\u0c42/i, /^\u0c1c\u0c41/i, /^\u0c06/i, /^\u0c38\u0c46/i, /^\u0c05/i, /^\u0c28/i, /^\u0c21\u0c3f/i],
                        any: [/^\u0c1c\u0c28/i, /^\u0c2b\u0c3f/i, /^\u0c2e\u0c3e/i, /^\u0c0f/i, /^\u0c2e\u0c47/i, /^\u0c1c\u0c42\u0c28\u0c4d/i, /^\u0c1c\u0c41\u0c32\u0c48/i, /^\u0c06\u0c17/i, /^\u0c38\u0c46/i, /^\u0c05/i, /^\u0c28/i, /^\u0c21\u0c3f/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(\u0c06|\u0c38\u0c4b|\u0c2e|\u0c2c\u0c41|\u0c17\u0c41|\u0c36\u0c41|\u0c36)/i,
                        short: /^(\u0c06\u0c26\u0c3f|\u0c38\u0c4b\u0c2e|\u0c2e\u0c02|\u0c2c\u0c41\u0c27|\u0c17\u0c41\u0c30\u0c41|\u0c36\u0c41\u0c15\u0c4d\u0c30|\u0c36\u0c28\u0c3f)/i,
                        abbreviated: /^(\u0c06\u0c26\u0c3f|\u0c38\u0c4b\u0c2e|\u0c2e\u0c02|\u0c2c\u0c41\u0c27|\u0c17\u0c41\u0c30\u0c41|\u0c36\u0c41\u0c15\u0c4d\u0c30|\u0c36\u0c28\u0c3f)/i,
                        wide: /^(\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02|\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02|\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02|\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02|\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02|\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02|\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0c06/i, /^\u0c38\u0c4b/i, /^\u0c2e/i, /^\u0c2c\u0c41/i, /^\u0c17\u0c41/i, /^\u0c36\u0c41/i, /^\u0c36/i],
                        any: [/^\u0c06\u0c26\u0c3f/i, /^\u0c38\u0c4b\u0c2e/i, /^\u0c2e\u0c02/i, /^\u0c2c\u0c41\u0c27/i, /^\u0c17\u0c41\u0c30\u0c41/i, /^\u0c36\u0c41\u0c15\u0c4d\u0c30/i, /^\u0c36\u0c28\u0c3f/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(\u0c2a\u0c42\u0c30\u0c4d\u0c35\u0c3e\u0c39\u0c4d\u0c28\u0c02|\u0c05\u0c2a\u0c30\u0c3e\u0c39\u0c4d\u0c28\u0c02|\u0c05\u0c30\u0c4d\u0c27\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f|\u0c2e\u0c3f\u0c1f\u0c4d\u0c1f\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02|\u0c09\u0c26\u0c2f\u0c02|\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02|\u0c38\u0c3e\u0c2f\u0c02\u0c24\u0c4d\u0c30\u0c02|\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f)/i,
                        any: /^(\u0c2a\u0c42\u0c30\u0c4d\u0c35\u0c3e\u0c39\u0c4d\u0c28\u0c02|\u0c05\u0c2a\u0c30\u0c3e\u0c39\u0c4d\u0c28\u0c02|\u0c05\u0c30\u0c4d\u0c27\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f|\u0c2e\u0c3f\u0c1f\u0c4d\u0c1f\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02|\u0c09\u0c26\u0c2f\u0c02|\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02|\u0c38\u0c3e\u0c2f\u0c02\u0c24\u0c4d\u0c30\u0c02|\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u0c2a\u0c42\u0c30\u0c4d\u0c35\u0c3e\u0c39\u0c4d\u0c28\u0c02/i,
                            pm: /^\u0c05\u0c2a\u0c30\u0c3e\u0c39\u0c4d\u0c28\u0c02/i,
                            midnight: /^\u0c05\u0c30\u0c4d\u0c27/i,
                            noon: /^\u0c2e\u0c3f\u0c1f\u0c4d\u0c1f/i,
                            morning: /\u0c09\u0c26\u0c2f\u0c02/i,
                            afternoon: /\u0c2e\u0c27\u0c4d\u0c2f\u0c3e\u0c39\u0c4d\u0c28\u0c02/i,
                            evening: /\u0c38\u0c3e\u0c2f\u0c02\u0c24\u0c4d\u0c30\u0c02/i,
                            night: /\u0c30\u0c3e\u0c24\u0c4d\u0c30\u0c3f/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const Bo = {
            lessThanXSeconds: {
                one: "\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32 1 \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35",
                other: "\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32 {{count}} \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35"
            },
            xSeconds: {
                one: "1 \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35",
                other: "{{count}} \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35"
            },
            halfAMinute: "\u0e04\u0e23\u0e36\u0e48\u0e07\u0e19\u0e32\u0e17\u0e35",
            lessThanXMinutes: {
                one: "\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32 1 \u0e19\u0e32\u0e17\u0e35",
                other: "\u0e19\u0e49\u0e2d\u0e22\u0e01\u0e27\u0e48\u0e32 {{count}} \u0e19\u0e32\u0e17\u0e35"
            },
            xMinutes: {
                one: "1 \u0e19\u0e32\u0e17\u0e35",
                other: "{{count}} \u0e19\u0e32\u0e17\u0e35"
            },
            aboutXHours: {
                one: "\u0e1b\u0e23\u0e30\u0e21\u0e32\u0e13 1 \u0e0a\u0e31\u0e48\u0e27\u0e42\u0e21\u0e07",
                other: "\u0e1b\u0e23\u0e30\u0e21\u0e32\u0e13 {{count}} \u0e0a\u0e31\u0e48\u0e27\u0e42\u0e21\u0e07"
            },
            xHours: {
                one: "1 \u0e0a\u0e31\u0e48\u0e27\u0e42\u0e21\u0e07",
                other: "{{count}} \u0e0a\u0e31\u0e48\u0e27\u0e42\u0e21\u0e07"
            },
            xDays: {
                one: "1 \u0e27\u0e31\u0e19",
                other: "{{count}} \u0e27\u0e31\u0e19"
            },
            aboutXWeeks: {
                one: "\u0e1b\u0e23\u0e30\u0e21\u0e32\u0e13 1 \u0e2a\u0e31\u0e1b\u0e14\u0e32\u0e2b\u0e4c",
                other: "\u0e1b\u0e23\u0e30\u0e21\u0e32\u0e13 {{count}} \u0e2a\u0e31\u0e1b\u0e14\u0e32\u0e2b\u0e4c"
            },
            xWeeks: {
                one: "1 \u0e2a\u0e31\u0e1b\u0e14\u0e32\u0e2b\u0e4c",
                other: "{{count}} \u0e2a\u0e31\u0e1b\u0e14\u0e32\u0e2b\u0e4c"
            },
            aboutXMonths: {
                one: "\u0e1b\u0e23\u0e30\u0e21\u0e32\u0e13 1 \u0e40\u0e14\u0e37\u0e2d\u0e19",
                other: "\u0e1b\u0e23\u0e30\u0e21\u0e32\u0e13 {{count}} \u0e40\u0e14\u0e37\u0e2d\u0e19"
            },
            xMonths: {
                one: "1 \u0e40\u0e14\u0e37\u0e2d\u0e19",
                other: "{{count}} \u0e40\u0e14\u0e37\u0e2d\u0e19"
            },
            aboutXYears: {
                one: "\u0e1b\u0e23\u0e30\u0e21\u0e32\u0e13 1 \u0e1b\u0e35",
                other: "\u0e1b\u0e23\u0e30\u0e21\u0e32\u0e13 {{count}} \u0e1b\u0e35"
            },
            xYears: {
                one: "1 \u0e1b\u0e35",
                other: "{{count}} \u0e1b\u0e35"
            },
            overXYears: {
                one: "\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32 1 \u0e1b\u0e35",
                other: "\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32 {{count}} \u0e1b\u0e35"
            },
            almostXYears: {
                one: "\u0e40\u0e01\u0e37\u0e2d\u0e1a 1 \u0e1b\u0e35",
                other: "\u0e40\u0e01\u0e37\u0e2d\u0e1a {{count}} \u0e1b\u0e35"
            }
        }
          , Jo = {
            date: r({
                formats: {
                    full: "\u0e27\u0e31\u0e19EEEE\u0e17\u0e35\u0e48 do MMMM y",
                    long: "do MMMM y",
                    medium: "d MMM y",
                    short: "dd/MM/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "H:mm:ss \u0e19. zzzz",
                    long: "H:mm:ss \u0e19. z",
                    medium: "H:mm:ss \u0e19.",
                    short: "H:mm \u0e19."
                },
                defaultWidth: "medium"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u0e40\u0e27\u0e25\u0e32' {{time}}",
                    long: "{{date}} '\u0e40\u0e27\u0e25\u0e32' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Qo = {
            lastWeek: "eeee'\u0e17\u0e35\u0e48\u0e41\u0e25\u0e49\u0e27\u0e40\u0e27\u0e25\u0e32' p",
            yesterday: "'\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e27\u0e32\u0e19\u0e19\u0e35\u0e49\u0e40\u0e27\u0e25\u0e32' p",
            today: "'\u0e27\u0e31\u0e19\u0e19\u0e35\u0e49\u0e40\u0e27\u0e25\u0e32' p",
            tomorrow: "'\u0e1e\u0e23\u0e38\u0e48\u0e07\u0e19\u0e35\u0e49\u0e40\u0e27\u0e25\u0e32' p",
            nextWeek: "eeee '\u0e40\u0e27\u0e25\u0e32' p",
            other: "P"
        }
          , Uo = {
            code: "th",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Bo[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? "halfAMinute" === e ? "\u0e43\u0e19" + a : "\u0e43\u0e19 " + a : a + "\u0e17\u0e35\u0e48\u0e1c\u0e48\u0e32\u0e19\u0e21\u0e32" : a
            }
            ,
            formatLong: Jo,
            formatRelative: (e,t,n,a)=>Qo[e],
            localize: {
                ordinalNumber: (e,t)=>String(e),
                era: s({
                    values: {
                        narrow: ["B", "\u0e04\u0e28"],
                        abbreviated: ["BC", "\u0e04.\u0e28."],
                        wide: ["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e01\u0e32\u0e25", "\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e41\u0e23\u0e01", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48\u0e2a\u0e2d\u0e07", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48\u0e2a\u0e32\u0e21", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a\u0e17\u0e35\u0e48\u0e2a\u0e35\u0e48"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."],
                        abbreviated: ["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."],
                        wide: ["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", "\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", "\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."],
                        short: ["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."],
                        abbreviated: ["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."],
                        wide: ["\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", "\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", "\u0e1e\u0e38\u0e18", "\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35", "\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e40\u0e2a\u0e32\u0e23\u0e4c"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            pm: "\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            midnight: "\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07\u0e04\u0e37\u0e19",
                            noon: "\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            morning: "\u0e40\u0e0a\u0e49\u0e32",
                            afternoon: "\u0e1a\u0e48\u0e32\u0e22",
                            evening: "\u0e40\u0e22\u0e47\u0e19",
                            night: "\u0e01\u0e25\u0e32\u0e07\u0e04\u0e37\u0e19"
                        },
                        abbreviated: {
                            am: "\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            pm: "\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            midnight: "\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07\u0e04\u0e37\u0e19",
                            noon: "\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            morning: "\u0e40\u0e0a\u0e49\u0e32",
                            afternoon: "\u0e1a\u0e48\u0e32\u0e22",
                            evening: "\u0e40\u0e22\u0e47\u0e19",
                            night: "\u0e01\u0e25\u0e32\u0e07\u0e04\u0e37\u0e19"
                        },
                        wide: {
                            am: "\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            pm: "\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            midnight: "\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07\u0e04\u0e37\u0e19",
                            noon: "\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            morning: "\u0e40\u0e0a\u0e49\u0e32",
                            afternoon: "\u0e1a\u0e48\u0e32\u0e22",
                            evening: "\u0e40\u0e22\u0e47\u0e19",
                            night: "\u0e01\u0e25\u0e32\u0e07\u0e04\u0e37\u0e19"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            pm: "\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            midnight: "\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07\u0e04\u0e37\u0e19",
                            noon: "\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            morning: "\u0e15\u0e2d\u0e19\u0e40\u0e0a\u0e49\u0e32",
                            afternoon: "\u0e15\u0e2d\u0e19\u0e01\u0e25\u0e32\u0e07\u0e27\u0e31\u0e19",
                            evening: "\u0e15\u0e2d\u0e19\u0e40\u0e22\u0e47\u0e19",
                            night: "\u0e15\u0e2d\u0e19\u0e01\u0e25\u0e32\u0e07\u0e04\u0e37\u0e19"
                        },
                        abbreviated: {
                            am: "\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            pm: "\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            midnight: "\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07\u0e04\u0e37\u0e19",
                            noon: "\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            morning: "\u0e15\u0e2d\u0e19\u0e40\u0e0a\u0e49\u0e32",
                            afternoon: "\u0e15\u0e2d\u0e19\u0e01\u0e25\u0e32\u0e07\u0e27\u0e31\u0e19",
                            evening: "\u0e15\u0e2d\u0e19\u0e40\u0e22\u0e47\u0e19",
                            night: "\u0e15\u0e2d\u0e19\u0e01\u0e25\u0e32\u0e07\u0e04\u0e37\u0e19"
                        },
                        wide: {
                            am: "\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            pm: "\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            midnight: "\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07\u0e04\u0e37\u0e19",
                            noon: "\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07",
                            morning: "\u0e15\u0e2d\u0e19\u0e40\u0e0a\u0e49\u0e32",
                            afternoon: "\u0e15\u0e2d\u0e19\u0e01\u0e25\u0e32\u0e07\u0e27\u0e31\u0e19",
                            evening: "\u0e15\u0e2d\u0e19\u0e40\u0e22\u0e47\u0e19",
                            night: "\u0e15\u0e2d\u0e19\u0e01\u0e25\u0e32\u0e07\u0e04\u0e37\u0e19"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^\d+/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^([bB]|[aA]|\u0e04\u0e28)/i,
                        abbreviated: /^([bB]\.?\s?[cC]\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?|\u0e04\.?\u0e28\.?)/i,
                        wide: /^(\u0e01\u0e48\u0e2d\u0e19\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e01\u0e32\u0e25|\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a|\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e01\u0e32\u0e25)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^[bB]/i, /^(^[aA]|\u0e04\.?\u0e28\.?|\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e01\u0e32\u0e25|\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a|)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^q[1234]/i,
                        wide: /^\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a(\u0e17\u0e35\u0e48)? ?[1234]/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/(1|\u0e41\u0e23\u0e01|\u0e2b\u0e19\u0e36\u0e48\u0e07)/i, /(2|\u0e2a\u0e2d\u0e07)/i, /(3|\u0e2a\u0e32\u0e21)/i, /(4|\u0e2a\u0e35\u0e48)/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(\u0e21\.?\u0e04\.?|\u0e01\.?\u0e1e\.?|\u0e21\u0e35\.?\u0e04\.?|\u0e40\u0e21\.?\u0e22\.?|\u0e1e\.?\u0e04\.?|\u0e21\u0e34\.?\u0e22\.?|\u0e01\.?\u0e04\.?|\u0e2a\.?\u0e04\.?|\u0e01\.?\u0e22\.?|\u0e15\.?\u0e04\.?|\u0e1e\.?\u0e22\.?|\u0e18\.?\u0e04\.?)/i,
                        abbreviated: /^(\u0e21\.?\u0e04\.?|\u0e01\.?\u0e1e\.?|\u0e21\u0e35\.?\u0e04\.?|\u0e40\u0e21\.?\u0e22\.?|\u0e1e\.?\u0e04\.?|\u0e21\u0e34\.?\u0e22\.?|\u0e01\.?\u0e04\.?|\u0e2a\.?\u0e04\.?|\u0e01\.?\u0e22\.?|\u0e15\.?\u0e04\.?|\u0e1e\.?\u0e22\.?|\u0e18\.?\u0e04\.?')/i,
                        wide: /^(\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21|\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c|\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21|\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19|\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21|\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19|\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21|\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21|\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19|\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21|\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19|\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        wide: [/^\u0e21\u0e01/i, /^\u0e01\u0e38\u0e21/i, /^\u0e21\u0e35/i, /^\u0e40\u0e21/i, /^\u0e1e\u0e24\u0e29/i, /^\u0e21\u0e34/i, /^\u0e01\u0e23\u0e01/i, /^\u0e2a/i, /^\u0e01\u0e31\u0e19/i, /^\u0e15/i, /^\u0e1e\u0e24\u0e28/i, /^\u0e18/i],
                        any: [/^\u0e21\.?\u0e04\.?/i, /^\u0e01\.?\u0e1e\.?/i, /^\u0e21\u0e35\.?\u0e04\.?/i, /^\u0e40\u0e21\.?\u0e22\.?/i, /^\u0e1e\.?\u0e04\.?/i, /^\u0e21\u0e34\.?\u0e22\.?/i, /^\u0e01\.?\u0e04\.?/i, /^\u0e2a\.?\u0e04\.?/i, /^\u0e01\.?\u0e22\.?/i, /^\u0e15\.?\u0e04\.?/i, /^\u0e1e\.?\u0e22\.?/i, /^\u0e18\.?\u0e04\.?/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(\u0e2d\u0e32\.?|\u0e08\.?|\u0e2d\.?|\u0e1e\u0e24\.?|\u0e1e\.?|\u0e28\.?|\u0e2a\.?)/i,
                        short: /^(\u0e2d\u0e32\.?|\u0e08\.?|\u0e2d\.?|\u0e1e\u0e24\.?|\u0e1e\.?|\u0e28\.?|\u0e2a\.?)/i,
                        abbreviated: /^(\u0e2d\u0e32\.?|\u0e08\.?|\u0e2d\.?|\u0e1e\u0e24\.?|\u0e1e\.?|\u0e28\.?|\u0e2a\.?)/i,
                        wide: /^(\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c|\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c|\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23|\u0e1e\u0e38\u0e18|\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35|\u0e28\u0e38\u0e01\u0e23\u0e4c|\u0e40\u0e2a\u0e32\u0e23\u0e4c)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        wide: [/^\u0e2d\u0e32/i, /^\u0e08\u0e31/i, /^\u0e2d\u0e31/i, /^\u0e1e\u0e38\u0e18/i, /^\u0e1e\u0e24/i, /^\u0e28/i, /^\u0e40\u0e2a/i],
                        any: [/^\u0e2d\u0e32/i, /^\u0e08/i, /^\u0e2d/i, /^\u0e1e(?!\u0e24)/i, /^\u0e1e\u0e24/i, /^\u0e28/i, /^\u0e2a/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07|\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07|\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07\u0e04\u0e37\u0e19|\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07|(\u0e15\u0e2d\u0e19.*?)?.*(\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07|\u0e40\u0e0a\u0e49\u0e32|\u0e1a\u0e48\u0e32\u0e22|\u0e40\u0e22\u0e47\u0e19|\u0e01\u0e25\u0e32\u0e07\u0e04\u0e37\u0e19))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07/i,
                            pm: /^\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07/i,
                            midnight: /^\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07\u0e04\u0e37\u0e19/i,
                            noon: /^\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07/i,
                            morning: /\u0e40\u0e0a\u0e49\u0e32/i,
                            afternoon: /\u0e1a\u0e48\u0e32\u0e22/i,
                            evening: /\u0e40\u0e22\u0e47\u0e19/i,
                            night: /\u0e01\u0e25\u0e32\u0e07\u0e04\u0e37\u0e19/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const Zo = {
            lessThanXSeconds: {
                one: "bir saniyeden az",
                other: "{{count}} saniyeden az"
            },
            xSeconds: {
                one: "1 saniye",
                other: "{{count}} saniye"
            },
            halfAMinute: "yar\u0131m dakika",
            lessThanXMinutes: {
                one: "bir dakikadan az",
                other: "{{count}} dakikadan az"
            },
            xMinutes: {
                one: "1 dakika",
                other: "{{count}} dakika"
            },
            aboutXHours: {
                one: "yakla\u015f\u0131k 1 saat",
                other: "yakla\u015f\u0131k {{count}} saat"
            },
            xHours: {
                one: "1 saat",
                other: "{{count}} saat"
            },
            xDays: {
                one: "1 g\xfcn",
                other: "{{count}} g\xfcn"
            },
            aboutXWeeks: {
                one: "yakla\u015f\u0131k 1 hafta",
                other: "yakla\u015f\u0131k {{count}} hafta"
            },
            xWeeks: {
                one: "1 hafta",
                other: "{{count}} hafta"
            },
            aboutXMonths: {
                one: "yakla\u015f\u0131k 1 ay",
                other: "yakla\u015f\u0131k {{count}} ay"
            },
            xMonths: {
                one: "1 ay",
                other: "{{count}} ay"
            },
            aboutXYears: {
                one: "yakla\u015f\u0131k 1 y\u0131l",
                other: "yakla\u015f\u0131k {{count}} y\u0131l"
            },
            xYears: {
                one: "1 y\u0131l",
                other: "{{count}} y\u0131l"
            },
            overXYears: {
                one: "1 y\u0131ldan fazla",
                other: "{{count}} y\u0131ldan fazla"
            },
            almostXYears: {
                one: "neredeyse 1 y\u0131l",
                other: "neredeyse {{count}} y\u0131l"
            }
        }
          , es = {
            date: r({
                formats: {
                    full: "d MMMM y EEEE",
                    long: "d MMMM y",
                    medium: "d MMM y",
                    short: "dd.MM.yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} 'saat' {{time}}",
                    long: "{{date}} 'saat' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , ts = {
            lastWeek: "'ge\xe7en hafta' eeee 'saat' p",
            yesterday: "'d\xfcn saat' p",
            today: "'bug\xfcn saat' p",
            tomorrow: "'yar\u0131n saat' p",
            nextWeek: "eeee 'saat' p",
            other: "P"
        }
          , ns = {
            code: "tr",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Zo[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", t.toString()),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? a + " sonra" : a + " \xf6nce" : a
            }
            ,
            formatLong: es,
            formatRelative: (e,t,n,a)=>ts[e],
            localize: {
                ordinalNumber: (e,t)=>Number(e) + ".",
                era: s({
                    values: {
                        narrow: ["M\xd6", "MS"],
                        abbreviated: ["M\xd6", "MS"],
                        wide: ["Milattan \xd6nce", "Milattan Sonra"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1\xc7", "2\xc7", "3\xc7", "4\xc7"],
                        wide: ["\u0130lk \xe7eyrek", "\u0130kinci \xc7eyrek", "\xdc\xe7\xfcnc\xfc \xe7eyrek", "Son \xe7eyrek"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>Number(e) - 1
                }),
                month: s({
                    values: {
                        narrow: ["O", "\u015e", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"],
                        abbreviated: ["Oca", "\u015eub", "Mar", "Nis", "May", "Haz", "Tem", "A\u011fu", "Eyl", "Eki", "Kas", "Ara"],
                        wide: ["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", "Temmuz", "A\u011fustos", "Eyl\xfcl", "Ekim", "Kas\u0131m", "Aral\u0131k"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["P", "P", "S", "\xc7", "P", "C", "C"],
                        short: ["Pz", "Pt", "Sa", "\xc7a", "Pe", "Cu", "Ct"],
                        abbreviated: ["Paz", "Pzt", "Sal", "\xc7ar", "Per", "Cum", "Cts"],
                        wide: ["Pazar", "Pazartesi", "Sal\u0131", "\xc7ar\u015famba", "Per\u015fembe", "Cuma", "Cumartesi"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\xf6\xf6",
                            pm: "\xf6s",
                            midnight: "gy",
                            noon: "\xf6",
                            morning: "sa",
                            afternoon: "\xf6s",
                            evening: "ak",
                            night: "ge"
                        },
                        abbreviated: {
                            am: "\xd6\xd6",
                            pm: "\xd6S",
                            midnight: "gece yar\u0131s\u0131",
                            noon: "\xf6\u011fle",
                            morning: "sabah",
                            afternoon: "\xf6\u011fleden sonra",
                            evening: "ak\u015fam",
                            night: "gece"
                        },
                        wide: {
                            am: "\xd6.\xd6.",
                            pm: "\xd6.S.",
                            midnight: "gece yar\u0131s\u0131",
                            noon: "\xf6\u011fle",
                            morning: "sabah",
                            afternoon: "\xf6\u011fleden sonra",
                            evening: "ak\u015fam",
                            night: "gece"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\xf6\xf6",
                            pm: "\xf6s",
                            midnight: "gy",
                            noon: "\xf6",
                            morning: "sa",
                            afternoon: "\xf6s",
                            evening: "ak",
                            night: "ge"
                        },
                        abbreviated: {
                            am: "\xd6\xd6",
                            pm: "\xd6S",
                            midnight: "gece yar\u0131s\u0131",
                            noon: "\xf6\u011flen",
                            morning: "sabahleyin",
                            afternoon: "\xf6\u011fleden sonra",
                            evening: "ak\u015famleyin",
                            night: "geceleyin"
                        },
                        wide: {
                            am: "\xf6.\xf6.",
                            pm: "\xf6.s.",
                            midnight: "gece yar\u0131s\u0131",
                            noon: "\xf6\u011flen",
                            morning: "sabahleyin",
                            afternoon: "\xf6\u011fleden sonra",
                            evening: "ak\u015famleyin",
                            night: "geceleyin"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\.)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: function(e) {
                        return parseInt(e, 10)
                    }
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(m\xf6|ms)/i,
                        abbreviated: /^(m\xf6|ms)/i,
                        wide: /^(milattan \xf6nce|milattan sonra)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/(^m\xf6|^milattan \xf6nce)/i, /(^ms|^milattan sonra)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234]\xe7/i,
                        wide: /^((i|\u0130)lk|(i|\u0130)kinci|\xfc\xe7\xfcnc\xfc|son) \xe7eyrek/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i],
                        abbreviated: [/1\xe7/i, /2\xe7/i, /3\xe7/i, /4\xe7/i],
                        wide: [/^(i|\u0130)lk \xe7eyrek/i, /(i|\u0130)kinci \xe7eyrek/i, /\xfc\xe7\xfcnc\xfc \xe7eyrek/i, /son \xe7eyrek/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[o\u015fmnhtaek]/i,
                        abbreviated: /^(oca|\u015fub|mar|nis|may|haz|tem|a\u011fu|eyl|eki|kas|ara)/i,
                        wide: /^(ocak|\u015fubat|mart|nisan|may\u0131s|haziran|temmuz|a\u011fustos|eyl\xfcl|ekim|kas\u0131m|aral\u0131k)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^o/i, /^\u015f/i, /^m/i, /^n/i, /^m/i, /^h/i, /^t/i, /^a/i, /^e/i, /^e/i, /^k/i, /^a/i],
                        any: [/^o/i, /^\u015f/i, /^mar/i, /^n/i, /^may/i, /^h/i, /^t/i, /^a\u011f/i, /^ey/i, /^ek/i, /^k/i, /^ar/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[ps\xe7c]/i,
                        short: /^(pz|pt|sa|\xe7a|pe|cu|ct)/i,
                        abbreviated: /^(paz|pzt|sal|\xe7ar|per|cum|cts)/i,
                        wide: /^(pazar(?!tesi)|pazartesi|sal\u0131|\xe7ar\u015famba|per\u015fembe|cuma(?!rtesi)|cumartesi)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^p/i, /^p/i, /^s/i, /^\xe7/i, /^p/i, /^c/i, /^c/i],
                        any: [/^pz/i, /^pt/i, /^sa/i, /^\xe7a/i, /^pe/i, /^cu/i, /^ct/i],
                        wide: [/^pazar(?!tesi)/i, /^pazartesi/i, /^sal\u0131/i, /^\xe7ar\u015famba/i, /^per\u015fembe/i, /^cuma(?!rtesi)/i, /^cumartesi/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(\xf6\xf6|\xf6s|gy|\xf6|sa|\xf6s|ak|ge)/i,
                        any: /^(\xf6\.?\s?[\xf6s]\.?|\xf6\u011fleden sonra|gece yar\u0131s\u0131|\xf6\u011fle|(sabah|\xf6\u011f|ak\u015fam|gece)(leyin))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\xf6\.?\xf6\.?/i,
                            pm: /^\xf6\.?s\.?/i,
                            midnight: /^(gy|gece yar\u0131s\u0131)/i,
                            noon: /^\xf6\u011f/i,
                            morning: /^sa/i,
                            afternoon: /^\xf6\u011fleden sonra/i,
                            evening: /^ak/i,
                            night: /^ge/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const as = {
            lessThanXSeconds: {
                one: "\u0628\u0649\u0631 \u0633\u0649\u0643\u06c7\u0646\u062a \u0626\u0649\u0686\u0649\u062f\u06d5",
                other: "\u0633\u0649\u0643\u06c7\u0646\u062a \u0626\u0649\u0686\u0649\u062f\u06d5 {{count}}"
            },
            xSeconds: {
                one: "\u0628\u0649\u0631 \u0633\u0649\u0643\u06c7\u0646\u062a",
                other: "\u0633\u0649\u0643\u06c7\u0646\u062a {{count}}"
            },
            halfAMinute: "\u064a\u0649\u0631\u0649\u0645 \u0645\u0649\u0646\u06c7\u062a",
            lessThanXMinutes: {
                one: "\u0628\u0649\u0631 \u0645\u0649\u0646\u06c7\u062a \u0626\u0649\u0686\u0649\u062f\u06d5",
                other: "\u0645\u0649\u0646\u06c7\u062a \u0626\u0649\u0686\u0649\u062f\u06d5 {{count}}"
            },
            xMinutes: {
                one: "\u0628\u0649\u0631 \u0645\u0649\u0646\u06c7\u062a",
                other: "\u0645\u0649\u0646\u06c7\u062a {{count}}"
            },
            aboutXHours: {
                one: "\u062a\u06d5\u062e\u0645\u0649\u0646\u06d5\u0646 \u0628\u0649\u0631 \u0633\u0627\u0626\u06d5\u062a",
                other: "\u0633\u0627\u0626\u06d5\u062a {{count}} \u062a\u06d5\u062e\u0645\u0649\u0646\u06d5\u0646"
            },
            xHours: {
                one: "\u0628\u0649\u0631 \u0633\u0627\u0626\u06d5\u062a",
                other: "\u0633\u0627\u0626\u06d5\u062a {{count}}"
            },
            xDays: {
                one: "\u0628\u0649\u0631 \u0643\u06c8\u0646",
                other: "\u0643\u06c8\u0646 {{count}}"
            },
            aboutXWeeks: {
                one: "\u062a\u06d5\u062e\u0645\u0649\u0646\u06d5\u0646 \u0628\u0649\u0631\u06be\u06d5\u067e\u062a\u06d5",
                other: "\u06be\u06d5\u067e\u062a\u06d5 {{count}} \u062a\u06d5\u062e\u0645\u0649\u0646\u06d5\u0646"
            },
            xWeeks: {
                one: "\u0628\u0649\u0631\u06be\u06d5\u067e\u062a\u06d5",
                other: "\u06be\u06d5\u067e\u062a\u06d5 {{count}}"
            },
            aboutXMonths: {
                one: "\u062a\u06d5\u062e\u0645\u0649\u0646\u06d5\u0646 \u0628\u0649\u0631 \u0626\u0627\u064a",
                other: "\u0626\u0627\u064a {{count}} \u062a\u06d5\u062e\u0645\u0649\u0646\u06d5\u0646"
            },
            xMonths: {
                one: "\u0628\u0649\u0631 \u0626\u0627\u064a",
                other: "\u0626\u0627\u064a {{count}}"
            },
            aboutXYears: {
                one: "\u062a\u06d5\u062e\u0645\u0649\u0646\u06d5\u0646 \u0628\u0649\u0631 \u064a\u0649\u0644",
                other: "\u064a\u0649\u0644 {{count}} \u062a\u06d5\u062e\u0645\u0649\u0646\u06d5\u0646"
            },
            xYears: {
                one: "\u0628\u0649\u0631 \u064a\u0649\u0644",
                other: "\u064a\u0649\u0644 {{count}}"
            },
            overXYears: {
                one: "\u0628\u0649\u0631 \u064a\u0649\u0644\u062f\u0649\u0646 \u0626\u0627\u0631\u062a\u06c7\u0642",
                other: "\u064a\u0649\u0644\u062f\u0649\u0646 \u0626\u0627\u0631\u062a\u06c7\u0642 {{count}}"
            },
            almostXYears: {
                one: "\u0626\u0627\u0633\u0627\u0633\u06d5\u0646 \u0628\u0649\u0631 \u064a\u0649\u0644",
                other: "\u064a\u0649\u0644 {{count}} \u0626\u0627\u0633\u0627\u0633\u06d5\u0646"
            }
        }
          , rs = {
            date: r({
                formats: {
                    full: "EEEE, MMMM do, y",
                    long: "MMMM do, y",
                    medium: "MMM d, y",
                    short: "MM/dd/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss a zzzz",
                    long: "h:mm:ss a z",
                    medium: "h:mm:ss a",
                    short: "h:mm a"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u062f\u06d5' {{time}}",
                    long: "{{date}} '\u062f\u06d5' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , is = {
            lastWeek: "'\u0626\u200d\u06c6\u062a\u0643\u06d5\u0646' eeee '\u062f\u06d5' p",
            yesterday: "'\u062a\u06c8\u0646\u06c8\u06af\u06c8\u0646 \u062f\u06d5' p",
            today: "'\u0628\u06c8\u06af\u06c8\u0646 \u062f\u06d5' p",
            tomorrow: "'\u0626\u06d5\u062a\u06d5 \u062f\u06d5' p",
            nextWeek: "eeee '\u062f\u06d5' p",
            other: "P"
        }
          , os = {
            code: "ug",
            formatDistance: (e,t,n)=>{
                let a;
                const r = as[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? a : a + " \u0628\u0648\u0644\u062f\u0649" : a
            }
            ,
            formatLong: rs,
            formatRelative: (e,t,n,a)=>is[e],
            localize: {
                ordinalNumber: (e,t)=>String(e),
                era: s({
                    values: {
                        narrow: ["\u0628", "\u0643"],
                        abbreviated: ["\u0628", "\u0643"],
                        wide: ["\u0645\u0649\u064a\u0644\u0627\u062f\u0649\u062f\u0649\u0646 \u0628\u06c7\u0631\u06c7\u0646", "\u0645\u0649\u064a\u0644\u0627\u062f\u0649\u062f\u0649\u0646 \u0643\u0649\u064a\u0649\u0646"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1", "2", "3", "4"],
                        wide: ["\u0628\u0649\u0631\u0649\u0646\u062c\u0649 \u0686\u0627\u0631\u06d5\u0643", "\u0626\u0649\u0643\u0643\u0649\u0646\u062c\u0649 \u0686\u0627\u0631\u06d5\u0643", "\u0626\u06c8\u0686\u0649\u0646\u062c\u0649 \u0686\u0627\u0631\u06d5\u0643", "\u062a\u06c6\u062a\u0649\u0646\u062c\u0649 \u0686\u0627\u0631\u06d5\u0643"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u064a", "\u0641", "\u0645", "\u0627", "\u0645", "\u0649", "\u0649", "\u0627", "\u0633", "\u06c6", "\u0646", "\u062f"],
                        abbreviated: ["\u064a\u0627\u0646\u06cb\u0627\u0631", "\u0641\u06d0\u06cb\u0649\u0631\u0627\u0644", "\u0645\u0627\u0631\u062a", "\u0626\u0627\u067e\u0631\u0649\u0644", "\u0645\u0627\u064a", "\u0626\u0649\u064a\u06c7\u0646", "\u0626\u0649\u064a\u0648\u0644", "\u0626\u0627\u06cb\u063a\u06c7\u0633\u062a", "\u0633\u0649\u0646\u062a\u06d5\u0628\u0649\u0631", "\u0626\u06c6\u0643\u062a\u06d5\u0628\u0649\u0631", "\u0646\u0648\u064a\u0627\u0628\u0649\u0631", "\u062f\u0649\u0643\u0627\u0628\u0649\u0631"],
                        wide: ["\u064a\u0627\u0646\u06cb\u0627\u0631", "\u0641\u06d0\u06cb\u0649\u0631\u0627\u0644", "\u0645\u0627\u0631\u062a", "\u0626\u0627\u067e\u0631\u0649\u0644", "\u0645\u0627\u064a", "\u0626\u0649\u064a\u06c7\u0646", "\u0626\u0649\u064a\u0648\u0644", "\u0626\u0627\u06cb\u063a\u06c7\u0633\u062a", "\u0633\u0649\u0646\u062a\u06d5\u0628\u0649\u0631", "\u0626\u06c6\u0643\u062a\u06d5\u0628\u0649\u0631", "\u0646\u0648\u064a\u0627\u0628\u0649\u0631", "\u062f\u0649\u0643\u0627\u0628\u0649\u0631"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u064a", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"],
                        short: ["\u064a", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"],
                        abbreviated: ["\u064a\u06d5\u0643\u0634\u06d5\u0646\u0628\u06d5", "\u062f\u06c8\u0634\u06d5\u0646\u0628\u06d5", "\u0633\u06d5\u064a\u0634\u06d5\u0646\u0628\u06d5", "\u0686\u0627\u0631\u0634\u06d5\u0646\u0628\u06d5", "\u067e\u06d5\u064a\u0634\u06d5\u0646\u0628\u06d5", "\u062c\u06c8\u0645\u06d5", "\u0634\u06d5\u0646\u0628\u06d5"],
                        wide: ["\u064a\u06d5\u0643\u0634\u06d5\u0646\u0628\u06d5", "\u062f\u06c8\u0634\u06d5\u0646\u0628\u06d5", "\u0633\u06d5\u064a\u0634\u06d5\u0646\u0628\u06d5", "\u0686\u0627\u0631\u0634\u06d5\u0646\u0628\u06d5", "\u067e\u06d5\u064a\u0634\u06d5\u0646\u0628\u06d5", "\u062c\u06c8\u0645\u06d5", "\u0634\u06d5\u0646\u0628\u06d5"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0626\u06d5",
                            pm: "\u0686",
                            midnight: "\u0643",
                            noon: "\u0686",
                            morning: "\u0626\u06d5\u062a\u0649\u06af\u06d5\u0646",
                            afternoon: "\u0686\u06c8\u0634\u062a\u0649\u0646 \u0643\u0649\u064a\u0649\u0646",
                            evening: "\u0626\u0627\u062e\u0634\u0649\u0645",
                            night: "\u0643\u0649\u0686\u06d5"
                        },
                        abbreviated: {
                            am: "\u0626\u06d5",
                            pm: "\u0686",
                            midnight: "\u0643",
                            noon: "\u0686",
                            morning: "\u0626\u06d5\u062a\u0649\u06af\u06d5\u0646",
                            afternoon: "\u0686\u06c8\u0634\u062a\u0649\u0646 \u0643\u0649\u064a\u0649\u0646",
                            evening: "\u0626\u0627\u062e\u0634\u0649\u0645",
                            night: "\u0643\u0649\u0686\u06d5"
                        },
                        wide: {
                            am: "\u0626\u06d5",
                            pm: "\u0686",
                            midnight: "\u0643",
                            noon: "\u0686",
                            morning: "\u0626\u06d5\u062a\u0649\u06af\u06d5\u0646",
                            afternoon: "\u0686\u06c8\u0634\u062a\u0649\u0646 \u0643\u0649\u064a\u0649\u0646",
                            evening: "\u0626\u0627\u062e\u0634\u0649\u0645",
                            night: "\u0643\u0649\u0686\u06d5"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u0626\u06d5",
                            pm: "\u0686",
                            midnight: "\u0643",
                            noon: "\u0686",
                            morning: "\u0626\u06d5\u062a\u0649\u06af\u06d5\u0646\u062f\u06d5",
                            afternoon: "\u0686\u06c8\u0634\u062a\u0649\u0646 \u0643\u0649\u064a\u0649\u0646",
                            evening: "\u0626\u0627\u062e\u0634\u0627\u0645\u062f\u0627",
                            night: "\u0643\u0649\u0686\u0649\u062f\u06d5"
                        },
                        abbreviated: {
                            am: "\u0626\u06d5",
                            pm: "\u0686",
                            midnight: "\u0643",
                            noon: "\u0686",
                            morning: "\u0626\u06d5\u062a\u0649\u06af\u06d5\u0646\u062f\u06d5",
                            afternoon: "\u0686\u06c8\u0634\u062a\u0649\u0646 \u0643\u0649\u064a\u0649\u0646",
                            evening: "\u0626\u0627\u062e\u0634\u0627\u0645\u062f\u0627",
                            night: "\u0643\u0649\u0686\u0649\u062f\u06d5"
                        },
                        wide: {
                            am: "\u0626\u06d5",
                            pm: "\u0686",
                            midnight: "\u0643",
                            noon: "\u0686",
                            morning: "\u0626\u06d5\u062a\u0649\u06af\u06d5\u0646\u062f\u06d5",
                            afternoon: "\u0686\u06c8\u0634\u062a\u0649\u0646 \u0643\u0649\u064a\u0649\u0646",
                            evening: "\u0626\u0627\u062e\u0634\u0627\u0645\u062f\u0627",
                            night: "\u0643\u0649\u0686\u0649\u062f\u06d5"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(th|st|nd|rd)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u0628|\u0643)/i,
                        wide: /^(\u0645\u0649\u064a\u0644\u0627\u062f\u0649\u062f\u0649\u0646 \u0628\u06c7\u0631\u06c7\u0646|\u0645\u0649\u064a\u0644\u0627\u062f\u0649\u062f\u0649\u0646 \u0643\u0649\u064a\u0649\u0646)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u0628\u06c7\u0631\u06c7\u0646/i, /^\u0643\u0649\u064a\u0649\u0646/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^\u0686[1234]/i,
                        wide: /^\u0686\u0627\u0631\u06d5\u0643 [1234]/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[\u064a\u0641\u0645\u0626\u0627\u0645\u0626\u200d\u0626\u0627\u0633\u06c6\u0646\u062f]/i,
                        abbreviated: /^(\u064a\u0627\u0646\u06cb\u0627\u0631|\u0641\u06d0\u06cb\u0649\u0631\u0627\u0644|\u0645\u0627\u0631\u062a|\u0626\u0627\u067e\u0631\u0649\u0644|\u0645\u0627\u064a|\u0626\u0649\u064a\u06c7\u0646|\u0626\u0649\u064a\u0648\u0644|\u0626\u0627\u06cb\u063a\u06c7\u0633\u062a|\u0633\u0649\u0646\u062a\u06d5\u0628\u0649\u0631|\u0626\u06c6\u0643\u062a\u06d5\u0628\u0649\u0631|\u0646\u0648\u064a\u0627\u0628\u0649\u0631|\u062f\u0649\u0643\u0627\u0628\u0649\u0631)/i,
                        wide: /^(\u064a\u0627\u0646\u06cb\u0627\u0631|\u0641\u06d0\u06cb\u0649\u0631\u0627\u0644|\u0645\u0627\u0631\u062a|\u0626\u0627\u067e\u0631\u0649\u0644|\u0645\u0627\u064a|\u0626\u0649\u064a\u06c7\u0646|\u0626\u0649\u064a\u0648\u0644|\u0626\u0627\u06cb\u063a\u06c7\u0633\u062a|\u0633\u0649\u0646\u062a\u06d5\u0628\u0649\u0631|\u0626\u06c6\u0643\u062a\u06d5\u0628\u0649\u0631|\u0646\u0648\u064a\u0627\u0628\u0649\u0631|\u062f\u0649\u0643\u0627\u0628\u0649\u0631)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u064a/i, /^\u0641/i, /^\u0645/i, /^\u0627/i, /^\u0645/i, /^\u0649\u200d/i, /^\u0649\u200d/i, /^\u0627\u200d/i, /^\u0633/i, /^\u06c6/i, /^\u0646/i, /^\u062f/i],
                        any: [/^\u064a\u0627\u0646/i, /^\u0641\u06d0\u06cb/i, /^\u0645\u0627\u0631/i, /^\u0626\u0627\u067e/i, /^\u0645\u0627\u064a/i, /^\u0626\u0649\u064a\u06c7\u0646/i, /^\u0626\u0649\u064a\u0648\u0644/i, /^\u0626\u0627\u06cb/i, /^\u0633\u0649\u0646/i, /^\u0626\u06c6\u0643/i, /^\u0646\u0648\u064a/i, /^\u062f\u0649\u0643/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u062f\u0633\u0686\u067e\u062c\u0634\u064a]/i,
                        short: /^(\u064a\u06d5|\u062f\u06c8|\u0633\u06d5|\u0686\u0627|\u067e\u06d5|\u062c\u06c8|\u0634\u06d5)/i,
                        abbreviated: /^(\u064a\u06d5|\u062f\u06c8|\u0633\u06d5|\u0686\u0627|\u067e\u06d5|\u062c\u06c8|\u0634\u06d5)/i,
                        wide: /^(\u064a\u06d5\u0643\u0634\u06d5\u0646\u0628\u06d5|\u062f\u06c8\u0634\u06d5\u0646\u0628\u06d5|\u0633\u06d5\u064a\u0634\u06d5\u0646\u0628\u06d5|\u0686\u0627\u0631\u0634\u06d5\u0646\u0628\u06d5|\u067e\u06d5\u064a\u0634\u06d5\u0646\u0628\u06d5|\u062c\u06c8\u0645\u06d5|\u0634\u06d5\u0646\u0628\u06d5)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u064a/i, /^\u062f/i, /^\u0633/i, /^\u0686/i, /^\u067e/i, /^\u062c/i, /^\u0634/i],
                        any: [/^\u064a/i, /^\u062f/i, /^\u0633/i, /^\u0686/i, /^\u067e/i, /^\u062c/i, /^\u0634/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(\u0626\u06d5|\u0686|\u0643|\u0686|(\u062f\u06d5|\u0626\u06d5\u062a\u0649\u06af\u06d5\u0646) ( \u0626\u06d5\u200d|\u0686\u06c8\u0634\u062a\u0649\u0646 \u0643\u0649\u064a\u0649\u0646|\u0626\u0627\u062e\u0634\u0649\u0645|\u0643\u0649\u0686\u06d5))/i,
                        any: /^(\u0626\u06d5|\u0686|\u0643|\u0686|(\u062f\u06d5|\u0626\u06d5\u062a\u0649\u06af\u06d5\u0646) ( \u0626\u06d5\u200d|\u0686\u06c8\u0634\u062a\u0649\u0646 \u0643\u0649\u064a\u0649\u0646|\u0626\u0627\u062e\u0634\u0649\u0645|\u0643\u0649\u0686\u06d5))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u0626\u06d5/i,
                            pm: /^\u0686/i,
                            midnight: /^\u0643/i,
                            noon: /^\u0686/i,
                            morning: /\u0626\u06d5\u062a\u0649\u06af\u06d5\u0646/i,
                            afternoon: /\u0686\u06c8\u0634\u062a\u0649\u0646 \u0643\u0649\u064a\u0649\u0646/i,
                            evening: /\u0626\u0627\u062e\u0634\u0649\u0645/i,
                            night: /\u0643\u0649\u0686\u06d5/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        function ss(e, t) {
            if (void 0 !== e.one && 1 === t)
                return e.one;
            const n = t % 10
              , a = t % 100;
            return 1 === n && 11 !== a ? e.singularNominative.replace("{{count}}", String(t)) : n >= 2 && n <= 4 && (a < 10 || a > 20) ? e.singularGenitive.replace("{{count}}", String(t)) : e.pluralGenitive.replace("{{count}}", String(t))
        }
        function us(e) {
            return (t,n)=>n && n.addSuffix ? n.comparison && n.comparison > 0 ? e.future ? ss(e.future, t) : "\u0437\u0430 " + ss(e.regular, t) : e.past ? ss(e.past, t) : ss(e.regular, t) + " \u0442\u043e\u043c\u0443" : ss(e.regular, t)
        }
        const ds = {
            lessThanXSeconds: us({
                regular: {
                    one: "\u043c\u0435\u043d\u0448\u0435 \u0441\u0435\u043a\u0443\u043d\u0434\u0438",
                    singularNominative: "\u043c\u0435\u043d\u0448\u0435 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0438",
                    singularGenitive: "\u043c\u0435\u043d\u0448\u0435 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434",
                    pluralGenitive: "\u043c\u0435\u043d\u0448\u0435 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                },
                future: {
                    one: "\u043c\u0435\u043d\u0448\u0435, \u043d\u0456\u0436 \u0437\u0430 \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularNominative: "\u043c\u0435\u043d\u0448\u0435, \u043d\u0456\u0436 \u0437\u0430 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularGenitive: "\u043c\u0435\u043d\u0448\u0435, \u043d\u0456\u0436 \u0437\u0430 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0438",
                    pluralGenitive: "\u043c\u0435\u043d\u0448\u0435, \u043d\u0456\u0436 \u0437\u0430 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                }
            }),
            xSeconds: us({
                regular: {
                    singularNominative: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0430",
                    singularGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0438",
                    pluralGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                },
                past: {
                    singularNominative: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0443 \u0442\u043e\u043c\u0443",
                    singularGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0438 \u0442\u043e\u043c\u0443",
                    pluralGenitive: "{{count}} \u0441\u0435\u043a\u0443\u043d\u0434 \u0442\u043e\u043c\u0443"
                },
                future: {
                    singularNominative: "\u0437\u0430 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0443",
                    singularGenitive: "\u0437\u0430 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434\u0438",
                    pluralGenitive: "\u0437\u0430 {{count}} \u0441\u0435\u043a\u0443\u043d\u0434"
                }
            }),
            halfAMinute: (e,t)=>t && t.addSuffix ? t.comparison && t.comparison > 0 ? "\u0437\u0430 \u043f\u0456\u0432\u0445\u0432\u0438\u043b\u0438\u043d\u0438" : "\u043f\u0456\u0432\u0445\u0432\u0438\u043b\u0438\u043d\u0438 \u0442\u043e\u043c\u0443" : "\u043f\u0456\u0432\u0445\u0432\u0438\u043b\u0438\u043d\u0438",
            lessThanXMinutes: us({
                regular: {
                    one: "\u043c\u0435\u043d\u0448\u0435 \u0445\u0432\u0438\u043b\u0438\u043d\u0438",
                    singularNominative: "\u043c\u0435\u043d\u0448\u0435 {{count}} \u0445\u0432\u0438\u043b\u0438\u043d\u0438",
                    singularGenitive: "\u043c\u0435\u043d\u0448\u0435 {{count}} \u0445\u0432\u0438\u043b\u0438\u043d",
                    pluralGenitive: "\u043c\u0435\u043d\u0448\u0435 {{count}} \u0445\u0432\u0438\u043b\u0438\u043d"
                },
                future: {
                    one: "\u043c\u0435\u043d\u0448\u0435, \u043d\u0456\u0436 \u0437\u0430 \u0445\u0432\u0438\u043b\u0438\u043d\u0443",
                    singularNominative: "\u043c\u0435\u043d\u0448\u0435, \u043d\u0456\u0436 \u0437\u0430 {{count}} \u0445\u0432\u0438\u043b\u0438\u043d\u0443",
                    singularGenitive: "\u043c\u0435\u043d\u0448\u0435, \u043d\u0456\u0436 \u0437\u0430 {{count}} \u0445\u0432\u0438\u043b\u0438\u043d\u0438",
                    pluralGenitive: "\u043c\u0435\u043d\u0448\u0435, \u043d\u0456\u0436 \u0437\u0430 {{count}} \u0445\u0432\u0438\u043b\u0438\u043d"
                }
            }),
            xMinutes: us({
                regular: {
                    singularNominative: "{{count}} \u0445\u0432\u0438\u043b\u0438\u043d\u0430",
                    singularGenitive: "{{count}} \u0445\u0432\u0438\u043b\u0438\u043d\u0438",
                    pluralGenitive: "{{count}} \u0445\u0432\u0438\u043b\u0438\u043d"
                },
                past: {
                    singularNominative: "{{count}} \u0445\u0432\u0438\u043b\u0438\u043d\u0443 \u0442\u043e\u043c\u0443",
                    singularGenitive: "{{count}} \u0445\u0432\u0438\u043b\u0438\u043d\u0438 \u0442\u043e\u043c\u0443",
                    pluralGenitive: "{{count}} \u0445\u0432\u0438\u043b\u0438\u043d \u0442\u043e\u043c\u0443"
                },
                future: {
                    singularNominative: "\u0437\u0430 {{count}} \u0445\u0432\u0438\u043b\u0438\u043d\u0443",
                    singularGenitive: "\u0437\u0430 {{count}} \u0445\u0432\u0438\u043b\u0438\u043d\u0438",
                    pluralGenitive: "\u0437\u0430 {{count}} \u0445\u0432\u0438\u043b\u0438\u043d"
                }
            }),
            aboutXHours: us({
                regular: {
                    singularNominative: "\u0431\u043b\u0438\u0437\u044c\u043a\u043e {{count}} \u0433\u043e\u0434\u0438\u043d\u0438",
                    singularGenitive: "\u0431\u043b\u0438\u0437\u044c\u043a\u043e {{count}} \u0433\u043e\u0434\u0438\u043d",
                    pluralGenitive: "\u0431\u043b\u0438\u0437\u044c\u043a\u043e {{count}} \u0433\u043e\u0434\u0438\u043d"
                },
                future: {
                    singularNominative: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u043d\u043e \u0437\u0430 {{count}} \u0433\u043e\u0434\u0438\u043d\u0443",
                    singularGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u043d\u043e \u0437\u0430 {{count}} \u0433\u043e\u0434\u0438\u043d\u0438",
                    pluralGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u043d\u043e \u0437\u0430 {{count}} \u0433\u043e\u0434\u0438\u043d"
                }
            }),
            xHours: us({
                regular: {
                    singularNominative: "{{count}} \u0433\u043e\u0434\u0438\u043d\u0443",
                    singularGenitive: "{{count}} \u0433\u043e\u0434\u0438\u043d\u0438",
                    pluralGenitive: "{{count}} \u0433\u043e\u0434\u0438\u043d"
                }
            }),
            xDays: us({
                regular: {
                    singularNominative: "{{count}} \u0434\u0435\u043d\u044c",
                    singularGenitive: "{{count}} \u0434\u043di",
                    pluralGenitive: "{{count}} \u0434\u043d\u0456\u0432"
                }
            }),
            aboutXWeeks: us({
                regular: {
                    singularNominative: "\u0431\u043b\u0438\u0437\u044c\u043a\u043e {{count}} \u0442\u0438\u0436\u043d\u044f",
                    singularGenitive: "\u0431\u043b\u0438\u0437\u044c\u043a\u043e {{count}} \u0442\u0438\u0436\u043d\u0456\u0432",
                    pluralGenitive: "\u0431\u043b\u0438\u0437\u044c\u043a\u043e {{count}} \u0442\u0438\u0436\u043d\u0456\u0432"
                },
                future: {
                    singularNominative: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u043d\u043e \u0437\u0430 {{count}} \u0442\u0438\u0436\u0434\u0435\u043d\u044c",
                    singularGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u043d\u043e \u0437\u0430 {{count}} \u0442\u0438\u0436\u043d\u0456",
                    pluralGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u043d\u043e \u0437\u0430 {{count}} \u0442\u0438\u0436\u043d\u0456\u0432"
                }
            }),
            xWeeks: us({
                regular: {
                    singularNominative: "{{count}} \u0442\u0438\u0436\u0434\u0435\u043d\u044c",
                    singularGenitive: "{{count}} \u0442\u0438\u0436\u043d\u0456",
                    pluralGenitive: "{{count}} \u0442\u0438\u0436\u043d\u0456\u0432"
                }
            }),
            aboutXMonths: us({
                regular: {
                    singularNominative: "\u0431\u043b\u0438\u0437\u044c\u043a\u043e {{count}} \u043c\u0456\u0441\u044f\u0446\u044f",
                    singularGenitive: "\u0431\u043b\u0438\u0437\u044c\u043a\u043e {{count}} \u043c\u0456\u0441\u044f\u0446\u0456\u0432",
                    pluralGenitive: "\u0431\u043b\u0438\u0437\u044c\u043a\u043e {{count}} \u043c\u0456\u0441\u044f\u0446\u0456\u0432"
                },
                future: {
                    singularNominative: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u043d\u043e \u0437\u0430 {{count}} \u043c\u0456\u0441\u044f\u0446\u044c",
                    singularGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u043d\u043e \u0437\u0430 {{count}} \u043c\u0456\u0441\u044f\u0446\u0456",
                    pluralGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u043d\u043e \u0437\u0430 {{count}} \u043c\u0456\u0441\u044f\u0446\u0456\u0432"
                }
            }),
            xMonths: us({
                regular: {
                    singularNominative: "{{count}} \u043c\u0456\u0441\u044f\u0446\u044c",
                    singularGenitive: "{{count}} \u043c\u0456\u0441\u044f\u0446\u0456",
                    pluralGenitive: "{{count}} \u043c\u0456\u0441\u044f\u0446\u0456\u0432"
                }
            }),
            aboutXYears: us({
                regular: {
                    singularNominative: "\u0431\u043b\u0438\u0437\u044c\u043a\u043e {{count}} \u0440\u043e\u043a\u0443",
                    singularGenitive: "\u0431\u043b\u0438\u0437\u044c\u043a\u043e {{count}} \u0440\u043e\u043a\u0456\u0432",
                    pluralGenitive: "\u0431\u043b\u0438\u0437\u044c\u043a\u043e {{count}} \u0440\u043e\u043a\u0456\u0432"
                },
                future: {
                    singularNominative: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u043d\u043e \u0437\u0430 {{count}} \u0440\u0456\u043a",
                    singularGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u043d\u043e \u0437\u0430 {{count}} \u0440\u043e\u043a\u0438",
                    pluralGenitive: "\u043f\u0440\u0438\u0431\u043b\u0438\u0437\u043d\u043e \u0437\u0430 {{count}} \u0440\u043e\u043a\u0456\u0432"
                }
            }),
            xYears: us({
                regular: {
                    singularNominative: "{{count}} \u0440\u0456\u043a",
                    singularGenitive: "{{count}} \u0440\u043e\u043a\u0438",
                    pluralGenitive: "{{count}} \u0440\u043e\u043a\u0456\u0432"
                }
            }),
            overXYears: us({
                regular: {
                    singularNominative: "\u0431\u0456\u043b\u044c\u0448\u0435 {{count}} \u0440\u043e\u043a\u0443",
                    singularGenitive: "\u0431\u0456\u043b\u044c\u0448\u0435 {{count}} \u0440\u043e\u043a\u0456\u0432",
                    pluralGenitive: "\u0431\u0456\u043b\u044c\u0448\u0435 {{count}} \u0440\u043e\u043a\u0456\u0432"
                },
                future: {
                    singularNominative: "\u0431\u0456\u043b\u044c\u0448\u0435, \u043d\u0456\u0436 \u0437\u0430 {{count}} \u0440\u0456\u043a",
                    singularGenitive: "\u0431\u0456\u043b\u044c\u0448\u0435, \u043d\u0456\u0436 \u0437\u0430 {{count}} \u0440\u043e\u043a\u0438",
                    pluralGenitive: "\u0431\u0456\u043b\u044c\u0448\u0435, \u043d\u0456\u0436 \u0437\u0430 {{count}} \u0440\u043e\u043a\u0456\u0432"
                }
            }),
            almostXYears: us({
                regular: {
                    singularNominative: "\u043c\u0430\u0439\u0436\u0435 {{count}} \u0440\u0456\u043a",
                    singularGenitive: "\u043c\u0430\u0439\u0436\u0435 {{count}} \u0440\u043e\u043a\u0438",
                    pluralGenitive: "\u043c\u0430\u0439\u0436\u0435 {{count}} \u0440\u043e\u043a\u0456\u0432"
                },
                future: {
                    singularNominative: "\u043c\u0430\u0439\u0436\u0435 \u0437\u0430 {{count}} \u0440\u0456\u043a",
                    singularGenitive: "\u043c\u0430\u0439\u0436\u0435 \u0437\u0430 {{count}} \u0440\u043e\u043a\u0438",
                    pluralGenitive: "\u043c\u0430\u0439\u0436\u0435 \u0437\u0430 {{count}} \u0440\u043e\u043a\u0456\u0432"
                }
            })
        }
          , ls = {
            date: r({
                formats: {
                    full: "EEEE, do MMMM y '\u0440.'",
                    long: "do MMMM y '\u0440.'",
                    medium: "d MMM y '\u0440.'",
                    short: "dd.MM.y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "H:mm:ss zzzz",
                    long: "H:mm:ss z",
                    medium: "H:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} '\u043e' {{time}}",
                    long: "{{date}} '\u043e' {{time}}",
                    medium: "{{date}}, {{time}}",
                    short: "{{date}}, {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , cs = ["\u043d\u0435\u0434\u0456\u043b\u044e", "\u043f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0432\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0441\u0435\u0440\u0435\u0434\u0443", "\u0447\u0435\u0442\u0432\u0435\u0440", "\u043f\u2019\u044f\u0442\u043d\u0438\u0446\u044e", "\u0441\u0443\u0431\u043e\u0442\u0443"];
        function ms(e) {
            return "'\u0443 " + cs[e] + " \u043e' p"
        }
        const hs = {
            lastWeek: (e,t,n)=>{
                const a = q(e)
                  , r = a.getDay();
                return $(a, t, n) ? ms(r) : function(e) {
                    const t = cs[e];
                    switch (e) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return "'\u0443 \u043c\u0438\u043d\u0443\u043b\u0443 " + t + " \u043e' p";
                    case 1:
                    case 2:
                    case 4:
                        return "'\u0443 \u043c\u0438\u043d\u0443\u043b\u0438\u0439 " + t + " \u043e' p"
                    }
                }(r)
            }
            ,
            yesterday: "'\u0432\u0447\u043e\u0440\u0430 \u043e' p",
            today: "'\u0441\u044c\u043e\u0433\u043e\u0434\u043d\u0456 \u043e' p",
            tomorrow: "'\u0437\u0430\u0432\u0442\u0440\u0430 \u043e' p",
            nextWeek: (e,t,n)=>{
                const a = q(e)
                  , r = a.getDay();
                return $(a, t, n) ? ms(r) : function(e) {
                    const t = cs[e];
                    switch (e) {
                    case 0:
                    case 3:
                    case 5:
                    case 6:
                        return "'\u0443 \u043d\u0430\u0441\u0442\u0443\u043f\u043d\u0443 " + t + " \u043e' p";
                    case 1:
                    case 2:
                    case 4:
                        return "'\u0443 \u043d\u0430\u0441\u0442\u0443\u043f\u043d\u0438\u0439 " + t + " \u043e' p"
                    }
                }(r)
            }
            ,
            other: "P"
        }
          , fs = {
            code: "uk",
            formatDistance: (e,t,n)=>(n = n || {},
            ds[e](t, n)),
            formatLong: ls,
            formatRelative: (e,t,n,a)=>{
                const r = hs[e];
                return "function" === typeof r ? r(t, n, a) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = String(t?.unit)
                      , a = Number(e);
                    let r;
                    return r = "date" === n ? 3 === a || 23 === a ? "-\u0454" : "-\u0435" : "minute" === n || "second" === n || "hour" === n ? "-\u0430" : "-\u0439",
                    a + r
                }
                ,
                era: s({
                    values: {
                        narrow: ["\u0434\u043e \u043d.\u0435.", "\u043d.\u0435."],
                        abbreviated: ["\u0434\u043e \u043d. \u0435.", "\u043d. \u0435."],
                        wide: ["\u0434\u043e \u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438", "\u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1-\u0439 \u043a\u0432.", "2-\u0439 \u043a\u0432.", "3-\u0439 \u043a\u0432.", "4-\u0439 \u043a\u0432."],
                        wide: ["1-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "2-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "3-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "4-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"],
                        abbreviated: ["\u0441\u0456\u0447.", "\u043b\u044e\u0442.", "\u0431\u0435\u0440\u0435\u0437.", "\u043a\u0432\u0456\u0442.", "\u0442\u0440\u0430\u0432.", "\u0447\u0435\u0440\u0432.", "\u043b\u0438\u043f.", "\u0441\u0435\u0440\u043f.", "\u0432\u0435\u0440\u0435\u0441.", "\u0436\u043e\u0432\u0442.", "\u043b\u0438\u0441\u0442\u043e\u043f.", "\u0433\u0440\u0443\u0434."],
                        wide: ["\u0441\u0456\u0447\u0435\u043d\u044c", "\u043b\u044e\u0442\u0438\u0439", "\u0431\u0435\u0440\u0435\u0437\u0435\u043d\u044c", "\u043a\u0432\u0456\u0442\u0435\u043d\u044c", "\u0442\u0440\u0430\u0432\u0435\u043d\u044c", "\u0447\u0435\u0440\u0432\u0435\u043d\u044c", "\u043b\u0438\u043f\u0435\u043d\u044c", "\u0441\u0435\u0440\u043f\u0435\u043d\u044c", "\u0432\u0435\u0440\u0435\u0441\u0435\u043d\u044c", "\u0436\u043e\u0432\u0442\u0435\u043d\u044c", "\u043b\u0438\u0441\u0442\u043e\u043f\u0430\u0434", "\u0433\u0440\u0443\u0434\u0435\u043d\u044c"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"],
                        abbreviated: ["\u0441\u0456\u0447.", "\u043b\u044e\u0442.", "\u0431\u0435\u0440\u0435\u0437.", "\u043a\u0432\u0456\u0442.", "\u0442\u0440\u0430\u0432.", "\u0447\u0435\u0440\u0432.", "\u043b\u0438\u043f.", "\u0441\u0435\u0440\u043f.", "\u0432\u0435\u0440\u0435\u0441.", "\u0436\u043e\u0432\u0442.", "\u043b\u0438\u0441\u0442\u043e\u043f.", "\u0433\u0440\u0443\u0434."],
                        wide: ["\u0441\u0456\u0447\u043d\u044f", "\u043b\u044e\u0442\u043e\u0433\u043e", "\u0431\u0435\u0440\u0435\u0437\u043d\u044f", "\u043a\u0432\u0456\u0442\u043d\u044f", "\u0442\u0440\u0430\u0432\u043d\u044f", "\u0447\u0435\u0440\u0432\u043d\u044f", "\u043b\u0438\u043f\u043d\u044f", "\u0441\u0435\u0440\u043f\u043d\u044f", "\u0432\u0435\u0440\u0435\u0441\u043d\u044f", "\u0436\u043e\u0432\u0442\u043d\u044f", "\u043b\u0438\u0441\u0442\u043e\u043f\u0430\u0434\u0430", "\u0433\u0440\u0443\u0434\u043d\u044f"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"],
                        short: ["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"],
                        abbreviated: ["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0432\u0456\u0432", "\u0441\u0435\u0440", "\u0447\u0442\u0432", "\u043f\u0442\u043d", "\u0441\u0443\u0431"],
                        wide: ["\u043d\u0435\u0434\u0456\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0432\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0441\u0435\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0435\u0440", "\u043f\u2019\u044f\u0442\u043d\u0438\u0446\u044f", "\u0441\u0443\u0431\u043e\u0442\u0430"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u0456\u0432\u043d.",
                            noon: "\u043f\u043e\u043b.",
                            morning: "\u0440\u0430\u043d\u043e\u043a",
                            afternoon: "\u0434\u0435\u043d\u044c",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u0456\u0447"
                        },
                        abbreviated: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u0456\u0432\u043d.",
                            noon: "\u043f\u043e\u043b.",
                            morning: "\u0440\u0430\u043d\u043e\u043a",
                            afternoon: "\u0434\u0435\u043d\u044c",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u0456\u0447"
                        },
                        wide: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u0456\u0432\u043d\u0456\u0447",
                            noon: "\u043f\u043e\u043b\u0443\u0434\u0435\u043d\u044c",
                            morning: "\u0440\u0430\u043d\u043e\u043a",
                            afternoon: "\u0434\u0435\u043d\u044c",
                            evening: "\u0432\u0435\u0447\u0456\u0440",
                            night: "\u043d\u0456\u0447"
                        }
                    },
                    defaultWidth: "any",
                    formattingValues: {
                        narrow: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u0456\u0432\u043d.",
                            noon: "\u043f\u043e\u043b.",
                            morning: "\u0440\u0430\u043d\u043a\u0443",
                            afternoon: "\u0434\u043d\u044f",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u043e\u0447\u0456"
                        },
                        abbreviated: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u0456\u0432\u043d.",
                            noon: "\u043f\u043e\u043b.",
                            morning: "\u0440\u0430\u043d\u043a\u0443",
                            afternoon: "\u0434\u043d\u044f",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u043e\u0447\u0456"
                        },
                        wide: {
                            am: "\u0414\u041f",
                            pm: "\u041f\u041f",
                            midnight: "\u043f\u0456\u0432\u043d\u0456\u0447",
                            noon: "\u043f\u043e\u043b\u0443\u0434\u0435\u043d\u044c",
                            morning: "\u0440\u0430\u043d\u043a\u0443",
                            afternoon: "\u0434\u043d\u044f",
                            evening: "\u0432\u0435\u0447.",
                            night: "\u043d\u043e\u0447\u0456"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(-?(\u0435|\u0439|\u0454|\u0430|\u044f))?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^((\u0434\u043e )?\u043d\.?\s?\u0435\.?)/i,
                        abbreviated: /^((\u0434\u043e )?\u043d\.?\s?\u0435\.?)/i,
                        wide: /^(\u0434\u043e \u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438|\u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438|\u043d\u0430\u0448\u0430 \u0435\u0440\u0430)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u0434/i, /^\u043d/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234](-?[\u0438\u0456]?\u0439?)? \u043a\u0432.?/i,
                        wide: /^[1234](-?[\u0438\u0456]?\u0439?)? \u043a\u0432\u0430\u0440\u0442\u0430\u043b/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[\u0441\u043b\u0431\u043a\u0442\u0447\u0432\u0436\u0433]/i,
                        abbreviated: /^(\u0441\u0456\u0447|\u043b\u044e\u0442|\u0431\u0435\u0440(\u0435\u0437)?|\u043a\u0432\u0456\u0442|\u0442\u0440\u0430\u0432|\u0447\u0435\u0440\u0432|\u043b\u0438\u043f|\u0441\u0435\u0440\u043f|\u0432\u0435\u0440(\u0435\u0441)?|\u0436\u043e\u0432\u0442|\u043b\u0438\u0441(\u0442\u043e\u043f)?|\u0433\u0440\u0443\u0434)\.?/i,
                        wide: /^(\u0441\u0456\u0447\u0435\u043d\u044c|\u0441\u0456\u0447\u043d\u044f|\u043b\u044e\u0442\u0438\u0439|\u043b\u044e\u0442\u043e\u0433\u043e|\u0431\u0435\u0440\u0435\u0437\u0435\u043d\u044c|\u0431\u0435\u0440\u0435\u0437\u043d\u044f|\u043a\u0432\u0456\u0442\u0435\u043d\u044c|\u043a\u0432\u0456\u0442\u043d\u044f|\u0442\u0440\u0430\u0432\u0435\u043d\u044c|\u0442\u0440\u0430\u0432\u043d\u044f|\u0447\u0435\u0440\u0432\u043d\u044f|\u0447\u0435\u0440\u0432\u0435\u043d\u044c|\u043b\u0438\u043f\u0435\u043d\u044c|\u043b\u0438\u043f\u043d\u044f|\u0441\u0435\u0440\u043f\u0435\u043d\u044c|\u0441\u0435\u0440\u043f\u043d\u044f|\u0432\u0435\u0440\u0435\u0441\u0435\u043d\u044c|\u0432\u0435\u0440\u0435\u0441\u043d\u044f|\u0436\u043e\u0432\u0442\u0435\u043d\u044c|\u0436\u043e\u0432\u0442\u043d\u044f|\u043b\u0438\u0441\u0442\u043e\u043f\u0430\u0434[\u0430]?|\u0433\u0440\u0443\u0434\u0435\u043d\u044c|\u0433\u0440\u0443\u0434\u043d\u044f)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u0441/i, /^\u043b/i, /^\u0431/i, /^\u043a/i, /^\u0442/i, /^\u0447/i, /^\u043b/i, /^\u0441/i, /^\u0432/i, /^\u0436/i, /^\u043b/i, /^\u0433/i],
                        any: [/^\u0441\u0456/i, /^\u043b\u044e/i, /^\u0431/i, /^\u043a/i, /^\u0442/i, /^\u0447/i, /^\u043b\u0438\u043f/i, /^\u0441\u0435/i, /^\u0432/i, /^\u0436/i, /^\u043b\u0438\u0441/i, /^\u0433/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u043d\u043f\u0432\u0441\u0447]/i,
                        short: /^(\u043d\u0434|\u043f\u043d|\u0432\u0442|\u0441\u0440|\u0447\u0442|\u043f\u0442|\u0441\u0431)\.?/i,
                        abbreviated: /^(\u043d\u0435\u0434|\u043f\u043e\u043d|\u0432\u0456\u0432|\u0441\u0435\u0440|\u0447\u0435?\u0442\u0432|\u043f\u0442\u043d?|\u0441\u0443\u0431)\.?/i,
                        wide: /^(\u043d\u0435\u0434\u0456\u043b[\u044f\u0456]|\u043f\u043e\u043d\u0435\u0434\u0456\u043b[\u043e\u043a][\u043a\u0430]|\u0432\u0456\u0432\u0442\u043e\u0440[\u043e\u043a][\u043a\u0430]|\u0441\u0435\u0440\u0435\u0434[\u0430\u0438]|\u0447\u0435\u0442\u0432\u0435\u0440(\u0433\u0430)?|\u043f\W*?\u044f\u0442\u043d\u0438\u0446[\u044f\u0456]|\u0441\u0443\u0431\u043e\u0442[\u0430\u0438])/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u043d/i, /^\u043f/i, /^\u0432/i, /^\u0441/i, /^\u0447/i, /^\u043f/i, /^\u0441/i],
                        any: [/^\u043d/i, /^\u043f[\u043e\u043d]/i, /^\u0432/i, /^\u0441[\u0435\u0440]/i, /^\u0447/i, /^\u043f\W*?[\u044f\u0442]/i, /^\u0441[\u0443\u0431]/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^([\u0434\u043f]\u043f|\u043f\u0456\u0432\u043d\.?|\u043f\u043e\u043b\.?|\u0440\u0430\u043d\u043e\u043a|\u0440\u0430\u043d\u043a\u0443|\u0434\u0435\u043d\u044c|\u0434\u043d\u044f|\u0432\u0435\u0447\.?|\u043d\u0456\u0447|\u043d\u043e\u0447\u0456)/i,
                        abbreviated: /^([\u0434\u043f]\u043f|\u043f\u0456\u0432\u043d\.?|\u043f\u043e\u043b\.?|\u0440\u0430\u043d\u043e\u043a|\u0440\u0430\u043d\u043a\u0443|\u0434\u0435\u043d\u044c|\u0434\u043d\u044f|\u0432\u0435\u0447\.?|\u043d\u0456\u0447|\u043d\u043e\u0447\u0456)/i,
                        wide: /^([\u0434\u043f]\u043f|\u043f\u0456\u0432\u043d\u0456\u0447|\u043f\u043e\u043b\u0443\u0434\u0435\u043d\u044c|\u0440\u0430\u043d\u043e\u043a|\u0440\u0430\u043d\u043a\u0443|\u0434\u0435\u043d\u044c|\u0434\u043d\u044f|\u0432\u0435\u0447\u0456\u0440|\u0432\u0435\u0447\u043e\u0440\u0430|\u043d\u0456\u0447|\u043d\u043e\u0447\u0456)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: {
                            am: /^\u0434\u043f/i,
                            pm: /^\u043f\u043f/i,
                            midnight: /^\u043f\u0456\u0432\u043d/i,
                            noon: /^\u043f\u043e\u043b/i,
                            morning: /^\u0440/i,
                            afternoon: /^\u0434[\u0435\u043d]/i,
                            evening: /^\u0432/i,
                            night: /^\u043d/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const ps = {
            lessThanXSeconds: {
                one: "sekunddan kam",
                other: "{{count}} sekunddan kam"
            },
            xSeconds: {
                one: "1 sekund",
                other: "{{count}} sekund"
            },
            halfAMinute: "yarim minut",
            lessThanXMinutes: {
                one: "bir minutdan kam",
                other: "{{count}} minutdan kam"
            },
            xMinutes: {
                one: "1 minut",
                other: "{{count}} minut"
            },
            aboutXHours: {
                one: "tahminan 1 soat",
                other: "tahminan {{count}} soat"
            },
            xHours: {
                one: "1 soat",
                other: "{{count}} soat"
            },
            xDays: {
                one: "1 kun",
                other: "{{count}} kun"
            },
            aboutXWeeks: {
                one: "tahminan 1 hafta",
                other: "tahminan {{count}} hafta"
            },
            xWeeks: {
                one: "1 hafta",
                other: "{{count}} hafta"
            },
            aboutXMonths: {
                one: "tahminan 1 oy",
                other: "tahminan {{count}} oy"
            },
            xMonths: {
                one: "1 oy",
                other: "{{count}} oy"
            },
            aboutXYears: {
                one: "tahminan 1 yil",
                other: "tahminan {{count}} yil"
            },
            xYears: {
                one: "1 yil",
                other: "{{count}} yil"
            },
            overXYears: {
                one: "1 yildan ko'p",
                other: "{{count}} yildan ko'p"
            },
            almostXYears: {
                one: "deyarli 1 yil",
                other: "deyarli {{count}} yil"
            }
        }
          , gs = {
            date: r({
                formats: {
                    full: "EEEE, do MMMM, y",
                    long: "do MMMM, y",
                    medium: "d MMM, y",
                    short: "dd/MM/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "h:mm:ss zzzz",
                    long: "h:mm:ss z",
                    medium: "h:mm:ss",
                    short: "h:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    any: "{{date}}, {{time}}"
                },
                defaultWidth: "any"
            })
        }
          , vs = {
            lastWeek: "'oldingi' eeee p 'da'",
            yesterday: "'kecha' p 'da'",
            today: "'bugun' p 'da'",
            tomorrow: "'ertaga' p 'da'",
            nextWeek: "eeee p 'da'",
            other: "P"
        }
          , ws = {
            code: "uz",
            formatDistance: (e,t,n)=>{
                let a;
                const r = ps[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? a + " dan keyin" : a + " oldin" : a
            }
            ,
            formatLong: gs,
            formatRelative: (e,t,n,a)=>vs[e],
            localize: {
                ordinalNumber: (e,t)=>String(e),
                era: s({
                    values: {
                        narrow: ["M.A", "M."],
                        abbreviated: ["M.A", "M."],
                        wide: ["Miloddan Avvalgi", "Milodiy"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["CH.1", "CH.2", "CH.3", "CH.4"],
                        wide: ["1-chi chorak", "2-chi chorak", "3-chi chorak", "4-chi chorak"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"],
                        abbreviated: ["Yan", "Fev", "Mar", "Apr", "May", "Iyun", "Iyul", "Avg", "Sen", "Okt", "Noy", "Dek"],
                        wide: ["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avgust", "Sentabr", "Oktabr", "Noyabr", "Dekabr"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["Y", "D", "S", "CH", "P", "J", "SH"],
                        short: ["Ya", "Du", "Se", "Cho", "Pa", "Ju", "Sha"],
                        abbreviated: ["Yak", "Dush", "Sesh", "Chor", "Pay", "Jum", "Shan"],
                        wide: ["Yakshanba", "Dushanba", "Seshanba", "Chorshanba", "Payshanba", "Juma", "Shanba"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "y.t",
                            noon: "p.",
                            morning: "ertalab",
                            afternoon: "tushdan keyin",
                            evening: "kechqurun",
                            night: "tun"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "yarim tun",
                            noon: "peshin",
                            morning: "ertalab",
                            afternoon: "tushdan keyin",
                            evening: "kechqurun",
                            night: "tun"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "yarim tun",
                            noon: "peshin",
                            morning: "ertalab",
                            afternoon: "tushdan keyin",
                            evening: "kechqurun",
                            night: "tun"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "a",
                            pm: "p",
                            midnight: "y.t",
                            noon: "p.",
                            morning: "ertalab",
                            afternoon: "tushdan keyin",
                            evening: "kechqurun",
                            night: "tun"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "yarim tun",
                            noon: "peshin",
                            morning: "ertalab",
                            afternoon: "tushdan keyin",
                            evening: "kechqurun",
                            night: "tun"
                        },
                        wide: {
                            am: "a.m.",
                            pm: "p.m.",
                            midnight: "yarim tun",
                            noon: "peshin",
                            morning: "ertalab",
                            afternoon: "tushdan keyin",
                            evening: "kechqurun",
                            night: "tun"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(chi)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(m\.a|m\.)/i,
                        abbreviated: /^(m\.a\.?\s?m\.?)/i,
                        wide: /^(miloddan avval|miloddan keyin)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^b/i, /^(a|c)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^q[1234]/i,
                        wide: /^[1234](chi)? chorak/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[yfmasond]/i,
                        abbreviated: /^(yan|fev|mar|apr|may|iyun|iyul|avg|sen|okt|noy|dek)/i,
                        wide: /^(yanvar|fevral|mart|aprel|may|iyun|iyul|avgust|sentabr|oktabr|noyabr|dekabr)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^y/i, /^f/i, /^m/i, /^a/i, /^m/i, /^i/i, /^i/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
                        any: [/^ya/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^iyun/i, /^iyul/i, /^av/i, /^s/i, /^o/i, /^n/i, /^d/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[ydschj]/i,
                        short: /^(ya|du|se|cho|pa|ju|sha)/i,
                        abbreviated: /^(yak|dush|sesh|chor|pay|jum|shan)/i,
                        wide: /^(yakshanba|dushanba|seshanba|chorshanba|payshanba|juma|shanba)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^y/i, /^d/i, /^s/i, /^ch/i, /^p/i, /^j/i, /^sh/i],
                        any: [/^ya/i, /^d/i, /^se/i, /^ch/i, /^p/i, /^j/i, /^sh/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|y\.t|p| (ertalab|tushdan keyin|kechqurun|tun))/i,
                        any: /^([ap]\.?\s?m\.?|yarim tun|peshin| (ertalab|tushdan keyin|kechqurun|tun))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^a/i,
                            pm: /^p/i,
                            midnight: /^y\.t/i,
                            noon: /^pe/i,
                            morning: /ertalab/i,
                            afternoon: /tushdan keyin/i,
                            evening: /kechqurun/i,
                            night: /tun/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const bs = {
            lessThanXSeconds: {
                one: "1 \u0441\u043e\u043d\u0438\u044f\u0434\u0430\u043d \u043a\u0430\u043c",
                other: "{{count}} \u0441\u043e\u043d\u0438\u044f\u0434\u0430\u043d \u043a\u0430\u043c"
            },
            xSeconds: {
                one: "1 \u0441\u043e\u043d\u0438\u044f",
                other: "{{count}} \u0441\u043e\u043d\u0438\u044f"
            },
            halfAMinute: "\u044f\u0440\u0438\u043c \u0434\u0430\u049b\u0438\u049b\u0430",
            lessThanXMinutes: {
                one: "1 \u0434\u0430\u049b\u0438\u049b\u0430\u0434\u0430\u043d \u043a\u0430\u043c",
                other: "{{count}} \u0434\u0430\u049b\u0438\u049b\u0430\u0434\u0430\u043d \u043a\u0430\u043c"
            },
            xMinutes: {
                one: "1 \u0434\u0430\u049b\u0438\u049b\u0430",
                other: "{{count}} \u0434\u0430\u049b\u0438\u049b\u0430"
            },
            aboutXHours: {
                one: "\u0442\u0430\u0445\u043c\u0438\u043d\u0430\u043d 1 \u0441\u043e\u0430\u0442",
                other: "\u0442\u0430\u0445\u043c\u0438\u043d\u0430\u043d {{count}} \u0441\u043e\u0430\u0442"
            },
            xHours: {
                one: "1 \u0441\u043e\u0430\u0442",
                other: "{{count}} \u0441\u043e\u0430\u0442"
            },
            xDays: {
                one: "1 \u043a\u0443\u043d",
                other: "{{count}} \u043a\u0443\u043d"
            },
            aboutXWeeks: {
                one: "\u0442\u0430\u0445\u043c\u0438\u043d\u0430\u043d 1 \u0445\u0430\u0444\u0442\u0430",
                other: "\u0442\u0430\u0445\u043c\u0438\u043d\u0430\u043d {{count}} \u0445\u0430\u0444\u0442\u0430"
            },
            xWeeks: {
                one: "1 \u0445\u0430\u0444\u0442\u0430",
                other: "{{count}} \u0445\u0430\u0444\u0442\u0430"
            },
            aboutXMonths: {
                one: "\u0442\u0430\u0445\u043c\u0438\u043d\u0430\u043d 1 \u043e\u0439",
                other: "\u0442\u0430\u0445\u043c\u0438\u043d\u0430\u043d {{count}} \u043e\u0439"
            },
            xMonths: {
                one: "1 \u043e\u0439",
                other: "{{count}} \u043e\u0439"
            },
            aboutXYears: {
                one: "\u0442\u0430\u0445\u043c\u0438\u043d\u0430\u043d 1 \u0439\u0438\u043b",
                other: "\u0442\u0430\u0445\u043c\u0438\u043d\u0430\u043d {{count}} \u0439\u0438\u043b"
            },
            xYears: {
                one: "1 \u0439\u0438\u043b",
                other: "{{count}} \u0439\u0438\u043b"
            },
            overXYears: {
                one: "1 \u0439\u0438\u043b\u0434\u0430\u043d \u043a\u045e\u043f",
                other: "{{count}} \u0439\u0438\u043b\u0434\u0430\u043d \u043a\u045e\u043f"
            },
            almostXYears: {
                one: "\u0434\u0435\u044f\u0440\u043b\u0438 1 \u0439\u0438\u043b",
                other: "\u0434\u0435\u044f\u0440\u043b\u0438 {{count}} \u0439\u0438\u043b"
            }
        }
          , ys = {
            date: r({
                formats: {
                    full: "EEEE, do MMMM, y",
                    long: "do MMMM, y",
                    medium: "d MMM, y",
                    short: "dd/MM/yyyy"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "H:mm:ss zzzz",
                    long: "H:mm:ss z",
                    medium: "H:mm:ss",
                    short: "H:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    any: "{{date}}, {{time}}"
                },
                defaultWidth: "any"
            })
        }
          , ks = {
            lastWeek: "'\u045e\u0442\u0433\u0430\u043d' eeee p '\u0434\u0430'",
            yesterday: "'\u043a\u0435\u0447\u0430' p '\u0434\u0430'",
            today: "'\u0431\u0443\u0433\u0443\u043d' p '\u0434\u0430'",
            tomorrow: "'\u044d\u0440\u0442\u0430\u0433\u0430' p '\u0434\u0430'",
            nextWeek: "eeee p '\u0434\u0430'",
            other: "P"
        }
          , Ms = {
            code: "uz-Cyrl",
            formatDistance: (e,t,n)=>{
                let a;
                const r = bs[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? a + "\u0434\u0430\u043d \u043a\u0435\u0439\u0438\u043d" : a + " \u043e\u043b\u0434\u0438\u043d" : a
            }
            ,
            formatLong: ys,
            formatRelative: (e,t,n,a)=>ks[e],
            localize: {
                ordinalNumber: (e,t)=>String(e),
                era: s({
                    values: {
                        narrow: ["\u041c.\u0410", "\u041c"],
                        abbreviated: ["\u041c.\u0410", "\u041c"],
                        wide: ["\u041c\u0438\u043b\u043e\u0434\u0434\u0430\u043d \u0410\u0432\u0432\u0430\u043b\u0433\u0438", "\u041c\u0438\u043b\u043e\u0434\u0438\u0439"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["1-\u0447\u043e\u0440.", "2-\u0447\u043e\u0440.", "3-\u0447\u043e\u0440.", "4-\u0447\u043e\u0440."],
                        wide: ["1-\u0447\u043e\u0440\u0430\u043a", "2-\u0447\u043e\u0440\u0430\u043a", "3-\u0447\u043e\u0440\u0430\u043a", "4-\u0447\u043e\u0440\u0430\u043a"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"],
                        abbreviated: ["\u044f\u043d\u0432", "\u0444\u0435\u0432", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0439", "\u0438\u044e\u043d", "\u0438\u044e\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043d", "\u043e\u043a\u0442", "\u043d\u043e\u044f", "\u0434\u0435\u043a"],
                        wide: ["\u044f\u043d\u0432\u0430\u0440", "\u0444\u0435\u0432\u0440\u0430\u043b", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0435\u043b", "\u043c\u0430\u0439", "\u0438\u044e\u043d", "\u0438\u044e\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043d\u0442\u0430\u0431\u0440", "\u043e\u043a\u0442\u0430\u0431\u0440", "\u043d\u043e\u044f\u0431\u0440", "\u0434\u0435\u043a\u0430\u0431\u0440"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u042f", "\u0414", "\u0421", "\u0427", "\u041f", "\u0416", "\u0428"],
                        short: ["\u044f\u043a", "\u0434\u0443", "\u0441\u0435", "\u0447\u043e", "\u043f\u0430", "\u0436\u0443", "\u0448\u0430"],
                        abbreviated: ["\u044f\u043a\u0448", "\u0434\u0443\u0448", "\u0441\u0435\u0448", "\u0447\u043e\u0440", "\u043f\u0430\u0439", "\u0436\u0443\u043c", "\u0448\u0430\u043d"],
                        wide: ["\u044f\u043a\u0448\u0430\u043d\u0431\u0430", "\u0434\u0443\u0448\u0430\u043d\u0431\u0430", "\u0441\u0435\u0448\u0430\u043d\u0431\u0430", "\u0447\u043e\u0440\u0448\u0430\u043d\u0431\u0430", "\u043f\u0430\u0439\u0448\u0430\u043d\u0431\u0430", "\u0436\u0443\u043c\u0430", "\u0448\u0430\u043d\u0431\u0430"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        any: {
                            am: "\u041f.\u041e.",
                            pm: "\u041f.\u041a.",
                            midnight: "\u044f\u0440\u0438\u043c \u0442\u0443\u043d",
                            noon: "\u043f\u0435\u0448\u0438\u043d",
                            morning: "\u044d\u0440\u0442\u0430\u043b\u0430\u0431",
                            afternoon: "\u043f\u0435\u0448\u0438\u043d\u0434\u0430\u043d \u043a\u0435\u0439\u0438\u043d",
                            evening: "\u043a\u0435\u0447\u0430\u0441\u0438",
                            night: "\u0442\u0443\u043d"
                        }
                    },
                    defaultWidth: "any",
                    formattingValues: {
                        any: {
                            am: "\u041f.\u041e.",
                            pm: "\u041f.\u041a.",
                            midnight: "\u044f\u0440\u0438\u043c \u0442\u0443\u043d",
                            noon: "\u043f\u0435\u0448\u0438\u043d",
                            morning: "\u044d\u0440\u0442\u0430\u043b\u0430\u0431",
                            afternoon: "\u043f\u0435\u0448\u0438\u043d\u0434\u0430\u043d \u043a\u0435\u0439\u0438\u043d",
                            evening: "\u043a\u0435\u0447\u0430\u0441\u0438",
                            night: "\u0442\u0443\u043d"
                        }
                    },
                    defaultFormattingWidth: "any"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)(\u0447\u0438)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u043c\.\u0430|\u043c\.)/i,
                        abbreviated: /^(\u043c\.\u0430|\u043c\.)/i,
                        wide: /^(\u043c\u0438\u043b\u043e\u0434\u0434\u0430\u043d \u0430\u0432\u0432\u0430\u043b|\u043c\u0438\u043b\u043e\u0434\u0434\u0430\u043d \u043a\u0435\u0439\u0438\u043d)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^\u043c/i, /^\u0430/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^[1234]-\u0447\u043e\u0440./i,
                        wide: /^[1234]-\u0447\u043e\u0440\u0430\u043a/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/1/i, /2/i, /3/i, /4/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^[\u044f\u0444\u043c\u0430\u043c\u0438\u0438\u0430\u0441\u043e\u043d\u0434]/i,
                        abbreviated: /^(\u044f\u043d\u0432|\u0444\u0435\u0432|\u043c\u0430\u0440|\u0430\u043f\u0440|\u043c\u0430\u0439|\u0438\u044e\u043d|\u0438\u044e\u043b|\u0430\u0432\u0433|\u0441\u0435\u043d|\u043e\u043a\u0442|\u043d\u043e\u044f|\u0434\u0435\u043a)/i,
                        wide: /^(\u044f\u043d\u0432\u0430\u0440|\u0444\u0435\u0432\u0440\u0430\u043b|\u043c\u0430\u0440\u0442|\u0430\u043f\u0440\u0435\u043b|\u043c\u0430\u0439|\u0438\u044e\u043d|\u0438\u044e\u043b|\u0430\u0432\u0433\u0443\u0441\u0442|\u0441\u0435\u043d\u0442\u0430\u0431\u0440|\u043e\u043a\u0442\u0430\u0431\u0440|\u043d\u043e\u044f\u0431\u0440|\u0434\u0435\u043a\u0430\u0431\u0440)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u044f/i, /^\u0444/i, /^\u043c/i, /^\u0430/i, /^\u043c/i, /^\u0438/i, /^\u0438/i, /^\u0430/i, /^\u0441/i, /^\u043e/i, /^\u043d/i, /^\u0434/i],
                        any: [/^\u044f/i, /^\u0444/i, /^\u043c\u0430\u0440/i, /^\u0430\u043f/i, /^\u043c\u0430\u0439/i, /^\u0438\u044e\u043d/i, /^\u0438\u044e\u043b/i, /^\u0430\u0432/i, /^\u0441/i, /^\u043e/i, /^\u043d/i, /^\u0434/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u044f\u0434\u0441\u0447\u043f\u0436\u0448]/i,
                        short: /^(\u044f\u043a|\u0434\u0443|\u0441\u0435|\u0447\u043e|\u043f\u0430|\u0436\u0443|\u0448\u0430)/i,
                        abbreviated: /^(\u044f\u043a\u0448|\u0434\u0443\u0448|\u0441\u0435\u0448|\u0447\u043e\u0440|\u043f\u0430\u0439|\u0436\u0443\u043c|\u0448\u0430\u043d)/i,
                        wide: /^(\u044f\u043a\u0448\u0430\u043d\u0431\u0430|\u0434\u0443\u0448\u0430\u043d\u0431\u0430|\u0441\u0435\u0448\u0430\u043d\u0431\u0430|\u0447\u043e\u0440\u0448\u0430\u043d\u0431\u0430|\u043f\u0430\u0439\u0448\u0430\u043d\u0431\u0430|\u0436\u0443\u043c\u0430|\u0448\u0430\u043d\u0431\u0430)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u044f/i, /^\u0434/i, /^\u0441/i, /^\u0447/i, /^\u043f/i, /^\u0436/i, /^\u0448/i],
                        any: [/^\u044f\u043a/i, /^\u0434\u0443/i, /^\u0441\u0435/i, /^\u0447\u043e\u0440/i, /^\u043f\u0430\u0439/i, /^\u0436\u0443/i, /^\u0448\u0430\u043d/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(\u043f\.\u043e\.|\u043f\.\u043a\.|\u044f\u0440\u0438\u043c \u0442\u0443\u043d|\u043f\u0435\u0448\u0438\u043d\u0434\u0430\u043d \u043a\u0435\u0439\u0438\u043d|(\u044d\u0440\u0442\u0430\u043b\u0430\u0431|\u043f\u0435\u0448\u0438\u043d\u0434\u0430\u043d \u043a\u0435\u0439\u0438\u043d|\u043a\u0435\u0447\u0430\u0441\u0438|\u0442\u0443\u043d))/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u043f\.\u043e\./i,
                            pm: /^\u043f\.\u043a\./i,
                            midnight: /^\u044f\u0440\u0438\u043c \u0442\u0443\u043d/i,
                            noon: /^\u043f\u0435\u0448\u0438\u043d\u0434\u0430\u043d \u043a\u0435\u0439\u0438\u043d/i,
                            morning: /\u044d\u0440\u0442\u0430\u043b\u0430\u0431/i,
                            afternoon: /\u043f\u0435\u0448\u0438\u043d\u0434\u0430\u043d \u043a\u0435\u0439\u0438\u043d/i,
                            evening: /\u043a\u0435\u0447\u0430\u0441\u0438/i,
                            night: /\u0442\u0443\u043d/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const Ps = {
            lessThanXSeconds: {
                one: "d\u01b0\u1edbi 1 gi\xe2y",
                other: "d\u01b0\u1edbi {{count}} gi\xe2y"
            },
            xSeconds: {
                one: "1 gi\xe2y",
                other: "{{count}} gi\xe2y"
            },
            halfAMinute: "n\u1eeda ph\xfat",
            lessThanXMinutes: {
                one: "d\u01b0\u1edbi 1 ph\xfat",
                other: "d\u01b0\u1edbi {{count}} ph\xfat"
            },
            xMinutes: {
                one: "1 ph\xfat",
                other: "{{count}} ph\xfat"
            },
            aboutXHours: {
                one: "kho\u1ea3ng 1 gi\u1edd",
                other: "kho\u1ea3ng {{count}} gi\u1edd"
            },
            xHours: {
                one: "1 gi\u1edd",
                other: "{{count}} gi\u1edd"
            },
            xDays: {
                one: "1 ng\xe0y",
                other: "{{count}} ng\xe0y"
            },
            aboutXWeeks: {
                one: "kho\u1ea3ng 1 tu\u1ea7n",
                other: "kho\u1ea3ng {{count}} tu\u1ea7n"
            },
            xWeeks: {
                one: "1 tu\u1ea7n",
                other: "{{count}} tu\u1ea7n"
            },
            aboutXMonths: {
                one: "kho\u1ea3ng 1 th\xe1ng",
                other: "kho\u1ea3ng {{count}} th\xe1ng"
            },
            xMonths: {
                one: "1 th\xe1ng",
                other: "{{count}} th\xe1ng"
            },
            aboutXYears: {
                one: "kho\u1ea3ng 1 n\u0103m",
                other: "kho\u1ea3ng {{count}} n\u0103m"
            },
            xYears: {
                one: "1 n\u0103m",
                other: "{{count}} n\u0103m"
            },
            overXYears: {
                one: "h\u01a1n 1 n\u0103m",
                other: "h\u01a1n {{count}} n\u0103m"
            },
            almostXYears: {
                one: "g\u1ea7n 1 n\u0103m",
                other: "g\u1ea7n {{count}} n\u0103m"
            }
        }
          , Ws = {
            date: r({
                formats: {
                    full: "EEEE, 'ng\xe0y' d MMMM 'n\u0103m' y",
                    long: "'ng\xe0y' d MMMM 'n\u0103m' y",
                    medium: "d MMM 'n\u0103m' y",
                    short: "dd/MM/y"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "HH:mm:ss zzzz",
                    long: "HH:mm:ss z",
                    medium: "HH:mm:ss",
                    short: "HH:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , xs = {
            lastWeek: "eeee 'tu\u1ea7n tr\u01b0\u1edbc v\xe0o l\xfac' p",
            yesterday: "'h\xf4m qua v\xe0o l\xfac' p",
            today: "'h\xf4m nay v\xe0o l\xfac' p",
            tomorrow: "'ng\xe0y mai v\xe0o l\xfac' p",
            nextWeek: "eeee 't\u1edbi v\xe0o l\xfac' p",
            other: "P"
        }
          , Ss = {
            code: "vi",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Ps[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? a + " n\u1eefa" : a + " tr\u01b0\u1edbc" : a
            }
            ,
            formatLong: Ws,
            formatRelative: (e,t,n,a)=>xs[e],
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e)
                      , a = t?.unit;
                    if ("quarter" === a)
                        switch (n) {
                        case 1:
                            return "I";
                        case 2:
                            return "II";
                        case 3:
                            return "III";
                        case 4:
                            return "IV"
                        }
                    else if ("day" === a)
                        switch (n) {
                        case 1:
                            return "th\u1ee9 2";
                        case 2:
                            return "th\u1ee9 3";
                        case 3:
                            return "th\u1ee9 4";
                        case 4:
                            return "th\u1ee9 5";
                        case 5:
                            return "th\u1ee9 6";
                        case 6:
                            return "th\u1ee9 7";
                        case 7:
                            return "ch\u1ee7 nh\u1eadt"
                        }
                    else {
                        if ("week" === a)
                            return 1 === n ? "th\u1ee9 nh\u1ea5t" : "th\u1ee9 " + n;
                        if ("dayOfYear" === a)
                            return 1 === n ? "\u0111\u1ea7u ti\xean" : "th\u1ee9 " + n
                    }
                    return String(n)
                }
                ,
                era: s({
                    values: {
                        narrow: ["TCN", "SCN"],
                        abbreviated: ["tr\u01b0\u1edbc CN", "sau CN"],
                        wide: ["tr\u01b0\u1edbc C\xf4ng Nguy\xean", "sau C\xf4ng Nguy\xean"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["Qu\xfd 1", "Qu\xfd 2", "Qu\xfd 3", "Qu\xfd 4"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["Q1", "Q2", "Q3", "Q4"],
                        wide: ["qu\xfd I", "qu\xfd II", "qu\xfd III", "qu\xfd IV"]
                    },
                    defaultFormattingWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"],
                        abbreviated: ["Thg 1", "Thg 2", "Thg 3", "Thg 4", "Thg 5", "Thg 6", "Thg 7", "Thg 8", "Thg 9", "Thg 10", "Thg 11", "Thg 12"],
                        wide: ["Th\xe1ng M\u1ed9t", "Th\xe1ng Hai", "Th\xe1ng Ba", "Th\xe1ng T\u01b0", "Th\xe1ng N\u0103m", "Th\xe1ng S\xe1u", "Th\xe1ng B\u1ea3y", "Th\xe1ng T\xe1m", "Th\xe1ng Ch\xedn", "Th\xe1ng M\u01b0\u1eddi", "Th\xe1ng M\u01b0\u1eddi M\u1ed9t", "Th\xe1ng M\u01b0\u1eddi Hai"]
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: ["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"],
                        abbreviated: ["thg 1", "thg 2", "thg 3", "thg 4", "thg 5", "thg 6", "thg 7", "thg 8", "thg 9", "thg 10", "thg 11", "thg 12"],
                        wide: ["th\xe1ng 01", "th\xe1ng 02", "th\xe1ng 03", "th\xe1ng 04", "th\xe1ng 05", "th\xe1ng 06", "th\xe1ng 07", "th\xe1ng 08", "th\xe1ng 09", "th\xe1ng 10", "th\xe1ng 11", "th\xe1ng 12"]
                    },
                    defaultFormattingWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"],
                        short: ["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"],
                        abbreviated: ["CN", "Th\u1ee9 2", "Th\u1ee9 3", "Th\u1ee9 4", "Th\u1ee9 5", "Th\u1ee9 6", "Th\u1ee9 7"],
                        wide: ["Ch\u1ee7 Nh\u1eadt", "Th\u1ee9 Hai", "Th\u1ee9 Ba", "Th\u1ee9 T\u01b0", "Th\u1ee9 N\u0103m", "Th\u1ee9 S\xe1u", "Th\u1ee9 B\u1ea3y"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "am",
                            pm: "pm",
                            midnight: "n\u1eeda \u0111\xeam",
                            noon: "tr",
                            morning: "sg",
                            afternoon: "ch",
                            evening: "t\u1ed1i",
                            night: "\u0111\xeam"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "n\u1eeda \u0111\xeam",
                            noon: "tr\u01b0a",
                            morning: "s\xe1ng",
                            afternoon: "chi\u1ec1u",
                            evening: "t\u1ed1i",
                            night: "\u0111\xeam"
                        },
                        wide: {
                            am: "SA",
                            pm: "CH",
                            midnight: "n\u1eeda \u0111\xeam",
                            noon: "tr\u01b0a",
                            morning: "s\xe1ng",
                            afternoon: "chi\u1ec1u",
                            evening: "t\u1ed1i",
                            night: "\u0111\xeam"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "am",
                            pm: "pm",
                            midnight: "n\u1eeda \u0111\xeam",
                            noon: "tr",
                            morning: "sg",
                            afternoon: "ch",
                            evening: "t\u1ed1i",
                            night: "\u0111\xeam"
                        },
                        abbreviated: {
                            am: "AM",
                            pm: "PM",
                            midnight: "n\u1eeda \u0111\xeam",
                            noon: "tr\u01b0a",
                            morning: "s\xe1ng",
                            afternoon: "chi\u1ec1u",
                            evening: "t\u1ed1i",
                            night: "\u0111\xeam"
                        },
                        wide: {
                            am: "SA",
                            pm: "CH",
                            midnight: "n\u1eeda \u0111\xeam",
                            noon: "gi\u1eefa tr\u01b0a",
                            morning: "v\xe0o bu\u1ed5i s\xe1ng",
                            afternoon: "v\xe0o bu\u1ed5i chi\u1ec1u",
                            evening: "v\xe0o bu\u1ed5i t\u1ed1i",
                            night: "v\xe0o ban \u0111\xeam"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\d+)/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(tcn|scn)/i,
                        abbreviated: /^(tr\u01b0\u1edbc CN|sau CN)/i,
                        wide: /^(tr\u01b0\u1edbc C\xf4ng Nguy\xean|sau C\xf4ng Nguy\xean)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^t/i, /^s/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^([1234]|i{1,3}v?)/i,
                        abbreviated: /^q([1234]|i{1,3}v?)/i,
                        wide: /^qu\xfd ([1234]|i{1,3}v?)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/(1|i)$/i, /(2|ii)$/i, /(3|iii)$/i, /(4|iv)$/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(0?[2-9]|10|11|12|0?1)/i,
                        abbreviated: /^thg[ _]?(0?[1-9](?!\d)|10|11|12)/i,
                        wide: /^th\xe1ng ?(M\u1ed9t|Hai|Ba|T\u01b0|N\u0103m|S\xe1u|B\u1ea3y|T\xe1m|Ch\xedn|M\u01b0\u1eddi|M\u01b0\u1eddi ?M\u1ed9t|M\u01b0\u1eddi ?Hai|0?[1-9](?!\d)|10|11|12)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/0?1$/i, /0?2/i, /3/, /4/, /5/, /6/, /7/, /8/, /9/, /10/, /11/, /12/],
                        abbreviated: [/^thg[ _]?0?1(?!\d)/i, /^thg[ _]?0?2/i, /^thg[ _]?0?3/i, /^thg[ _]?0?4/i, /^thg[ _]?0?5/i, /^thg[ _]?0?6/i, /^thg[ _]?0?7/i, /^thg[ _]?0?8/i, /^thg[ _]?0?9/i, /^thg[ _]?10/i, /^thg[ _]?11/i, /^thg[ _]?12/i],
                        wide: [/^th\xe1ng ?(M\u1ed9t|0?1(?!\d))/i, /^th\xe1ng ?(Hai|0?2)/i, /^th\xe1ng ?(Ba|0?3)/i, /^th\xe1ng ?(T\u01b0|0?4)/i, /^th\xe1ng ?(N\u0103m|0?5)/i, /^th\xe1ng ?(S\xe1u|0?6)/i, /^th\xe1ng ?(B\u1ea3y|0?7)/i, /^th\xe1ng ?(T\xe1m|0?8)/i, /^th\xe1ng ?(Ch\xedn|0?9)/i, /^th\xe1ng ?(M\u01b0\u1eddi|10)/i, /^th\xe1ng ?(M\u01b0\u1eddi ?M\u1ed9t|11)/i, /^th\xe1ng ?(M\u01b0\u1eddi ?Hai|12)/i]
                    },
                    defaultParseWidth: "wide"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^(CN|T2|T3|T4|T5|T6|T7)/i,
                        short: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,
                        abbreviated: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,
                        wide: /^(Ch\u1ee7 ?Nh\u1eadt|Ch\xfaa ?Nh\u1eadt|th\u1ee9 ?Hai|th\u1ee9 ?Ba|th\u1ee9 ?T\u01b0|th\u1ee9 ?N\u0103m|th\u1ee9 ?S\xe1u|th\u1ee9 ?B\u1ea3y)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],
                        short: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],
                        abbreviated: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],
                        wide: [/(Ch\u1ee7|Ch\xfaa) ?Nh\u1eadt/i, /Hai/i, /Ba/i, /T\u01b0/i, /N\u0103m/i, /S\xe1u/i, /B\u1ea3y/i]
                    },
                    defaultParseWidth: "wide"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        narrow: /^(a|p|n\u1eeda \u0111\xeam|tr\u01b0a|(gi\u1edd) (s\xe1ng|chi\u1ec1u|t\u1ed1i|\u0111\xeam))/i,
                        abbreviated: /^(am|pm|n\u1eeda \u0111\xeam|tr\u01b0a|(gi\u1edd) (s\xe1ng|chi\u1ec1u|t\u1ed1i|\u0111\xeam))/i,
                        wide: /^(ch[^i]*|sa|n\u1eeda \u0111\xeam|tr\u01b0a|(gi\u1edd) (s\xe1ng|chi\u1ec1u|t\u1ed1i|\u0111\xeam))/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: {
                            am: /^(a|sa)/i,
                            pm: /^(p|ch[^i]*)/i,
                            midnight: /n\u1eeda \u0111\xeam/i,
                            noon: /tr\u01b0a/i,
                            morning: /s\xe1ng/i,
                            afternoon: /chi\u1ec1u/i,
                            evening: /t\u1ed1i/i,
                            night: /^\u0111\xeam/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 1
            }
        };
        const Ds = {
            lessThanXSeconds: {
                one: "\u4e0d\u5230 1 \u79d2",
                other: "\u4e0d\u5230 {{count}} \u79d2"
            },
            xSeconds: {
                one: "1 \u79d2",
                other: "{{count}} \u79d2"
            },
            halfAMinute: "\u534a\u5206\u949f",
            lessThanXMinutes: {
                one: "\u4e0d\u5230 1 \u5206\u949f",
                other: "\u4e0d\u5230 {{count}} \u5206\u949f"
            },
            xMinutes: {
                one: "1 \u5206\u949f",
                other: "{{count}} \u5206\u949f"
            },
            xHours: {
                one: "1 \u5c0f\u65f6",
                other: "{{count}} \u5c0f\u65f6"
            },
            aboutXHours: {
                one: "\u5927\u7ea6 1 \u5c0f\u65f6",
                other: "\u5927\u7ea6 {{count}} \u5c0f\u65f6"
            },
            xDays: {
                one: "1 \u5929",
                other: "{{count}} \u5929"
            },
            aboutXWeeks: {
                one: "\u5927\u7ea6 1 \u4e2a\u661f\u671f",
                other: "\u5927\u7ea6 {{count}} \u4e2a\u661f\u671f"
            },
            xWeeks: {
                one: "1 \u4e2a\u661f\u671f",
                other: "{{count}} \u4e2a\u661f\u671f"
            },
            aboutXMonths: {
                one: "\u5927\u7ea6 1 \u4e2a\u6708",
                other: "\u5927\u7ea6 {{count}} \u4e2a\u6708"
            },
            xMonths: {
                one: "1 \u4e2a\u6708",
                other: "{{count}} \u4e2a\u6708"
            },
            aboutXYears: {
                one: "\u5927\u7ea6 1 \u5e74",
                other: "\u5927\u7ea6 {{count}} \u5e74"
            },
            xYears: {
                one: "1 \u5e74",
                other: "{{count}} \u5e74"
            },
            overXYears: {
                one: "\u8d85\u8fc7 1 \u5e74",
                other: "\u8d85\u8fc7 {{count}} \u5e74"
            },
            almostXYears: {
                one: "\u5c06\u8fd1 1 \u5e74",
                other: "\u5c06\u8fd1 {{count}} \u5e74"
            }
        }
          , js = {
            date: r({
                formats: {
                    full: "y'\u5e74'M'\u6708'd'\u65e5' EEEE",
                    long: "y'\u5e74'M'\u6708'd'\u65e5'",
                    medium: "yyyy-MM-dd",
                    short: "yy-MM-dd"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "zzzz a h:mm:ss",
                    long: "z a h:mm:ss",
                    medium: "a h:mm:ss",
                    short: "a h:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        };
        function Cs(e, t, n) {
            const a = "eeee p";
            return $(e, t, n) ? a : e.getTime() > t.getTime() ? "'\u4e0b\u4e2a'" + a : "'\u4e0a\u4e2a'" + a
        }
        const Ts = {
            lastWeek: Cs,
            yesterday: "'\u6628\u5929' p",
            today: "'\u4eca\u5929' p",
            tomorrow: "'\u660e\u5929' p",
            nextWeek: Cs,
            other: "PP p"
        }
          , Es = {
            code: "zh-CN",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Ds[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? a + "\u5185" : a + "\u524d" : a
            }
            ,
            formatLong: js,
            formatRelative: (e,t,n,a)=>{
                const r = Ts[e];
                return "function" === typeof r ? r(t, n, a) : r
            }
            ,
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e);
                    switch (t?.unit) {
                    case "date":
                        return n.toString() + "\u65e5";
                    case "hour":
                        return n.toString() + "\u65f6";
                    case "minute":
                        return n.toString() + "\u5206";
                    case "second":
                        return n.toString() + "\u79d2";
                    default:
                        return "\u7b2c " + n.toString()
                    }
                }
                ,
                era: s({
                    values: {
                        narrow: ["\u524d", "\u516c\u5143"],
                        abbreviated: ["\u524d", "\u516c\u5143"],
                        wide: ["\u516c\u5143\u524d", "\u516c\u5143"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u7b2c\u4e00\u5b63", "\u7b2c\u4e8c\u5b63", "\u7b2c\u4e09\u5b63", "\u7b2c\u56db\u5b63"],
                        wide: ["\u7b2c\u4e00\u5b63\u5ea6", "\u7b2c\u4e8c\u5b63\u5ea6", "\u7b2c\u4e09\u5b63\u5ea6", "\u7b2c\u56db\u5b63\u5ea6"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d", "\u4e03", "\u516b", "\u4e5d", "\u5341", "\u5341\u4e00", "\u5341\u4e8c"],
                        abbreviated: ["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"],
                        wide: ["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"],
                        short: ["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"],
                        abbreviated: ["\u5468\u65e5", "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"],
                        wide: ["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u4e0a",
                            pm: "\u4e0b",
                            midnight: "\u51cc\u6668",
                            noon: "\u5348",
                            morning: "\u65e9",
                            afternoon: "\u4e0b\u5348",
                            evening: "\u665a",
                            night: "\u591c"
                        },
                        abbreviated: {
                            am: "\u4e0a\u5348",
                            pm: "\u4e0b\u5348",
                            midnight: "\u51cc\u6668",
                            noon: "\u4e2d\u5348",
                            morning: "\u65e9\u6668",
                            afternoon: "\u4e2d\u5348",
                            evening: "\u665a\u4e0a",
                            night: "\u591c\u95f4"
                        },
                        wide: {
                            am: "\u4e0a\u5348",
                            pm: "\u4e0b\u5348",
                            midnight: "\u51cc\u6668",
                            noon: "\u4e2d\u5348",
                            morning: "\u65e9\u6668",
                            afternoon: "\u4e2d\u5348",
                            evening: "\u665a\u4e0a",
                            night: "\u591c\u95f4"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u4e0a",
                            pm: "\u4e0b",
                            midnight: "\u51cc\u6668",
                            noon: "\u5348",
                            morning: "\u65e9",
                            afternoon: "\u4e0b\u5348",
                            evening: "\u665a",
                            night: "\u591c"
                        },
                        abbreviated: {
                            am: "\u4e0a\u5348",
                            pm: "\u4e0b\u5348",
                            midnight: "\u51cc\u6668",
                            noon: "\u4e2d\u5348",
                            morning: "\u65e9\u6668",
                            afternoon: "\u4e2d\u5348",
                            evening: "\u665a\u4e0a",
                            night: "\u591c\u95f4"
                        },
                        wide: {
                            am: "\u4e0a\u5348",
                            pm: "\u4e0b\u5348",
                            midnight: "\u51cc\u6668",
                            noon: "\u4e2d\u5348",
                            morning: "\u65e9\u6668",
                            afternoon: "\u4e2d\u5348",
                            evening: "\u665a\u4e0a",
                            night: "\u591c\u95f4"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\u7b2c\s*)?\d+(\u65e5|\u65f6|\u5206|\u79d2)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u524d)/i,
                        abbreviated: /^(\u524d)/i,
                        wide: /^(\u516c\u5143\u524d|\u516c\u5143)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^(\u524d)/i, /^(\u516c\u5143)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^\u7b2c[\u4e00\u4e8c\u4e09\u56db]\u523b/i,
                        wide: /^\u7b2c[\u4e00\u4e8c\u4e09\u56db]\u523b\u949f/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/(1|\u4e00)/i, /(2|\u4e8c)/i, /(3|\u4e09)/i, /(4|\u56db)/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(\u4e00|\u4e8c|\u4e09|\u56db|\u4e94|\u516d|\u4e03|\u516b|\u4e5d|\u5341[\u4e8c\u4e00])/i,
                        abbreviated: /^(\u4e00|\u4e8c|\u4e09|\u56db|\u4e94|\u516d|\u4e03|\u516b|\u4e5d|\u5341[\u4e8c\u4e00]|\d|1[12])\u6708/i,
                        wide: /^(\u4e00|\u4e8c|\u4e09|\u56db|\u4e94|\u516d|\u4e03|\u516b|\u4e5d|\u5341[\u4e8c\u4e00])\u6708/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u4e00/i, /^\u4e8c/i, /^\u4e09/i, /^\u56db/i, /^\u4e94/i, /^\u516d/i, /^\u4e03/i, /^\u516b/i, /^\u4e5d/i, /^\u5341(?!(\u4e00|\u4e8c))/i, /^\u5341\u4e00/i, /^\u5341\u4e8c/i],
                        any: [/^\u4e00|1/i, /^\u4e8c|2/i, /^\u4e09|3/i, /^\u56db|4/i, /^\u4e94|5/i, /^\u516d|6/i, /^\u4e03|7/i, /^\u516b|8/i, /^\u4e5d|9/i, /^\u5341(?!(\u4e00|\u4e8c))|10/i, /^\u5341\u4e00|11/i, /^\u5341\u4e8c|12/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5]/i,
                        short: /^[\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5]/i,
                        abbreviated: /^\u5468[\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5]/i,
                        wide: /^\u661f\u671f[\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5]/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/\u65e5/i, /\u4e00/i, /\u4e8c/i, /\u4e09/i, /\u56db/i, /\u4e94/i, /\u516d/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(\u4e0a\u5348?|\u4e0b\u5348?|\u5348\u591c|[\u4e2d\u6b63]\u5348|\u65e9\u4e0a?|\u4e0b\u5348|\u665a\u4e0a?|\u51cc\u6668|)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u4e0a\u5348?/i,
                            pm: /^\u4e0b\u5348?/i,
                            midnight: /^\u5348\u591c/i,
                            noon: /^[\u4e2d\u6b63]\u5348/i,
                            morning: /^\u65e9\u4e0a/i,
                            afternoon: /^\u4e0b\u5348/i,
                            evening: /^\u665a\u4e0a?/i,
                            night: /^\u51cc\u6668/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        };
        const Ns = {
            lessThanXSeconds: {
                one: "\u5c11\u65bc 1 \u79d2",
                other: "\u5c11\u65bc {{count}} \u79d2"
            },
            xSeconds: {
                one: "1 \u79d2",
                other: "{{count}} \u79d2"
            },
            halfAMinute: "\u534a\u5206\u9418",
            lessThanXMinutes: {
                one: "\u5c11\u65bc 1 \u5206\u9418",
                other: "\u5c11\u65bc {{count}} \u5206\u9418"
            },
            xMinutes: {
                one: "1 \u5206\u9418",
                other: "{{count}} \u5206\u9418"
            },
            xHours: {
                one: "1 \u5c0f\u6642",
                other: "{{count}} \u5c0f\u6642"
            },
            aboutXHours: {
                one: "\u5927\u7d04 1 \u5c0f\u6642",
                other: "\u5927\u7d04 {{count}} \u5c0f\u6642"
            },
            xDays: {
                one: "1 \u5929",
                other: "{{count}} \u5929"
            },
            aboutXWeeks: {
                one: "\u5927\u7d04 1 \u500b\u661f\u671f",
                other: "\u5927\u7d04 {{count}} \u500b\u661f\u671f"
            },
            xWeeks: {
                one: "1 \u500b\u661f\u671f",
                other: "{{count}} \u500b\u661f\u671f"
            },
            aboutXMonths: {
                one: "\u5927\u7d04 1 \u500b\u6708",
                other: "\u5927\u7d04 {{count}} \u500b\u6708"
            },
            xMonths: {
                one: "1 \u500b\u6708",
                other: "{{count}} \u500b\u6708"
            },
            aboutXYears: {
                one: "\u5927\u7d04 1 \u5e74",
                other: "\u5927\u7d04 {{count}} \u5e74"
            },
            xYears: {
                one: "1 \u5e74",
                other: "{{count}} \u5e74"
            },
            overXYears: {
                one: "\u8d85\u904e 1 \u5e74",
                other: "\u8d85\u904e {{count}} \u5e74"
            },
            almostXYears: {
                one: "\u5c07\u8fd1 1 \u5e74",
                other: "\u5c07\u8fd1 {{count}} \u5e74"
            }
        }
          , zs = {
            date: r({
                formats: {
                    full: "y'\u5e74'M'\u6708'd'\u65e5' EEEE",
                    long: "y'\u5e74'M'\u6708'd'\u65e5'",
                    medium: "yyyy-MM-dd",
                    short: "yy-MM-dd"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "zzzz a h:mm:ss",
                    long: "z a h:mm:ss",
                    medium: "a h:mm:ss",
                    short: "a h:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Is = {
            lastWeek: "'\u4e0a\u500b'eeee p",
            yesterday: "'\u6628\u5929' p",
            today: "'\u4eca\u5929' p",
            tomorrow: "'\u660e\u5929' p",
            nextWeek: "'\u4e0b\u500b'eeee p",
            other: "P"
        }
          , Os = {
            code: "zh-HK",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Ns[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? a + "\u5167" : a + "\u524d" : a
            }
            ,
            formatLong: zs,
            formatRelative: (e,t,n,a)=>Is[e],
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e);
                    switch (t?.unit) {
                    case "date":
                        return n + "\u65e5";
                    case "hour":
                        return n + "\u6642";
                    case "minute":
                        return n + "\u5206";
                    case "second":
                        return n + "\u79d2";
                    default:
                        return "\u7b2c " + n
                    }
                }
                ,
                era: s({
                    values: {
                        narrow: ["\u524d", "\u516c\u5143"],
                        abbreviated: ["\u524d", "\u516c\u5143"],
                        wide: ["\u516c\u5143\u524d", "\u516c\u5143"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u7b2c\u4e00\u5b63", "\u7b2c\u4e8c\u5b63", "\u7b2c\u4e09\u5b63", "\u7b2c\u56db\u5b63"],
                        wide: ["\u7b2c\u4e00\u5b63\u5ea6", "\u7b2c\u4e8c\u5b63\u5ea6", "\u7b2c\u4e09\u5b63\u5ea6", "\u7b2c\u56db\u5b63\u5ea6"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d", "\u4e03", "\u516b", "\u4e5d", "\u5341", "\u5341\u4e00", "\u5341\u4e8c"],
                        abbreviated: ["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"],
                        wide: ["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"],
                        short: ["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"],
                        abbreviated: ["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"],
                        wide: ["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u4e0a",
                            pm: "\u4e0b",
                            midnight: "\u5348\u591c",
                            noon: "\u664c",
                            morning: "\u65e9",
                            afternoon: "\u5348",
                            evening: "\u665a",
                            night: "\u591c"
                        },
                        abbreviated: {
                            am: "\u4e0a\u5348",
                            pm: "\u4e0b\u5348",
                            midnight: "\u5348\u591c",
                            noon: "\u4e2d\u5348",
                            morning: "\u4e0a\u5348",
                            afternoon: "\u4e0b\u5348",
                            evening: "\u665a\u4e0a",
                            night: "\u591c\u665a"
                        },
                        wide: {
                            am: "\u4e0a\u5348",
                            pm: "\u4e0b\u5348",
                            midnight: "\u5348\u591c",
                            noon: "\u4e2d\u5348",
                            morning: "\u4e0a\u5348",
                            afternoon: "\u4e0b\u5348",
                            evening: "\u665a\u4e0a",
                            night: "\u591c\u665a"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u4e0a",
                            pm: "\u4e0b",
                            midnight: "\u5348\u591c",
                            noon: "\u664c",
                            morning: "\u65e9",
                            afternoon: "\u5348",
                            evening: "\u665a",
                            night: "\u591c"
                        },
                        abbreviated: {
                            am: "\u4e0a\u5348",
                            pm: "\u4e0b\u5348",
                            midnight: "\u5348\u591c",
                            noon: "\u4e2d\u5348",
                            morning: "\u4e0a\u5348",
                            afternoon: "\u4e0b\u5348",
                            evening: "\u665a\u4e0a",
                            night: "\u591c\u665a"
                        },
                        wide: {
                            am: "\u4e0a\u5348",
                            pm: "\u4e0b\u5348",
                            midnight: "\u5348\u591c",
                            noon: "\u4e2d\u5348",
                            morning: "\u4e0a\u5348",
                            afternoon: "\u4e0b\u5348",
                            evening: "\u665a\u4e0a",
                            night: "\u591c\u665a"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\u7b2c\s*)?\d+(\u65e5|\u6642|\u5206|\u79d2)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u524d)/i,
                        abbreviated: /^(\u524d)/i,
                        wide: /^(\u516c\u5143\u524d|\u516c\u5143)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^(\u524d)/i, /^(\u516c\u5143)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^\u7b2c[\u4e00\u4e8c\u4e09\u56db]\u5b63/i,
                        wide: /^\u7b2c[\u4e00\u4e8c\u4e09\u56db]\u5b63\u5ea6/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/(1|\u4e00)/i, /(2|\u4e8c)/i, /(3|\u4e09)/i, /(4|\u56db)/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(\u4e00|\u4e8c|\u4e09|\u56db|\u4e94|\u516d|\u4e03|\u516b|\u4e5d|\u5341[\u4e8c\u4e00])/i,
                        abbreviated: /^(\u4e00|\u4e8c|\u4e09|\u56db|\u4e94|\u516d|\u4e03|\u516b|\u4e5d|\u5341[\u4e8c\u4e00]|\d|1[12])\u6708/i,
                        wide: /^(\u4e00|\u4e8c|\u4e09|\u56db|\u4e94|\u516d|\u4e03|\u516b|\u4e5d|\u5341[\u4e8c\u4e00])\u6708/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u4e00/i, /^\u4e8c/i, /^\u4e09/i, /^\u56db/i, /^\u4e94/i, /^\u516d/i, /^\u4e03/i, /^\u516b/i, /^\u4e5d/i, /^\u5341(?!(\u4e00|\u4e8c))/i, /^\u5341\u4e00/i, /^\u5341\u4e8c/i],
                        any: [/^\u4e00|1/i, /^\u4e8c|2/i, /^\u4e09|3/i, /^\u56db|4/i, /^\u4e94|5/i, /^\u516d|6/i, /^\u4e03|7/i, /^\u516b|8/i, /^\u4e5d|9/i, /^\u5341(?!(\u4e00|\u4e8c))|10/i, /^\u5341\u4e00|11/i, /^\u5341\u4e8c|12/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5]/i,
                        short: /^[\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5]/i,
                        abbreviated: /^\u9031[\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5]/i,
                        wide: /^\u661f\u671f[\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5]/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/\u65e5/i, /\u4e00/i, /\u4e8c/i, /\u4e09/i, /\u56db/i, /\u4e94/i, /\u516d/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(\u4e0a\u5348?|\u4e0b\u5348?|\u5348\u591c|[\u4e2d\u6b63]\u5348|\u65e9\u4e0a?|\u4e0b\u5348|\u665a\u4e0a?|\u51cc\u6668)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u4e0a\u5348?/i,
                            pm: /^\u4e0b\u5348?/i,
                            midnight: /^\u5348\u591c/i,
                            noon: /^[\u4e2d\u6b63]\u5348/i,
                            morning: /^\u65e9\u4e0a/i,
                            afternoon: /^\u4e0b\u5348/i,
                            evening: /^\u665a\u4e0a?/i,
                            night: /^\u51cc\u6668/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 0,
                firstWeekContainsDate: 1
            }
        };
        const Hs = {
            lessThanXSeconds: {
                one: "\u5c11\u65bc 1 \u79d2",
                other: "\u5c11\u65bc {{count}} \u79d2"
            },
            xSeconds: {
                one: "1 \u79d2",
                other: "{{count}} \u79d2"
            },
            halfAMinute: "\u534a\u5206\u9418",
            lessThanXMinutes: {
                one: "\u5c11\u65bc 1 \u5206\u9418",
                other: "\u5c11\u65bc {{count}} \u5206\u9418"
            },
            xMinutes: {
                one: "1 \u5206\u9418",
                other: "{{count}} \u5206\u9418"
            },
            xHours: {
                one: "1 \u5c0f\u6642",
                other: "{{count}} \u5c0f\u6642"
            },
            aboutXHours: {
                one: "\u5927\u7d04 1 \u5c0f\u6642",
                other: "\u5927\u7d04 {{count}} \u5c0f\u6642"
            },
            xDays: {
                one: "1 \u5929",
                other: "{{count}} \u5929"
            },
            aboutXWeeks: {
                one: "\u5927\u7d04 1 \u500b\u661f\u671f",
                other: "\u5927\u7d04 {{count}} \u500b\u661f\u671f"
            },
            xWeeks: {
                one: "1 \u500b\u661f\u671f",
                other: "{{count}} \u500b\u661f\u671f"
            },
            aboutXMonths: {
                one: "\u5927\u7d04 1 \u500b\u6708",
                other: "\u5927\u7d04 {{count}} \u500b\u6708"
            },
            xMonths: {
                one: "1 \u500b\u6708",
                other: "{{count}} \u500b\u6708"
            },
            aboutXYears: {
                one: "\u5927\u7d04 1 \u5e74",
                other: "\u5927\u7d04 {{count}} \u5e74"
            },
            xYears: {
                one: "1 \u5e74",
                other: "{{count}} \u5e74"
            },
            overXYears: {
                one: "\u8d85\u904e 1 \u5e74",
                other: "\u8d85\u904e {{count}} \u5e74"
            },
            almostXYears: {
                one: "\u5c07\u8fd1 1 \u5e74",
                other: "\u5c07\u8fd1 {{count}} \u5e74"
            }
        }
          , As = {
            date: r({
                formats: {
                    full: "y'\u5e74'M'\u6708'd'\u65e5' EEEE",
                    long: "y'\u5e74'M'\u6708'd'\u65e5'",
                    medium: "yyyy-MM-dd",
                    short: "yy-MM-dd"
                },
                defaultWidth: "full"
            }),
            time: r({
                formats: {
                    full: "zzzz a h:mm:ss",
                    long: "z a h:mm:ss",
                    medium: "a h:mm:ss",
                    short: "a h:mm"
                },
                defaultWidth: "full"
            }),
            dateTime: r({
                formats: {
                    full: "{{date}} {{time}}",
                    long: "{{date}} {{time}}",
                    medium: "{{date}} {{time}}",
                    short: "{{date}} {{time}}"
                },
                defaultWidth: "full"
            })
        }
          , Ys = {
            lastWeek: "'\u4e0a\u500b'eeee p",
            yesterday: "'\u6628\u5929' p",
            today: "'\u4eca\u5929' p",
            tomorrow: "'\u660e\u5929' p",
            nextWeek: "'\u4e0b\u500b'eeee p",
            other: "P"
        }
          , _s = {
            code: "zh-TW",
            formatDistance: (e,t,n)=>{
                let a;
                const r = Hs[e];
                return a = "string" === typeof r ? r : 1 === t ? r.one : r.other.replace("{{count}}", String(t)),
                n?.addSuffix ? n.comparison && n.comparison > 0 ? a + "\u5167" : a + "\u524d" : a
            }
            ,
            formatLong: As,
            formatRelative: (e,t,n,a)=>Ys[e],
            localize: {
                ordinalNumber: (e,t)=>{
                    const n = Number(e);
                    switch (t?.unit) {
                    case "date":
                        return n + "\u65e5";
                    case "hour":
                        return n + "\u6642";
                    case "minute":
                        return n + "\u5206";
                    case "second":
                        return n + "\u79d2";
                    default:
                        return "\u7b2c " + n
                    }
                }
                ,
                era: s({
                    values: {
                        narrow: ["\u524d", "\u516c\u5143"],
                        abbreviated: ["\u524d", "\u516c\u5143"],
                        wide: ["\u516c\u5143\u524d", "\u516c\u5143"]
                    },
                    defaultWidth: "wide"
                }),
                quarter: s({
                    values: {
                        narrow: ["1", "2", "3", "4"],
                        abbreviated: ["\u7b2c\u4e00\u523b", "\u7b2c\u4e8c\u523b", "\u7b2c\u4e09\u523b", "\u7b2c\u56db\u523b"],
                        wide: ["\u7b2c\u4e00\u523b\u9418", "\u7b2c\u4e8c\u523b\u9418", "\u7b2c\u4e09\u523b\u9418", "\u7b2c\u56db\u523b\u9418"]
                    },
                    defaultWidth: "wide",
                    argumentCallback: e=>e - 1
                }),
                month: s({
                    values: {
                        narrow: ["\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d", "\u4e03", "\u516b", "\u4e5d", "\u5341", "\u5341\u4e00", "\u5341\u4e8c"],
                        abbreviated: ["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"],
                        wide: ["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"]
                    },
                    defaultWidth: "wide"
                }),
                day: s({
                    values: {
                        narrow: ["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"],
                        short: ["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"],
                        abbreviated: ["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"],
                        wide: ["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"]
                    },
                    defaultWidth: "wide"
                }),
                dayPeriod: s({
                    values: {
                        narrow: {
                            am: "\u4e0a",
                            pm: "\u4e0b",
                            midnight: "\u51cc\u6668",
                            noon: "\u5348",
                            morning: "\u65e9",
                            afternoon: "\u4e0b\u5348",
                            evening: "\u665a",
                            night: "\u591c"
                        },
                        abbreviated: {
                            am: "\u4e0a\u5348",
                            pm: "\u4e0b\u5348",
                            midnight: "\u51cc\u6668",
                            noon: "\u4e2d\u5348",
                            morning: "\u65e9\u6668",
                            afternoon: "\u4e2d\u5348",
                            evening: "\u665a\u4e0a",
                            night: "\u591c\u9593"
                        },
                        wide: {
                            am: "\u4e0a\u5348",
                            pm: "\u4e0b\u5348",
                            midnight: "\u51cc\u6668",
                            noon: "\u4e2d\u5348",
                            morning: "\u65e9\u6668",
                            afternoon: "\u4e2d\u5348",
                            evening: "\u665a\u4e0a",
                            night: "\u591c\u9593"
                        }
                    },
                    defaultWidth: "wide",
                    formattingValues: {
                        narrow: {
                            am: "\u4e0a",
                            pm: "\u4e0b",
                            midnight: "\u51cc\u6668",
                            noon: "\u5348",
                            morning: "\u65e9",
                            afternoon: "\u4e0b\u5348",
                            evening: "\u665a",
                            night: "\u591c"
                        },
                        abbreviated: {
                            am: "\u4e0a\u5348",
                            pm: "\u4e0b\u5348",
                            midnight: "\u51cc\u6668",
                            noon: "\u4e2d\u5348",
                            morning: "\u65e9\u6668",
                            afternoon: "\u4e2d\u5348",
                            evening: "\u665a\u4e0a",
                            night: "\u591c\u9593"
                        },
                        wide: {
                            am: "\u4e0a\u5348",
                            pm: "\u4e0b\u5348",
                            midnight: "\u51cc\u6668",
                            noon: "\u4e2d\u5348",
                            morning: "\u65e9\u6668",
                            afternoon: "\u4e2d\u5348",
                            evening: "\u665a\u4e0a",
                            night: "\u591c\u9593"
                        }
                    },
                    defaultFormattingWidth: "wide"
                })
            },
            match: {
                ordinalNumber: d({
                    matchPattern: /^(\u7b2c\s*)?\d+(\u65e5|\u6642|\u5206|\u79d2)?/i,
                    parsePattern: /\d+/i,
                    valueCallback: e=>parseInt(e, 10)
                }),
                era: u({
                    matchPatterns: {
                        narrow: /^(\u524d)/i,
                        abbreviated: /^(\u524d)/i,
                        wide: /^(\u516c\u5143\u524d|\u516c\u5143)/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/^(\u524d)/i, /^(\u516c\u5143)/i]
                    },
                    defaultParseWidth: "any"
                }),
                quarter: u({
                    matchPatterns: {
                        narrow: /^[1234]/i,
                        abbreviated: /^\u7b2c[\u4e00\u4e8c\u4e09\u56db]\u523b/i,
                        wide: /^\u7b2c[\u4e00\u4e8c\u4e09\u56db]\u523b\u9418/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/(1|\u4e00)/i, /(2|\u4e8c)/i, /(3|\u4e09)/i, /(4|\u56db)/i]
                    },
                    defaultParseWidth: "any",
                    valueCallback: e=>e + 1
                }),
                month: u({
                    matchPatterns: {
                        narrow: /^(\u4e00|\u4e8c|\u4e09|\u56db|\u4e94|\u516d|\u4e03|\u516b|\u4e5d|\u5341[\u4e8c\u4e00])/i,
                        abbreviated: /^(\u4e00|\u4e8c|\u4e09|\u56db|\u4e94|\u516d|\u4e03|\u516b|\u4e5d|\u5341[\u4e8c\u4e00]|\d|1[12])\u6708/i,
                        wide: /^(\u4e00|\u4e8c|\u4e09|\u56db|\u4e94|\u516d|\u4e03|\u516b|\u4e5d|\u5341[\u4e8c\u4e00])\u6708/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        narrow: [/^\u4e00/i, /^\u4e8c/i, /^\u4e09/i, /^\u56db/i, /^\u4e94/i, /^\u516d/i, /^\u4e03/i, /^\u516b/i, /^\u4e5d/i, /^\u5341(?!(\u4e00|\u4e8c))/i, /^\u5341\u4e00/i, /^\u5341\u4e8c/i],
                        any: [/^\u4e00|1/i, /^\u4e8c|2/i, /^\u4e09|3/i, /^\u56db|4/i, /^\u4e94|5/i, /^\u516d|6/i, /^\u4e03|7/i, /^\u516b|8/i, /^\u4e5d|9/i, /^\u5341(?!(\u4e00|\u4e8c))|10/i, /^\u5341\u4e00|11/i, /^\u5341\u4e8c|12/i]
                    },
                    defaultParseWidth: "any"
                }),
                day: u({
                    matchPatterns: {
                        narrow: /^[\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5]/i,
                        short: /^[\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5]/i,
                        abbreviated: /^\u9031[\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5]/i,
                        wide: /^\u661f\u671f[\u4e00\u4e8c\u4e09\u56db\u4e94\u516d\u65e5]/i
                    },
                    defaultMatchWidth: "wide",
                    parsePatterns: {
                        any: [/\u65e5/i, /\u4e00/i, /\u4e8c/i, /\u4e09/i, /\u56db/i, /\u4e94/i, /\u516d/i]
                    },
                    defaultParseWidth: "any"
                }),
                dayPeriod: u({
                    matchPatterns: {
                        any: /^(\u4e0a\u5348?|\u4e0b\u5348?|\u5348\u591c|[\u4e2d\u6b63]\u5348|\u65e9\u4e0a?|\u4e0b\u5348|\u665a\u4e0a?|\u51cc\u6668)/i
                    },
                    defaultMatchWidth: "any",
                    parsePatterns: {
                        any: {
                            am: /^\u4e0a\u5348?/i,
                            pm: /^\u4e0b\u5348?/i,
                            midnight: /^\u5348\u591c/i,
                            noon: /^[\u4e2d\u6b63]\u5348/i,
                            morning: /^\u65e9\u4e0a/i,
                            afternoon: /^\u4e0b\u5348/i,
                            evening: /^\u665a\u4e0a?/i,
                            night: /^\u51cc\u6668/i
                        }
                    },
                    defaultParseWidth: "any"
                })
            },
            options: {
                weekStartsOn: 1,
                firstWeekContainsDate: 4
            }
        }
    }
}]);
//# sourceMappingURL=631-c2809f6018cbc9c6d0ff.js.map
